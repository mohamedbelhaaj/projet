ô
OC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\backgroudservice\ChangeTTM.cs
	namespace 	

ProjetBack
 
. 
backgroudservice %
{		 
public

 

class

 
	ChangeTTM

 
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public 
	ChangeTTM 
( 
PilotageDBContext *
context+ 2
)2 3
{ 	
_context 
= 
context 
; 
} 	
}RR 
}SS ï(
TC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\backgroudservice\CronJobService.cs
	namespace 	

ProjetBack
 
. 
backgroudservice %
{ 
public		 

abstract		 
class		 
CronJobService		 (
:		) *
IHostedService		+ 9
,		9 :
IDisposable		; F
{

 
private 
System 
. 
Timers 
. 
Timer #
_timer$ *
;* +
private 
readonly 
CronExpression '
_expression( 3
;3 4
private 
readonly 
TimeZoneInfo %
_timeZoneInfo& 3
;3 4
	protected 
CronJobService  
(  !
string! '
cronExpression( 6
,6 7
TimeZoneInfo8 D
timeZoneInfoE Q
)Q R
{ 	
_expression 
= 
CronExpression (
.( )
Parse) .
(. /
cronExpression/ =
)= >
;> ?
_timeZoneInfo 
= 
timeZoneInfo (
;( )
} 	
public 
virtual 
async 
Task !

StartAsync" ,
(, -
CancellationToken- >
cancellationToken? P
)P Q
{ 	
await 
ScheduleJob 
( 
cancellationToken /
)/ 0
;0 1
} 	
	protected 
virtual 
async 
Task  $
ScheduleJob% 0
(0 1
CancellationToken1 B
cancellationTokenC T
)T U
{ 	
var 
next 
= 
_expression "
." #
GetNextOccurrence# 4
(4 5
DateTimeOffset5 C
.C D
NowD G
,G H
_timeZoneInfoI V
)V W
;W X
if 
( 
next 
. 
HasValue 
) 
{ 
var   
delay   
=   
next    
.    !
Value  ! &
-  ' (
DateTimeOffset  ) 7
.  7 8
Now  8 ;
;  ; <
if!! 
(!! 
delay!! 
.!! 
TotalMilliseconds!! +
<=!!, .
$num!!/ 0
)!!0 1
{"" 
await## 
ScheduleJob## %
(##% &
cancellationToken##& 7
)##7 8
;##8 9
}$$ 
_timer%% 
=%% 
new%% 
System%% #
.%%# $
Timers%%$ *
.%%* +
Timer%%+ 0
(%%0 1
delay%%1 6
.%%6 7
TotalMilliseconds%%7 H
)%%H I
;%%I J
_timer&& 
.&& 
Elapsed&& 
+=&& !
async&&" '
(&&( )
sender&&) /
,&&/ 0
args&&1 5
)&&5 6
=>&&7 9
{'' 
_timer(( 
.(( 
Dispose(( "
(((" #
)((# $
;(($ %
_timer)) 
=)) 
null)) !
;))! "
if++ 
(++ 
!++ 
cancellationToken++ *
.++* +#
IsCancellationRequested+++ B
)++B C
{,, 
await-- 
DoWork-- $
(--$ %
cancellationToken--% 6
)--6 7
;--7 8
}.. 
if00 
(00 
!00 
cancellationToken00 *
.00* +#
IsCancellationRequested00+ B
)00B C
{11 
await22 
ScheduleJob22 )
(22) *
cancellationToken22* ;
)22; <
;22< =
}33 
}44 
;44 
_timer55 
.55 
Start55 
(55 
)55 
;55 
}66 
await77 
Task77 
.77 
CompletedTask77 $
;77$ %
}88 	
public:: 
virtual:: 
async:: 
Task:: !
DoWork::" (
(::( )
CancellationToken::) :
cancellationToken::; L
)::L M
{;; 	
await<< 
Task<< 
.<< 
Delay<< 
(<< 
$num<< !
,<<! "
cancellationToken<<# 4
)<<4 5
;<<5 6
}== 	
public?? 
virtual?? 
async?? 
Task?? !
	StopAsync??" +
(??+ ,
CancellationToken??, =
cancellationToken??> O
)??O P
{@@ 	
_timerAA 
?AA 
.AA 
StopAA 
(AA 
)AA 
;AA 
awaitBB 
TaskBB 
.BB 
CompletedTaskBB $
;BB$ %
}CC 	
publicEE 
virtualEE 
voidEE 
DisposeEE #
(EE# $
)EE$ %
{FF 	
_timerGG 
?GG 
.GG 
DisposeGG 
(GG 
)GG 
;GG 
}HH 	
}II 
}JJ Ë 
QC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\backgroudservice\MyCronJob3 .cs
	namespace 	

ProjetBack
 
. 
backgroudservice %
{ 
public 

class 

MyCronJob3 
: 
CronJobService ,
{ 
private 
SqlConnection 
con !
;! "
private 
readonly 
IConfiguration '
_config( /
;/ 0
private 
readonly 
ILogger  
<  !

MyCronJob3! +
>+ ,
_logger- 4
;4 5
public 

MyCronJob3 
( 
IScheduleConfig )
<) *

MyCronJob3* 4
>4 5
config6 <
,< =
ILogger> E
<E F

MyCronJob3F P
>P Q
loggerR X
)X Y
: 
base 
( 
config 
. 
CronExpression (
,( )
config* 0
.0 1
TimeZoneInfo1 =
)= >
{ 	
_logger 
= 
logger 
; 
} 	
public 
override 
Task 

StartAsync '
(' (
CancellationToken( 9
cancellationToken: K
)K L
{   	
_logger!! 
.!! 
LogInformation!! "
(!!" #
$str!!# 6
)!!6 7
;!!7 8
return"" 
base"" 
."" 

StartAsync"" "
(""" #
cancellationToken""# 4
)""4 5
;""5 6
}## 	
public%% 
override%% 
Task%% 
DoWork%% $
(%%$ %
CancellationToken%%% 6
cancellationToken%%7 H
)%%H I
{&& 	
_logger** 
.** 
LogInformation** !
(**! "
$"**" $
{**$ %
DateTime**% -
.**- .
Now**. 1
:**1 2
$str**2 :
}**: ;
$str**; Q
"**Q R
)**R S
;**S T
return++ 
Task++ 
.++ 
CompletedTask++ &
;++& '
},, 	
public.. 
override.. 
Task.. 
	StopAsync.. &
(..& '
CancellationToken..' 8
cancellationToken..9 J
)..J K
{// 	
_logger00 
.00 
LogInformation00 "
(00" #
$str00# ;
)00; <
;00< =
return11 
base11 
.11 
	StopAsync11 !
(11! "
cancellationToken11" 3
)113 4
;114 5
}22 	
private55 
void55 
	SendEmail55 
(55 
string55 %
email55& +
,55+ ,
string55- 3
messageBody554 ?
,55? @
string55A G
subject55H O
)55O P
{66 	

SmtpClient77 
client77 
=77 
new77  #

SmtpClient77$ .
(77. /
$str77/ ?
,77? @
$num77A C
)77C D
;77D E
client99 
.99 
	EnableSsl99 
=99 
true99 #
;99# $
client:: 
.:: 
DeliveryMethod:: !
=::" #
SmtpDeliveryMethod::$ 6
.::6 7
Network::7 >
;::> ?
client;; 
.;; !
UseDefaultCredentials;; (
=;;) *
false;;+ 0
;;;0 1
client<< 
.<< 
Credentials<< 
=<<  
new<<! $
NetworkCredential<<% 6
(<<6 7
$str<<7 Q
,<<Q R
$str<<S _
)<<_ `
;<<` a
MailMessage== 
mailMessage== #
===$ %
new==& )
MailMessage==* 5
(==5 6
)==6 7
;==7 8
mailMessage>> 
.>> 
To>> 
.>> 
Add>> 
(>> 
email>> $
)>>$ %
;>>% &
mailMessage?? 
.?? 
From?? 
=?? 
new?? "
MailAddress??# .
(??. /
$str??/ I
)??I J
;??J K
mailMessage@@ 
.@@ 
Subject@@ 
=@@  !
subject@@" )
;@@) *
mailMessageAA 
.AA 

IsBodyHtmlAA "
=AA# $
trueAA% )
;AA) *
mailMessageBB 
.BB 
BodyBB 
=BB 
messageBodyBB *
;BB* +
clientCC 
.CC 
SendCC 
(CC 
mailMessageCC #
)CC# $
;CC$ %
}EE 	
publickk 
voidkk )
ChangeTTMProjetLivraisonAsynckk 1
(kk1 2
)kk2 3
{ll 	
Listnn 
<nn 
ProjetLivraisonnn  
>nn  !
projetLivraisonsnn" 2
=nn2 3
newnn3 6
Listnn7 ;
<nn; <
ProjetLivraisonnn< K
>nnK L
(nnL M
)nnM N
;nnN O
stringoo 
testoo 
=oo 
$stroo  
;oo  !
stringpp 
queryStringpp 
=pp  
$strqq q
;qqq r
usingrr 
(rr 
SqlConnectionrr  

connectionrr! +
=rr, -
newrr. 1
SqlConnectionrr2 ?
(rr? @
$strss Z
)ssZ [
)ss[ \
{tt 

SqlCommanduu 
commanduu "
=uu# $
newuu% (

SqlCommanduu) 3
(uu3 4
queryStringvv 
,vv  

connectionvv! +
)vv+ ,
;vv, -

connectionww 
.ww 
Openww 
(ww  
)ww  !
;ww! "
usingxx 
(xx 
SqlDataReaderxx $
readerxx% +
=xx, -
commandxx. 5
.xx5 6
ExecuteReaderxx6 C
(xxC D
)xxD E
)xxE F
{yy 
whilezz 
(zz 
readerzz !
.zz! "
Readzz" &
(zz& '
)zz' (
)zz( )
{{{ 
if}} 
(}} 
DateTime}} #
.}}# $
Parse}}$ )
(}}) *
reader}}* 0
[}}0 1
$num}}1 2
]}}2 3
.}}3 4
ToString}}4 <
(}}< =
)}}= >
)}}> ?
.}}? @
Date}}@ D
<}}E F
DateTime}}G O
.}}O P
Now}}P S
.}}S T
Date}}T X
&&}}Y [
reader}}\ b
[}}b c
$num}}c e
]}}e f
.}}f g
ToString}}g o
(}}o p
)}}p q
==}}r t
$str}}u ~
||	}}~ 
(
}} 
DateTime
}} 
.
}} 
Parse
}} 
(
}} 
reader
}} 
[
}} 
$num
}} 
]
}} 
.
}} 
ToString
}} £
(
}}£ ¤
)
}}¤ ¥
)
}}¥ ¦
>
}}§ ¨
DateTime
}}© ±
.
}}± ²
Parse
}}² ·
(
}}· ¸
reader
}}¸ ¾
[
}}¾ ¿
$num
}}¿ À
]
}}À Á
.
}}Á Â
ToString
}}Â Ê
(
}}Ê Ë
)
}}Ë Ì
)
}}Ì Í
&&
}}Î Ð
reader
}}Ñ ×
[
}}× Ø
$num
}}Ø Ú
]
}}Ú Û
.
}}Û Ü
ToString
}}Ü ä
(
}}ä å
)
}}å æ
==
}}ç é
$str
}}ê õ
)
}}õ ö
)
}}ö ÷
{~~ 
var 
projet  &
=' (
new) ,
ProjetLivraison- <
(< =
)= >
;> ?
projet
 "
.
" #
Id
# %
=
& '
reader
( .
[
. /
$num
/ 0
]
0 1
.
1 2
ToString
2 :
(
: ;
)
; <
;
< =
projet
 "
.
" #
TTMId
# (
=
) *
$str
+ 1
;
1 2
projetLivraisons
 ,
.
, -
Add
- 0
(
0 1
projet
1 7
)
7 8
;
8 9
}
 
else
 
if
 
(
  !
DateTime
! )
.
) *
Parse
* /
(
/ 0
reader
0 6
[
6 7
$num
7 8
]
8 9
.
9 :
ToString
: B
(
B C
)
C D
)
D E
.
E F
Date
F J
==
K M
DateTime
N V
.
V W
Parse
W \
(
\ ]
reader
] c
[
c d
$num
d e
]
e f
.
f g
ToString
g o
(
o p
)
p q
)
q r
.
r s
Date
s w
&&
x z
reader{ 
[ 
$num 
] 
. 
ToString 
( 
) 
== 
$str 
)  
{
 
var
 
projet
  &
=
' (
new
) ,
ProjetLivraison
- <
(
< =
)
= >
;
> ?
projet
 "
.
" #
Id
# %
=
& '
reader
( .
[
. /
$num
/ 0
]
0 1
.
1 2
ToString
2 :
(
: ;
)
; <
;
< =
projet
 "
.
" #
TTMId
# (
=
) *
$str
+ 3
;
3 4
projetLivraisons
 ,
.
, -
Add
- 0
(
0 1
projet
1 7
)
7 8
;
8 9
}
 
}
 
}
 
}
 
using
 
(
 
SqlConnection
  

connection
! +
=
, -
new
. 1
SqlConnection
2 ?
(
? @
$str
 Y
)
Y Z
)
Z [
{
 
foreach
 
(
 
var
 
item
 !
in
" $
projetLivraisons
% 5
)
5 6
{
 
string
 
queryStringUpdate
 ,
=
- .
$str '
+
' (
item
) -
.
- .
TTMId
. 3
+
3 4
$str
5 D
+
E F
item
G K
.
K L
Id
L N
+
N O
$str
O R
;
R S
_logger
 
.
 
LogInformation
 *
(
* +
$"
+ -
{
- .
DateTime
. 6
.
6 7
Now
7 :
:
: ;
$str
; C
}
C D
$str
D U
"
U V
+
W X
queryStringUpdate
X i
)
i j
;
j k

SqlCommand
 
commandupdate
 ,
=
- .
new
/ 2

SqlCommand
3 =
(
= >
queryStringUpdate

 
,
 

connection
 '
)
' (
;
( )

connection
 
.
 
Open
 #
(
# $
)
$ %
;
% &
commandupdate
 !
.
! "
ExecuteNonQuery
" 1
(
1 2
)
2 3
;
3 4
_logger
 
.
 
LogInformation
 *
(
* +
$"
+ -
{
- .
DateTime
. 6
.
6 7
Now
7 :
:
: ;
$str
; C
}
C D
$str
D Y
"
Y Z
+
[ \
commandupdate
] j
.
j k
ExecuteNonQuery
k z
(
z {
)
{ |
)
| }
;
} ~
}
¡¡ 
}
¢¢ 
}
¥¥ 	
public
¨¨ 
void
¨¨ 1
#ChangeTTMDetailProjetLivraisonAsync
¨¨ 7
(
¨¨7 8
)
¨¨8 9
{
©© 	
List
«« 
<
«« 
ProjetLivraison
««  
>
««  !
projetLivraisons
««" 2
=
««3 4
new
««5 8
List
««9 =
<
««= >
ProjetLivraison
««> M
>
««M N
(
««N O
)
««O P
;
««P Q
string
­­ 
queryString
­­ 
=
­­  
$str
®® q
;
®®q r
using
¯¯ 
(
¯¯ 
SqlConnection
¯¯  

connection
¯¯! +
=
¯¯, -
new
¯¯. 1
SqlConnection
¯¯2 ?
(
¯¯? @
$str
°° Z
)
°°Z [
)
°°[ \
{
±± 

SqlCommand
²² 
command
²² "
=
²²# $
new
²²% (

SqlCommand
²²) 3
(
²²3 4
queryString
³³ 
,
³³  

connection
³³! +
)
³³+ ,
;
³³, -

connection
´´ 
.
´´ 
Open
´´ 
(
´´  
)
´´  !
;
´´! "
using
µµ 
(
µµ 
SqlDataReader
µµ $
reader
µµ% +
=
µµ, -
command
µµ. 5
.
µµ5 6
ExecuteReader
µµ6 C
(
µµC D
)
µµD E
)
µµE F
{
¶¶ 
while
·· 
(
·· 
reader
·· !
.
··! "
Read
··" &
(
··& '
)
··' (
)
··( )
{
¸¸ 
if
ºº 
(
ºº 
DateTime
ºº $
.
ºº$ %
Parse
ºº% *
(
ºº* +
reader
ºº+ 1
[
ºº1 2
$num
ºº2 3
]
ºº3 4
.
ºº4 5
ToString
ºº5 =
(
ºº= >
)
ºº> ?
)
ºº? @
.
ºº@ A
Date
ººA E
<
ººF G
DateTime
ººH P
.
ººP Q
Now
ººQ T
.
ººT U
Date
ººU Y
&&
ººZ \
reader
ºº] c
[
ººc d
$num
ººd f
]
ººf g
.
ººg h
ToString
ººh p
(
ººp q
)
ººq r
==
ººs u
$str
ººv 
||ºº 
(ºº 
DateTimeºº 
.ºº 
Parseºº 
(ºº 
readerºº 
[ºº 
$numºº 
]ºº 
.ºº 
ToStringºº ¥
(ºº¥ ¦
)ºº¦ §
)ºº§ ¨
>ºº© ª
DateTimeºº« ³
.ºº³ ´
Parseºº´ ¹
(ºº¹ º
readerººº À
[ººÀ Á
$numººÁ Â
]ººÂ Ã
.ººÃ Ä
ToStringººÄ Ì
(ººÌ Í
)ººÍ Î
)ººÎ Ï
&&ººÐ Ò
readerººÓ Ù
[ººÙ Ú
$numººÚ Ü
]ººÜ Ý
.ººÝ Þ
ToStringººÞ æ
(ººæ ç
)ººç è
==ººé ë
$strººì ÷
)ºº÷ ø
)ººø ù
{
»» 
var
¼¼ 
projet
¼¼  &
=
¼¼' (
new
¼¼) ,
ProjetLivraison
¼¼- <
(
¼¼< =
)
¼¼= >
;
¼¼> ?
projet
½½ "
.
½½" #
Id
½½# %
=
½½& '
reader
½½( .
[
½½. /
$num
½½/ 0
]
½½0 1
.
½½1 2
ToString
½½2 :
(
½½: ;
)
½½; <
;
½½< =
projet
¾¾ "
.
¾¾" #
TTMId
¾¾# (
=
¾¾) *
$str
¾¾+ 1
;
¾¾1 2
projetLivraisons
¿¿ ,
.
¿¿, -
Add
¿¿- 0
(
¿¿0 1
projet
¿¿1 7
)
¿¿7 8
;
¿¿8 9
}
ÁÁ 
else
ÂÂ 
if
ÂÂ 
(
ÂÂ  !
DateTime
ÂÂ! )
.
ÂÂ) *
Parse
ÂÂ* /
(
ÂÂ/ 0
reader
ÂÂ0 6
[
ÂÂ6 7
$num
ÂÂ7 8
]
ÂÂ8 9
.
ÂÂ9 :
ToString
ÂÂ: B
(
ÂÂB C
)
ÂÂC D
)
ÂÂD E
.
ÂÂE F
Date
ÂÂF J
==
ÂÂK M
DateTime
ÂÂN V
.
ÂÂV W
Parse
ÂÂW \
(
ÂÂ\ ]
reader
ÂÂ] c
[
ÂÂc d
$num
ÂÂd e
]
ÂÂe f
.
ÂÂf g
ToString
ÂÂg o
(
ÂÂo p
)
ÂÂp q
)
ÂÂq r
.
ÂÂr s
Date
ÂÂs w
&&
ÂÂx z
readerÂÂ{ 
[ÂÂ 
$numÂÂ 
]ÂÂ 
.ÂÂ 
ToStringÂÂ 
(ÂÂ 
)ÂÂ 
==ÂÂ 
$strÂÂ 
)ÂÂ  
{
ÃÃ 
var
ÄÄ 
projet
ÄÄ  &
=
ÄÄ' (
new
ÄÄ) ,
ProjetLivraison
ÄÄ- <
(
ÄÄ< =
)
ÄÄ= >
;
ÄÄ> ?
projet
ÅÅ "
.
ÅÅ" #
Id
ÅÅ# %
=
ÅÅ& '
reader
ÅÅ( .
[
ÅÅ. /
$num
ÅÅ/ 0
]
ÅÅ0 1
.
ÅÅ1 2
ToString
ÅÅ2 :
(
ÅÅ: ;
)
ÅÅ; <
;
ÅÅ< =
projet
ÆÆ "
.
ÆÆ" #
TTMId
ÆÆ# (
=
ÆÆ) *
$str
ÆÆ+ 3
;
ÆÆ3 4
projetLivraisons
ÇÇ ,
.
ÇÇ, -
Add
ÇÇ- 0
(
ÇÇ0 1
projet
ÇÇ1 7
)
ÇÇ7 8
;
ÇÇ8 9
}
ÉÉ 
}
ÊÊ 
}
ËË 
}
ÌÌ 
using
ÏÏ 
(
ÏÏ 
SqlConnection
ÏÏ  

connection
ÏÏ! +
=
ÏÏ, -
new
ÏÏ. 1
SqlConnection
ÏÏ2 ?
(
ÏÏ? @
$str
ÐÐ Y
)
ÐÐY Z
)
ÐÐZ [
{
ÑÑ 
foreach
ÒÒ 
(
ÒÒ 
var
ÒÒ 
item
ÒÒ !
in
ÒÒ" $
projetLivraisons
ÒÒ% 5
)
ÒÒ5 6
{
ÓÓ 
string
ÔÔ 
queryStringUpdate
ÔÔ ,
=
ÔÔ- .
$strÕÕ '
+
ÕÕ( )
item
ÕÕ* .
.
ÕÕ. /
TTMId
ÕÕ/ 4
+
ÕÕ5 6
$str
ÕÕ7 F
+
ÕÕG H
item
ÕÕI M
.
ÕÕM N
Id
ÕÕN P
+
ÕÕQ R
$str
ÕÕS V
;
ÕÕV W
_logger
ÖÖ 
.
ÖÖ 
LogInformation
ÖÖ *
(
ÖÖ* +
$"
ÖÖ+ -
{
ÖÖ- .
DateTime
ÖÖ. 6
.
ÖÖ6 7
Now
ÖÖ7 :
:
ÖÖ: ;
$str
ÖÖ; C
}
ÖÖC D
$str
ÖÖD U
"
ÖÖU V
+
ÖÖW X
queryStringUpdate
ÖÖY j
)
ÖÖj k
;
ÖÖk l

SqlCommand
×× 
commandupdate
×× ,
=
××- .
new
××/ 2

SqlCommand
××3 =
(
××= >
queryStringUpdate
ØØ
 
,
ØØ 

connection
ØØ '
)
ØØ' (
;
ØØ( )

connection
ÙÙ 
.
ÙÙ 
Open
ÙÙ #
(
ÙÙ# $
)
ÙÙ$ %
;
ÙÙ% &
commandupdate
ÚÚ !
.
ÚÚ! "
ExecuteNonQuery
ÚÚ" 1
(
ÚÚ1 2
)
ÚÚ2 3
;
ÚÚ3 4
_logger
ÛÛ 
.
ÛÛ 
LogInformation
ÛÛ *
(
ÛÛ* +
$"
ÛÛ+ -
{
ÛÛ- .
DateTime
ÛÛ. 6
.
ÛÛ6 7
Now
ÛÛ7 :
:
ÛÛ: ;
$str
ÛÛ; C
}
ÛÛC D
$str
ÛÛD Y
"
ÛÛY Z
+
ÛÛ[ \
commandupdate
ÛÛ] j
.
ÛÛj k
ExecuteNonQuery
ÛÛk z
(
ÛÛz {
)
ÛÛ{ |
)
ÛÛ| }
;
ÛÛ} ~
}
ÞÞ 
}
ßß 
}
áá 	
}
ââ 
public
ãã 

	interface
ãã 
IScheduleConfig
ãã $
<
ãã$ %
T
ãã% &
>
ãã& '
{
ää 
string
åå 
CronExpression
åå 
{
åå 
get
åå  #
;
åå# $
set
åå% (
;
åå( )
}
åå* +
TimeZoneInfo
ææ 
TimeZoneInfo
ææ !
{
ææ" #
get
ææ$ '
;
ææ' (
set
ææ) ,
;
ææ, -
}
ææ. /
}
çç 
public
éé 

class
éé 
ScheduleConfig
éé 
<
éé  
T
éé  !
>
éé! "
:
éé# $
IScheduleConfig
éé% 4
<
éé4 5
T
éé5 6
>
éé6 7
{
êê 
public
ëë 
string
ëë 
CronExpression
ëë $
{
ëë% &
get
ëë' *
;
ëë* +
set
ëë, /
;
ëë/ 0
}
ëë1 2
public
ìì 
TimeZoneInfo
ìì 
TimeZoneInfo
ìì (
{
ìì) *
get
ìì+ .
;
ìì. /
set
ìì0 3
;
ìì3 4
}
ìì5 6
}
íí 
}ññ Ù
`C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\backgroudservice\ScheduledServiceExtensions.cs
	namespace 	

ProjetBack
 
. 
backgroudservice %
{ 
public		 

static		 
class		 &
ScheduledServiceExtensions		 2
{

 
public 
static 
IServiceCollection (

AddCronJob) 3
<3 4
T4 5
>5 6
(6 7
this7 ;
IServiceCollection< N
servicesO W
,W X
ActionY _
<_ `
IScheduleConfig` o
<o p
Tp q
>q r
>r s
optionst {
){ |
where	} 
T
 
:
 
CronJobService
 
{ 	
if 
( 
options 
== 
null 
)  
{ 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7
options7 >
)> ?
,? @
$strA k
)k l
;l m
} 
var 
config 
= 
new 
ScheduleConfig +
<+ ,
T, -
>- .
(. /
)/ 0
;0 1
options 
. 
Invoke 
( 
config !
)! "
;" #
if 
( 
string 
. 
IsNullOrWhiteSpace )
() *
config* 0
.0 1
CronExpression1 ?
)? @
)@ A
{ 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7
ScheduleConfig7 E
<E F
TF G
>G H
.H I
CronExpressionI W
)W X
,X Y
$str	Z 
)
 
;
 
} 
services 
. 
AddSingleton !
<! "
IScheduleConfig" 1
<1 2
T2 3
>3 4
>4 5
(5 6
config6 <
)< =
;= >
services 
. 
AddHostedService %
<% &
T& '
>' (
(( )
)) *
;* +
return 
services 
; 
} 	
} 
} 
NC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\ClaimsPrincipalExtensions.cs
	namespace 	

ProjetBack
 
{		 
public

 

static

 
class

 %
ClaimsPrincipalExtensions

 1
{ 
public 
static 
string 
	GetUserId &
(& '
this' +
ClaimsPrincipal, ;
	principal< E
)E F
{ 	
if 
( 
! 
	principal 
. 
Identity #
.# $
IsAuthenticated$ 3
)3 4
return 
null 
; 
ClaimsPrincipal 
currentUser '
=( )
	principal* 3
;3 4
return 
currentUser 
. 
	FindFirst (
(( )

ClaimTypes) 3
.3 4
NameIdentifier4 B
)B C
.C D
ValueD I
;I J
} 	
} 
} ï
RC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\ClientsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class 
ClientsController "
:# $
ControllerBase% 3
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public 
ClientsController  
(  !
PilotageDBContext! 2
context3 :
): ;
{ 	
_context 
= 
context 
; 
} 	
[77 	
HttpPost77	 
(77 
$str77 #
)77# $
]77$ %
public88 
IActionResult88 
getStatByClient88 ,
(88, -
List88- 1
<881 2
string882 8
>888 9
	clientIds88: C
)88C D
{99 	
var;; 
resultat;; 
=;; 
_context;; #
.;;# $
Clients;;$ +
.;;+ ,
Where;;, 1
(;;1 2
x;;2 3
=>;;4 6
	clientIds;;7 @
.;;@ A
Contains;;A I
(;;I J
x;;J K
.;;K L
Id;;L N
);;N O
);;O P
.;;P Q
Select;;Q W
(;;W X
r;;X Y
=>;;Z \
new;;] `
{<< 
projectCount== 
=== 
r==  
.==  !
ClientProjet==! -
.==- .
Count==. 3
(==3 4
)==4 5
,==5 6
livraisonsCount>> 
=>>  
r>>! "
.>>" #
ClientProjet>># /
.>>/ 0
Select>>0 6
(>>6 7
x>>7 8
=>>>8 :
x>>: ;
.>>; <
Projet>>< B
)>>B C
.>>C D

SelectMany>>D N
(>>N O
x>>O P
=>>>P R
x>>R S
.>>S T
DetailLivraisons>>T d
)>>d e
.>>e f
Select>>f l
(>>l m
x>>m n
=>>>n p
x>>p q
.>>q r
ProjetLivraison	>>r 
)
>> 
.
>> 
Distinct
>> 
(
>> 
)
>> 
.
>> 
Count
>> 
(
>> 
)
>> 
,
>>  
ProjetCompatbleCount?? $
=??% &
r??' (
.??( )

ProjetEdps??) 3
.??3 4
Count??4 9
(??9 :
)??: ;
,??; <
rAA 
.AA 
DateCreationAA 
,AA 
}DD 
)DD 
.DD 
FirstOrDefaultDD 
(DD 
)DD 
;DD  
returnFF 
OkFF 
(FF 
resultatFF 
)FF 
;FF  
}GG 	
[JJ 	
HttpGetJJ	 
(JJ 
$strJJ 0
)JJ0 1
]JJ1 2
publicKK 
IActionResultKK )
GetClientsWithProjetComptableKK :
(KK: ;
)KK; <
{LL 	
varNN 
resultatNN 
=NN 
_contextNN #
.NN# $
ClientsNN$ +
.NN+ ,
WhereNN, 1
(NN1 2
xNN2 3
=>NN4 6
xNN7 8
.NN8 9
lockoutEnabledNN9 G
==NNH J
trueNNK O
&&NNP R
xNNS T
.NNT U

ProjetEdpsNNU _
.NN_ `
CountNN` e
>NNe f
$numNNf g
)NNh i
.NNi j
SelectOO 
(OO 
rOO 
=>OO 
newOO 
{PP 
IdQQ 
=QQ 
rQQ 
.QQ 
IdQQ 
,QQ 
NomRR 
=RR 
rRR 
.RR 
NomRR 
,RR 
}TT 
)TT 
.TT 
ToListTT 
(TT 
)TT 
;TT 
return__ 
Ok__ 
(__ 
new__ 
{__ 
resultat__ $
=__% &
resultat__' /
}__0 1
)__1 2
;__2 3
}aa 	
[ee 	
HttpGetee	 
]ee 
publicff 
IActionResultff 

GetClientsff '
(ff' (
)ff( )
{gg 	
varii 
resultatii 
=ii 
_contextii #
.ii# $
Clientsii$ +
.ii+ ,
Whereii, 1
(ii1 2
xii2 3
=>ii4 6
xii7 8
.ii8 9
lockoutEnabledii9 G
==iiH J
trueiiK O
)iiO P
.iiP Q
SelectiiQ W
(iiW X
riiX Y
=>iiZ \
newii] `
{jj 
projectCountkk 
=kk 
rkk  
.kk  !
ClientProjetkk! -
.kk- .
Countkk. 3
(kk3 4
)kk4 5
,kk5 6
Idll 
=ll 
rll 
.ll 
Idll 
,ll 
TypeClientIdmm 
=mm 
rmm  
.mm  !
TypeClientIdmm! -
,mm- .
Adressenn 
=nn 
rnn 
.nn 
Adressenn #
,nn# $
Nomoo 
=oo 
roo 
.oo 
Nomoo 
,oo 
lockoutEnabledpp 
=pp  
rpp! "
.pp" #
lockoutEnabledpp# 1
,pp1 2
}rr 
)rr 
.rr 
ToListrr 
(rr 
)rr 
;rr 
return}} 
Ok}} 
(}} 
new}} 
{}} 
resultat}} $
=}}% &
resultat}}' /
}}}0 1
)}}1 2
;}}2 3
} 	
[
 	
HttpGet
	 
(
 
$str
 
)
 
]
 
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
Client
' -
>
- .
>
. /
	GetClient
0 9
(
9 :
string
: @
id
A C
)
C D
{
 	
var
 
client
 
=
 
_context
 "
.
" #
Clients
# *
.
* +
Where
+ 0
(
0 1
x
1 2
=>
3 5
x
6 7
.
7 8
lockoutEnabled
8 F
==
G I
true
J N
&&
O Q
x
R S
.
S T
Id
T V
==
V X
id
X Z
)
Z [
.
[ \
FirstOrDefault
\ j
(
j k
)
k l
;
l m
if
 
(
 
client
 
==
 
null
 
)
 
{
 
return
 
NotFound
 
(
  
)
  !
;
! "
}
 
return
 
client
 
;
 
}
 	
[
 	
HttpPost
	 
(
 
$str
 
)
  
]
  !
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (
	PutClient
) 2
(
2 3
string
3 9
id
: <
,
< =
Client
> D
client
E K
)
K L
{
 	
if
 
(
 
id
 
!=
 
client
 
.
 
Id
 
)
  
{
 
return
 

BadRequest
 !
(
! "
)
" #
;
# $
}
 
_context
 
.
 
Entry
 
(
 
client
 !
)
! "
.
" #
State
# (
=
) *
EntityState
+ 6
.
6 7
Modified
7 ?
;
? @
try
 
{
 
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
}
 
catch
   
(
   *
DbUpdateConcurrencyException
   /
)
  / 0
{
¡¡ 
if
¢¢ 
(
¢¢ 
!
¢¢ 
ClientExists
¢¢ !
(
¢¢! "
id
¢¢" $
)
¢¢$ %
)
¢¢% &
{
££ 
return
¤¤ 
NotFound
¤¤ #
(
¤¤# $
)
¤¤$ %
;
¤¤% &
}
¥¥ 
else
¦¦ 
{
§§ 
throw
¨¨ 
;
¨¨ 
}
©© 
}
ªª 
return
¬¬ 
	NoContent
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 	
[
²² 	
HttpPost
²²	 
]
²² 
public
³³ 
async
³³ 
Task
³³ 
<
³³ 
ActionResult
³³ &
<
³³& '
Client
³³' -
>
³³- .
>
³³. /

PostClient
³³0 :
(
³³: ;
Client
³³; A
client
³³B H
)
³³H I
{
´´ 	
client
¶¶ 
.
¶¶ 
DateCreation
¶¶ 
=
¶¶  !
DateTime
¶¶" *
.
¶¶* +
Now
¶¶+ .
.
¶¶. /
ToString
¶¶/ 7
(
¶¶7 8
)
¶¶8 9
;
¶¶9 :
client
·· 
.
·· &
DateDerniereModification
·· +
=
··, -
DateTime
··. 6
.
··6 7
Now
··7 :
.
··: ;
ToString
··; C
(
··C D
)
··D E
;
··E F
_context
¸¸ 
.
¸¸ 
Clients
¸¸ 
.
¸¸ 
Add
¸¸  
(
¸¸  !
client
¸¸! '
)
¸¸' (
;
¸¸( )
await
ºº 
_context
ºº 
.
ºº 
SaveChangesAsync
ºº +
(
ºº+ ,
)
ºº, -
;
ºº- .
return
¼¼ 
CreatedAtAction
¼¼ "
(
¼¼" #
$str
¼¼# .
,
¼¼. /
new
¼¼0 3
{
¼¼4 5
id
¼¼6 8
=
¼¼9 :
client
¼¼; A
.
¼¼A B
Id
¼¼B D
}
¼¼E F
,
¼¼F G
client
¼¼H N
)
¼¼N O
;
¼¼O P
}
½½ 	
[
ÀÀ 
HttpPost
ÀÀ 
(
ÀÀ 
$str
ÀÀ 
)
ÀÀ 
]
ÀÀ  
public
ÁÁ 
async
ÁÁ 
Task
ÁÁ 
<
ÁÁ 
ActionResult
ÁÁ &
<
ÁÁ& '
Client
ÁÁ' -
>
ÁÁ- .
>
ÁÁ. /
DeleteClient
ÁÁ0 <
(
ÁÁ< =
string
ÁÁ= C
id
ÁÁD F
)
ÁÁF G
{
ÂÂ 	
var
ÃÃ 
client
ÃÃ 
=
ÃÃ 
await
ÃÃ 
_context
ÃÃ '
.
ÃÃ' (
Clients
ÃÃ( /
.
ÃÃ/ 0
	FindAsync
ÃÃ0 9
(
ÃÃ9 :
id
ÃÃ: <
)
ÃÃ< =
;
ÃÃ= >
if
ÄÄ 
(
ÄÄ 
client
ÄÄ 
==
ÄÄ 
null
ÄÄ 
)
ÄÄ 
{
ÅÅ 
return
ÆÆ 
NotFound
ÆÆ 
(
ÆÆ  
)
ÆÆ  !
;
ÆÆ! "
}
ÇÇ 
_context
ÉÉ 
.
ÉÉ 
Clients
ÉÉ 
.
ÉÉ 
Remove
ÉÉ #
(
ÉÉ# $
client
ÉÉ$ *
)
ÉÉ* +
;
ÉÉ+ ,
await
ÊÊ 
_context
ÊÊ 
.
ÊÊ 
SaveChangesAsync
ÊÊ +
(
ÊÊ+ ,
)
ÊÊ, -
;
ÊÊ- .
return
ÌÌ 
client
ÌÌ 
;
ÌÌ 
}
ÍÍ 	
[
ÏÏ 	
HttpGet
ÏÏ	 
(
ÏÏ 
$str
ÏÏ $
)
ÏÏ$ %
]
ÏÏ% &
public
ÐÐ 
IActionResult
ÐÐ 
ClientProjetExist
ÐÐ /
(
ÐÐ/ 0
)
ÐÐ0 1
{
ÑÑ 	
var
ÒÒ 
client
ÒÒ 
=
ÒÒ 
_context
ÒÒ "
.
ÒÒ" #
Clients
ÒÒ# *
.
ÒÒ* +
Where
ÒÒ+ 0
(
ÒÒ0 1
e
ÒÒ1 2
=>
ÒÒ3 5
e
ÒÒ6 7
.
ÒÒ7 8
CodeProjets
ÒÒ8 C
.
ÒÒC D
Count
ÒÒD I
(
ÒÒI J
)
ÒÒJ K
!=
ÒÒL N
$num
ÒÒO P
)
ÒÒP Q
.
ÒÒQ R
Select
ÒÒR X
(
ÒÒX Y
r
ÒÒY Z
=>
ÒÒ[ ]
new
ÒÒ^ a
{
ÓÓ 
projectCount
ÔÔ 
=
ÔÔ 
r
ÔÔ  
.
ÔÔ  !
ClientProjet
ÔÔ! -
.
ÔÔ- .
Count
ÔÔ. 3
(
ÔÔ3 4
)
ÔÔ4 5
,
ÔÔ5 6
Id
ÕÕ 
=
ÕÕ 
r
ÕÕ 
.
ÕÕ 
Id
ÕÕ 
,
ÕÕ 
TypeClientId
ÖÖ 
=
ÖÖ 
r
ÖÖ  
.
ÖÖ  !
TypeClientId
ÖÖ! -
,
ÖÖ- .
Adresse
×× 
=
×× 
r
×× 
.
×× 
Adresse
×× #
,
××# $
Nom
ØØ 
=
ØØ 
r
ØØ 
.
ØØ 
Nom
ØØ 
,
ØØ 
lockoutEnabled
ÙÙ 
=
ÙÙ  
r
ÙÙ! "
.
ÙÙ" #
lockoutEnabled
ÙÙ# 1
,
ÙÙ1 2
}
ÛÛ 
)
ÛÛ 
.
ÛÛ 
ToList
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
return
ÝÝ 
Ok
ÝÝ 
(
ÝÝ 
new
ÝÝ 
{
ÝÝ 
resultat
ÝÝ $
=
ÝÝ% &
client
ÝÝ' -
}
ÝÝ. /
)
ÝÝ/ 0
;
ÝÝ0 1
}
ÞÞ 	
[
ââ 	
	NonAction
ââ	 
]
ââ 
private
ãã 
bool
ãã 
ClientExists
ãã !
(
ãã! "
string
ãã" (
id
ãã) +
)
ãã+ ,
{
ää 	
return
åå 
_context
åå 
.
åå 
Clients
åå #
.
åå# $
Any
åå$ '
(
åå' (
e
åå( )
=>
åå* ,
e
åå- .
.
åå. /
Id
åå/ 1
==
åå2 4
id
åå5 7
)
åå7 8
;
åå8 9
}
ææ 	
}
ññ 
public
óó 

class
óó  
ProjectWithDetails
óó #
{
ôô 
public
öö 
string
öö 
IdProjet
öö 
{
öö  
get
öö! $
;
öö$ %
set
öö& )
;
öö) *
}
öö+ ,
public
÷÷ 
string
÷÷ 
Nommenclature
÷÷ #
{
÷÷$ %
get
÷÷& )
;
÷÷) *
set
÷÷+ .
;
÷÷. /
}
÷÷0 1
public
øø 
string
øø 
Description
øø !
{
øø" #
get
øø$ '
;
øø' (
set
øø) ,
;
øø, -
}
øø. /
public
ùù 
string
ùù 
Publique
ùù 
{
ùù  
get
ùù! $
;
ùù$ %
set
ùù& )
;
ùù) *
}
ùù+ ,
public
úú 
string
úú 
DateCreation
úú "
{
úú# $
get
úú% (
;
úú( )
set
úú* -
;
úú- .
}
úú/ 0
public
ûû 
string
ûû 
Createur
ûû 
{
ûû  
get
ûû! $
;
ûû$ %
set
ûû& )
;
ûû) *
}
ûû+ ,
public
üü 
string
üü &
DateDerniereModification
üü .
{
üü/ 0
get
üü1 4
;
üü4 5
set
üü6 9
;
üü9 :
}
üü; <
public
ýý 
string
ýý 
Modificateur
ýý "
{
ýý# $
get
ýý% (
;
ýý( )
set
ýý* -
;
ýý- .
}
ýý/ 0
public
ÿÿ 
List
ÿÿ 
<
ÿÿ 
DetailLivraison
ÿÿ #
>
ÿÿ# $
Details
ÿÿ% ,
{
ÿÿ- .
get
ÿÿ/ 2
;
ÿÿ2 3
set
ÿÿ4 7
;
ÿÿ7 8
}
ÿÿ9 :
}
 
public
 

class
  
ClientWithProjects
 #
{
 
public
 
string
 
Id
 
{
 
get
 
;
 
set
  #
;
# $
}
% &
public
 
string
 
Nom
 
{
 
get
 
;
  
set
! $
;
$ %
}
& '
public
 
string
 
Adresse
 
{
 
get
  #
;
# $
set
% (
;
( )
}
* +
public
 
List
 
<
 
ProjetLivraison
 #
>
# $
ProjsetLivraison
% 5
{
6 7
get
8 ;
;
; <
set
= @
;
@ A
}
B C
}
 
} ºV
VC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\CodeProjetsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class !
CodeProjetsController &
:' (
ControllerBase) 7
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public !
CodeProjetsController $
($ %
PilotageDBContext% 6
context7 >
)> ?
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetCodeProjet) 6
(6 7
)7 8
{ 	
var 
resultat 
= 
await 
_context '
.' (

CodeProjet( 2
.2 3
Select3 9
(9 :
x: ;
=>< >
new? B
{ 
	nomClient 
= 
x 
. 
Client "
." #
Nom# &
,& '
x   
.   
ClientId   
,   
x!! 
.!! 
id!! 
,!! 
x"" 
."" 
Nature"" 
,"" 
x## 
.## 
Numero## 
,## 
countProjetCom$$ 
=$$  
x$$! "
.$$" #

ProjetEdps$$# -
.$$- .
Count$$. 3
,$$3 4
x%% 
.%% 
Intitule%% 
}&& 
)&& 
.&& 
ToListAsync&& 
(&& 
)&& 
;&& 
return(( 
Ok(( 
((( 
resultat(( 
)(( 
;((  
})) 	
[,, 	
HttpGet,,	 
(,, 
$str,, 
),, 
],, 
public-- 
async-- 
Task-- 
<-- 
ActionResult-- &
<--& '

CodeProjet--' 1
>--1 2
>--2 3
GetCodeProjet--4 A
(--A B
string--B H
id--I K
)--K L
{.. 	
var00 

codeProjet00 
=00 
await00 "
_context00# +
.00+ ,

CodeProjet00, 6
.006 7
Where007 <
(00< =
x00= >
=>00> @
x00@ A
.00A B
id00B D
==00D F
id00F H
)00H I
.00I J
FirstOrDefaultAsync00J ]
(00] ^
)00^ _
;00_ `
if22 
(22 

codeProjet22 
==22 
null22 "
)22" #
{33 
return44 
NotFound44 
(44  
)44  !
;44! "
}55 
return77 

codeProjet77 
;77 
}88 	
[== 	
HttpPost==	 
(== 
$str== 
)==  
]==  !
public>> 
async>> 
Task>> 
<>> 
IActionResult>> '
>>>' (
PutCodeProjet>>) 6
(>>6 7
string>>7 =
id>>> @
,>>@ A

CodeProjet>>B L

codeProjet>>M W
)>>W X
{?? 	
ifBB 
(BB 
idBB 
!=BB 

codeProjetBB  
.BB  !
idBB! #
)BB# $
{CC 
returnDD 

BadRequestDD !
(DD! "
)DD" #
;DD# $
}EE 
varFF 
codeProjFF 
=FF 
awaitFF 
_contextFF  (
.FF( )

CodeProjetFF) 3
.FF3 4
WhereFF4 9
(FF9 :
xFF: ;
=>FF; =
xFF= >
.FF> ?
NumeroFF? E
==FFF H

codeProjetFFI S
.FFS T
NumeroFFT Z
&&FF[ ]
xFF^ _
.FF_ `
idFF` b
!=FFb d

codeProjetFFe o
.FFo p
idFFp r
)FFr s
.FFs t 
FirstOrDefaultAsync	FFt 
(
FF 
)
FF 
;
FF 
ifGG 
(GG 
codeProjGG 
!=GG 
nullGG 
)GG 
{HH 
returnII 
OkII 
(II 
newII 
{II 

codeRetourII  *
=II+ ,
$strII- 2
}II3 4
)II4 5
;II5 6
}JJ 
varKK 
clientKK 
=KK 
awaitKK 
_contextKK '
.KK' (
ClientsKK( /
.KK/ 0
	FindAsyncKK0 9
(KK9 :

codeProjetKK: D
.KKD E
ClientIdKKE M
)KKM N
;KKN O

codeProjetLL 
.LL 
IntituleLL 
=LL  !

codeProjetLL" ,
.LL, -
NatureLL- 3
+LL4 5
$strLL6 ;
+LL< =
clientLL> D
.LLD E
NomLLE H
;LLH I
_contextNN 
.NN 
EntryNN 
(NN 

codeProjetNN %
)NN% &
.NN& '
StateNN' ,
=NN- .
EntityStateNN/ :
.NN: ;
ModifiedNN; C
;NNC D
tryPP 
{QQ 
awaitRR 
_contextRR 
.RR 
SaveChangesAsyncRR /
(RR/ 0
)RR0 1
;RR1 2
returnTT 
OkTT 
(TT 
newTT 
{TT 

codeRetourTT  *
=TT+ ,
$strTT- 2
}TT3 4
)TT4 5
;TT5 6
}UU 
catchVV 
(VV (
DbUpdateConcurrencyExceptionVV /
)VV/ 0
{WW 
ifXX 
(XX 
!XX 
CodeProjetExistsXX %
(XX% &
idXX& (
)XX( )
)XX) *
{YY 
returnZZ 
NotFoundZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
}[[ 
else\\ 
{]] 
throw^^ 
;^^ 
}__ 
}`` 
}bb 	
[gg 	
HttpPostgg	 
]gg 
publichh 
asynchh 
Taskhh 
<hh 
ActionResulthh &
<hh& '

CodeProjethh' 1
>hh1 2
>hh2 3
PostCodeProjethh4 B
(hhB C

CodeProjethhC M

codeProjethhN X
)hhX Y
{ii 	
varjj 
codeProjjj 
=jj 
awaitjj 
_contextjj! )
.jj) *

CodeProjetjj* 4
.jj4 5
Wherejj5 :
(jj: ;
xjj; <
=>jj= ?
xjj@ A
.jjA B
NumerojjB H
==jjI K

codeProjetjjL V
.jjV W
NumerojjW ]
)jj] ^
.jj^ _
FirstOrDefaultAsyncjj_ r
(jjr s
)jjs t
;jjt u
ifkk 
(kk 
codeProjkk 
!=kk 
nullkk  
)kk  !
{ll 
returnmm 
Okmm 
(mm 
newmm 
{mm 

codeRetourmm  *
=mm+ ,
$strmm- 2
}mm3 4
)mm4 5
;mm5 6
}nn 

codeProjetpp 
.pp 
dateCreationpp #
=pp$ %
DateTimepp& .
.pp. /
Nowpp/ 2
;pp2 3
varrr 
clientrr 
=rr 
awaitrr 
_contextrr '
.rr' (
Clientsrr( /
.rr/ 0
	FindAsyncrr0 9
(rr9 :

codeProjetrr: D
.rrD E
ClientIdrrE M
)rrM N
;rrN O

codeProjetss 
.ss 
Intituless 
=ss  !

codeProjetss" ,
.ss, -
Naturess- 3
+ss4 5
$strss6 ;
+ss< =
clientss> D
.ssD E
NomssE H
;ssH I
_contexttt 
.tt 

CodeProjettt 
.tt  
Addtt  #
(tt# $

codeProjettt$ .
)tt. /
;tt/ 0
tryuu 
{vv 
awaitxx 
_contextxx 
.xx 
SaveChangesAsyncxx /
(xx/ 0
)xx0 1
;xx1 2
returnyy 
Okyy 
(yy 
newyy 
{yy 

codeRetouryy  *
=yy+ ,
$stryy- 2
}yy3 4
)yy4 5
;yy5 6
}|| 
catch}} 
(}} 
DbUpdateException}} $
)}}$ %
{~~ 
if 
( 
CodeProjetExists $
($ %

codeProjet% /
./ 0
id0 2
)2 3
)3 4
{
 
return
 
Conflict
 #
(
# $
)
$ %
;
% &
}
 
else
 
{
 
throw
 
;
 
}
 
}
 
}
 	
[
 	
HttpPost
	 
(
 
$str
 
)
  
]
  !
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '

CodeProjet
' 1
>
1 2
>
2 3
DeleteCodeProjet
4 D
(
D E
string
E K
id
L N
)
N O
{
 	
var
 

codeProjet
 
=
 
await
 "
_context
# +
.
+ ,

CodeProjet
, 6
.
6 7
	FindAsync
7 @
(
@ A
id
A C
)
C D
;
D E
if
 
(
 

codeProjet
 
==
 
null
 "
)
" #
{
 
return
 
NotFound
 
(
  
)
  !
;
! "
}
 
_context
 
.
 

CodeProjet
 
.
  
Remove
  &
(
& '

codeProjet
' 1
)
1 2
;
2 3
await
 
_context
 
.
 
SaveChangesAsync
 +
(
+ ,
)
, -
;
- .
return
 

codeProjet
 
;
 
}
 	
[
 	
	NonAction
	 
]
 
private
 
bool
 
CodeProjetExists
 %
(
% &
string
& ,
id
- /
)
/ 0
{
 	
return
 
_context
 
.
 

CodeProjet
 &
.
& '
Any
' *
(
* +
e
+ ,
=>
- /
e
0 1
.
1 2
Numero
2 8
==
9 ;
id
< >
)
> ?
;
? @
}
 	
}
   
}¡¡ =
VC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\CommercantsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class !
CommercantsController &
:' (
ControllerBase) 7
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public !
CommercantsController $
($ %
PilotageDBContext% 6
context7 >
)> ?
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
>& '
GetCommercants( 6
(6 7
)7 8
{ 	
var 
result 
= 
await 
_context &
.& '
Commercants' 2
.2 3
Select3 9
(9 :
x: ;
=>< >
new? B
{ 
x 
. 
id 
, 
x   
.   
FullName   
,   
x!! 
.!! 
Nom!! 
,!! 
x"" 
."" 
Prenom"" 
,"" 
x## 
.## 
DateCreation## 
,## 
x$$ 
.$$ 
Createur$$ 
,$$ 
nbProjet%% 
=%% 
x%% 
.%% 
	ProjetEdp%% &
.%%& '
Count%%' ,
}'' 
)'' 
.'' 
ToListAsync'' 
('' 
)'' 
;'' 
return(( 
Ok(( 
((( 
result(( 
)(( 
;(( 
})) 	
[,, 	
HttpGet,,	 
(,, 
$str,, 
),, 
],, 
public-- 
async-- 
Task-- 
<-- 
ActionResult-- &
<--& '

Commercant--' 1
>--1 2
>--2 3
GetCommercant--4 A
(--A B
string--B H
id--I K
)--K L
{.. 	
var// 

commercant// 
=// 
await// "
_context//# +
.//+ ,
Commercants//, 7
.//7 8
	FindAsync//8 A
(//A B
id//B D
)//D E
;//E F
if11 
(11 

commercant11 
==11 
null11 "
)11" #
{22 
return33 
NotFound33 
(33  
)33  !
;33! "
}44 
return66 

commercant66 
;66 
}77 	
[<< 	
HttpPost<<	 
(<< 
$str<< 
)<<  
]<<  !
public== 
async== 
Task== 
<== 
IActionResult== '
>==' (
PutCommercant==) 6
(==6 7
string==7 =
id==> @
,==@ A

Commercant==B L

commercant==M W
)==W X
{>> 	
if?? 
(?? 
id?? 
!=?? 

commercant??  
.??  !
id??! #
)??# $
{@@ 
returnAA 

BadRequestAA !
(AA! "
)AA" #
;AA# $
}BB 
_contextDD 
.DD 
EntryDD 
(DD 

commercantDD %
)DD% &
.DD& '
StateDD' ,
=DD- .
EntityStateDD/ :
.DD: ;
ModifiedDD; C
;DDC D
tryFF 
{GG 
awaitHH 
_contextHH 
.HH 
SaveChangesAsyncHH /
(HH/ 0
)HH0 1
;HH1 2
}II 
catchJJ 
(JJ (
DbUpdateConcurrencyExceptionJJ /
)JJ/ 0
{KK 
ifLL 
(LL 
!LL 
CommercantExistsLL %
(LL% &
idLL& (
)LL( )
)LL) *
{MM 
returnNN 
NotFoundNN #
(NN# $
)NN$ %
;NN% &
}OO 
elsePP 
{QQ 
throwRR 
;RR 
}SS 
}TT 
returnVV 
	NoContentVV 
(VV 
)VV 
;VV 
}WW 	
[\\ 	
HttpPost\\	 
]\\ 
public]] 
async]] 
Task]] 
<]] 
ActionResult]] &
<]]& '

Commercant]]' 1
>]]1 2
>]]2 3
PostCommercant]]4 B
(]]B C

Commercant]]C M

commercant]]N X
)]]X Y
{^^ 	
_context__ 
.__ 
Commercants__  
.__  !
Add__! $
(__$ %

commercant__% /
)__/ 0
;__0 1
try`` 
{aa 
awaitbb 
_contextbb 
.bb 
SaveChangesAsyncbb /
(bb/ 0
)bb0 1
;bb1 2
}cc 
catchdd 
(dd 
DbUpdateExceptiondd $
)dd$ %
{ee 
ifff 
(ff 
CommercantExistsff $
(ff$ %

commercantff% /
.ff/ 0
idff0 2
)ff2 3
)ff3 4
{gg 
returnhh 
Conflicthh #
(hh# $
)hh$ %
;hh% &
}ii 
elsejj 
{kk 
throwll 
;ll 
}mm 
}nn 
returnpp 
CreatedAtActionpp "
(pp" #
$strpp# 2
,pp2 3
newpp4 7
{pp8 9
idpp: <
=pp= >

commercantpp? I
.ppI J
idppJ L
}ppM N
,ppN O

commercantppP Z
)ppZ [
;pp[ \
}qq 	
[tt 	
HttpPosttt	 
(tt 
$strtt 
)tt  
]tt  !
publicuu 
asyncuu 
Taskuu 
<uu 
ActionResultuu &
<uu& '

Commercantuu' 1
>uu1 2
>uu2 3
DeleteCommercantuu4 D
(uuD E
stringuuE K
iduuL N
)uuN O
{vv 	
varww 

commercantww 
=ww 
awaitww "
_contextww# +
.ww+ ,
Commercantsww, 7
.ww7 8
	FindAsyncww8 A
(wwA B
idwwB D
)wwD E
;wwE F
ifxx 
(xx 

commercantxx 
==xx 
nullxx "
)xx" #
{yy 
returnzz 
NotFoundzz 
(zz  
)zz  !
;zz! "
}{{ 
_context}} 
.}} 
Commercants}}  
.}}  !
Remove}}! '
(}}' (

commercant}}( 2
)}}2 3
;}}3 4
await~~ 
_context~~ 
.~~ 
SaveChangesAsync~~ +
(~~+ ,
)~~, -
;~~- .
return
 

commercant
 
;
 
}
 	
[
 	
	NonAction
	 
]
 
private
 
bool
 
CommercantExists
 %
(
% &
string
& ,
id
- /
)
/ 0
{
 	
return
 
_context
 
.
 
Commercants
 '
.
' (
Any
( +
(
+ ,
e
, -
=>
. 0
e
1 2
.
2 3
id
3 5
==
6 8
id
9 ;
)
; <
;
< =
}
 	
}
 
} ÷H
\C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\DetailImputationsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class '
DetailImputationsController ,
:- .
ControllerBase/ =
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
private 
readonly 
IHubContext $
<$ %
NotificationHub% 4
,4 5#
INotificationHubService6 M
>M N
_hubContextO Z
;Z [
public '
DetailImputationsController *
(* +
PilotageDBContext+ <
context= D
,D E
IHubContextF Q
<Q R
NotificationHubR a
,a b#
INotificationHubServicec z
>z {

hubContext	| 
)
 
{ 	
_context 
= 
context 
; 
this 
. 
_hubContext 
= 

hubContext )
;) *
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
DetailImputation3 C
>C D
>D E
>E F 
GetDetailImputationsG [
([ \
)\ ]
{   	
return!! 
await!! 
_context!! !
.!!! "
DetailImputations!!" 3
.!!3 4
ToListAsync!!4 ?
(!!? @
)!!@ A
;!!A B
}"" 	
[%% 	
HttpGet%%	 
(%% 
$str%% 
)%% 
]%% 
public&& 
async&& 
Task&& 
<&& 
ActionResult&& &
<&&& '
DetailImputation&&' 7
>&&7 8
>&&8 9
GetDetailImputation&&: M
(&&M N
string&&N T
id&&U W
)&&W X
{'' 	
var(( 
detailImputation((  
=((! "
await((# (
_context(() 1
.((1 2
DetailImputations((2 C
.((C D
	FindAsync((D M
(((M N
id((N P
)((P Q
;((Q R
if** 
(** 
detailImputation**  
==**! #
null**$ (
)**( )
{++ 
return,, 
NotFound,, 
(,,  
),,  !
;,,! "
}-- 
return// 
detailImputation// #
;//# $
}00 	
[55 	
HttpPost55	 
(55 
$str55 
)55  
]55  !
public66 
async66 
Task66 
<66 
IActionResult66 '
>66' (
PutDetailImputation66) <
(66< =
string66= C
id66D F
,66F G
DetailImputation66H X
detailImputation66Y i
)66i j
{77 	
if88 
(88 
id88 
!=88 
detailImputation88 &
.88& '
Id88' )
)88) *
{99 
return:: 

BadRequest:: !
(::! "
)::" #
;::# $
};; 
_context== 
.== 
Entry== 
(== 
detailImputation== +
)==+ ,
.==, -
State==- 2
===3 4
EntityState==5 @
.==@ A
Modified==A I
;==I J
try?? 
{@@ 
awaitAA 
_contextAA 
.AA 
SaveChangesAsyncAA /
(AA/ 0
)AA0 1
;AA1 2
}BB 
catchCC 
(CC (
DbUpdateConcurrencyExceptionCC /
)CC/ 0
{DD 
ifEE 
(EE 
!EE "
DetailImputationExistsEE +
(EE+ ,
idEE, .
)EE. /
)EE/ 0
{FF 
returnGG 
NotFoundGG #
(GG# $
)GG$ %
;GG% &
}HH 
elseII 
{JJ 
throwKK 
;KK 
}LL 
}MM 
returnOO 
	NoContentOO 
(OO 
)OO 
;OO 
}PP 	
[UU 	
HttpPostUU	 
(UU 
$strUU )
)UU) *
]UU* +
publicVV 
asyncVV 
TaskVV 
<VV 
ActionResultVV &
<VV& '
DetailImputationVV' 7
>VV7 8
>VV8 9 
PostDetailImputationVV: N
(VVN O
DateTimeVVO W
	dateDebutVVX a
,VVa b
DateTimeVVc k
dateFinVVl s
,VVs t
DetailImputation	VVu 
detailImputation
VV 
,
VV 
string
VV 
id
VV ¡
)
VV¡ ¢
{WW 	
ifYY 
(YY 
stringYY 
.YY 
IsNullOrEmptyYY $
(YY$ %
detailImputationYY% 5
.YY5 6
ImputationIdYY6 B
)YYB C
)YYC D
{ZZ 

Imputation\\ 

imputation\\ %
=\\& '
new\\( +

Imputation\\, 6
{\\7 8
	DateDebut]] 
=]] 
	dateDebut]]  )
,]]) *
DateFin^^ 
=^^ 
dateFin^^ %
,^^% &
UserId`` 
=`` 
id`` 
,`` 
DetailImputationsbb %
=bb& '
newbb' *
Listbb+ /
<bb/ 0
DetailImputationbb0 @
>bb@ A
{cc 
detailImputationdd (
}ee 
}ff 
;ff 
_contextgg 
.gg 
Imputationsgg $
.gg$ %
Addgg% (
(gg( )

imputationgg) 3
)gg3 4
;gg4 5
}hh 
elseii 
{jj 
_contextkk 
.kk 
DetailImputationskk &
.kk& '
Addkk' *
(kk* +
detailImputationkk+ ;
)kk; <
;kk< =
}ll 
awaitmm 
_contextmm 
.mm 
SaveChangesAsyncmm +
(mm+ ,
)mm, -
;mm- .
awaitpp 
_hubContextpp 
.pp 
Clientspp %
.pp% &
Allpp& )
.pp) *
GetNotificationspp* :
(pp: ;
newpp; >
Modelspp? E
.ppE F
NotificationppF R
{ppS T
TitleppU Z
=pp[ \
$strpp] q
,ppq r
Contentpps z
=ppz {
$str	pp{ 
,
pp 

ActionLink
pp ¤
=
pp¤ ¥
$str
pp¥ ²
+
pp² ³
detailImputation
pp´ Ä
.
ppÄ Å
ImputationId
ppÅ Ñ
}
ppÒ Ó
)
ppÓ Ô
;
ppÔ Õ
returnss 
CreatedAtActionss "
(ss" #
$strss# 8
,ss8 9
newss: =
{ss> ?
idss@ B
=ssC D
detailImputationssE U
.ssU V
IdssV X
}ssY Z
,ssZ [
detailImputationss\ l
)ssl m
;ssm n
}tt 	
[ww 
HttpPostww 
(ww 
$strww 
)ww 
]ww  
publicxx 
asyncxx 
Taskxx 
<xx 
ActionResultxx &
<xx& '
DetailImputationxx' 7
>xx7 8
>xx8 9"
DeleteDetailImputationxx: P
(xxP Q
stringxxQ W
idxxX Z
)xxZ [
{yy 	
varzz 
detailImputationzz  
=zz! "
awaitzz# (
_contextzz) 1
.zz1 2
DetailImputationszz2 C
.zzC D
	FindAsynczzD M
(zzM N
idzzN P
)zzP Q
;zzQ R
if{{ 
({{ 
detailImputation{{  
=={{! #
null{{$ (
){{( )
{|| 
return}} 
NotFound}} 
(}}  
)}}  !
;}}! "
}~~ 
_context
 
.
 
DetailImputations
 &
.
& '
Remove
' -
(
- .
detailImputation
. >
)
> ?
;
? @
await
 
_context
 
.
 
SaveChangesAsync
 +
(
+ ,
)
, -
;
- .
return
 
detailImputation
 #
;
# $
}
 	
[
 	
	NonAction
	 
]
 
private
 
bool
 $
DetailImputationExists
 +
(
+ ,
string
, 2
id
3 5
)
5 6
{
 	
return
 
_context
 
.
 
DetailImputations
 -
.
- .
Any
. 1
(
1 2
e
2 3
=>
4 6
e
7 8
.
8 9
Id
9 ;
==
< >
id
? A
)
A B
;
B C
}
 	
}
 
} ´é
[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\DetailLivraisonsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class &
DetailLivraisonsController +
:, -
ControllerBase. <
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public &
DetailLivraisonsController )
() *
PilotageDBContext* ;
context< C
)C D
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
DetailLivraison3 B
>B C
>C D
>D E
GetDetailLivraisonsF Y
(Y Z
)Z [
{ 	
return 
await 
_context !
.! "
DetailLivraisons" 2
.2 3
ToListAsync3 >
(> ?
)? @
;@ A
} 	
[ 	
HttpGet	 
( 
$str -
)- .
]. /
public   
IActionResult   &
GetDetailsForAdminForTache   7
(  7 8
)  8 9
{!! 	
var## 
resulat## 
=## 
(## 
from## 
detailLivraisons##  0
in##1 3
_context##4 <
.##< =
DetailLivraisons##= M
select&& !
new&&" %
{'' 
Id(( !
=((" #
detailLivraisons(($ 4
.((4 5
Id((5 7
,((7 8 
nommenclatureProject)) 3
=))4 5
detailLivraisons))6 F
.))F G
Projet))G M
.))M N
Nommenclature))N [
+))\ ]
detailLivraisons))^ n
.))n o
Delivery))o w
,))w x
ProjetLivraisonId** 0
=**1 2
detailLivraisons**3 C
.**C D
ProjetLivraisonId**D U
,**U V
},, 
),, 
.,, 
ToList,, $
(,,$ %
),,% &
;,,& '
return-- 
Ok-- 
(-- 
resulat-- 
)-- 
;-- 
}00 	
[22 	
HttpGet22	 
(22 
$str22 C
)22C D
]22D E
public33 
IActionResult33 (
GetDetailsbyProjetLivraisnId33 9
(339 :
string33: @
ProjetLivraisonId33A R
)33R S
{44 	
var66 
resulat66 
=66 
(66 
from66 
detailLivraisons66  0
in661 3
_context664 <
.66< =
DetailLivraisons66= M
where88  
detailLivraisons88! 1
.881 2
ProjetLivraisonId882 C
==88C E
ProjetLivraisonId88F W
select99 !
new99" %
{:: 
Id;; !
=;;" #
detailLivraisons;;$ 4
.;;4 5
Id;;5 7
,;;7 8 
nommenclatureProject<< 3
=<<4 5
detailLivraisons<<6 F
.<<F G
Projet<<G M
.<<M N
Nommenclature<<N [
+<<\ ]
detailLivraisons<<^ n
.<<n o
Delivery<<o w
,<<w x
ProjetLivraisonId== 0
===1 2
detailLivraisons==3 C
.==C D
ProjetLivraisonId==D U
,==U V
}?? 
)?? 
.?? 
ToList?? $
(??$ %
)??% &
;??& '
return@@ 
Ok@@ 
(@@ 
resulat@@ 
)@@ 
;@@ 
}CC 	
[GG 	
HttpGetGG	 
(GG 
$strGG F
)GGF G
]GGG H
publicHH 
IActionResultHH +
satatDashboardLivraisonComtableHH <
(HH< =
stringHH= C
idprojetLivraisonHHD U
)HHU V
{II 	
tryJJ 
{KK 
varNN 
dbresultNN 
=NN 
(NN  
fromSS  $
dlSS& (
inSS) +
_contextSS, 4
.SS4 5
DetailLivraisonsSS5 E
whereSSF K
dlSSL N
.SSN O
ProjetLivraisonIdSSO `
==SS` b
idprojetLivraisonSSc t
joinUU  $
tUU% &
inUU' )
_contextUU* 2
.UU2 3
TachesUU3 9
onUU: <
dlUU= ?
.UU? @
IdUU@ B
equalsUUC I
tUUJ K
.UUK L
detailLivraisonIdUUL ]
intoVV- 1
joinedtVV2 9
fromWW  $
ttWW% '
inWW( *
joinedtWW+ 2
.WW2 3
DefaultIfEmptyWW3 A
(WWA B
)WWB C
joinZZ  $
plZZ% '
inZZ( *
_contextZZ+ 3
.ZZ3 4
ProjetLivraisonsZZ4 D
onZZE G
dlZZH J
.ZZJ K
ProjetLivraisonIdZZK \
equalsZZ] c
plZZd f
.ZZf g
IdZZg i
join\\  $
p\\% &
in\\' )
_context\\* 2
.\\2 3
profileUser\\3 >
on\\? A
tt\\B D
.\\D E
UserId\\E K
equals\\L R
p\\S T
.\\T U
userId\\U [
into]]# '
joinedtg]]( 0
from^^  $
tte^^% (
in^^) +
joinedtg^^, 4
.^^4 5
DefaultIfEmpty^^5 C
(^^C D
)^^D E
join``  $
di``% '
in``( *
_context``+ 3
.``3 4
DetailImputations``4 E
on``F H
tt``I K
.``K L
Id``L N
equals``O U
di``V X
.``X Y
TacheId``Y `
intobb" &
	joinedtgebb' 0
fromcc  $
ttedcc% )
incc* ,
	joinedtgecc- 6
.cc6 7
DefaultIfEmptycc7 E
(ccE F
)ccF G
selectgg  &
newgg' *
{hh  !
dljj$ &
.jj& '
Idjj' )
,jj) *
projectNamekk$ /
=kk0 1
dlkk2 4
.kk4 5
Projetkk5 ;
.kk; <
Nommenclaturekk< I
+kkJ K
$strkkL O
+kkP Q
dlkkR T
.kkT U
DeliverykkU ]
,kk] ^
dlll$ &
.ll& '
StatusIdll' /
,ll/ 0
dlmm$ &
.mm& '
	StartDatemm' 0
,mm0 1
dlnn$ &
.nn& '
PlannedDatenn' 2
,nn2 3
dloo$ &
.oo& '
DeliveryDateoo' 3
,oo3 4 
budgetConfirmeTotalerr$ 8
=rr9 :
(rr; <
plrr< >
.rr> ?
	projetEdprr? H
.rrH I"
budgetConfirmeRallongerrI _
!=rr` b
nullrrc g
?rrh i
plrrj l
.rrl m
	projetEdprrm v
.rrv w#
budgetConfirmeRallonge	rrw 
:
rr 
$num
rr 
)
rr 
+
rr 
(
rr 
pl
rr 
.
rr 
	projetEdp
rr ¢
.
rr¢ £
budgetConfirme
rr£ ±
!=
rr² ´
null
rrµ ¹
?
rrº »
pl
rr¼ ¾
.
rr¾ ¿
	projetEdp
rr¿ È
.
rrÈ É
budgetConfirme
rrÉ ×
:
rrØ Ù
$num
rrÚ Û
)
rrÛ Ü
,
rrÜ Ý
budgetGPTotalett$ 2
=tt3 4
(tt5 6
pltt6 8
.tt8 9
	projetEdptt9 B
.ttB C
budgetGPRallongettC S
!=ttT V
nullttW [
?tt\ ]
pltt^ `
.tt` a
	projetEdptta j
.ttj k
budgetGPRallongettk {
:tt| }
$numtt~ 
)	tt 
+
tt 
(
tt 
pl
tt 
.
tt 
	projetEdp
tt 
.
tt 
budgetGP
tt 
!=
tt 
null
tt ¡
?
tt¢ £
pl
tt¤ ¦
.
tt¦ §
	projetEdp
tt§ °
.
tt° ±
budgetGP
tt± ¹
:
ttº »
$num
tt¼ ½
)
tt½ ¾
,
tt¾ ¿
budgetJuniorTotaleww$ 6
=ww7 8
(ww9 :
plww: <
.ww< =
	projetEdpww= F
.wwF G
budgetJuniorwwG S
!=wwT V
nullwwW [
?ww\ ]
plww^ `
.ww` a
	projetEdpwwa j
.wwj k
budgetJuniorwwk w
:wwx y
$numwwz {
)ww{ |
+ww} ~
(	ww 
pl
ww 
.
ww 
	projetEdp
ww 
.
ww "
budgetJuniorRallonge
ww ¡
!=
ww¢ ¤
null
ww¥ ©
?
wwª «
pl
ww¬ ®
.
ww® ¯
	projetEdp
ww¯ ¸
.
ww¸ ¹"
budgetJuniorRallonge
ww¹ Í
:
wwÎ Ï
$num
wwÐ Ñ
)
wwÑ Ò
,
wwÒ Ó"
budgetValidationTotaleyy$ :
=yy; <
(yy= >
plyy> @
.yy@ A
	projetEdpyyA J
.yyJ K
budgetValidationyyK [
!=yy\ ^
nullyy_ c
?yyd e
plyyf h
.yyh i
	projetEdpyyi r
.yyr s
budgetValidation	yys 
:
yy 
$num
yy 
)
yy 
+
yy 
(
yy 
pl
yy 
.
yy 
	projetEdp
yy 
.
yy &
budgetValidationRallonge
yy ±
!=
yy² ´
null
yyµ ¹
?
yyº »
pl
yy¼ ¾
.
yy¾ ¿
	projetEdp
yy¿ È
.
yyÈ É&
budgetValidationRallonge
yyÉ á
:
yyâ ã
$num
yyä å
)
yyå æ
,
yyæ ç
budgetSeniorTotale{{$ 6
={{7 8
({{9 :
pl{{: <
.{{< =
	projetEdp{{= F
.{{F G
budgetSenior{{G S
!={{T V
null{{W [
?{{\ ]
pl{{^ `
.{{` a
	projetEdp{{a j
.{{j k
budgetSenior{{k w
:{{x y
$num{{z {
){{{ |
+{{} ~
(	{{ 
pl
{{ 
.
{{ 
	projetEdp
{{ 
.
{{ "
budgetSeniorRallonge
{{ ¡
!=
{{¢ ¤
null
{{¥ ©
?
{{ª «
pl
{{¬ ®
.
{{® ¯
	projetEdp
{{¯ ¸
.
{{¸ ¹"
budgetSeniorRallonge
{{¹ Í
:
{{Î Ï
$num
{{Ð Ñ
)
{{Ñ Ò
,
{{Ò Ó!
budgetDirectionTotale}}$ 9
=}}: ;
(}}< =
pl}}= ?
.}}? @
	projetEdp}}@ I
.}}I J
budgetDirection}}J Y
!=}}Z \
null}}] a
?}}b c
pl}}d f
.}}f g
	projetEdp}}g p
.}}p q
budgetDirection	}}q 
:
}} 
$num
}} 
)
}} 
+
}} 
(
}} 
pl
}} 
.
}} 
	projetEdp
}} 
.
}} %
budgetDirectionRallonge
}} ­
!=
}}® °
null
}}± µ
?
}}¶ ·
pl
}}¸ º
.
}}º »
	projetEdp
}}» Ä
.
}}Ä Å%
budgetDirectionRallonge
}}Å Ü
:
}}Ý Þ
$num
}}ß à
)
}}à á
,
}}á â
tte
$ '
.
' (
	profileId
( 1
,
1 2
Monday
$ *
=
+ ,
(
- .
Convert
. 5
.
5 6
ToDouble
6 >
(
> ?
tted
? C
.
C D
Monday
D J
.
J K
	Substring
K T
(
T U
$num
U V
,
V W
$num
X Y
)
Y Z
)
Z [
+
\ ]
Convert
^ e
.
e f
ToDouble
f n
(
n o
tted
o s
.
s t
Monday
t z
.
z {
	Substring{ 
( 
$num 
, 
$num 
) 
) 
/ 
$num 
) 
/ 
$num 
, 
Tuesday
$ +
=
, -
(
. /
Convert
/ 6
.
6 7
ToDouble
7 ?
(
? @
tted
@ D
.
D E
Tuesday
E L
.
L M
	Substring
M V
(
V W
$num
W X
,
X Y
$num
Z [
)
[ \
)
\ ]
+
^ _
Convert
` g
.
g h
ToDouble
h p
(
p q
tted
q u
.
u v
Tuesday
v }
.
} ~
	Substring~ 
( 
$num 
, 
$num 
) 
) 
/ 
$num 
) 
/ 
$num 
, 
Friday
$ *
=
+ ,
(
- .
Convert
. 5
.
5 6
ToDouble
6 >
(
> ?
tted
? C
.
C D
Friday
D J
.
J K
	Substring
K T
(
T U
$num
U V
,
V W
$num
X Y
)
Y Z
)
Z [
+
\ ]
Convert
^ e
.
e f
ToDouble
f n
(
n o
tted
o s
.
s t
Friday
t z
.
z {
	Substring{ 
( 
$num 
, 
$num 
) 
) 
/ 
$num 
) 
/ 
$num 
, 
	Wednesday
$ -
=
. /
(
0 1
Convert
1 8
.
8 9
ToDouble
9 A
(
A B
tted
B F
.
F G
	Wednesday
G P
.
P Q
	Substring
Q Z
(
Z [
$num
[ \
,
\ ]
$num
^ _
)
_ `
)
` a
+
b c
Convert
d k
.
k l
ToDouble
l t
(
t u
tted
u y
.
y z
	Wednesdayz 
. 
	Substring 
( 
$num 
, 
$num 
) 
) 
/ 
$num 
) 
/ 
$num 
, 
Thursday
$ ,
=
- .
(
/ 0
Convert
0 7
.
7 8
ToDouble
8 @
(
@ A
tted
A E
.
E F
Thursday
F N
.
N O
	Substring
O X
(
X Y
$num
Y Z
,
Z [
$num
\ ]
)
] ^
)
^ _
+
` a
Convert
b i
.
i j
ToDouble
j r
(
r s
tted
s w
.
w x
Thursdayx 
. 
	Substring 
( 
$num 
, 
$num 
) 
) 
/ 
$num 
) 
/ 
$num 
, 
}
  !
)
! "
.
" #
ToList
# )
(
) *
)
* +
;
+ ,
var
 
result1
 
=
 
(
 
from
 #
edp
$ '
in
( *
dbresult
+ 3
group
 $
edp
% (
by
) +
new
, /
{
  
edp
# &
.
& '
	profileId
' 0
,
0 1
edp
# &
.
& '
Id
' )
,
) *
edp
# &
.
& '
projectName
' 2
,
2 3
edp
# &
.
& '
StatusId
' /
,
/ 0
edp
# &
.
& '
	StartDate
' 0
,
0 1
edp
# &
.
& '
PlannedDate
' 2
,
2 3
edp
# &
.
& '
DeliveryDate
' 3
,
3 4
edp
# &
.
& '#
budgetDirectionTotale
' <
,
< =
edp
# &
.
& '"
budgetConfirmeTotale
' ;
,
; <
edp
# &
.
& '
budgetGPTotale
' 5
,
5 6
edp
# &
.
& ' 
budgetJuniorTotale
' 9
,
9 :
edp
# &
.
& '$
budgetValidationTotale
' =
,
= >
edp
# &
.
& ' 
budgetSeniorTotale
' 9
,
9 :
}
¥¥  
into
¥¥! %
g
¥¥& '
select
¦¦ %
new
¦¦& )
{
§§  
g
ªª# $
.
ªª$ %
Key
ªª% (
.
ªª( )
	profileId
ªª) 2
,
ªª2 3
g
¬¬# $
.
¬¬$ %
Key
¬¬% (
.
¬¬( )
projectName
¬¬) 4
,
¬¬4 5
g
­­# $
.
­­$ %
Key
­­% (
.
­­( )
Id
­­) +
,
­­+ ,
g
®®# $
.
®®$ %
Key
®®% (
.
®®( )
StatusId
®®) 1
,
®®1 2
g
¯¯# $
.
¯¯$ %
Key
¯¯% (
.
¯¯( )
	StartDate
¯¯) 2
,
¯¯2 3
g
°°# $
.
°°$ %
Key
°°% (
.
°°( )
PlannedDate
°°) 4
,
°°4 5
g
±±# $
.
±±$ %
Key
±±% (
.
±±( )
DeliveryDate
±±) 5
,
±±5 6

coutEstime
´´# -
=
´´. /
(
´´0 1
g
´´1 2
.
´´2 3
Key
´´3 6
.
´´6 7
	profileId
´´7 @
==
´´A C
$str
´´D N
?
´´O P
g
´´Q R
.
´´R S
Key
´´S V
.
´´V W"
budgetConfirmeTotale
´´W k
:
µµ$ %
(
µµ& '
g
µµ' (
.
µµ( )
Key
µµ) ,
.
µµ, -
	profileId
µµ- 6
==
µµ7 9
$str
µµ: E
?
µµF G
g
µµH I
.
µµI J
Key
µµJ M
.
µµM N#
budgetDirectionTotale
µµN c
:
¶¶$ %
(
¶¶& '
g
¶¶' (
.
¶¶( )
Key
¶¶) ,
.
¶¶, -
	profileId
¶¶- 6
==
¶¶7 9
$str
¶¶: >
?
¶¶? @
g
¶¶A B
.
¶¶B C
Key
¶¶C F
.
¶¶F G
budgetGPTotale
¶¶G U
:
··$ %
(
··& '
g
··' (
.
··( )
Key
··) ,
.
··, -
	profileId
··- 6
==
··7 9
$str
··: B
?
··C D
g
··E F
.
··F G
Key
··G J
.
··J K 
budgetJuniorTotale
··K ]
:
¸¸$ %
(
¸¸& '
g
¸¸' (
.
¸¸( )
Key
¸¸) ,
.
¸¸, -
	profileId
¸¸- 6
==
¸¸7 9
$str
¸¸: B
?
¸¸C D
g
¸¸E F
.
¸¸F G
Key
¸¸G J
.
¸¸J K 
budgetSeniorTotale
¸¸K ]
:
¹¹ 
(
¹¹ 
g
¹¹  
.
¹¹  !
Key
¹¹! $
.
¹¹$ %
	profileId
¹¹% .
==
¹¹/ 1
$str
¹¹2 >
?
¹¹? @
g
¹¹A B
.
¹¹B C
Key
¹¹C F
.
¹¹F G$
budgetValidationTotale
¹¹G ]
:
ºº 
$num
ºº 
)
ºº 
)
ºº 
)
ºº 
)
ºº 
)
ºº 
)
»» 
*
»» 
Convert
»» 
.
»»  
ToDouble
»»  (
(
»»( )
_context
»») 1
.
»»1 2
profile
»»2 9
.
»»9 :
Where
»»: ?
(
»»? @
x
»»@ A
=>
»»B D
x
»»E F
.
»»F G
	profileId
»»G P
==
»»Q S
g
»»T U
.
»»U V
Key
»»V Y
.
»»Y Z
	profileId
»»Z c
)
»»c d
.
»»d e
Select
»»e k
(
»»k l
x
»»l m
=>
»»n p
x
»»q r
.
»»r s
budget
»»s y
)
»»y z
.
»»z {
FirstOrDefault»»{ 
(»» 
)»» 
)»» 
,»» 
charge
¾¾# )
=
¾¾* +
g
¾¾, -
.
¾¾- .
Sum
¾¾. 1
(
¾¾1 2
x
¾¾2 3
=>
¾¾4 6
x
¾¾7 8
.
¾¾8 9
Monday
¾¾9 ?
)
¾¾? @
+
¾¾A B
g
¾¾C D
.
¾¾D E
Sum
¾¾E H
(
¾¾H I
x
¾¾I J
=>
¾¾K M
x
¾¾N O
.
¾¾O P
Tuesday
¾¾P W
)
¾¾W X
+
¾¾Y Z
g
¾¾[ \
.
¾¾\ ]
Sum
¾¾] `
(
¾¾` a
x
¾¾a b
=>
¾¾c e
x
¾¾f g
.
¾¾g h
	Wednesday
¾¾h q
)
¾¾q r
+
¾¾s t
g
¾¾u v
.
¾¾v w
Sum
¾¾w z
(
¾¾z {
x
¾¾{ |
=>
¾¾} 
x¾¾ 
.¾¾ 
Friday¾¾ 
)¾¾ 
+¾¾ 
g¾¾ 
.¾¾ 
Sum¾¾ 
(¾¾ 
x¾¾ 
=>¾¾ 
x¾¾ 
.¾¾ 
Thursday¾¾ ¡
)¾¾¡ ¢
,¾¾¢ £
cout
ÀÀ# '
=
ÀÀ( )
(
ÀÀ* +
g
ÀÀ+ ,
.
ÀÀ, -
Sum
ÀÀ- 0
(
ÀÀ0 1
x
ÀÀ1 2
=>
ÀÀ3 5
x
ÀÀ6 7
.
ÀÀ7 8
Monday
ÀÀ8 >
)
ÀÀ> ?
+
ÀÀ@ A
g
ÀÀB C
.
ÀÀC D
Sum
ÀÀD G
(
ÀÀG H
x
ÀÀH I
=>
ÀÀJ L
x
ÀÀM N
.
ÀÀN O
Tuesday
ÀÀO V
)
ÀÀV W
+
ÀÀX Y
g
ÀÀZ [
.
ÀÀ[ \
Sum
ÀÀ\ _
(
ÀÀ_ `
x
ÀÀ` a
=>
ÀÀb d
x
ÀÀe f
.
ÀÀf g
	Wednesday
ÀÀg p
)
ÀÀp q
+
ÀÀr s
g
ÀÀt u
.
ÀÀu v
Sum
ÀÀv y
(
ÀÀy z
x
ÀÀz {
=>
ÀÀ| ~
xÀÀ 
.ÀÀ 
FridayÀÀ 
)ÀÀ 
+ÀÀ 
gÀÀ 
.ÀÀ 
SumÀÀ 
(ÀÀ 
xÀÀ 
=>ÀÀ 
xÀÀ 
.ÀÀ 
ThursdayÀÀ  
)ÀÀ  ¡
)ÀÀ¡ ¢
*
ÂÂ" #
Convert
ÂÂ$ +
.
ÂÂ+ ,
ToDouble
ÂÂ, 4
(
ÂÂ4 5
_context
ÂÂ5 =
.
ÂÂ= >
profile
ÂÂ> E
.
ÂÂE F
Where
ÂÂF K
(
ÂÂK L
x
ÂÂL M
=>
ÂÂN P
x
ÂÂQ R
.
ÂÂR S
annee
ÂÂS X
==
ÂÂY [
DateTime
ÂÂ\ d
.
ÂÂd e
Now
ÂÂe h
.
ÂÂh i
Year
ÂÂi m
.
ÂÂm n
ToString
ÂÂn v
(
ÂÂv w
)
ÂÂw x
&&
ÂÂy {
x
ÂÂ| }
.
ÂÂ} ~
	profileIdÂÂ~ 
==ÂÂ 
gÂÂ 
.ÂÂ 
KeyÂÂ 
.ÂÂ 
	profileIdÂÂ 
)ÂÂ 
.ÂÂ 
SelectÂÂ ¢
(ÂÂ¢ £
xÂÂ£ ¤
=>ÂÂ¥ §
xÂÂ¨ ©
.ÂÂ© ª
budgetÂÂª °
)ÂÂ° ±
.ÂÂ± ²
FirstOrDefaultÂÂ² À
(ÂÂÀ Á
)ÂÂÁ Â
)ÂÂÂ Ã
}
ÃÃ  
)
ÃÃ  !
.
ÃÃ! "
ToList
ÃÃ" (
(
ÃÃ( )
)
ÃÃ) *
;
ÃÃ* +
var
ÇÇ 
ResultFinal
ÇÇ 
=
ÇÇ  !
(
ÇÇ" #
from
ÇÇ# '
edp
ÇÇ( +
in
ÇÇ, .
result1
ÇÇ/ 6
group
ÈÈ# (
edp
ÈÈ) ,
by
ÈÈ- /
new
ÈÈ0 3
{
ÉÉ# $
edp
ËË' *
.
ËË* +
Id
ËË+ -
,
ËË- .
edp
ÌÌ' *
.
ÌÌ* +
projectName
ÌÌ+ 6
,
ÌÌ6 7
edp
ÍÍ' *
.
ÍÍ* +
StatusId
ÍÍ+ 3
,
ÍÍ3 4
edp
ÎÎ' *
.
ÎÎ* +
	StartDate
ÎÎ+ 4
,
ÎÎ4 5
edp
ÏÏ' *
.
ÏÏ* +
PlannedDate
ÏÏ+ 6
,
ÏÏ6 7
edp
ÐÐ' *
.
ÐÐ* +
DeliveryDate
ÐÐ+ 7
,
ÐÐ7 8
}
ÒÒ# $
into
ÒÒ% )
g
ÒÒ* +
select
ÓÓ# )
new
ÓÓ* -
{
ÔÔ# $
g
ÕÕ' (
.
ÕÕ( )
Key
ÕÕ) ,
.
ÕÕ, -
projectName
ÕÕ- 8
,
ÕÕ8 9
g
ÖÖ' (
.
ÖÖ( )
Key
ÖÖ) ,
.
ÖÖ, -
Id
ÖÖ- /
,
ÖÖ/ 0
g
××' (
.
××( )
Key
××) ,
.
××, -
StatusId
××- 5
,
××5 6
g
ØØ' (
.
ØØ( )
Key
ØØ) ,
.
ØØ, -
	StartDate
ØØ- 6
,
ØØ6 7
g
ÙÙ' (
.
ÙÙ( )
Key
ÙÙ) ,
.
ÙÙ, -
PlannedDate
ÙÙ- 8
,
ÙÙ8 9
g
ÚÚ' (
.
ÚÚ( )
Key
ÚÚ) ,
.
ÚÚ, -
DeliveryDate
ÚÚ- 9
,
ÚÚ9 :
showDetails
ÛÛ' 2
=
ÛÛ3 4
false
ÛÛ5 :
,
ÛÛ: ;

coutEstime
ÜÜ& 0
=
ÜÜ1 2
g
ÜÜ3 4
.
ÜÜ4 5
Sum
ÜÜ5 8
(
ÜÜ8 9
x
ÜÜ9 :
=>
ÜÜ; =
x
ÜÜ> ?
.
ÜÜ? @

coutEstime
ÜÜ@ J
)
ÜÜJ K
,
ÜÜK L
charge
ÝÝ' -
=
ÝÝ. /
g
ÝÝ0 1
.
ÝÝ1 2
Sum
ÝÝ2 5
(
ÝÝ5 6
x
ÝÝ6 7
=>
ÝÝ8 :
x
ÝÝ; <
.
ÝÝ< =
charge
ÝÝ= C
)
ÝÝC D
,
ÝÝD E
cout
ÞÞ' +
=
ÞÞ, -
g
ÞÞ. /
.
ÞÞ/ 0
Sum
ÞÞ0 3
(
ÞÞ3 4
x
ÞÞ4 5
=>
ÞÞ6 8
x
ÞÞ9 :
.
ÞÞ: ;
cout
ÞÞ; ?
)
ÞÞ? @
}
ßß# $
)
ßß$ %
.
ßß% &
ToList
ßß& ,
(
ßß, -
)
ßß- .
;
ßß. /
return
áá 
Ok
áá 
(
áá 
ResultFinal
áá %
)
áá% &
;
áá& '
}
ãã 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
åå 
return
çç 

BadRequest
çç !
(
çç! "
e
çç" #
)
çç# $
;
çç$ %
}
èè 
}
éé 	
[
ññ 	
HttpGet
ññ	 
(
ññ 
$str
ññ <
)
ññ< =
]
ññ= >
public
òò 
IActionResult
òò .
 GetProjetDetailLivraisonForTasks
òò =
(
òò= >
string
òò> D
idUser
òòE K
)
òòK L
{
óó 	
var
õõ 
resulat
õõ 
=
õõ 
(
õõ 
from
÷÷ 
detailLivraisons
÷÷! 1
in
÷÷2 4
_context
÷÷5 =
.
÷÷= >
DetailLivraisons
÷÷> N
join
øø 
taches
øø! '
in
øø( *
_context
øø+ 3
.
øø3 4
Taches
øø4 :
on
øø; =
detailLivraisons
øø> N
.
øøN O
Id
øøO Q
equals
øøR X
taches
øøY _
.
øø_ `
detailLivraisonId
øø` q
where
úú  
(
úú! "
taches
úú" (
.
úú( )
UserId
úú) /
==
úú0 2
idUser
úú3 9
||
úú: <
detailLivraisons
úú= M
.
úúM N
Projet
úúN T
.
úúT U
Publique
úúU ]
==
úú^ `
$str
úúa g
)
úúh i
&&
úúj l
taches
úúm s
.
úús t
status
úút z
!=
úú{ }
$strúú~ 
select
ýý 
new
ýý 
{
þþ "
NommenclatureProject
 3
=
4 5
detailLivraisons
6 F
.
F G
Projet
G M
.
M N
Nommenclature
N [
+
\ ]
$str
^ a
+
b c
detailLivraisons
d t
.
t u
Delivery
u }
,
} ~
ProjetLivraisonId
 0
=
1 2
detailLivraisons
3 C
.
C D
ProjetLivraisonId
D U
,
U V
Id
 !
=
" #
detailLivraisons
$ 4
.
4 5
Id
5 7
,
7 8
DeliveryDate
 +
=
, -
detailLivraisons
. >
.
> ?
DeliveryDate
? K
,
K L
	StartDate
 (
=
) *
detailLivraisons
+ ;
.
; <
	StartDate
< E
,
E F
detailLivraisons
 /
.
/ 0
PlannedDate
0 ;
}
 
)
 
.
 
Distinct
 &
(
& '
)
' (
.
( )
ToList
) /
(
/ 0
)
0 1
;
1 2
return
 
Ok
 
(
 
resulat
 
)
 
;
 
}
 	
[
 	
HttpGet
	 
(
 
$str
 ,
)
, -
]
- .
public
 
IActionResult
 
GetDetailsByUser
 -
(
- .
string
. 4
idUser
5 ;
)
; <
{
 	
var
 
resulat
 
=
 
(
 
from
 
detailLivraisons
  0
in
1 3
_context
4 <
.
< =
DetailLivraisons
= M
join
 
project
  '
in
( *
_context
+ 3
.
3 4
Projets
4 ;
on
< >
detailLivraisons
? O
.
O P
ProjetId
P X
equals
Y _
project
` g
.
g h
Id
h j
join
 
ProjetEquipes
  -
in
. 0
_context
1 9
.
9 :
ProjetEquipes
: G
on
H J
project
K R
.
R S
Id
S U
equals
V \
ProjetEquipes
] j
.
j k
ProjetId
k s
join
 

userEquipe
  *
in
+ -
_context
. 6
.
6 7

EquipeUser
7 A
on
B D
ProjetEquipes
E R
.
R S
EquipeId
S [
equals
\ b

userEquipe
c m
.
m n
EquipeId
n v
where
  

userEquipe
! +
.
+ ,
UserId
, 2
==
3 5
idUser
6 <
select
 !
new
" %
{
 
Id
 !
=
" #
detailLivraisons
$ 4
.
4 5
Id
5 7
,
7 8
ProjetLivraisonId
 0
=
1 2
detailLivraisons
3 C
.
C D
ProjetLivraisonId
D U
,
U V"
NommenclatureProject
 3
=
4 5
project
6 =
.
= >
Nommenclature
> K
+
L M
$str
M Q
+
Q R
detailLivraisons
R b
.
b c
Delivery
c k
,
k l
projectEquipe
 ,
=
- .
project
/ 6
.
6 7
projetsEquipe
7 D
}
 
)
 
.
 
Distinct
 &
(
& '
)
' (
.
( )
ToList
) /
(
/ 0
)
0 1
;
1 2
return
¡¡ 
Ok
¡¡ 
(
¡¡ 
resulat
¡¡ 
)
¡¡ 
;
¡¡ 
}
¤¤ 	
[
©© 	
HttpGet
©©	 
(
©© 
$str
©© 0
)
©©0 1
]
©©1 2
public
ªª 
IActionResult
ªª  
GetDetailsByEquipe
ªª /
(
ªª/ 0
string
ªª0 6
idEquipe
ªª7 ?
)
ªª? @
{
«« 	
var
­­ 
resulat
­­ 
=
­­ 
(
­­ 
from
­­ 
detailLivraisons
­­! 1
in
­­2 4
_context
­­5 =
.
­­= >
DetailLivraisons
­­> N
join
®® 
project
®®  '
in
®®( *
_context
®®+ 3
.
®®3 4
Projets
®®4 ;
on
®®< >
detailLivraisons
®®? O
.
®®O P
ProjetId
®®P X
equals
®®Y _
project
®®` g
.
®®g h
Id
®®h j
join
¯¯ 
ProjetEquipes
¯¯  -
in
¯¯. 0
_context
¯¯1 9
.
¯¯9 :
ProjetEquipes
¯¯: G
on
¯¯H J
project
¯¯K R
.
¯¯R S
Id
¯¯S U
equals
¯¯V \
ProjetEquipes
¯¯] j
.
¯¯j k
ProjetId
¯¯k s
where
°°  
ProjetEquipes
°°! .
.
°°. /
EquipeId
°°/ 7
==
°°8 :
idEquipe
°°; C
select
²² !
new
²²" %
{
³³ 
Id
´´ !
=
´´! "
detailLivraisons
´´$ 4
.
´´4 5
Id
´´5 7
,
´´7 8
ProjetLivraisonId
µµ 0
=
µµ1 2
detailLivraisons
µµ4 D
.
µµD E
ProjetLivraisonId
µµE V
,
µµW X"
NommenclatureProject
¶¶ 3
=
¶¶3 4
project
¶¶5 <
.
¶¶< =
Nommenclature
¶¶= J
+
¶¶K L
$str
¶¶M Q
+
¶¶R S
detailLivraisons
¶¶T d
.
¶¶d e
Delivery
¶¶e m
,
¶¶m n
projectEquipe
·· ,
=
··, -
project
··- 4
.
··4 5
projetsEquipe
··5 B
}
ºº 
)
ºº 
.
ºº 
ToList
ºº $
(
ºº$ %
)
ºº% &
;
ºº& '
return
»» 
Ok
»» 
(
»» 
resulat
»» 
)
»» 
;
»» 
}
¾¾ 	
[
ÀÀ 	
HttpGet
ÀÀ	 
(
ÀÀ 
$str
ÀÀ 2
)
ÀÀ2 3
]
ÀÀ3 4
public
ÁÁ 
IActionResult
ÁÁ !
GetDetailsByManager
ÁÁ 0
(
ÁÁ0 1
string
ÁÁ1 7
	idManager
ÁÁ8 A
)
ÁÁA B
{
ÂÂ 	
var
ÅÅ 
resulat
ÅÅ 
=
ÅÅ 
(
ÅÅ 
from
ÅÅ 
detailLivraisons
ÅÅ  0
in
ÅÅ1 3
_context
ÅÅ4 <
.
ÅÅ< =
DetailLivraisons
ÅÅ= M
join
ÆÆ 
project
ÆÆ  '
in
ÆÆ( *
_context
ÆÆ+ 3
.
ÆÆ3 4
Projets
ÆÆ4 ;
on
ÆÆ< >
detailLivraisons
ÆÆ? O
.
ÆÆO P
ProjetId
ÆÆP X
equals
ÆÆY _
project
ÆÆ` g
.
ÆÆg h
Id
ÆÆh j
join
ÇÇ 
ProjetEquipes
ÇÇ  -
in
ÇÇ. 0
_context
ÇÇ1 9
.
ÇÇ9 :
ProjetEquipes
ÇÇ: G
on
ÇÇH J
project
ÇÇK R
.
ÇÇR S
Id
ÇÇS U
equals
ÇÇV \
ProjetEquipes
ÇÇ] j
.
ÇÇj k
ProjetId
ÇÇk s
join
ÈÈ 
equipe
ÈÈ  &
in
ÈÈ' )
_context
ÈÈ* 2
.
ÈÈ2 3
Equips
ÈÈ3 9
on
ÈÈ: <
ProjetEquipes
ÈÈ= J
.
ÈÈJ K
EquipeId
ÈÈK S
equals
ÈÈT Z
equipe
ÈÈ[ a
.
ÈÈa b
Id
ÈÈb d
join
ÉÉ 

userEquipe
ÉÉ  *
in
ÉÉ+ -
_context
ÉÉ. 6
.
ÉÉ6 7

EquipeUser
ÉÉ7 A
on
ÉÉB D
ProjetEquipes
ÉÉE R
.
ÉÉR S
EquipeId
ÉÉS [
equals
ÉÉ\ b

userEquipe
ÉÉc m
.
ÉÉm n
EquipeId
ÉÉn v
where
ÊÊ  
(
ÊÊ! "

userEquipe
ÊÊ" ,
.
ÊÊ, -
UserId
ÊÊ- 3
==
ÊÊ4 6
	idManager
ÊÊ7 @
||
ÊÊA C
equipe
ÊÊD J
.
ÊÊJ K
	ManagerId
ÊÊK T
==
ÊÊU W
	idManager
ÊÊX a
)
ÊÊa b
select
ÌÌ !
new
ÌÌ" %
{
ÍÍ 
Id
ÎÎ !
=
ÎÎ" #
detailLivraisons
ÎÎ$ 4
.
ÎÎ4 5
Id
ÎÎ5 7
,
ÎÎ7 8
ProjetLivraisonId
ÏÏ 0
=
ÏÏ1 2
detailLivraisons
ÏÏ3 C
.
ÏÏC D
ProjetLivraisonId
ÏÏD U
,
ÏÏU V"
NommenclatureProject
ÐÐ 3
=
ÐÐ4 5
project
ÐÐ6 =
.
ÐÐ= >
Nommenclature
ÐÐ> K
+
ÐÐL M
$str
ÐÐN R
+
ÐÐS T
detailLivraisons
ÐÐU e
.
ÐÐe f
Delivery
ÐÐf n
,
ÐÐn o
projectEquipe
ÑÑ ,
=
ÑÑ- .
project
ÑÑ/ 6
.
ÑÑ6 7
projetsEquipe
ÑÑ7 D
}
ÔÔ 
)
ÔÔ 
.
ÔÔ 
Distinct
ÔÔ &
(
ÔÔ& '
)
ÔÔ' (
.
ÔÔ( )
ToList
ÔÔ) /
(
ÔÔ/ 0
)
ÔÔ0 1
;
ÔÔ1 2
return
ÕÕ 
Ok
ÕÕ 
(
ÕÕ 
resulat
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ØØ 	
[
ÝÝ 	
HttpGet
ÝÝ	 
(
ÝÝ 
$str
ÝÝ >
)
ÝÝ> ?
]
ÝÝ? @
public
ÞÞ 
IActionResult
ÞÞ -
GetDetailsByManager2WeeksBefore
ÞÞ <
(
ÞÞ< =
string
ÞÞ= C
	idManager
ÞÞD M
)
ÞÞM N
{
ßß 	
var
àà 
date
àà 
=
àà 
DateTime
àà 
.
àà  
Now
àà  #
.
àà# $
AddDays
àà$ +
(
àà+ ,
-
àà, -
$num
àà- /
)
àà/ 0
;
àà0 1
var
ââ 
resulat
ââ 
=
ââ 
(
ââ 
from
ââ 
detailLivraisons
ââ  0
in
ââ1 3
_context
ââ4 <
.
ââ< =
DetailLivraisons
ââ= M
join
ãã 
project
ãã  '
in
ãã( *
_context
ãã+ 3
.
ãã3 4
Projets
ãã4 ;
on
ãã< >
detailLivraisons
ãã? O
.
ããO P
ProjetId
ããP X
equals
ããY _
project
ãã` g
.
ããg h
Id
ããh j
join
ää 
ProjetEquipes
ää  -
in
ää. 0
_context
ää1 9
.
ää9 :
ProjetEquipes
ää: G
on
ääH J
project
ääK R
.
ääR S
Id
ääS U
equals
ääV \
ProjetEquipes
ää] j
.
ääj k
ProjetId
ääk s
join
åå 
equipe
åå  &
in
åå' )
_context
åå* 2
.
åå2 3
Equips
åå3 9
on
åå: <
ProjetEquipes
åå= J
.
ååJ K
EquipeId
ååK S
equals
ååT Z
equipe
åå[ a
.
ååa b
Id
ååb d
join
ææ 

userEquipe
ææ  *
in
ææ+ -
_context
ææ. 6
.
ææ6 7

EquipeUser
ææ7 A
on
ææB D
ProjetEquipes
ææE R
.
ææR S
EquipeId
ææS [
equals
ææ\ b

userEquipe
ææc m
.
ææm n
EquipeId
ææn v
where
çç  
(
çç! "

userEquipe
çç" ,
.
çç, -
UserId
çç- 3
==
çç4 6
	idManager
çç7 @
||
ççA C
equipe
ççD J
.
ççJ K
	ManagerId
ççK T
==
ççU W
	idManager
ççX a
)
çça b
&&
ççc e
detailLivraisons
ççf v
.
ççv w
DeliveryDateççw 
>=çç 
dateçç 
.çç 
Dateçç 
select
êê !
new
êê" %
{
ëë 
Id
ìì !
=
ìì" #
detailLivraisons
ìì$ 4
.
ìì4 5
Id
ìì5 7
,
ìì7 8
ProjetLivraisonId
íí 0
=
íí1 2
detailLivraisons
íí3 C
.
ííC D
ProjetLivraisonId
ííD U
,
ííU V"
NommenclatureProject
îî 3
=
îî4 5
project
îî6 =
.
îî= >
Nommenclature
îî> K
+
îîL M
$str
îîN R
+
îîS T
detailLivraisons
îîU e
.
îîe f
Delivery
îîf n
,
îîn o
projectEquipe
ïï ,
=
ïï- .
project
ïï/ 6
.
ïï6 7
projetsEquipe
ïï7 D
}
òò 
)
òò 
.
òò 
Distinct
òò &
(
òò& '
)
òò' (
.
òò( )
ToList
òò) /
(
òò/ 0
)
òò0 1
;
òò1 2
return
óó 
Ok
óó 
(
óó 
resulat
óó 
)
óó 
;
óó 
}
öö 	
[
üü 	
HttpGet
üü	 
(
üü 
$str
üü 
)
üü 
]
üü 
public
ýý 
async
ýý 
Task
ýý 
<
ýý 
ActionResult
ýý &
<
ýý& '
DetailLivraison
ýý' 6
>
ýý6 7
>
ýý7 8 
GetDetailLivraison
ýý9 K
(
ýýK L
string
ýýL R
id
ýýS U
)
ýýU V
{
þþ 	
var
ÿÿ 
detailLivraison
ÿÿ 
=
ÿÿ  !
await
ÿÿ" '
_context
ÿÿ( 0
.
ÿÿ0 1
DetailLivraisons
ÿÿ1 A
.
ÿÿA B
	FindAsync
ÿÿB K
(
ÿÿK L
id
ÿÿL N
)
ÿÿN O
;
ÿÿO P
if
 
(
 
detailLivraison
 
==
  "
null
# '
)
' (
{
 
return
 
NotFound
 
(
  
)
  !
;
! "
}
 
return
 
detailLivraison
 "
;
" #
}
 	
[
 	
HttpPost
	 
(
 
$str
 
)
  
]
  !
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' ( 
PutDetailLivraison
) ;
(
; <
string
< B
id
C E
,
E F
DetailLivraison
G V
detailLivraison
W f
)
f g
{
 	
if
 
(
 
id
 
!=
 
detailLivraison
 %
.
% &
Id
& (
)
( )
{
 
return
 

BadRequest
 !
(
! "
)
" #
;
# $
}
 
_context
 
.
 
Entry
 
(
 
detailLivraison
 *
)
* +
.
+ ,
State
, 1
=
2 3
EntityState
4 ?
.
? @
Modified
@ H
;
H I
try
 
{
 
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
}
 
catch
 
(
 *
DbUpdateConcurrencyException
 /
)
/ 0
{
 
if
 
(
 
!
 #
DetailLivraisonExists
 *
(
* +
id
+ -
)
- .
)
. /
{
 
return
 
NotFound
 #
(
# $
)
$ %
;
% &
}
 
else
   
{
¡¡ 
throw
¢¢ 
;
¢¢ 
}
££ 
}
¤¤ 
return
¦¦ 
	NoContent
¦¦ 
(
¦¦ 
)
¦¦ 
;
¦¦ 
}
§§ 	
[
¬¬ 	
HttpPost
¬¬	 
]
¬¬ 
public
­­ 
async
­­ 
Task
­­ 
<
­­ 
ActionResult
­­ &
<
­­& '
DetailLivraison
­­' 6
>
­­6 7
>
­­7 8!
PostDetailLivraison
­­9 L
(
­­L M
DetailLivraison
­­M \
detailLivraison
­­] l
)
­­l m
{
®® 	
_context
¯¯ 
.
¯¯ 
DetailLivraisons
¯¯ %
.
¯¯% &
Add
¯¯& )
(
¯¯) *
detailLivraison
¯¯* 9
)
¯¯9 :
;
¯¯: ;
await
°° 
_context
°° 
.
°° 
SaveChangesAsync
°° +
(
°°+ ,
)
°°, -
;
°°- .
return
²² 
CreatedAtAction
²² "
(
²²" #
$str
²²# 7
,
²²7 8
new
²²9 <
{
²²= >
id
²²? A
=
²²B C
detailLivraison
²²D S
.
²²S T
Id
²²T V
}
²²W X
,
²²X Y
detailLivraison
²²Z i
)
²²i j
;
²²j k
}
³³ 	
[
¶¶ 
HttpPost
¶¶ 
(
¶¶ 
$str
¶¶ 
)
¶¶ 
]
¶¶  
public
·· 
async
·· 
Task
·· 
<
·· 
ActionResult
·· &
<
··& '
DetailLivraison
··' 6
>
··6 7
>
··7 8#
DeleteDetailLivraison
··9 N
(
··N O
string
··O U
id
··V X
)
··X Y
{
¸¸ 	
var
¹¹ 
detailLivraison
¹¹ 
=
¹¹  !
await
¹¹" '
_context
¹¹( 0
.
¹¹0 1
DetailLivraisons
¹¹1 A
.
¹¹A B
	FindAsync
¹¹B K
(
¹¹K L
id
¹¹L N
)
¹¹N O
;
¹¹O P
if
ºº 
(
ºº 
detailLivraison
ºº 
==
ºº  "
null
ºº# '
)
ºº' (
{
»» 
return
¼¼ 
NotFound
¼¼ 
(
¼¼  
)
¼¼  !
;
¼¼! "
}
½½ 
_context
¿¿ 
.
¿¿ 
DetailLivraisons
¿¿ %
.
¿¿% &
Remove
¿¿& ,
(
¿¿, -
detailLivraison
¿¿- <
)
¿¿< =
;
¿¿= >
await
ÀÀ 
_context
ÀÀ 
.
ÀÀ 
SaveChangesAsync
ÀÀ +
(
ÀÀ+ ,
)
ÀÀ, -
;
ÀÀ- .
return
ÂÂ 
detailLivraison
ÂÂ "
;
ÂÂ" #
}
ÃÃ 	
[
ÄÄ 	
	NonAction
ÄÄ	 
]
ÄÄ 
private
ÅÅ 
bool
ÅÅ #
DetailLivraisonExists
ÅÅ *
(
ÅÅ* +
string
ÅÅ+ 1
id
ÅÅ2 4
)
ÅÅ4 5
{
ÆÆ 	
return
ÇÇ 
_context
ÇÇ 
.
ÇÇ 
DetailLivraisons
ÇÇ ,
.
ÇÇ, -
Any
ÇÇ- 0
(
ÇÇ0 1
e
ÇÇ1 2
=>
ÇÇ3 5
e
ÇÇ6 7
.
ÇÇ7 8
Id
ÇÇ8 :
==
ÇÇ; =
id
ÇÇ> @
)
ÇÇ@ A
;
ÇÇA B
}
ÈÈ 	
}
ÉÉ 
}ÊÊ a
QC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\EquipeController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class 
EquipeController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public 
EquipeController 
(  
PilotageDBContext  1
context2 9
)9 :
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
( 
$str +
)+ ,
], -
public 
IActionResult 
getEquipeByUser ,
(, -
string- 3
userId4 :
): ;
{ 	
var 
result 
= 
( 
from 
equips %
in& (
_context) 1
.1 2
Equips2 8
join 

userEquipe )
in* ,
_context- 5
.5 6

EquipeUser6 @
onA C
equipsD J
.J K
IdK M
equalsN T

userEquipeU _
._ `
EquipeId` h
where!! 

userEquipe!!  *
.!!* +
UserId!!+ 1
==!!1 3
userId!!4 :
select""  
new""! $
{## 
Nom$$ !
=$$" #
equips$$$ *
.$$* +
Nom$$+ .
,$$. /
Id%%  
=%%! "
equips%%# )
.%%) *
Id%%* ,
,%%, -
}'' 
)'' 
.'' 
ToList'' #
(''# $
)''$ %
;''% &
return)) 
Ok)) 
()) 
result)) 
))) 
;)) 
}++ 	
[,, 	
HttpGet,,	 
],, 
public-- 
IActionResult-- 
GetAll-- #
(--# $
)--$ %
{.. 	
var// 
result// 
=// 
(// 
from// 
equips// %
in//& (
_context//) 1
.//1 2
Equips//2 8
join11 
user11 #
in11$ &
_context11' /
.11/ 0
Users110 5
on116 8
equips119 ?
.11? @
	ManagerId11@ I
equals11J P
user11Q U
.11U V
IdUser11V \
select33  
new33! $
{44 
Nom55 !
=55" #
equips55$ *
.55* +
Nom55+ .
,55. /
Id66  
=66! "
equips66# )
.66) *
Id66* ,
,66, -
	ManagerId77 '
=77( )
equips77* 0
.770 1
	ManagerId771 :
,77: ;
ManagerName88 )
=88* +
user88, 0
.880 1
FullName881 9
,889 :
nbEquipe99 &
=99' (
equips99) /
.99/ 0
equipeUsers990 ;
.99; <
Count99< A
,99A B
nbProjet:: &
=::& '
equips::' -
.::- .
projetsEquipe::. ;
.::; <
Count::< A
};; 
);; 
.;; 
ToList;; #
(;;# $
);;$ %
;;;% &
return== 
Ok== 
(== 
result== 
)== 
;== 
}?? 	
[GG 	
HttpGetGG	 
(GG 
$strGG (
)GG( )
]GG) *
publicHH 
ActionResultHH 
<HH 
ListHH  
<HH  !
EquipeHH! '
>HH' (
>HH( )
GetByManagerHH* 6
(HH6 7
stringHH7 =
	idManagerHH> G
)HHG H
{II 	
varKK 
resultKK 
=KK 
(KK 
fromKK 
equipsKK %
inKK& (
_contextKK) 1
.KK1 2
EquipsKK2 8
joinLL 
userLL #
inLL$ &
_contextLL' /
.LL/ 0
UsersLL0 5
onLL6 8
equipsLL9 ?
.LL? @
	ManagerIdLL@ I
equalsLLJ P
userLLQ U
.LLU V
IdUserLLV \
whereMM 
equipsMM  &
.MM& '
	ManagerIdMM' 0
==MM1 3
	idManagerMM4 =
selectNN  
newNN! $
{OO 
NomPP !
=PP" #
equipsPP$ *
.PP* +
NomPP+ .
,PP. /
IdQQ  
=QQ! "
equipsQQ# )
.QQ) *
IdQQ* ,
,QQ, -
	ManagerIdRR '
=RR( )
equipsRR* 0
.RR0 1
	ManagerIdRR1 :
,RR: ;
ManagerNameSS )
=SS* +
userSS, 0
.SS0 1
FullNameSS1 9
,SS9 :
nbEquipeTT &
=TT' (
equipsTT) /
.TT/ 0
equipeUsersTT0 ;
.TT; <
CountTT< A
,TTA B
nbProjetUU &
=UU' (
equipsUU) /
.UU/ 0
projetsEquipeUU0 =
.UU= >
CountUU> C
}VV 
)VV 
.VV 
ToListVV #
(VV# $
)VV$ %
;VV% &
returnXX 
OkXX 
(XX 
resultXX 
)XX 
;XX 
}ZZ 	
[\\ 	
HttpGet\\	 
(\\ 
$str\\ 
)\\ 
]\\ 
public]] 
IActionResult]] 
GetById]] $
(]]$ %
string]]% +
id]], .
)]]. /
{^^ 	
var__ 
result__ 
=__ 
_context__  
.__  !
Equips__! '
.__' (
Where__( -
(__- .
x__. /
=>__0 2
x__3 4
.__4 5
Id__5 7
==__8 :
id__; =
)__= >
.__> ?
Include__? F
(__F G
x__G H
=>__I K
x__L M
.__M N
equipeUsers__N Y
)__Y Z
.__Z [
Select__[ a
(__a b
x__b c
=>__d f
new__g j
{`` 
xaa 
.aa 
Idaa 
,aa 
xbb 
.bb 
Nombb 
,bb 
managerNamecc 
=cc 
xcc  
.cc  !
Managercc! (
.cc( )
FullNamecc) 1
,cc1 2
	managerIddd 
=dd 
xdd 
.dd 
	ManagerIddd '
,dd' (
xee 
.ee 
equipeUsersee 
,ee 
xff 
.ff 
DateCreationff 
,ff 
xgg 
.gg 
Createurgg 
}jj 
)jj 
.jj 
FirstOrDefaultjj 
(jj 
)jj 
;jj  
returnmm 
Okmm 
(mm 
resultmm 
)mm 
;mm 
}oo 	
[qq 	
HttpPostqq	 
]qq 
publicrr 
asyncrr 
Taskrr 
<rr 
ActionResultrr &
>rr& '
Postrr( ,
(rr, -
Equiperr- 3
equiperr4 :
)rr: ;
{ss 	
vartt 
equipeUserstt 
=tt 
equipett $
.tt$ %
equipeUserstt% 0
;tt0 1
equipeuu 
.uu 
equipeUsersuu 
=uu  
nulluu! %
;uu% &
equipevv 
.vv 
DateCreationvv 
=vv  !
DateTimevv" *
.vv* +
Nowvv+ .
.vv. /
ToStringvv/ 7
(vv7 8
)vv8 9
;vv9 :
_contextww 
.ww 
Equipsww 
.ww 
Addww 
(ww  
equipeww  &
)ww& '
;ww' (
foreachxx 
(xx 
varxx 
itemxx 
inxx  
equipeUsersxx! ,
)xx, -
{yy 
itemzz 
.zz 
EquipeIdzz 
=zz 
equipezz  &
.zz& '
Idzz' )
;zz) *
}{{ 
_context|| 
.|| 

EquipeUser|| 
.||  
AddRange||  (
(||( )
equipeUsers||) 4
)||4 5
;||5 6
_context}} 
.}} 
SaveChanges}}  
(}}  !
)}}! "
;}}" #
return~~ 
Ok~~ 
(~~ 
)~~ 
;~~ 
} 	
[
 	
HttpPost
	 
(
 
$str
 
)
  
]
  !
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
Equipe
' -
>
- .
>
. /
Delete
0 6
(
6 7
string
7 =
id
> @
)
@ A
{
 	
var
 
equipe
 
=
 
await
 
_context
 '
.
' (
Equips
( .
.
. /
	FindAsync
/ 8
(
8 9
id
9 ;
)
; <
;
< =
if
 
(
 
equipe
 
==
 
null
 
)
 
{
 
return
 
NotFound
 
(
  
)
  !
;
! "
}
 
_context
 
.
 
Equips
 
.
 
Remove
 "
(
" #
equipe
# )
)
) *
;
* +
await
 
_context
 
.
 
SaveChangesAsync
 +
(
+ ,
)
, -
;
- .
return
 
equipe
 
;
 
}
 	
[
 	
HttpPost
	 
(
 
$str
 
)
  
]
  !
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (
Put
) ,
(
, -
string
- 3
id
4 6
,
6 7
Equipe
8 >
equipe
? E
)
E F
{
 	
if
 
(
 
id
 
!=
 
equipe
 
.
 
Id
 
)
  
{
 
return
 

BadRequest
 !
(
! "
)
" #
;
# $
}
 
var
 
equipeUsers
 
=
 
await
 #
_context
$ ,
.
, -

EquipeUser
- 7
.
7 8
Where
8 =
(
= >
x
> ?
=>
@ B
x
C D
.
D E
EquipeId
E M
==
N P
equipe
Q W
.
W X
Id
X Z
)
Z [
.
[ \
ToListAsync
\ g
(
g h
)
h i
;
i j
_context
 
.
 

EquipeUser
 
.
  
RemoveRange
  +
(
+ ,
equipeUsers
, 7
)
7 8
;
8 9
_context
 
.
 

EquipeUser
 
.
  
AddRange
  (
(
( )
equipe
) /
.
/ 0
equipeUsers
0 ;
)
; <
;
< =
_context
 
.
 
Entry
 
(
 
equipe
 !
)
! "
.
" #
State
# (
=
) *
EntityState
+ 6
.
6 7
Modified
7 ?
;
? @
try
¡¡ 
{
¢¢ 
await
££ 
_context
££ 
.
££ 
SaveChangesAsync
££ /
(
££/ 0
)
££0 1
;
££1 2
}
¤¤ 
catch
¥¥ 
(
¥¥ *
DbUpdateConcurrencyException
¥¥ /
)
¥¥/ 0
{
¦¦ 
throw
§§ 
;
§§ 
}
¨¨ 
return
ªª 
	NoContent
ªª 
(
ªª 
)
ªª 
;
ªª 
}
«« 	
}
°° 
}±± ý
VC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\ImputationsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class !
ImputationsController &
:' (
ControllerBase) 7
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
private 
readonly 
IHubContext $
<$ %
NotificationHub% 4
,4 5#
INotificationHubService6 M
>M N
_hubContextO Z
;Z [
string   
monday   
;   
private!! 
readonly!! 
AppSettings!! $
_appSettings!!% 1
;!!1 2
public## !
ImputationsController## $
(##$ %
PilotageDBContext##% 6
context##7 >
,##> ?
IHubContext##@ K
<##K L
NotificationHub##L [
,##[ \#
INotificationHubService##] t
>##t u

hubContext	##v 
,
## 
IOptions
## 
<
## 
AppSettings
## 
>
## 
appSettings
## £
)
##£ ¤
{$$ 	
_appSettings%% 
=%% 
appSettings%% &
?%%& '
.%%' (
Value%%( -
;%%- .
_context'' 
='' 
context'' 
;'' 
_hubContext(( 
=(( 

hubContext(( $
;(($ %
})) 	
[,, 	
HttpGet,,	 
],, 
public-- 
async-- 
Task-- 
<-- 
ActionResult-- &
<--& '
IEnumerable--' 2
<--2 3

Imputation--3 =
>--= >
>--> ?
>--? @
GetImputations--A O
(--O P
)--P Q
{.. 	
return// 
await// 
_context// !
.//! "
Imputations//" -
.//- .
ToListAsync//. 9
(//9 :
)//: ;
;//; <
}00 	
[33 	
HttpGet33	 
(33 
$str33 
)33 
]33 
public44 
async44 
Task44 
<44 
ActionResult44 &
<44& '

Imputation44' 1
>441 2
>442 3
GetImputation444 A
(44A B
string44B H
id44I K
)44K L
{55 	
var66 

imputation66 
=66 
await66 "
_context66# +
.66+ ,
Imputations66, 7
.667 8
	FindAsync668 A
(66A B
id66B D
)66D E
;66E F
if88 
(88 

imputation88 
==88 
null88 "
)88" #
{99 
return:: 
NotFound:: 
(::  
)::  !
;::! "
};; 
return== 

imputation== 
;== 
}>> 	
[@@ 	
HttpGet@@	 
(@@ 
$str@@ (
)@@( )
]@@) *
publicAA 
asyncAA 
TaskAA 
<AA 
ActionResultAA &
<AA& '

ImputationAA' 1
>AA1 2
>AA2 3 
GetImputationByDatesAA4 H
(AAH I
stringAAI O
	startDateAAP Y
,AAY Z
stringAA[ a
endDateAAb i
)AAi j
{BB 	
varDD 

imputationDD 
=DD 
awaitDD "
_contextDD# +
.DD+ ,
ImputationsDD, 7
.DD7 8
FirstOrDefaultAsyncDD8 K
(DDK L
xEE 
=>EE 
xEE 
.EE 
DateFinEE 
.EE 
DateEE #
==EE$ &
ConvertEE' .
.EE. /

ToDateTimeEE/ 9
(EE9 :
endDateEE: A
)EEA B
.EEB C
DateEEC G
&&EEH J
xEEK L
.EEL M
	DateDebutEEM V
.EEV W
DateEEW [
==EE\ ^
ConvertEE_ f
.EEf g

ToDateTimeEEg q
(EEq r
	startDateEEr {
)EE{ |
)EE| }
;EE} ~
ifGG 
(GG 

imputationGG 
==GG 
nullGG "
)GG" #
{HH 
returnII 
newII 

ImputationII %
(II% &
)II& '
;II' (
}JJ 
returnLL 

imputationLL 
;LL 
}MM 	
[QQ 	
HttpGetQQ	 
(QQ 
$strQQ 1
)QQ1 2
]QQ2 3
publicRR 
asyncRR 
TaskRR 
<RR 
ActionResultRR &
<RR& '

ImputationRR' 1
>RR1 2
>RR2 3$
GetImputationUserByDatesRR4 L
(RRL M
stringRRM S
	startDateRRT ]
,RR] ^
stringRR_ e
endDateRRf m
,RRm n
stringRRn t
idUserRRu {
)RR{ |
{SS 	
varUU 

imputationUU 
=UU 
awaitUU "
_contextUU# +
.UU+ ,
ImputationsUU, 7
.UU7 8
FirstOrDefaultAsyncUU8 K
(UUK L
xVV 
=>VV 
xVV 
.VV 
DateFinVV 
.VV 
DateVV #
==VV$ &
ConvertVV' .
.VV. /

ToDateTimeVV/ 9
(VV9 :
endDateVV: A
)VVA B
.VVB C
DateVVC G
&&VVH J
xVVK L
.VVL M
	DateDebutVVM V
.VVV W
DateVVW [
==VV\ ^
ConvertVV_ f
.VVf g

ToDateTimeVVg q
(VVq r
	startDateVVr {
)VV{ |
&&VV} 
x
VV 
.
VV 
UserId
VV 
==
VV 
idUser
VV 
)
VV 
;
VV 
ifXX 
(XX 

imputationXX 
==XX 
nullXX "
)XX" #
{YY 
varZZ 
impZZ 
=ZZ 
newZZ 

ImputationZZ (
(ZZ( )
)ZZ) *
;ZZ* +
imp[[ 
.[[ 
StatusImputation[[ $
=[[% &
$num[[& '
;[[' (
return\\ 
imp\\ 
;\\ 
}]] 
return__ 

imputation__ 
;__ 
}`` 	
[ii 	
HttpGetii	 
(ii 
$strii 
)ii  
]ii  !
publicjj 
asyncjj 
Taskjj 
<jj 
ActionResultjj &
>jj& '
GetDetailImputationjj( ;
(jj; <
stringjj< B
idjjC E
)jjE F
{kk 	
varll 
_resultll 
=ll 
fromll 
detailImputationsll 0
inll1 3
_contextll4 <
.ll< =
DetailImputationsll= N
joinmm 
tachemm $
inmm% '
_contextmm( 0
.mm0 1
Tachesmm1 7
onmm8 :
detailImputationsmm; L
.mmL M
TacheIdmmM T
equalsmmU [
tachemm\ a
.mma b
Idmmb d
joinnn 
detailLivraisonsnn /
innn0 2
_contextnn3 ;
.nn; <
DetailLivraisonsnn< L
onnnM O
tachennP U
.nnU V
detailLivraisonIdnnV g
equalsnnh n
detailLivraisonsnno 
.	nn 
Id
nn 
wherepp 
detailImputationspp  1
.pp1 2
ImputationIdpp2 >
==pp? A
idppB D
selectppE K
newppL O
{qq 
NomProjetLivraisonss 0
=ss1 2
detailLivraisonsss3 C
.ssC D
ProjetLivraisonssD S
.ssS T

ProjetNamessT ^
+ss_ `
$strss` d
+ssd e
detailLivraisonsssf v
.ssv w
ProjetLivraison	ssw 
.
ss 
Delivery
ss 
,
ss 
idProjetLivraisontt /
=tt0 1
detailLivraisonstt2 B
.ttB C
ProjetLivraisonIdttC T
,ttU V
	NomDetailuu '
=uu( )
detailLivraisonsuu* :
.uu: ;
Projetuu; A
.uuA B
NommenclatureuuB O
+uuP Q
$struuR V
+uuW X
detailLivraisonsuuY i
.uui j
Deliveryuuj r
,uur s
idDetailvv &
=vv& '
detailLivraisonsvv( 8
.vv8 9
Idvv9 ;
,vv; <
Nomtacheww &
=ww' (
tacheww) .
.ww. /
Descriptionww/ :
,ww: ;
Idzz  
=zz  !
detailImputationszz" 3
.zz3 4
Idzz4 6
,zz6 7
Monday{{ $
={{% &
detailImputations{{' 8
.{{8 9
Monday{{9 ?
,{{? @
Tuesday|| %
=||& '
detailImputations||( 9
.||9 :
Tuesday||: A
,||A B
	Wednesday}} '
=}}( )
detailImputations}}* ;
.}}; <
	Wednesday}}< E
,}}E F
Thursday~~ &
=~~' (
detailImputations~~) :
.~~: ;
Thursday~~; C
,~~C D
Friday $
=% &
detailImputations' 8
.8 9
Friday9 ?
,? @
}
 
;
 
var
 

listResult
 
=
 
await
 "
_result
# *
.
* +
ToListAsync
+ 6
(
6 7
)
7 8
;
8 9
return
 
Ok
 
(
 

listResult
  
)
  !
;
! "
}
 	
[
 	
HttpGet
	 
(
 
$str
 (
)
( )
]
) *
public
 
async
 
Task
 
<
 
ActionResult
 &
>
& ',
GetDetailImputationForEachUser
( F
(
F G
string
G M
id
N P
,
P Q
string
R X
idUser
Y _
)
_ `
{
 	
var
 
result
 
=
 
await
 
_context
 '
.
' (
DetailImputations
( 9
.
9 :
Include
: A
(
A B
x
B C
=>
D F
x
G H
.
H I
tache
I N
)
N O
.
O P
ThenInclude
P [
(
[ \
x
\ ]
=>
^ `
x
a b
.
b c
detailLivraison
c r
)
r s
.
s t
ThenInclude
t 
( 
x 
=> 
x 
. 
ProjetLivraison 
) 
. 
Where
 
(
 
x
 
=>
 
x
 
.
 
ImputationId
 )
==
* ,
id
- /
&&
0 2
x
3 4
.
4 5

Imputation
5 ?
.
? @
UserId
@ F
==
G I
idUser
J P
)
P Q
.
Q R
Select
R X
(
X Y
x
Y Z
=>
[ ]
new
^ a
{
 
x
 
.
 
Id
 
,
 
x
 
.
 
Monday
 
,
 
x
 
.
 
Tuesday
 
,
 
x
 
.
 
	Wednesday
 
,
 
x
 
.
 
Thursday
 
,
 
x
 
.
 
Friday
 
,
 
x
 
.
 
TacheId
 
,
 
x
 
.
 
IdProjet
 
,
 
x
 
.
 
IdClient
 
,
 
projetLivraisonId
 !
=
" #
x
$ %
.
% &
tache
& +
.
+ ,
detailLivraison
, ;
.
; <
ProjetLivraisonId
< M
,
M N
detailLivraisonId
   !
=
  " #
x
  $ %
.
  % &
tache
  & +
.
  + ,
detailLivraison
  , ;
.
  ; <
Id
  < >
,
  > ?
	tacheName
¡¡ 
=
¡¡ 
x
¡¡ 
.
¡¡ 
tache
¡¡ !
.
¡¡! "
Description
¡¡" -
,
¡¡- .!
detailLivraisonName
¢¢ #
=
¢¢$ %
x
¢¢& '
.
¢¢' (
tache
¢¢( -
.
¢¢- .
detailLivraison
¢¢. =
.
¢¢= >
Projet
¢¢> D
.
¢¢D E
Nommenclature
¢¢E R
+
¢¢S T
$str
¢¢U Y
+
¢¢Z [
x
¢¢\ ]
.
¢¢] ^
tache
¢¢^ c
.
¢¢c d
detailLivraison
¢¢d s
.
¢¢s t
Delivery
¢¢t |
,
¢¢| }!
projetLivraisonName
££ #
=
££$ %
x
££& '
.
££' (
tache
££( -
.
££- .
detailLivraison
££. =
.
££= >
ProjetLivraison
££> M
.
££M N

ProjetName
££N X
+
££Y Z
$str
££[ _
+
££` a
x
££b c
.
££c d
tache
££d i
.
££i j
detailLivraison
££j y
.
££y z
ProjetLivraison££z 
.££ 
Delivery££ 
,££ 
}
ªª 
)
ªª 
.
ªª 
ToListAsync
ªª 
(
ªª 
)
ªª 
;
ªª 
return
¬¬ 
Ok
¬¬ 
(
¬¬ 
result
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 	
[
¯¯ 	
HttpPost
¯¯	 
(
¯¯ 
$str
¯¯ 3
)
¯¯3 4
]
¯¯4 5
public
°° 
async
°° 
Task
°° 
<
°° 
ActionResult
°° &
>
°°& '
ChangeStatus
°°( 4
(
°°4 5
Search
°°5 ;
searsh
°°< B
)
°°B C
{
±± 	
try
²² 
{
³³ 
var
´´ 

imputation
´´ 
=
´´  
await
´´! &
_context
´´' /
.
´´/ 0
Imputations
´´0 ;
.
´´; <
Where
´´< A
(
´´A B
x
´´B C
=>
´´D F
x
´´G H
.
´´H I
UserId
´´I O
==
´´P R
searsh
´´S Y
.
´´Y Z
idUser
´´Z `
&&
´´a c
(
´´d e
searsh
´´e k
.
´´k l
endDate
´´l s
==
´´s u
null
´´u y
||
´´z |
x
´´} ~
.
´´~ 
DateFin´´ 
.´´ 
Date´´ 
<=´´ 
searsh´´ 
.´´ 
endDate´´ 
.´´ 
Value´´ £
.´´£ ¤
Date´´¤ ¨
)´´¨ ©
&&´´ª ¬
(´´­ ®
searsh´´® ´
.´´´ µ
	startDate´´µ ¾
==´´¿ Á
null´´Â Æ
||´´Ç É
x´´Ê Ë
.´´Ë Ì
	DateDebut´´Ì Õ
.´´Õ Ö
Date´´Ö Ú
>=´´Ú Ü
searsh´´Ü â
.´´â ã
	startDate´´ã ì
.´´ì í
Value´´í ò
.´´ò ó
Date´´ó ÷
)´´÷ ø
&&´´ù û
x´´ü ý
.´´ý þ
DateAvalide´´þ 
!=´´ 
null´´ 
)´´ 
.´´ 
Select´´ 
(´´ 
x´´ 
=>´´ 
new´´ ¢
{´´£ ¤
x´´¥ ¦
.´´¦ §
DateAvalide´´§ ²
,´´² ³
x´´´ µ
.´´µ ¶
DateFin´´¶ ½
}´´¾ ¿
)´´¿ À
.´´À Á
ToListAsync´´Á Ì
(´´Ì Í
)´´Í Î
;´´Î Ï
if
¶¶ 
(
¶¶ 

imputation
¶¶ 
.
¶¶ 
Count
¶¶ $
>
¶¶% &
$num
¶¶' (
)
¶¶( )
{
¶¶* +
var
·· 
late
·· 
=
·· 

imputation
·· %
.
··% &
Where
··& +
(
··+ ,
x
··, -
=>
··. 0
(
··1 2
x
··2 3
.
··3 4
DateAvalide
··4 ?
.
··? @
Value
··@ E
-
··F G
x
··H I
.
··I J
DateFin
··J Q
)
··Q R
.
··R S
	TotalDays
··S \
>=
··] _
$num
··` a
)
··a b
.
··b c
Count
··c h
(
··h i
)
··i j
;
··j k
var
¸¸ 
onTime
¸¸ 
=
¸¸ 

imputation
¸¸ '
.
¸¸' (
Where
¸¸( -
(
¸¸- .
x
¸¸. /
=>
¸¸0 2
(
¸¸3 4
x
¸¸4 5
.
¸¸5 6
DateAvalide
¸¸6 A
.
¸¸A B
Value
¸¸B G
-
¸¸H I
x
¸¸J K
.
¸¸K L
DateFin
¸¸L S
)
¸¸S T
.
¸¸T U
	TotalDays
¸¸U ^
<
¸¸_ `
$num
¸¸a b
)
¸¸b c
.
¸¸c d
Count
¸¸d i
(
¸¸i j
)
¸¸j k
;
¸¸k l
return
¹¹ 
Ok
¹¹ 
(
¹¹ 
new
¹¹ 
{
¹¹ 
late
¹¹  $
,
¹¹$ %
onTime
¹¹& ,
}
¹¹- .
)
¹¹. /
;
¹¹/ 0
}
ºº 
else
»» 
return
»» 
Ok
»» 
(
»» 
new
»» "
{
»»# $
late
»»% )
=
»») *
$num
»»* +
,
»»+ ,
onTime
»»- 3
=
»»3 4
$num
»»4 5
}
»»6 7
)
»»7 8
;
»»8 9
}
¼¼ 
catch
½½ 
(
½½ 
	Exception
½½ 
e
½½ 
)
½½ 
{
¾¾ 
return
ÀÀ 

BadRequest
ÀÀ !
(
ÀÀ! "
e
ÀÀ" #
)
ÀÀ# $
;
ÀÀ$ %
}
ÁÁ 
}
ÃÃ 	
[
ÈÈ 	
HttpPost
ÈÈ	 
(
ÈÈ 
$str
ÈÈ :
)
ÈÈ: ;
]
ÈÈ; <
public
ÉÉ 
async
ÉÉ 
Task
ÉÉ 
<
ÉÉ 
ActionResult
ÉÉ &
>
ÉÉ& '
ChangeStatus
ÉÉ( 4
(
ÉÉ4 5
string
ÉÉ5 ;
imputationId
ÉÉ< H
,
ÉÉH I
int
ÉÉJ M
StatusImputation
ÉÉN ^
)
ÉÉ^ _
{
ÊÊ 	
var
ËË 

imputation
ËË 
=
ËË 
_context
ËË %
.
ËË% &
Imputations
ËË& 1
.
ËË1 2
FirstOrDefault
ËË2 @
(
ËË@ A
x
ËËA B
=>
ËËC E
x
ËËF G
.
ËËG H
Id
ËËH J
==
ËËK M
imputationId
ËËN Z
)
ËËZ [
;
ËË[ \
if
ÍÍ 
(
ÍÍ 

imputation
ÍÍ 
==
ÍÍ 
null
ÍÍ "
)
ÍÍ" #
return
ÎÎ 
NotFound
ÎÎ 
(
ÎÎ  
)
ÎÎ  !
;
ÎÎ! "

imputation
ÐÐ 
.
ÐÐ 
StatusImputation
ÐÐ '
=
ÐÐ( )
StatusImputation
ÐÐ* :
;
ÐÐ: ;
await
ÑÑ 
_context
ÑÑ 
.
ÑÑ 
SaveChangesAsync
ÑÑ +
(
ÑÑ+ ,
)
ÑÑ, -
;
ÑÑ- .
return
ÓÓ 
Ok
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
[
ÛÛ 	
HttpPost
ÛÛ	 
(
ÛÛ 
$str
ÛÛ G
)
ÛÛG H
]
ÛÛH I
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
IActionResult
ÜÜ '
>
ÜÜ' ( 
ChangeStatusValide
ÜÜ) ;
(
ÜÜ; <
string
ÜÜ< B
imputationId
ÜÜC O
,
ÜÜO P
int
ÜÜQ T
statusId
ÜÜU ]
)
ÜÜ] ^
{
ÝÝ 	
var
ÞÞ 

imputation
ÞÞ 
=
ÞÞ 
_context
ÞÞ %
.
ÞÞ% &
Imputations
ÞÞ& 1
.
ÞÞ1 2
FirstOrDefault
ÞÞ2 @
(
ÞÞ@ A
x
ÞÞA B
=>
ÞÞC E
x
ÞÞF G
.
ÞÞG H
Id
ÞÞH J
==
ÞÞK M
imputationId
ÞÞN Z
)
ÞÞZ [
;
ÞÞ[ \
if
ßß 
(
ßß 

imputation
ßß 
==
ßß 
null
ßß "
)
ßß" #
return
àà 
NotFound
àà 
(
àà  
)
àà  !
;
àà! "

imputation
ââ 
.
ââ 
StatusImputation
ââ '
=
ââ( )
statusId
ââ* 2
;
ââ2 3
_context
åå 
.
åå 
Entry
åå 
(
åå 

imputation
åå %
)
åå% &
.
åå& '
State
åå' ,
=
åå- .
EntityState
åå/ :
.
åå: ;
Modified
åå; C
;
ååC D
try
çç 
{
èè 
await
éé 
_context
éé 
.
éé 
SaveChangesAsync
éé /
(
éé/ 0
)
éé0 1
;
éé1 2
if
êê 
(
êê 

imputation
êê 
.
êê 
StatusImputation
êê /
==
êê0 2
$num
êê3 4
)
êê4 5
{
êê6 7
var
ëë 
user
ëë 
=
ëë 
_context
ëë $
.
ëë$ %
Users
ëë% *
.
ëë* +
FirstOrDefault
ëë+ 9
(
ëë9 :
x
ëë: ;
=>
ëë< >
x
ëë? @
.
ëë@ A
IdUser
ëëA G
==
ëëH J

imputation
ëëK U
.
ëëU V
UserId
ëëV \
)
ëë\ ]
;
ëë] ^
var
íí 
message
íí 
=
íí 
$str
íí >
+
íí? @
user
ííA E
.
ííE F
Nom
ííF I
+
ííJ K
$str
ííL O
+
ííP Q
user
ííR V
.
ííV W
Prenom
ííW ]
+
íí^ _
$str
íí` l
+
íím n
$stríío Ë
+ííÌ Í

imputationííÎ Ø
.ííØ Ù
	DateDebutííÙ â
+ííã ä
$strííä ê
+ííê ë

imputationííì ö
.ííö ÷
DateFiníí÷ þ
+ííÿ 
$stríí 
;íí 
var
îî 
subject
îî 
=
îî 
$str
îî +
+
îî, -

imputation
îî- 7
.
îî7 8
	DateDebut
îî8 A
+
îîB C
$str
îîD J
+
îîK L

imputation
îîM W
.
îîW X
DateFin
îîX _
;
îî` a
	SendEmail
ïï 
(
ïï 
user
ïï 
.
ïï 
AdresseEmail
ïï +
,
ïï+ ,
message
ïï- 4
,
ïï4 5
subject
ïï6 =
)
ïï= >
;
ïï> ?
}
ðð 
return
òò 
Ok
òò 
(
òò 
)
òò 
;
òò 
}
õõ 
catch
öö 
(
öö 
	Exception
öö 
e
öö 
)
öö 
{
÷÷ 
return
øø 

BadRequest
øø !
(
øø! "
e
øø" #
)
øø# $
;
øø$ %
}
úú 
}
ýý 	
[
þþ 	
	NonAction
þþ	 
]
þþ 
private
ÿÿ 
void
ÿÿ 
	SendEmail
ÿÿ 
(
ÿÿ 
string
ÿÿ %
email
ÿÿ& +
,
ÿÿ+ ,
string
ÿÿ- 3
messageBody
ÿÿ4 ?
,
ÿÿ? @
string
ÿÿA G
subject
ÿÿH O
)
ÿÿO P
{
 	

SmtpClient
 
client
 
=
 
new
  #

SmtpClient
$ .
(
. /
_appSettings
/ ;
.
; <
Host
< @
,
@ A
_appSettings
B N
.
N O
	EmailPort
O X
)
X Y
;
Y Z
client
 
.
 
	EnableSsl
 
=
 
_appSettings
 +
.
+ ,
	EnableSsl
, 5
;
5 6
client
 
.
 
DeliveryMethod
 !
=
" # 
SmtpDeliveryMethod
$ 6
.
6 7
Network
7 >
;
> ?
client
 
.
 #
UseDefaultCredentials
 (
=
) *
false
+ 0
;
0 1
client
 
.
 
Credentials
 
=
  
new
! $
NetworkCredential
% 6
(
6 7
_appSettings
7 C
.
C D
EmailSender
D O
,
O P
_appSettings
Q ]
.
] ^
Password
^ f
)
f g
;
g h
MailMessage
 
mailMessage
 #
=
$ %
new
& )
MailMessage
* 5
(
5 6
)
6 7
;
7 8
mailMessage
 
.
 
To
 
.
 
Add
 
(
 
email
 $
)
$ %
;
% &
mailMessage
 
.
 
From
 
=
 
new
 "
MailAddress
# .
(
. /
_appSettings
/ ;
.
; <
EmailSender
< G
)
G H
;
H I
mailMessage
 
.
 
Subject
 
=
  !
subject
" )
;
) *
mailMessage
 
.
 

IsBodyHtml
 "
=
# $
true
% )
;
) *
mailMessage
 
.
 
Body
 
=
 
messageBody
 *
;
* +
client
 
.
 
Send
 
(
 
mailMessage
 #
)
# $
;
$ %
}
 	
[
 	
	NonAction
	 
]
 
public
 
Task
 
	SendAsync
 
(
 
string
 $
email
% *
,
* +
string
, 2
messageBody
3 >
,
> ?
string
@ F
subject
G N
)
N O
{
 	
var
 
_sender
 
=
 
_appSettings
 &
.
& '
EmailSender
' 2
;
2 3
var
 
_user
 
=
 
_appSettings
 $
.
$ %
	EmailUser
% .
;
. /
var
 
	_password
 
=
 
_appSettings
 (
.
( )
Password
) 1
;
1 2
var
 
_smtpClient
 
=
 
_appSettings
 *
.
* +
Host
+ /
;
/ 0
int
 
_port
 
=
 
_appSettings
 $
.
$ %
	EmailPort
% .
;
. /
MailMessage
 
mail
 
=
 
new
 "
MailMessage
# .
(
. /
)
/ 0
;
0 1

SmtpClient
 

SmtpServer
 !
=
" #
new
$ '

SmtpClient
( 2
(
2 3
_smtpClient
3 >
)
> ?
;
? @
mail
 
.
 
From
 
=
 
new
 
MailAddress
 '
(
' (
_sender
( /
)
/ 0
;
0 1
mail
 
.
 
To
 
.
 
Add
 
(
 
email
 
)
 
;
 
mail
   
.
   
Subject
   
=
   
subject
   "
;
  " #
mail
¡¡ 
.
¡¡ 
Body
¡¡ 
=
¡¡ 
messageBody
¡¡ #
;
¡¡# $

SmtpServer
££ 
.
££ 
Port
££ 
=
££ 
_port
££ #
;
££# $

SmtpServer
¤¤ 
.
¤¤ 
Credentials
¤¤ "
=
¤¤# $
new
¤¤% (
System
¤¤) /
.
¤¤/ 0
Net
¤¤0 3
.
¤¤3 4
NetworkCredential
¤¤4 E
(
¤¤E F
_user
¤¤F K
,
¤¤K L
	_password
¤¤M V
)
¤¤V W
;
¤¤W X

SmtpServer
¥¥ 
.
¥¥ 
	EnableSsl
¥¥  
=
¥¥! "
true
¥¥# '
;
¥¥' (
try
¦¦ 
{
§§ 

SmtpServer
¨¨ 
.
¨¨ 
Send
¨¨ 
(
¨¨  
mail
¨¨  $
)
¨¨$ %
;
¨¨% &
}
©© 
catch
ªª 
{
ªª 
}
ªª 
return
«« 
Task
«« 
.
«« 

FromResult
«« "
(
««" #
$num
««# $
)
««$ %
;
««% &
}
¬¬ 	
[
²² 	
HttpPost
²²	 
(
²² 
$str
²² 
)
²² 
]
²² 
public
³³ 
async
³³ 
Task
³³ 
<
³³ 
ActionResult
³³ &
<
³³& '
DetailImputation
³³' 7
>
³³7 8
>
³³8 9"
PostDetailImputation
³³: N
(
³³N O
List
³³O S
<
³³S T
DetailImputation
³³T d
>
³³d e
detailImputation
³³f v
,
³³v w
bool
³³x |
extra³³} 
,³³ 
string³³ 
id³³ 
)³³ 
{
´´ 	
_context
µµ 
.
µµ 
DetailImputations
µµ )
.
µµ) *
AddRange
µµ* 2
(
µµ2 3
detailImputation
µµ3 C
)
µµC D
;
µµD E
try
ÁÁ 
{
ÂÂ 
await
ÃÃ 
_context
ÃÃ 
.
ÃÃ 
SaveChangesAsync
ÃÃ /
(
ÃÃ/ 0
)
ÃÃ0 1
;
ÃÃ1 2
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
)
ÆÆ 
{
ÇÇ 
return
ÈÈ 

BadRequest
ÈÈ !
(
ÈÈ! "
)
ÈÈ" #
;
ÈÈ# $
}
ÉÉ 
if
ÌÌ 
(
ÌÌ 
extra
ÌÌ 
==
ÌÌ 
true
ÌÌ 
)
ÌÌ 
{
ÍÍ 
var
ÎÎ 
user
ÎÎ 
=
ÎÎ 
await
ÎÎ  
_context
ÎÎ! )
.
ÎÎ) *
Users
ÎÎ* /
.
ÎÎ/ 0"
SingleOrDefaultAsync
ÎÎ0 D
(
ÎÎD E
x
ÎÎE F
=>
ÎÎG I
x
ÎÎJ K
.
ÎÎK L
IdUser
ÎÎL R
==
ÎÎS U
id
ÎÎV X
)
ÎÎX Y
;
ÎÎY Z
await
ÏÏ 
_hubContext
ÏÏ !
.
ÏÏ! "
Clients
ÏÏ" )
.
ÏÏ) *
Group
ÏÏ* /
(
ÏÏ/ 0
RoleType
ÏÏ0 8
.
ÏÏ8 9
Manager
ÏÏ9 @
)
ÏÏ@ A
.
ÏÏA B
GetNotifications
ÏÏB R
(
ÏÏR S
new
ÏÏS V
Models
ÏÏW ]
.
ÏÏ] ^
Notification
ÏÏ^ j
{
ÏÏk l
Title
ÏÏm r
=
ÏÏs t
user
ÏÏu y
.
ÏÏy z
FullNameÏÏz 
,ÏÏ 
ContentÏÏ 
=ÏÏ 
$strÏÏ 
,ÏÏ 

ActionLinkÏÏ ¦
=ÏÏ§ ¨
$strÏÏ© ¶
+ÏÏ· ¸
$strÏÏ¹ Â
}ÏÏÃ Ä
)ÏÏÄ Å
;ÏÏÅ Æ
await
ÐÐ 
_hubContext
ÐÐ !
.
ÐÐ! "
Clients
ÐÐ" )
.
ÐÐ) *
Group
ÐÐ* /
(
ÐÐ/ 0
RoleType
ÐÐ0 8
.
ÐÐ8 9
Admin
ÐÐ9 >
)
ÐÐ> ?
.
ÐÐ? @
GetNotifications
ÐÐ@ P
(
ÐÐP Q
new
ÐÐQ T
Models
ÐÐU [
.
ÐÐ[ \
Notification
ÐÐ\ h
{
ÐÐi j
Title
ÐÐk p
=
ÐÐq r
user
ÐÐs w
.
ÐÐw x
FullNameÐÐx 
,ÐÐ 
ContentÐÐ 
=ÐÐ 
$strÐÐ 
,ÐÐ 

ActionLinkÐÐ ¤
=ÐÐ¥ ¦
$strÐÐ§ ´
+ÐÐµ ¶
$strÐÐ· À
}ÐÐÁ Â
)ÐÐÂ Ã
;ÐÐÃ Ä
}
ÑÑ 
return
ÒÒ 
Ok
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
}
ÓÓ 	
[
×× 	
HttpGet
××	 
(
×× 
$str
×× ?
)
××? @
]
××@ A
public
ØØ 
async
ØØ 
Task
ØØ 
<
ØØ 
IActionResult
ØØ '
>
ØØ' (%
GetImputationForManager
ØØ) @
(
ØØ@ A
string
ØØA G
	startDate
ØØH Q
,
ØØQ R
string
ØØS Y
endDate
ØØZ a
,
ØØa b
string
ØØc i
	managerId
ØØj s
)
ØØs t
{
ÙÙ 	
var
ÜÜ 
result
ÜÜ 
=
ÜÜ 
(
ÜÜ 
from
ÜÜ 
imp
ÜÜ "
in
ÜÜ# %
_context
ÜÜ& .
.
ÜÜ. /
Imputations
ÜÜ/ :
join
ÝÝ 
usersEquipe
ÝÝ *
in
ÝÝ+ -
_context
ÝÝ. 6
.
ÝÝ6 7

EquipeUser
ÝÝ7 A
on
ÝÝB D
imp
ÝÝE H
.
ÝÝH I
UserId
ÝÝI O
equals
ÝÝP V
usersEquipe
ÝÝW b
.
ÝÝb c
UserId
ÝÝc i
where
ÞÞ 
usersEquipe
ÞÞ  +
.
ÞÞ+ ,
User
ÞÞ, 0
.
ÞÞ0 1
FirstImputation
ÞÞ1 @
<=
ÞÞ@ B
Convert
ÞÞC J
.
ÞÞJ K

ToDateTime
ÞÞK U
(
ÞÞU V
endDate
ÞÞV ]
)
ÞÞ] ^
&&
àà 
(
àà 
usersEquipe
àà )
.
àà) *
User
àà* .
.
àà. /
LastImputation
àà/ =
==
àà= ?
null
àà? C
)
ààC D
&&
ààE G
imp
áá 
.
áá 
StatusImputation
áá .
!=
áá/ 1
$num
áá2 3
&&
áá4 6
imp
áá7 :
.
áá: ;
DateFin
áá; B
==
ááC E
Convert
ááF M
.
ááM N

ToDateTime
ááN X
(
ááX Y
endDate
ááY `
)
áá` a
.
ááa b
Date
ááb f
&&
áág i
imp
ááj m
.
áám n
	DateDebut
áán w
.
ááw x
Date
ááx |
==
áá} 
Convertáá 
.áá 

ToDateTimeáá 
(áá 
	startDateáá 
)áá 
&&áá  
usersEquipeáá¡ ¬
.áá¬ ­
Equipeáá­ ³
.áá³ ´
	ManagerIdáá´ ½
==áá¾ À
	managerIdááÁ Ê
select
ââ  
new
ââ! $
{
ãã 
Id
ää  
=
ää! "
imp
ää# &
.
ää& '
Id
ää' )
,
ää) *
imp
åå 
.
åå  
DateAvalide
åå  +
,
åå+ ,
StatusImputation
ææ .
=
ææ/ 0
imp
ææ1 4
.
ææ4 5
StatusImputation
ææ5 E
,
ææE F
User
çç "
=
çç# $
imp
çç% (
.
çç( )
User
çç) -
.
çç- .
Nom
çç. 1
+
çç2 3
$str
çç4 8
+
çç9 :
imp
çç; >
.
çç> ?
User
çç? C
.
ççC D
Prenom
ççD J
,
ççJ K
}
èè 
)
èè 
.
èè 
Distinct
èè %
(
èè% &
)
èè& '
.
èè' (
ToList
èè( .
(
èè. /
)
èè/ 0
;
èè0 1
var
êê 
nbEmployeeTotale
êê  
=
êê! "
(
êê# $
from
êê$ (
user
êê) -
in
êê. 0
_context
êê1 9
.
êê9 :
Users
êê: ?
join
ìì$ (
eq
ìì) +
in
ìì, .
_context
ìì/ 7
.
ìì7 8

EquipeUser
ìì8 B
on
ììC E
user
ììF J
.
ììJ K
IdUser
ììK Q
equals
ììR X
eq
ììY [
.
ìì[ \
UserId
ìì\ b
where
íí$ )
eq
íí* ,
.
íí, -
Equipe
íí- 3
.
íí3 4
	ManagerId
íí4 =
==
íí> @
	managerId
ííA J
&&
îî 
(
îî 
user
îî 
.
îî 
FirstImputation
îî $
==
îî% '
null
îî( ,
||
îî- /
user
îî0 4
.
îî4 5
FirstImputation
îî5 D
<=
îîE G
Convert
îîH O
.
îîO P

ToDateTime
îîP Z
(
îîZ [
endDate
îî[ b
)
îîb c
)
îîc d
&&
ðð 
(
ðð 
user
ðð "
.
ðð" #
LastImputation
ðð# 1
>=
ðð2 4
Convert
ðð5 <
.
ðð< =

ToDateTime
ðð= G
(
ððG H
endDate
ððH O
)
ððO P
||
ððQ S
user
ððT X
.
ððX Y
LastImputation
ððY g
==
ððh j
null
ððk o
)
ððo p
select
ññ$ *
user
ññ+ /
.
ññ/ 0
IdUser
ññ0 6
)
óó$ %
.
óó% &
Distinct
óó& .
(
óó. /
)
óó/ 0
.
óó0 1
Count
óó1 6
(
óó6 7
)
óó7 8
;
óó8 9
var
õõ 
nbEmployeeImpute
õõ  
=
õõ! "
result
õõ# )
.
õõ) *
Count
õõ* /
(
õõ/ 0
)
õõ0 1
;
õõ1 2
var
öö (
nbEmployeeWithNoImputation
öö *
=
öö* +
nbEmployeeTotale
öö, <
-
öö= >
nbEmployeeImpute
öö? O
;
ööO P
return
÷÷ 
Ok
÷÷ 
(
÷÷ 
new
÷÷ 
{
÷÷ 
result
÷÷ "
,
÷÷# $
nbEmployeeTotale
÷÷% 5
,
÷÷6 7(
nbEmployeeWithNoImputation
÷÷8 R
,
÷÷R S
nbEmployeeImpute
÷÷T d
}
÷÷e f
)
÷÷f g
;
÷÷g h
}
øø 	
[
úú 	
HttpGet
úú	 
(
úú 
$str
úú Q
)
úúQ R
]
úúR S
public
ûû 
async
ûû 
Task
ûû 
<
ûû 
IActionResult
ûû '
>
ûû' (-
GetUsersWithNoImputationManager
ûû) H
(
ûûH I
string
ûûI O
	startDate
ûûP Y
,
ûûY Z
string
ûû[ a
endDate
ûûb i
,
ûûi j
string
ûûk q
	managerId
ûûr {
)
ûû{ |
{
üü 	
var
ýý 
result
ýý 
=
ýý 
(
ýý 
from
ýý 
imp
ýý "
in
ýý# %
_context
ýý& .
.
ýý. /
Imputations
ýý/ :
join
þþ 
usersEquipe
þþ *
in
þþ+ -
_context
þþ. 6
.
þþ6 7

EquipeUser
þþ7 A
on
þþB D
imp
þþE H
.
þþH I
UserId
þþI O
equals
þþP V
usersEquipe
þþW b
.
þþb c
UserId
þþc i
where
ÿÿ 
imp
ÿÿ  #
.
ÿÿ# $
StatusImputation
ÿÿ$ 4
!=
ÿÿ5 7
$num
ÿÿ8 9
&&
ÿÿ: <
imp
ÿÿ= @
.
ÿÿ@ A
DateFin
ÿÿA H
.
ÿÿH I
Date
ÿÿI M
==
ÿÿN P
Convert
ÿÿQ X
.
ÿÿX Y

ToDateTime
ÿÿY c
(
ÿÿc d
endDate
ÿÿd k
)
ÿÿk l
.
ÿÿl m
Date
ÿÿm q
&&
ÿÿr t
imp
ÿÿu x
.
ÿÿx y
	DateDebutÿÿy 
.ÿÿ 
Dateÿÿ 
==ÿÿ 
Convertÿÿ 
.ÿÿ 

ToDateTimeÿÿ 
(ÿÿ 
	startDateÿÿ §
)ÿÿ§ ¨
&&ÿÿ© «
usersEquipeÿÿ¬ ·
.ÿÿ· ¸
Equipeÿÿ¸ ¾
.ÿÿ¾ ¿
	ManagerIdÿÿ¿ È
==ÿÿÉ Ë
	managerIdÿÿÌ Õ
select
  
imp
! $
.
$ %
UserId
% +
)
+ ,
.
, -
Distinct
- 5
(
5 6
)
6 7
.
7 8
ToList
8 >
(
> ?
)
? @
;
@ A
var
 
result2
 
=
 
(
 
from
 
u
  !
in
" $
_context
% -
.
- .
Users
. 3
join
 
usersEquipe
 *
in
+ -
_context
. 6
.
6 7

EquipeUser
7 A
on
B D
u
E F
.
F G
IdUser
G M
equals
N T
usersEquipe
U `
.
` a
UserId
a g
where
 
usersEquipe
! ,
.
, -
Equipe
- 3
.
3 4
	ManagerId
4 =
==
> @
	managerId
A J
&&
K M
!
N O
result
O U
.
U V
Contains
V ^
(
^ _
u
_ `
.
` a
IdUser
a g
)
g h
&&
 
(
 
u
 
.
 
FirstImputation
 !
==
" $
null
% )
||
* ,
u
- .
.
. /
FirstImputation
/ >
<=
? A
Convert
B I
.
I J

ToDateTime
J T
(
T U
endDate
U \
)
\ ]
)
] ^
&&
 
(
 
u
 
.
 
LastImputation
 
>=
  "
Convert
# *
.
* +

ToDateTime
+ 5
(
5 6
endDate
6 =
)
= >
||
? A
u
B C
.
C D
LastImputation
D R
==
S U
null
V Z
)
Z [
select
 !
u
" #
.
# $
FullName
$ ,
)
, -
.
- .
Distinct
. 6
(
6 7
)
7 8
.
8 9
ToList
9 ?
(
? @
)
@ A
;
A B
return
 
Ok
 
(
 
result2
 
)
 
;
  
}
 	
[
 	
HttpGet
	 
(
 
$str
 3
)
3 4
]
4 5
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (.
 GetImputationForManagerByManager
) I
(
I J
string
J P
	startDate
Q Z
,
Z [
string
\ b
endDate
c j
)
j k
{
 	
try
 
{
 
var
 
result
 
=
 
await
 
_context
 '
.
' (
Imputations
( 3
.
3 4
Where
4 9
(
9 :
x
: ;
=>
< >
x
? @
.
@ A
StatusImputation
A Q
!=
R T
$num
U V
&&
W Y
x
Z [
.
[ \
DateFin
\ c
.
c d
Date
d h
==
i k
Convert
l s
.
s t

ToDateTime
t ~
(
~ 
endDate 
) 
. 
Date 
&& 
x 
. 
	DateDebut 
. 
Date  
==¡ £
Convert¤ «
.« ¬

ToDateTime¬ ¶
(¶ ·
	startDate· À
)À Á
)Á Â
.Â Ã
IncludeÃ Ê
(Ê Ë
xË Ì
=>Í Ï
xÐ Ñ
.Ñ Ò
UserÒ Ö
)Ö ×
.× Ø
SelectØ Þ
(Þ ß
xß à
=>á ã
newä ç
{
 
Id
 
=
 
x
 
.
 
Id
 
,
 
StatusImputation
  
=
! "
x
# $
.
$ %
StatusImputation
% 5
,
5 6
x
 
.
 
DateAvalide
 
,
 
User
   
=
   
x
   
.
   
User
   
.
   
Nom
   !
+
  " #
$str
  $ (
+
  ) *
x
  + ,
.
  , -
User
  - 1
.
  1 2
Prenom
  2 8
,
  8 9
}
¢¢ 
)
¢¢ 
.
¢¢ 
OrderBy
¢¢ 
(
¢¢ 
e
¢¢ 
=>
¢¢ 
e
¢¢ 
.
¢¢ 
StatusImputation
¢¢ .
)
¢¢. /
.
¢¢/ 0
ToListAsync
¢¢0 ;
(
¢¢; <
)
¢¢< =
;
¢¢= >
var
££ 
nbEmployeeTotale
££  
=
££! "
_context
££# +
.
££+ ,
Users
££, 1
.
££1 2
Where
££2 7
(
££7 8
x
££8 9
=>
££: <
x
¤¤ 
.
¤¤ 
Type
¤¤ 
==
¤¤ 
UserType
¤¤ 
.
¤¤ 
Manager
¤¤ &
||
¥¥ 
x
¥¥ 
.
¥¥ 
Type
¥¥ 
==
¥¥ 
UserType
¥¥ !
.
¥¥! "
User
¥¥" &
&&
¦¦ 
(
¦¦ 
x
¦¦ 
.
¦¦ 
FirstImputation
¦¦ !
==
¦¦! #
null
¦¦# '
||
¦¦' )
x
¦¦* +
.
¦¦+ ,
FirstImputation
¦¦, ;
<=
¦¦< >
Convert
¦¦? F
.
¦¦F G

ToDateTime
¦¦G Q
(
¦¦Q R
endDate
¦¦R Y
)
¦¦Y Z
)
¦¦[ \
&&
§§ 
(
§§ 
x
§§ 
.
§§ 
LastImputation
§§ 
>=
§§  "
Convert
§§# *
.
§§* +

ToDateTime
§§+ 5
(
§§5 6
endDate
§§6 =
)
§§= >
||
§§? A
x
§§B C
.
§§C D
LastImputation
§§D R
==
§§S U
null
§§V Z
)
§§Z [
)
¨¨ 
.
¨¨ 
Count
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
var
©© 
nbEmployeeImpute
©©  
=
©©! "
result
©©# )
.
©©) *
Count
©©* /
(
©©/ 0
)
©©0 1
;
©©1 2
var
ªª (
nbEmployeeWithNoImputation
ªª *
=
ªª+ ,
nbEmployeeTotale
ªª- =
-
ªª> ?
nbEmployeeImpute
ªª@ P
;
ªªP Q
return
«« 
Ok
«« 
(
«« 
new
«« 
{
«« 
result
««  &
,
««& '
nbEmployeeTotale
««( 8
,
««8 9(
nbEmployeeWithNoImputation
««: T
,
««T U
nbEmployeeImpute
««V f
}
««g h
)
««h i
;
««i j
}
¬¬ 
catch
­­ 
(
­­ 
	Exception
­­ 
e
­­ 
)
­­  
{
®® 
Console
¯¯ 
.
¯¯ 
	WriteLine
¯¯ !
(
¯¯! "
$str
¯¯" .
+
¯¯/ 0
e
¯¯1 2
.
¯¯2 3
Message
¯¯3 :
)
¯¯: ;
;
¯¯; <
return
°° 

BadRequest
°° !
(
°°! "
)
°°" #
;
°°# $
}
±± 
}
ºº 	
[
¾¾ 	
HttpGet
¾¾	 
(
¾¾ 
$str
¾¾ =
)
¾¾= >
]
¾¾> ?
public
¿¿ 
async
¿¿ 
Task
¿¿ 
<
¿¿ 
IActionResult
¿¿ '
>
¿¿' ("
UserWithNoImputation
¿¿) =
(
¿¿= >
string
¿¿> D
	startDate
¿¿E N
,
¿¿N O
string
¿¿P V
endDate
¿¿W ^
)
¿¿^ _
{
ÀÀ 	
var
ÁÁ 
result
ÁÁ 
=
ÁÁ 
await
ÁÁ 
_context
ÁÁ '
.
ÁÁ' (
Imputations
ÁÁ( 3
.
ÁÁ3 4
Where
ÁÁ4 9
(
ÁÁ9 :
x
ÁÁ: ;
=>
ÁÁ< >
x
ÁÁ? @
.
ÁÁ@ A
StatusImputation
ÁÁA Q
!=
ÁÁR T
$num
ÁÁU V
&&
ÁÁW Y
x
ÁÁZ [
.
ÁÁ[ \
DateFin
ÁÁ\ c
.
ÁÁc d
Date
ÁÁd h
==
ÁÁi k
Convert
ÁÁl s
.
ÁÁs t

ToDateTime
ÁÁt ~
(
ÁÁ~ 
endDateÁÁ 
)ÁÁ 
.ÁÁ 
DateÁÁ 
&&ÁÁ 
xÁÁ 
.ÁÁ 
	DateDebutÁÁ 
.ÁÁ 
DateÁÁ  
==ÁÁ¡ £
ConvertÁÁ¤ «
.ÁÁ« ¬

ToDateTimeÁÁ¬ ¶
(ÁÁ¶ ·
	startDateÁÁ· À
)ÁÁÀ Á
.ÁÁÁ Â
DateÁÁÂ Æ
)ÁÁÆ Ç
.ÁÁÇ È
IncludeÁÁÈ Ï
(ÁÁÏ Ð
xÁÁÐ Ñ
=>ÁÁÒ Ô
xÁÁÕ Ö
.ÁÁÖ ×
UserÁÁ× Û
)ÁÁÛ Ü
.ÁÁÜ Ý
SelectÁÁÝ ã
(ÁÁã ä
xÁÁä å
=>ÁÁå ç
xÁÁç è
.ÁÁè é
UserIdÁÁé ï
)ÁÁï ð
.ÁÁð ñ
ToListAsyncÁÁñ ü
(ÁÁü ý
)ÁÁý þ
;ÁÁþ ÿ
var
ÃÃ 
result1
ÃÃ 
=
ÃÃ 
await
ÃÃ 
_context
ÃÃ  (
.
ÃÃ( )
Users
ÃÃ) .
.
ÃÃ. /
Where
ÃÃ/ 4
(
ÃÃ4 5
x
ÃÃ5 6
=>
ÃÃ7 9
!
ÃÃ: ;
result
ÃÃ; A
.
ÃÃA B
Contains
ÃÃB J
(
ÃÃJ K
x
ÃÃK L
.
ÃÃL M
IdUser
ÃÃM S
)
ÃÃS T
&&
ÃÃU W
(
ÃÃX Y
x
ÃÃY Z
.
ÃÃZ [
Type
ÃÃ[ _
==
ÃÃ_ a
UserType
ÃÃb j
.
ÃÃj k
User
ÃÃk o
||
ÃÃp r
x
ÃÃs t
.
ÃÃt u
Type
ÃÃu y
==
ÃÃy {
UserTypeÃÃ| 
.ÃÃ 
ManagerÃÃ 
)ÃÃ 
&&
ÅÅ 
(
ÅÅ 
x
ÅÅ 
.
ÅÅ 
FirstImputation
ÅÅ !
==
ÅÅ" $
null
ÅÅ% )
||
ÅÅ* ,
x
ÅÅ- .
.
ÅÅ. /
FirstImputation
ÅÅ/ >
<=
ÅÅ? A
Convert
ÅÅB I
.
ÅÅI J

ToDateTime
ÅÅJ T
(
ÅÅT U
endDate
ÅÅU \
)
ÅÅ\ ]
)
ÅÅ] ^
&&
ÇÇ 
(
ÇÇ 
x
ÇÇ 
.
ÇÇ  
LastImputation
ÇÇ  .
>=
ÇÇ/ 1
Convert
ÇÇ2 9
.
ÇÇ9 :

ToDateTime
ÇÇ: D
(
ÇÇD E
endDate
ÇÇE L
)
ÇÇL M
||
ÇÇN P
x
ÇÇQ R
.
ÇÇR S
LastImputation
ÇÇS a
==
ÇÇb d
null
ÇÇe i
)
ÇÇi j
)
ÈÈ 
.
ÈÈ 
Select
ÈÈ 
(
ÈÈ 
x
ÈÈ 
=>
ÈÈ 
x
ÈÈ 
.
ÈÈ 
FullName
ÈÈ "
)
ÈÈ" #
.
ÈÈ# $
ToListAsync
ÈÈ$ /
(
ÈÈ/ 0
)
ÈÈ0 1
;
ÈÈ1 2
return
ÊÊ 
Ok
ÊÊ 
(
ÊÊ 
result1
ÊÊ 
)
ÊÊ  
;
ÊÊ  !
}
ËË 	
[
ÐÐ 	
HttpGet
ÐÐ	 
(
ÐÐ 
$str
ÐÐ *
)
ÐÐ* +
]
ÐÐ+ ,
public
ÑÑ 
async
ÑÑ 
Task
ÑÑ 
<
ÑÑ 
IActionResult
ÑÑ '
>
ÑÑ' (-
GetImputationForManagerValidate
ÑÑ) H
(
ÑÑH I
int
ÑÑI L
StatusImputation
ÑÑM ]
)
ÑÑ] ^
{
ÒÒ 	
var
ÓÓ 
result
ÓÓ 
=
ÓÓ 
await
ÓÓ 
_context
ÓÓ '
.
ÓÓ' (
Imputations
ÓÓ( 3
.
ÓÓ3 4
Include
ÓÓ4 ;
(
ÓÓ; <
x
ÓÓ< =
=>
ÓÓ> @
x
ÓÓA B
.
ÓÓB C
User
ÓÓC G
)
ÓÓG H
.
ÓÓH I
Where
ÓÓI N
(
ÓÓN O
x
ÓÓO P
=>
ÓÓQ S
x
ÓÓT U
.
ÓÓU V
StatusImputation
ÓÓV f
==
ÓÓg i
StatusImputation
ÓÓj z
)
ÓÓz {
.
ÓÓ{ |
SelectÓÓ| 
(ÓÓ 
xÓÓ 
=>ÓÓ 
newÓÓ 
{
ÔÔ 
Id
ÕÕ 
=
ÕÕ 
x
ÕÕ 
.
ÕÕ 
Id
ÕÕ 
,
ÕÕ 
StatusImputation
ÖÖ  
=
ÖÖ! "
x
ÖÖ# $
.
ÖÖ$ %
StatusImputation
ÖÖ% 5
,
ÖÖ5 6
User
×× 
=
×× 
x
×× 
.
×× 
User
×× 
.
×× 
Nom
×× !
+
××" #
$str
××$ '
+
××( )
x
××* +
.
××+ ,
User
××, 0
.
××0 1
Prenom
××1 7
,
××7 8

Imputation
ØØ 
=
ØØ 
x
ØØ 
.
ØØ 
	DateDebut
ØØ (
+
ØØ) *
$str
ØØ+ 0
+
ØØ1 2
x
ØØ3 4
.
ØØ4 5
DateFin
ØØ5 <
}
ÙÙ 
)
ÙÙ 
.
ÙÙ 
ToListAsync
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
return
ÚÚ 
Ok
ÚÚ 
(
ÚÚ 
result
ÚÚ 
)
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
[
ãã 	
HttpPost
ãã	 
(
ãã 
$str
ãã 
)
ãã  
]
ãã  !
public
ää 
async
ää 
Task
ää 
<
ää 
IActionResult
ää '
>
ää' (
PutImputation
ää) 6
(
ää6 7
string
ää7 =
id
ää> @
,
ää@ A

Imputation
ääB L

imputation
ääM W
)
ääW X
{
åå 	
if
ææ 
(
ææ 
id
ææ 
!=
ææ 

imputation
ææ  
.
ææ  !
Id
ææ! #
)
ææ# $
{
çç 
return
èè 

BadRequest
èè !
(
èè! "
)
èè" #
;
èè# $
}
éé 
_context
ëë 
.
ëë 
Entry
ëë 
(
ëë 

imputation
ëë %
)
ëë% &
.
ëë& '
State
ëë' ,
=
ëë- .
EntityState
ëë/ :
.
ëë: ;
Modified
ëë; C
;
ëëC D
try
íí 
{
îî 
await
ïï 
_context
ïï 
.
ïï 
SaveChangesAsync
ïï /
(
ïï/ 0
)
ïï0 1
;
ïï1 2
}
ðð 
catch
ññ 
(
ññ *
DbUpdateConcurrencyException
ññ /
)
ññ/ 0
{
òò 
if
óó 
(
óó 
!
óó 
ImputationExists
óó %
(
óó% &
id
óó& (
)
óó( )
)
óó) *
{
ôô 
return
õõ 
NotFound
õõ #
(
õõ# $
)
õõ$ %
;
õõ% &
}
öö 
else
÷÷ 
{
øø 
throw
ùù 
;
ùù 
}
úú 
}
ûû 
return
ýý 
	NoContent
ýý 
(
ýý 
)
ýý 
;
ýý 
}
þþ 	
[
 	
HttpPost
	 
(
 
$str
 *
)
* +
]
+ ,
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
Tache
' ,
>
, -
>
- .%
VerifierChargeConsommÃ©
/ E
(
E F

Imputation
F P

imputation
Q [
)
[ \
{
 	
List
 
<
 
Tache
 
>
 
list
 
=
 
new
 "
List
# '
<
' (
Tache
( -
>
- .
(
. /
)
/ 0
;
0 1
foreach
 
(
 
var
 
item
 
in
  

imputation
! +
.
+ ,
DetailImputations
, =
)
= >
{
 
var
 
tachhe
 
=
 
_context
 %
.
% &
Taches
& ,
.
, -
Find
- 1
(
1 2
item
2 6
.
6 7
TacheId
7 >
)
> ?
;
? @
List
 
<
 
DetailImputation
 %
>
% &
	DetailImp
' 0
=
1 2
_context
3 ;
.
; <
DetailImputations
< M
.
M N
Where
N S
(
S T
x
T U
=>
V X
x
Y Z
.
Z [
TacheId
[ b
==
c e
tachhe
f l
.
l m
Id
m o
)
o p
.
p q
ToList
q w
(
w x
)
x y
;
y z
tachhe
 
.
 
chargeConsomme
 %
=
& '
$str
( /
;
/ 0
if
 
(
 
item
 
.
 
Id
 
==
 
null
 #
)
# $
	DetailImp
 
.
 
Add
 !
(
! "
item
" &
)
& '
;
' (
if
 
(
 
!
 
tachhe
 
.
 
publique
 $
)
$ %
{
 
foreach
 
(
 
var
  
detailI
! (
in
) +
	DetailImp
, 5
)
5 6
{
 
DetailImputation
 (
detail
) /
=
0 1
new
2 5
DetailImputation
6 F
(
F G
)
G H
;
H I
if
 
(
 
detailI
 #
.
# $
Id
$ &
==
' )
item
* .
.
. /
Id
/ 1
)
1 2
detail
 "
=
# $
item
% )
;
) *
else
 
detail
 #
=
$ %
detailI
& -
;
- .
Double
 
munits
 %
=
& '
(
( )
Int32
) .
.
. /
Parse
/ 4
(
4 5
detail
5 ;
.
; <
Monday
< B
.
B C
	Substring
C L
(
L M
$num
M N
,
N O
$num
P Q
)
Q R
)
R S
+
T U
Int32
V [
.
[ \
Parse
\ a
(
a b
detail
b h
.
h i
Tuesday
i p
.
p q
	Substring
q z
(
z {
$num
{ |
,
| }
$num
~ 
) 
) 
+ 
Int32 
. 
Parse 
( 
detail 
. 
Thursday 
.  
	Substring  ©
(© ª
$numª «
,« ¬
$num­ ®
)® ¯
)¯ °
+± ²
Int32³ ¸
.¸ ¹
Parse¹ ¾
(¾ ¿
detail¿ Å
.Å Æ
	WednesdayÆ Ï
.Ï Ð
	SubstringÐ Ù
(Ù Ú
$numÚ Û
,Û Ü
$numÝ Þ
)Þ ß
)ß à
+á â
Int32ã è
.è é
Parseé î
(î ï
detailï õ
.õ ö
Fridayö ü
.ü ý
	Substringý 
( 
$num 
, 
$num 
) 
) 
) 
; 
Double
 
hours
 $
=
% &
(
' (
Int32
( -
.
- .
Parse
. 3
(
3 4
detail
4 :
.
: ;
Monday
; A
.
A B
	Substring
B K
(
K L
$num
L M
,
M N
$num
O P
)
P Q
)
Q R
+
S T
Int32
U Z
.
Z [
Parse
[ `
(
` a
detail
a g
.
g h
Tuesday
h o
.
o p
	Substring
p y
(
y z
$num
z {
,
{ |
$num
} ~
)
~ 
) 
+ 
Int32 
. 
Parse 
( 
detail 
. 
Thursday 
. 
	Substring ¨
(¨ ©
$num© ª
,ª «
$num¬ ­
)­ ®
)® ¯
+° ±
Int32² ·
.· ¸
Parse¸ ½
(½ ¾
detail¾ Ä
.Ä Å
	WednesdayÅ Î
.Î Ï
	SubstringÏ Ø
(Ø Ù
$numÙ Ú
,Ú Û
$numÜ Ý
)Ý Þ
)Þ ß
+à á
Int32â ç
.ç è
Parseè í
(í î
detailî ô
.ô õ
Fridayõ û
.û ü
	Substringü 
( 
$num 
, 
$num 
) 
) 
) 
; 
if
 
(
 
munits
 "
!=
# %
$num
& '
)
' (
{
 
Double
 "
charge
# )
=
* +
(
, -
munits
- 3
/
4 5
$num
6 8
+
9 :
hours
; @
)
@ A
/
B C
$num
D E
;
E F
tachhe
   "
.
  " #
chargeConsomme
  # 1
=
  2 3
(
  4 5
charge
  5 ;
+
  < =
double
  > D
.
  D E
Parse
  E J
(
  J K
tachhe
  K Q
.
  Q R
chargeConsomme
  R `
.
  ` a
Replace
  a h
(
  h i
$str
  i l
,
  l m
$str
  n q
)
  q r
)
  r s
)
  s t
.
  t u
ToString
  u }
(
  } ~
)
  ~ 
.   
Replace   
(   
$str   
,   
$str   
)   
;   
}
¡¡ 
else
¢¢ 
{
££ 
Double
¤¤ "
charge
¤¤# )
=
¤¤* +
hours
¤¤, 1
/
¤¤2 3
$num
¤¤4 5
;
¤¤5 6
tachhe
¥¥ "
.
¥¥" #
chargeConsomme
¥¥# 1
=
¥¥2 3
(
¥¥4 5
charge
¥¥5 ;
+
¥¥< =
double
¥¥> D
.
¥¥D E
Parse
¥¥E J
(
¥¥J K
tachhe
¥¥K Q
.
¥¥Q R
chargeConsomme
¥¥R `
.
¥¥` a
Replace
¥¥a h
(
¥¥h i
$str
¥¥i l
,
¥¥l m
$str
¥¥n q
)
¥¥q r
)
¥¥r s
)
¥¥s t
.
¥¥t u
ToString
¥¥u }
(
¥¥} ~
)
¥¥~ 
.¥¥ 
Replace¥¥ 
(¥¥ 
$str¥¥ 
,¥¥ 
$str¥¥ 
)¥¥ 
;¥¥ 
}
¦¦ 
}
©© 
}
©© 
list
¬¬ 
.
¬¬ 
Add
¬¬ 
(
¬¬ 
tachhe
¬¬ 
)
¬¬  
;
¬¬  !
}
¯¯ 
try
²² 
{
³³ 
return
»» 
Ok
»» 
(
»» 
list
»» 
)
»» 
;
»»  
}
¾¾ 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
e
¿¿ 
)
¿¿ 
{
ÀÀ 
return
ÁÁ 

BadRequest
ÁÁ !
(
ÁÁ! "
e
ÁÁ" #
)
ÁÁ# $
;
ÁÁ$ %
}
ÂÂ 
}
 	
[
 	
	NonAction
	 
]
 
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
string
' -
>
- .
>
. /&
calculateChargeConsommÃ©
0 G
(
G H

Imputation
H R

imputation
S ]
)
] ^
{
 	
foreach
 
(
 
var
 
item
 
in
  

imputation
! +
.
+ ,
DetailImputations
, =
)
= >
{
 
var
 
tachhe
 
=
 
_context
 %
.
% &
Taches
& ,
.
, -
Find
- 1
(
1 2
item
2 6
.
6 7
TacheId
7 >
)
> ?
;
? @
if
 
(
 
tachhe
 
.
 
premierImputation
 ,
==
- /
null
0 4
)
4 5
tachhe
 
.
 
premierImputation
 ,
=
- .
DateTime
/ 7
.
7 8
Now
8 ;
;
; <
tachhe
 
.
 
status
 
=
 
$str
  #
;
# $
var
 
	DetailImp
 
=
 
_context
  (
.
( )
DetailImputations
) :
.
: ;
Where
; @
(
@ A
x
A B
=>
C E
x
F G
.
G H
TacheId
H O
==
P R
tachhe
S Y
.
Y Z
Id
Z \
)
\ ]
.
] ^
ToList
^ d
(
d e
)
e f
;
f g
tachhe
 
.
 
chargeConsomme
 %
=
& '
$str
( /
;
/ 0
foreach
 
(
 
var
 
detail
 #
in
$ &
	DetailImp
' 0
)
0 1
{
 
Double
 
munits
 !
=
" #
(
$ %
Int32
% *
.
* +
Parse
+ 0
(
0 1
detail
1 7
.
7 8
Monday
8 >
.
> ?
	Substring
? H
(
H I
$num
I J
,
J K
$num
L M
)
M N
)
N O
+
P Q
Int32
R W
.
W X
Parse
X ]
(
] ^
detail
^ d
.
d e
Tuesday
e l
.
l m
	Substring
m v
(
v w
$num
w x
,
x y
$num
z {
)
{ |
)
| }
+
~ 
Int32 
. 
Parse 
( 
detail 
. 
Thursday 
. 
	Substring ¥
(¥ ¦
$num¦ §
,§ ¨
$num© ª
)ª «
)« ¬
+­ ®
Int32¯ ´
.´ µ
Parseµ º
(º »
detail» Á
.Á Â
	WednesdayÂ Ë
.Ë Ì
	SubstringÌ Õ
(Õ Ö
$numÖ ×
,× Ø
$numÙ Ú
)Ú Û
)Û Ü
+Ý Þ
Int32ß ä
.ä å
Parseå ê
(ê ë
detailë ñ
.ñ ò
Fridayò ø
.ø ù
	Substringù 
( 
$num 
, 
$num 
) 
) 
) 
; 
Double
 
hours
  
=
! "
(
# $
Int32
$ )
.
) *
Parse
* /
(
/ 0
detail
0 6
.
6 7
Monday
7 =
.
= >
	Substring
> G
(
G H
$num
H I
,
I J
$num
K L
)
L M
)
M N
+
O P
Int32
Q V
.
V W
Parse
W \
(
\ ]
detail
] c
.
c d
Tuesday
d k
.
k l
	Substring
l u
(
u v
$num
v w
,
w x
$num
y z
)
z {
)
{ |
+
} ~
Int32 
. 
Parse 
( 
detail 
. 
Thursday 
. 
	Substring ¤
(¤ ¥
$num¥ ¦
,¦ §
$num¨ ©
)© ª
)ª «
+¬ ­
Int32® ³
.³ ´
Parse´ ¹
(¹ º
detailº À
.À Á
	WednesdayÁ Ê
.Ê Ë
	SubstringË Ô
(Ô Õ
$numÕ Ö
,Ö ×
$numØ Ù
)Ù Ú
)Ú Û
+Ü Ý
Int32Þ ã
.ã ä
Parseä é
(é ê
detailê ð
.ð ñ
Fridayñ ÷
.÷ ø
	Substringø 
( 
$num 
, 
$num 
) 
) 
) 
; 
if
¢¢ 
(
¢¢ 
munits
¢¢ 
!=
¢¢ !
$num
¢¢" #
)
¢¢# $
{
££ 
Double
¤¤ 
charge
¤¤ %
=
¤¤& '
(
¤¤( )
munits
¤¤) /
/
¤¤0 1
$num
¤¤2 4
+
¤¤5 6
hours
¤¤7 <
)
¤¤< =
/
¤¤> ?
$num
¤¤@ A
;
¤¤A B
tachhe
¥¥ 
.
¥¥ 
chargeConsomme
¥¥ -
=
¥¥. /
(
¥¥0 1
charge
¥¥1 7
+
¥¥8 9
double
¥¥: @
.
¥¥@ A
Parse
¥¥A F
(
¥¥F G
tachhe
¥¥G M
.
¥¥M N
chargeConsomme
¥¥N \
.
¥¥\ ]
Replace
¥¥] d
(
¥¥d e
$str
¥¥e h
,
¥¥h i
$str
¥¥j m
)
¥¥m n
)
¥¥n o
)
¥¥o p
.
¥¥p q
ToString
¥¥q y
(
¥¥y z
)
¥¥z {
.
¥¥{ |
Replace¥¥| 
(¥¥ 
$str¥¥ 
,¥¥ 
$str¥¥ 
)¥¥ 
;¥¥ 
}
¦¦ 
else
§§ 
{
¨¨ 
Double
©© 
charge
©© %
=
©©& '
hours
©©( -
/
©©. /
$num
©©0 1
;
©©1 2
tachhe
ªª 
.
ªª 
chargeConsomme
ªª -
=
ªª. /
(
ªª0 1
charge
ªª1 7
+
ªª8 9
double
ªª: @
.
ªª@ A
Parse
ªªA F
(
ªªF G
tachhe
ªªG M
.
ªªM N
chargeConsomme
ªªN \
.
ªª\ ]
Replace
ªª] d
(
ªªd e
$str
ªªe h
,
ªªh i
$str
ªªj m
)
ªªm n
)
ªªn o
)
ªªo p
.
ªªp q
ToString
ªªq y
(
ªªy z
)
ªªz {
.
ªª{ |
Replaceªª| 
(ªª 
$strªª 
,ªª 
$strªª 
)ªª 
;ªª 
}
«« 
}
®® 
_context
¯¯ 
.
¯¯ 
Entry
¯¯ 
(
¯¯ 
tachhe
¯¯ %
)
¯¯% &
.
¯¯& '
State
¯¯' ,
=
¯¯- .
EntityState
¯¯/ :
.
¯¯: ;
Modified
¯¯; C
;
¯¯C D
}
²² 
try
´´ 
{
µµ 
await
·· 
_context
·· 
.
··  
SaveChangesAsync
··  0
(
··0 1
)
··1 2
;
··2 3
return
¸¸ 
$str
¸¸ 
;
¸¸ 
}
»» 
catch
¼¼ 
(
¼¼ 
	Exception
¼¼ 
e
¼¼ 
)
¼¼ 
{
½½ 
return
¾¾ 
$str
¾¾ *
+
¾¾* +
e
¾¾, -
;
¾¾- .
}
¿¿ 
}
ÁÁ 	
[
ËË 	
HttpPost
ËË	 
]
ËË 
public
ÌÌ 
async
ÌÌ 
Task
ÌÌ 
<
ÌÌ 
ActionResult
ÌÌ &
<
ÌÌ& '

Imputation
ÌÌ' 1
>
ÌÌ1 2
>
ÌÌ2 3
PostImputation
ÌÌ4 B
(
ÌÌB C
ImputationDto
ÌÌC P
model
ÌÌQ V
)
ÌÌV W
{
ÍÍ 	
var
ÎÎ 
imp
ÎÎ 
=
ÎÎ 
_context
ÎÎ 
.
ÎÎ 
Imputations
ÎÎ *
.
ÎÎ* +
Where
ÎÎ+ 0
(
ÎÎ0 1
x
ÎÎ1 2
=>
ÎÎ3 5
x
ÎÎ6 7
.
ÎÎ7 8
	DateDebut
ÎÎ8 A
==
ÎÎB D
model
ÎÎE J
.
ÎÎJ K

imputation
ÎÎK U
.
ÎÎU V
	DateDebut
ÎÎV _
&&
ÎÎa c
x
ÎÎd e
.
ÎÎe f
DateFin
ÎÎf m
==
ÎÎn p
model
ÎÎq v
.
ÎÎv w

imputationÎÎw 
.ÎÎ 
DateFinÎÎ 
&&ÎÎ 
xÎÎ 
.ÎÎ 
UserIdÎÎ 
==ÎÎ 
modelÎÎ 
.ÎÎ 

imputationÎÎ ©
.ÎÎ© ª
UserIdÎÎª °
&&ÎÎ² ´
(ÎÎµ ¶
xÎÎ¶ ·
.ÎÎ· ¸ 
StatusImputationÎÎ¸ È
==ÎÎÉ Ë
$numÎÎÌ Í
||ÎÎÍ Ï
xÎÎÐ Ñ
.ÎÎÑ Ò 
StatusImputationÎÎÒ â
==ÎÎã å
$numÎÎæ ç
)ÎÎç è
)ÎÎè é
.ÎÎé ê
FirstOrDefaultÎÎê ø
(ÎÎø ù
)ÎÎù ú
;ÎÎú û
if
ÏÏ 
(
ÏÏ 
model
ÏÏ 
.
ÏÏ 

imputation
ÏÏ  
.
ÏÏ  !
StatusImputation
ÏÏ! 1
==
ÏÏ2 4
$num
ÏÏ5 6
&&
ÏÏ7 9
model
ÏÏ: ?
.
ÏÏ? @

imputation
ÏÏ@ J
.
ÏÏJ K
DateAvalide
ÏÏK V
==
ÏÏW Y
null
ÏÏZ ^
)
ÏÏ^ _
{
ÐÐ 
model
ÑÑ 
.
ÑÑ 

imputation
ÑÑ  
.
ÑÑ  !
DateAvalide
ÑÑ! ,
=
ÑÑ- .
DateTime
ÑÑ/ 7
.
ÑÑ7 8
Now
ÑÑ8 ;
;
ÑÑ; <
}
ÒÒ 
if
ÕÕ 
(
ÕÕ 
model
ÕÕ 
.
ÕÕ 

imputation
ÕÕ  
.
ÕÕ  !

mondayDate
ÕÕ! +
==
ÕÕ, .
null
ÕÕ/ 3
)
ÕÕ3 4
{
ÖÖ 
}
ØØ 
if
ÙÙ 
(
ÙÙ 
imp
ÙÙ 
==
ÙÙ 
null
ÙÙ 
)
ÙÙ 
{
ÚÚ 
model
ÛÛ 
.
ÛÛ 

imputation
ÛÛ  
.
ÛÛ  !
DateCreation
ÛÛ! -
=
ÛÛ. /
DateTime
ÛÛ0 8
.
ÛÛ8 9
Now
ÛÛ9 <
.
ÛÛ< =
ToString
ÛÛ= E
(
ÛÛE F
)
ÛÛF G
;
ÛÛG H
model
ÜÜ 
.
ÜÜ 

imputation
ÜÜ  
.
ÜÜ  !

mondayDate
ÜÜ! +
=
ÜÜ, -
model
ÜÜ. 3
.
ÜÜ3 4

imputation
ÜÜ4 >
.
ÜÜ> ?
	DateDebut
ÜÜ? H
;
ÜÜH I
model
ÝÝ 
.
ÝÝ 

imputation
ÝÝ  
.
ÝÝ  !
TuesdayDate
ÝÝ! ,
=
ÝÝ- .
model
ÝÝ/ 4
.
ÝÝ4 5

imputation
ÝÝ5 ?
.
ÝÝ? @
	DateDebut
ÝÝ@ I
.
ÝÝI J
AddDays
ÝÝJ Q
(
ÝÝQ R
$num
ÝÝR S
)
ÝÝS T
.
ÝÝT U
Date
ÝÝU Y
;
ÝÝY Z
model
ÞÞ 
.
ÞÞ 

imputation
ÞÞ  
.
ÞÞ  !
WednesdayDate
ÞÞ! .
=
ÞÞ/ 0
model
ÞÞ1 6
.
ÞÞ6 7

imputation
ÞÞ7 A
.
ÞÞA B
	DateDebut
ÞÞB K
.
ÞÞK L
AddDays
ÞÞL S
(
ÞÞS T
$num
ÞÞT U
)
ÞÞU V
.
ÞÞV W
Date
ÞÞW [
;
ÞÞ[ \
model
ßß 
.
ßß 

imputation
ßß  
.
ßß  !

FridayDate
ßß! +
=
ßß, -
model
ßß. 3
.
ßß3 4

imputation
ßß4 >
.
ßß> ?
	DateDebut
ßß? H
.
ßßH I
AddDays
ßßI P
(
ßßP Q
$num
ßßQ R
)
ßßR S
.
ßßS T
Date
ßßT X
;
ßßX Y
model
àà 
.
àà 

imputation
àà  
.
àà  !
ThursdayDate
àà! -
=
àà. /
model
àà0 5
.
àà5 6

imputation
àà6 @
.
àà@ A
	DateDebut
ààA J
.
ààJ K
AddDays
ààK R
(
ààR S
$num
ààS T
)
ààT U
.
ààU V
Date
ààV Z
;
ààZ [
_context
ää 
.
ää 
Imputations
ää $
.
ää$ %
Add
ää% (
(
ää( )
model
ää) .
.
ää. /

imputation
ää/ 9
)
ää9 :
;
ää: ;
}
ææ 
else
çç 
{
èè 
var
êê 
DI
êê 
=
êê 
_context
êê  
.
êê  !
DetailImputations
êê! 2
.
êê2 3
Where
êê3 8
(
êê8 9
x
êê9 :
=>
êê: <
x
êê< =
.
êê= >
ImputationId
êê> J
==
êêJ L
imp
êêL O
.
êêO P
Id
êêP R
)
êêR S
;
êêS T
_context
ëë 
.
ëë 
DetailImputations
ëë )
.
ëë) *
RemoveRange
ëë* 5
(
ëë5 6
DI
ëë6 8
)
ëë8 9
;
ëë9 :
await
ìì 
_context
ìì 
.
ìì 
SaveChangesAsync
ìì /
(
ìì/ 0
)
ìì0 1
;
ìì1 2
_context
íí 
.
íí 
Imputations
íí $
.
íí$ %
Remove
íí% +
(
íí+ ,
imp
íí, /
)
íí/ 0
;
íí0 1
await
îî 
_context
îî 
.
îî 
SaveChangesAsync
îî /
(
îî/ 0
)
îî0 1
;
îî1 2
model
ïï 
.
ïï 

imputation
ïï  
.
ïï  !
DateCreation
ïï! -
=
ïï. /
imp
ïï0 3
.
ïï3 4
DateCreation
ïï4 @
;
ïï@ A
model
ðð 
.
ðð 

imputation
ðð  
.
ðð  !

mondayDate
ðð! +
=
ðð, -
imp
ðð. 1
.
ðð1 2

mondayDate
ðð2 <
;
ðð< =
model
ññ 
.
ññ 

imputation
ññ  
.
ññ  !
TuesdayDate
ññ! ,
=
ññ- .
imp
ññ/ 2
.
ññ2 3
TuesdayDate
ññ3 >
;
ññ> ?
model
òò 
.
òò 

imputation
òò  
.
òò  !
WednesdayDate
òò! .
=
òò/ 0
imp
òò1 4
.
òò4 5
WednesdayDate
òò5 B
;
òòB C
model
óó 
.
óó 

imputation
óó  
.
óó  !
ThursdayDate
óó! -
=
óó. /
imp
óó0 3
.
óó3 4
ThursdayDate
óó4 @
;
óó@ A
model
ôô 
.
ôô 

imputation
ôô  
.
ôô  !

FridayDate
ôô! +
=
ôô, -
imp
ôô. 1
.
ôô1 2

FridayDate
ôô2 <
;
ôô< =
_context
öö 
.
öö 
Imputations
öö "
.
öö" #
Add
öö# &
(
öö& '
model
öö' ,
.
öö, -

imputation
öö- 7
)
öö7 8
;
öö8 9
}
÷÷ 
try
øø 
{
ùù 
await
ûû 
_context
ûû 
.
ûû 
SaveChangesAsync
ûû /
(
ûû/ 0
)
ûû0 1
;
ûû1 2
await
üü &
calculateChargeConsommÃ©
üü -
(
üü- .
model
üü. 3
.
üü3 4

imputation
üü4 >
)
üü> ?
;
üü? @
if
ýý 
(
ýý 
model
ýý 
.
ýý 
deletedTask
ýý %
.
ýý% &
Count
ýý& +
(
ýý+ ,
)
ýý, -
>
ýý. /
$num
ýý0 1
)
ýý1 2
{
þþ 
await
ÿÿ 3
%calculateCahrgeConsomerForDeletedTask
ÿÿ ?
(
ÿÿ? @
model
ÿÿ@ E
.
ÿÿE F
deletedTask
ÿÿF Q
)
ÿÿQ R
;
ÿÿR S
}
 
if
 
(
 
model
 
.
 

imputation
 $
.
$ %
StatusImputation
% 5
==
6 8
$num
9 :
)
: ;
{
< =
var
 
user
 
=
 
_context
 $
.
$ %
Users
% *
.
* +
Where
+ 0
(
0 1
x
1 2
=>
3 5
x
6 7
.
7 8
IdUser
8 >
==
? A
model
B G
.
G H

imputation
H R
.
R S
UserId
S Y
)
Y Z
.
Z [
FirstOrDefault
[ i
(
i j
)
j k
;
k l
var
 
teamsManagers
 %
=
& '
(
( )
from
) -
equipe
. 4
in
5 7
_context
8 @
.
@ A
Equips
A G
join
  $

equipeUser
% /
in
0 2
_context
3 ;
.
; <

EquipeUser
< F
on
G I
equipe
J P
.
P Q
Id
Q S
equals
T Z

equipeUser
[ e
.
e f
EquipeId
f n
where
  %

equipeUser
& 0
.
0 1
UserId
1 7
==
8 :
model
; @
.
@ A

imputation
A K
.
K L
UserId
L R
group
  %
new
& )
{
* +
equipe
, 2
}
3 4
by
5 7
new
8 ;
{
< =
equipe
> D
.
D E
	ManagerId
E N
}
N O
into
P T
grp
U X
select
  &
grp
' *
.
* +
Key
+ .
.
. /
	ManagerId
/ 8
)
 
.
 
ToList
 %
(
% &
)
& '
;
' (
await
 
_hubContext
 $
.
$ %
Clients
% ,
.
, -
Users
- 2
(
2 3
teamsManagers
3 @
)
@ A
.
A B
GetNotifications
B R
(
R S
new
S V
Models
W ]
.
] ^
Notification
^ j
{
k l
Title
m r
=
s t
user
u y
.
y z
FullNamez 
+ 
$str 
,  
Content¡ ¨
=© ª
model« °
.° ±

imputation± »
.» ¼
	DateDebut¼ Å
.Å Æ
DateÆ Ê
.Ê Ë
ToStringË Ó
(Ó Ô
)Ô Õ
+Ö ×
$strØ Û
+Ü Ý
modelÞ ã
.ã ä

imputationä î
.î ï
DateFinï ö
.ö ÷
Date÷ û
.û ü
ToStringü 
( 
) 
, 

ActionLink 
= 
$str ³
+´ µ
model¶ »
.» ¼

imputation¼ Æ
.Æ Ç
	DateDebutÇ Ð
.Ð Ñ
DateÑ Õ
.Õ Ö
ToStringÖ Þ
(Þ ß
)ß à
+á â
$strã ï
+ð ñ
modelò ÷
.÷ ø

imputationø 
. 
DateFin 
. 
Date 
. 
ToString 
( 
) 
, 
endDate £
=¤ ¥
model¦ «
.« ¬

imputation¬ ¶
.¶ ·
DateFin· ¾
.¾ ¿
Date¿ Ã
.Ã Ä
ToStringÄ Ì
(Ì Í
)Í Î
,Î Ï
	startDateÐ Ù
=Ú Û
modelÜ á
.á â

imputationâ ì
.ì í
DateFiní ô
.ô õ
Dateõ ù
.ù ú
ToStringú 
( 
) 
} 
) 
; 
await
 
_hubContext
 $
.
$ %
Clients
% ,
.
, -
Group
- 2
(
2 3
RoleType
3 ;
.
; <
Admin
< A
)
A B
.
B C
GetNotifications
C S
(
S T
new
T W
Models
X ^
.
^ _
Notification
_ k
{
l m
Title
n s
=
t u
user
v z
.
z {
FullName{ 
+ 
$str  
,  ¡
Content¢ ©
=ª «
model¬ ±
.± ²

imputation² ¼
.¼ ½
	DateDebut½ Æ
.Æ Ç
DateÇ Ë
.Ë Ì
ToStringÌ Ô
(Ô Õ
)Õ Ö
+× Ø
$strÙ Ü
+Ý Þ
modelß ä
.ä å

imputationå ï
.ï ð
DateFinð ÷
.÷ ø
Dateø ü
.ü ý
ToStringý 
( 
) 
, 

ActionLink 
= 
$str ´
+µ ¶
model· ¼
.¼ ½

imputation½ Ç
.Ç È
	DateDebutÈ Ñ
.Ñ Ò
DateÒ Ö
.Ö ×
ToString× ß
(ß à
)à á
+â ã
$strä ð
+ñ ò
modeló ø
.ø ù

imputationù 
. 
DateFin 
. 
Date 
. 
ToString 
( 
) 
, 
endDate ¤
=¥ ¦
model§ ¬
.¬ ­

imputation­ ·
.· ¸
DateFin¸ ¿
.¿ À
DateÀ Ä
.Ä Å
ToStringÅ Í
(Í Î
)Î Ï
,Ï Ð
	startDateÑ Ú
=Û Ü
modelÝ â
.â ã

imputationã í
.í î
DateFinî õ
.õ ö
Dateö ú
.ú û
ToStringû 
( 
) 
} 
) 
; 
}
 
}
 
catch
 
(
 
	Exception
 
e
 
)
 
{
  
return
 

BadRequest
 !
(
! "
e
" #
)
# $
;
$ %
}
 
return
 
Ok
 
(
 
new
 
{
 
result
 !
=
! "
model
# (
.
( )

imputation
) 3
.
3 4
Id
4 6
}
7 8
)
9 :
;
: ;
}
 	
[
 	
	NonAction
	 
]
 
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
string
' -
>
- .
>
. /3
%calculateCahrgeConsomerForDeletedTask
1 V
(
V W
List
W [
<
[ \
string
\ b
>
b c
deletedTask
d o
)
o p
{
 	
foreach
 
(
 
var
 
item
 
in
  
deletedTask
! ,
)
, -
{
 
var
   
tachhe
   
=
   
_context
   %
.
  % &
Taches
  & ,
.
  , -
Find
  - 1
(
  1 2
item
  2 6
)
  6 7
;
  7 8
var
££ 
	DetailImp
££ 
=
££ 
_context
££  (
.
££( )
DetailImputations
££) :
.
££: ;
Where
££; @
(
££@ A
x
££A B
=>
££C E
x
££F G
.
££G H
TacheId
££H O
==
££P R
tachhe
££S Y
.
££Y Z
Id
££Z \
)
££\ ]
.
££] ^
ToList
££^ d
(
££d e
)
££e f
;
££f g
tachhe
¥¥ 
.
¥¥ 
chargeConsomme
¥¥ %
=
¥¥& '
$str
¥¥( /
;
¥¥/ 0
if
§§ 
(
§§ 
	DetailImp
§§ 
.
§§ 
Count
§§ #
(
§§# $
)
§§$ %
==
§§& (
$num
§§) *
)
§§* +
{
¨¨ 
tachhe
©© 
.
©© 
status
©© !
=
©©" #
$str
©©$ '
;
©©' (
tachhe
ªª 
.
ªª 
premierImputation
ªª ,
=
ªª- .
null
ªª/ 3
;
ªª3 4
}
«« 
else
¬¬ 
{
­­ 
foreach
²² 
(
²² 
var
²²  
detail
²²! '
in
²²( *
	DetailImp
²²+ 4
)
²²4 5
{
³³ 
Double
¶¶ 
munits
¶¶ %
=
¶¶& '
(
¶¶( )
Int32
¶¶) .
.
¶¶. /
Parse
¶¶/ 4
(
¶¶4 5
detail
¶¶5 ;
.
¶¶; <
Monday
¶¶< B
.
¶¶B C
	Substring
¶¶C L
(
¶¶L M
$num
¶¶M N
,
¶¶N O
$num
¶¶P Q
)
¶¶Q R
)
¶¶R S
+
¶¶T U
Int32
¶¶V [
.
¶¶[ \
Parse
¶¶\ a
(
¶¶a b
detail
¶¶b h
.
¶¶h i
Tuesday
¶¶i p
.
¶¶p q
	Substring
¶¶q z
(
¶¶z {
$num
¶¶{ |
,
¶¶| }
$num
¶¶~ 
)¶¶ 
)¶¶ 
+¶¶ 
Int32¶¶ 
.¶¶ 
Parse¶¶ 
(¶¶ 
detail¶¶ 
.¶¶ 
Thursday¶¶ 
.¶¶  
	Substring¶¶  ©
(¶¶© ª
$num¶¶ª «
,¶¶« ¬
$num¶¶­ ®
)¶¶® ¯
)¶¶¯ °
+¶¶± ²
Int32¶¶³ ¸
.¶¶¸ ¹
Parse¶¶¹ ¾
(¶¶¾ ¿
detail¶¶¿ Å
.¶¶Å Æ
	Wednesday¶¶Æ Ï
.¶¶Ï Ð
	Substring¶¶Ð Ù
(¶¶Ù Ú
$num¶¶Ú Û
,¶¶Û Ü
$num¶¶Ý Þ
)¶¶Þ ß
)¶¶ß à
+¶¶á â
Int32¶¶ã è
.¶¶è é
Parse¶¶é î
(¶¶î ï
detail¶¶ï õ
.¶¶õ ö
Friday¶¶ö ü
.¶¶ü ý
	Substring¶¶ý 
(¶¶ 
$num¶¶ 
,¶¶ 
$num¶¶ 
)¶¶ 
)¶¶ 
)¶¶ 
;¶¶ 
Double
¸¸ 
hours
¸¸ $
=
¸¸% &
(
¸¸' (
Int32
¸¸( -
.
¸¸- .
Parse
¸¸. 3
(
¸¸3 4
detail
¸¸4 :
.
¸¸: ;
Monday
¸¸; A
.
¸¸A B
	Substring
¸¸B K
(
¸¸K L
$num
¸¸L M
,
¸¸M N
$num
¸¸O P
)
¸¸P Q
)
¸¸Q R
+
¸¸S T
Int32
¸¸U Z
.
¸¸Z [
Parse
¸¸[ `
(
¸¸` a
detail
¸¸a g
.
¸¸g h
Tuesday
¸¸h o
.
¸¸o p
	Substring
¸¸p y
(
¸¸y z
$num
¸¸z {
,
¸¸{ |
$num
¸¸} ~
)
¸¸~ 
)¸¸ 
+¸¸ 
Int32¸¸ 
.¸¸ 
Parse¸¸ 
(¸¸ 
detail¸¸ 
.¸¸ 
Thursday¸¸ 
.¸¸ 
	Substring¸¸ ¨
(¸¸¨ ©
$num¸¸© ª
,¸¸ª «
$num¸¸¬ ­
)¸¸­ ®
)¸¸® ¯
+¸¸° ±
Int32¸¸² ·
.¸¸· ¸
Parse¸¸¸ ½
(¸¸½ ¾
detail¸¸¾ Ä
.¸¸Ä Å
	Wednesday¸¸Å Î
.¸¸Î Ï
	Substring¸¸Ï Ø
(¸¸Ø Ù
$num¸¸Ù Ú
,¸¸Ú Û
$num¸¸Ü Ý
)¸¸Ý Þ
)¸¸Þ ß
+¸¸à á
Int32¸¸â ç
.¸¸ç è
Parse¸¸è í
(¸¸í î
detail¸¸î ô
.¸¸ô õ
Friday¸¸õ û
.¸¸û ü
	Substring¸¸ü 
(¸¸ 
$num¸¸ 
,¸¸ 
$num¸¸ 
)¸¸ 
)¸¸ 
)¸¸ 
;¸¸ 
if
»» 
(
»» 
munits
»» "
!=
»»# %
$num
»»& '
)
»»' (
{
¼¼ 
Double
½½ "
charge
½½# )
=
½½* +
(
½½, -
munits
½½- 3
/
½½4 5
$num
½½6 8
+
½½9 :
hours
½½; @
)
½½@ A
/
½½B C
$num
½½D E
;
½½E F
tachhe
¾¾ "
.
¾¾" #
chargeConsomme
¾¾# 1
=
¾¾2 3
(
¾¾4 5
charge
¾¾5 ;
+
¾¾< =
double
¾¾> D
.
¾¾D E
Parse
¾¾E J
(
¾¾J K
tachhe
¾¾K Q
.
¾¾Q R
chargeConsomme
¾¾R `
.
¾¾` a
Replace
¾¾a h
(
¾¾h i
$str
¾¾i l
,
¾¾l m
$str
¾¾n q
)
¾¾q r
)
¾¾r s
)
¾¾s t
.
¾¾t u
ToString
¾¾u }
(
¾¾} ~
)
¾¾~ 
.¾¾ 
Replace¾¾ 
(¾¾ 
$str¾¾ 
,¾¾ 
$str¾¾ 
)¾¾ 
;¾¾ 
}
¿¿ 
else
ÀÀ 
{
ÁÁ 
Double
ÂÂ "
charge
ÂÂ# )
=
ÂÂ* +
hours
ÂÂ, 1
/
ÂÂ2 3
$num
ÂÂ4 5
;
ÂÂ5 6
tachhe
ÃÃ "
.
ÃÃ" #
chargeConsomme
ÃÃ# 1
=
ÃÃ2 3
(
ÃÃ4 5
charge
ÃÃ5 ;
+
ÃÃ< =
double
ÃÃ> D
.
ÃÃD E
Parse
ÃÃE J
(
ÃÃJ K
tachhe
ÃÃK Q
.
ÃÃQ R
chargeConsomme
ÃÃR `
.
ÃÃ` a
Replace
ÃÃa h
(
ÃÃh i
$str
ÃÃi l
,
ÃÃl m
$str
ÃÃn q
)
ÃÃq r
)
ÃÃr s
)
ÃÃs t
.
ÃÃt u
ToString
ÃÃu }
(
ÃÃ} ~
)
ÃÃ~ 
.ÃÃ 
ReplaceÃÃ 
(ÃÃ 
$strÃÃ 
,ÃÃ 
$strÃÃ 
)ÃÃ 
;ÃÃ 
}
ÄÄ 
}
ÇÇ 
}
ÈÈ 
_context
ÉÉ 
.
ÉÉ 
Entry
ÉÉ 
(
ÉÉ 
tachhe
ÉÉ %
)
ÉÉ% &
.
ÉÉ& '
State
ÉÉ' ,
=
ÉÉ- .
EntityState
ÉÉ/ :
.
ÉÉ: ;
Modified
ÉÉ; C
;
ÉÉC D
}
ÌÌ 
try
ÎÎ 
{
ÏÏ 
await
ÑÑ 
_context
ÑÑ 
.
ÑÑ 
SaveChangesAsync
ÑÑ /
(
ÑÑ/ 0
)
ÑÑ0 1
;
ÑÑ1 2
return
ÒÒ 
$str
ÒÒ 
;
ÒÒ 
}
ÕÕ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
e
ÖÖ 
)
ÖÖ 
{
×× 
return
ØØ 
$str
ØØ *
+
ØØ+ ,
e
ØØ- .
;
ØØ. /
}
ÙÙ 
}
ÛÛ 	
[
ßß 	
HttpPost
ßß	 
(
ßß 
$str
ßß &
)
ßß& '
]
ßß' (
public
àà 
async
àà 
Task
àà 
<
àà 
ActionResult
àà &
<
àà& '

Imputation
àà' 1
>
àà1 2
>
àà2 3
DeleteImputation
àà4 D
(
ààD E
string
ààE K
id
ààL N
)
ààN O
{
áá 	
var
ââ 

imputation
ââ 
=
ââ 
await
ââ "
_context
ââ# +
.
ââ+ ,
Imputations
ââ, 7
.
ââ7 8
	FindAsync
ââ8 A
(
ââA B
id
ââB D
)
ââD E
;
ââE F
if
ãã 
(
ãã 

imputation
ãã 
==
ãã 
null
ãã "
)
ãã" #
{
ää 
return
åå 
NotFound
åå 
(
åå  
)
åå  !
;
åå! "
}
ææ 
_context
èè 
.
èè 
Imputations
èè  
.
èè  !
Remove
èè! '
(
èè' (

imputation
èè( 2
)
èè2 3
;
èè3 4
await
éé 
_context
éé 
.
éé 
SaveChangesAsync
éé +
(
éé+ ,
)
éé, -
;
éé- .
return
ëë 

imputation
ëë 
;
ëë 
}
ìì 	
[
íí 	
	NonAction
íí	 
]
íí 
private
îî 
bool
îî 
ImputationExists
îî %
(
îî% &
string
îî& ,
id
îî- /
)
îî/ 0
{
ïï 	
return
ðð 
_context
ðð 
.
ðð 
Imputations
ðð '
.
ðð' (
Any
ðð( +
(
ðð+ ,
e
ðð, -
=>
ðð. 0
e
ðð1 2
.
ðð2 3
Id
ðð3 5
==
ðð6 8
id
ðð9 ;
)
ðð; <
;
ðð< =
}
ññ 	
}
òò 
}óó ¼
WC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\PhaseProjetsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class "
PhaseProjetsController '
:( )
ControllerBase* 8
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public "
PhaseProjetsController %
(% &
PilotageDBContext& 7
context8 ?
)? @
{ 	
_context 
= 
context 
; 
} 	
}nn 
}oo 3
RC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\ProfilsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class 
ProfilsController "
:# $
ControllerBase% 3
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public 
ProfilsController  
(  !
PilotageDBContext! 2
context3 :
): ;
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
Profil3 9
>9 :
>: ;
>; <

GetProfils= G
(G H
)H I
{ 	
return 
await 
_context !
.! "
Profils" )
.) *
ToListAsync* 5
(5 6
)6 7
;7 8
} 	
[!! 	
HttpGet!!	 
(!! 
$str!! 
)!! 
]!! 
public"" 
async"" 
Task"" 
<"" 
ActionResult"" &
<""& '
Profil""' -
>""- .
>"". /
	GetProfil""0 9
(""9 :
string"": @
id""A C
)""C D
{## 	
var$$ 
profil$$ 
=$$ 
await$$ 
_context$$ '
.$$' (
Profils$$( /
.$$/ 0
	FindAsync$$0 9
($$9 :
id$$: <
)$$< =
;$$= >
if&& 
(&& 
profil&& 
==&& 
null&& 
)&& 
{'' 
return(( 
NotFound(( 
(((  
)((  !
;((! "
})) 
return++ 
profil++ 
;++ 
},, 	
[11 	
HttpPost11	 
(11 
$str11 
)11  
]11  !
public22 
async22 
Task22 
<22 
IActionResult22 '
>22' (
	PutProfil22) 2
(222 3
string223 9
id22: <
,22< =
Profil22> D
profil22E K
)22K L
{33 	
if44 
(44 
id44 
!=44 
profil44 
.44 
IdProfil44 %
)44% &
{55 
return66 

BadRequest66 !
(66! "
)66" #
;66# $
}77 
_context99 
.99 
Entry99 
(99 
profil99 !
)99! "
.99" #
State99# (
=99) *
EntityState99+ 6
.996 7
Modified997 ?
;99? @
try;; 
{<< 
await== 
_context== 
.== 
SaveChangesAsync== /
(==/ 0
)==0 1
;==1 2
}>> 
catch?? 
(?? (
DbUpdateConcurrencyException?? /
)??/ 0
{@@ 
ifAA 
(AA 
!AA 
ProfilExistsAA !
(AA! "
idAA" $
)AA$ %
)AA% &
{BB 
returnCC 
NotFoundCC #
(CC# $
)CC$ %
;CC% &
}DD 
elseEE 
{FF 
throwGG 
;GG 
}HH 
}II 
returnKK 
	NoContentKK 
(KK 
)KK 
;KK 
}LL 	
[QQ 	
HttpPostQQ	 
]QQ 
publicRR 
asyncRR 
TaskRR 
<RR 
ActionResultRR &
<RR& '
ProfilRR' -
>RR- .
>RR. /

PostProfilRR0 :
(RR: ;
ProfilRR; A
profilRRB H
)RRH I
{SS 	
_contextTT 
.TT 
ProfilsTT 
.TT 
AddTT  
(TT  !
profilTT! '
)TT' (
;TT( )
awaitUU 
_contextUU 
.UU 
SaveChangesAsyncUU +
(UU+ ,
)UU, -
;UU- .
returnWW 
CreatedAtActionWW "
(WW" #
$strWW# .
,WW. /
newWW0 3
{WW4 5
idWW6 8
=WW9 :
profilWW; A
.WWA B
IdProfilWWB J
}WWK L
,WWL M
profilWWN T
)WWT U
;WWU V
}XX 	
[[[ 
HttpPost[[ 
([[ 
$str[[ 
)[[ 
][[  
public\\ 
async\\ 
Task\\ 
<\\ 
ActionResult\\ &
<\\& '
Profil\\' -
>\\- .
>\\. /
DeleteProfil\\0 <
(\\< =
string\\= C
id\\D F
)\\F G
{]] 	
var^^ 
profil^^ 
=^^ 
await^^ 
_context^^ '
.^^' (
Profils^^( /
.^^/ 0
	FindAsync^^0 9
(^^9 :
id^^: <
)^^< =
;^^= >
if__ 
(__ 
profil__ 
==__ 
null__ 
)__ 
{`` 
returnaa 
NotFoundaa 
(aa  
)aa  !
;aa! "
}bb 
_contextdd 
.dd 
Profilsdd 
.dd 
Removedd #
(dd# $
profildd$ *
)dd* +
;dd+ ,
awaitee 
_contextee 
.ee 
SaveChangesAsyncee +
(ee+ ,
)ee, -
;ee- .
returngg 
profilgg 
;gg 
}hh 	
[ii 	
	NonActionii	 
]ii 
privatejj 
booljj 
ProfilExistsjj !
(jj! "
stringjj" (
idjj) +
)jj+ ,
{kk 	
returnll 
_contextll 
.ll 
Profilsll #
.ll# $
Anyll$ '
(ll' (
ell( )
=>ll* ,
ell- .
.ll. /
IdProfilll/ 7
==ll8 :
idll; =
)ll= >
;ll> ?
}mm 	
}nn 
}oo ¦ó
UC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\ProjetEdpsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class  
ProjetEdpsController %
:& '
ControllerBase( 6
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public  
ProjetEdpsController #
(# $
PilotageDBContext$ 5
context6 =
)= >
{ 	
_context 
= 
context 
; 
} 	
double 
GetTimeInHours 
( 
DetailImputation .
detail/ 5
)5 6
{ 	
TimeSpan 
ConvertToTimeSpan &
(& '
string' -
time. 2
)2 3
{ 
if 
( 
string 
. 
IsNullOrWhiteSpace -
(- .
time. 2
)2 3
)3 4
return 
new 
TimeSpan '
(' (
$num( )
,) *
$num+ ,
,, -
$num. /
)/ 0
;0 1
var 
timecomponents "
=# $
time% )
.) *
Split* /
(/ 0
$char0 3
,3 4
StringSplitOptions5 G
.G H
RemoveEmptyEntriesH Z
)Z [
;[ \
int   
hours   
=   
Convert   !
.  ! "
ToInt32  " )
(  ) *
timecomponents  * 8
[  8 9
$num  9 :
]  : ;
)  ; <
;  < =
int!! 
minutes!! 
=!! 
Convert!! $
.!!$ %
ToInt32!!% ,
(!!, -
timecomponents!!- ;
[!!; <
$num!!< =
]!!= >
)!!> ?
;!!? @
return## 
new## 
TimeSpan## #
(### $
hours##$ )
,##) *
minutes##+ 2
,##2 3
$num##4 5
)##5 6
/##7 8
$num##9 :
;##: ;
}$$ 
if%% 
(%% 
detail%% 
==%% 
null%% 
)%% 
detail%%  &
=%%' (
new%%) ,
DetailImputation%%- =
(%%= >
)%%> ?
;%%? @
return'' 
ConvertToTimeSpan'' $
(''$ %
detail''% +
.''+ ,
Monday'', 2
)''2 3
.''3 4
Add''4 7
(''7 8
ConvertToTimeSpan''8 I
(''I J
detail''J P
.''P Q
Tuesday''Q X
)''X Y
)''Y Z
.(( 
Add(( 
((( 
ConvertToTimeSpan(( ,
(((, -
detail((- 3
.((3 4
	Wednesday((4 =
)((= >
)((> ?
.((? @
Add((@ C
(((C D
ConvertToTimeSpan((D U
(((U V
detail((V \
.((\ ]
Thursday((] e
)((e f
)((f g
.)) 
Add)) 
()) 
ConvertToTimeSpan)) ,
()), -
detail))- 3
.))3 4
Friday))4 :
))): ;
))); <
.** 

TotalHours** !
;**! "
},, 	
[// 	
HttpPost//	 
(// 
$str// 9
)//9 :
]//: ;
public11 
async11 
Task11 
<11 
IActionResult11 '
>11' (1
%StatChargeParUserProjetCompatbleExcel11) N
(11N O'
StatProjetComptableUsersDto11O j
model11k p
)11p q
{22 	
try66 
{77 
int88 
offset88 
=88 
(88 
model88 #
.88# $
page88$ (
*88) *
model88+ 0
.880 1
size881 5
)885 6
;886 7
var:: 
dbresult:: 
=:: 
(::  
from::  $
di::% '
in::( *
_context::+ 3
.::3 4
DetailImputations::4 E
join>>  $
i>>% &
in>>' )
_context>>* 2
.>>2 3
Imputations>>3 >
on>>? A
di>>B D
.>>D E
ImputationId>>E Q
equals>>R X
i>>Y Z
.>>Z [
Id>>[ ]
join??  $
u??% &
in??' )
_context??* 2
.??2 3
Users??3 8
on??9 ;
i??< =
.??= >
UserId??> D
equals??E K
u??L M
.??M N
IdUser??N T
join@@  $
t@@% &
in@@' )
_context@@* 2
.@@2 3
Taches@@3 9
on@@: <
di@@= ?
.@@? @
TacheId@@@ G
equals@@H N
t@@O P
.@@P Q
Id@@Q S
joinAA  $
dlAA% '
inAA( *
_contextAA+ 3
.AA3 4
DetailLivraisonsAA4 D
onAAE G
tAAH I
.AAI J
detailLivraisonIdAAJ [
equalsAA\ b
dlAAc e
.AAe f
IdAAf h
joinBB  $
plBB% '
inBB( *
_contextBB+ 3
.BB3 4
ProjetLivraisonsBB4 D
onBBE G
dlBBH J
.BBJ K
ProjetLivraisonIdBBK \
equalsBB] c
plBBd f
.BBf g
IdBBg i
joinCC  $
pcCC% '
inCC( *
_contextCC+ 3
.CC3 4

ProjetEdpsCC4 >
onCC? A
plCCB D
.CCD E
projetEdpIdCCE P
equalsCCQ W
pcCCX Z
.CCZ [
idCC[ ]
intoCC^ b
joinedpcCCc k
fromDD  $
pcDD% '
inDD( *
joinedpcDD+ 3
.DD3 4
DefaultIfEmptyDD4 B
(DDB C
)DDC D
joinEE  $
cEE% &
inEE' )
_contextEE* 2
.EE2 3
ClientsEE3 :
onEE; =
pcEE> @
.EE@ A
clientIdEEA I
equalsEEJ P
cEEQ R
.EER S
IdEES U
intoEEV Z
joinedcEE[ b
fromFF  $
cFF% &
inFF' )
joinedcFF* 1
.FF1 2
DefaultIfEmptyFF2 @
(FF@ A
)FFA B
joinGG  $
cpGG% '
inGG( *
_contextGG+ 3
.GG3 4

CodeProjetGG4 >
onGG? A
pcGGB D
.GGD E
CodeProjetsIdGGE R
equalsGGS Y
cpGGZ \
.GG\ ]
idGG] _
intoGG` d
joinedcpGGe m
fromHH  $
cpHH% '
inHH( *
joinedcpHH+ 3
.HH3 4
DefaultIfEmptyHH4 B
(HHB C
)HHC D
whereII  %
(LL  
modelLL  %
.LL% &
	DateDebutLL& /
==LL0 2
$strLL3 5
||LL6 8
(LL9 :
iLL: ;
.LL; <
TuesdayDateLL< G
.LLG H
ValueLLH M
.LLM N
DateLLN R
==LLS U
ConvertLLV ]
.LL] ^

ToDateTimeLL^ h
(LLh i
modelLLi n
.LLn o
	DateDebutLLo x
)LLx y
.LLy z
DateLLz ~
)LL~ 
||
LL 
i
LL 
.
LL 
WednesdayDate
LL 
.
LL 
Value
LL 
.
LL 
Date
LL 
==
LL  
Convert
LL¡ ¨
.
LL¨ ©

ToDateTime
LL© ³
(
LL³ ´
model
LL´ ¹
.
LL¹ º
	DateDebut
LLº Ã
)
LLÃ Ä
.
LLÄ Å
Date
LLÅ É
||
LLÊ Ì
i
LLÍ Î
.
LLÎ Ï

FridayDate
LLÏ Ù
.
LLÙ Ú
Value
LLÚ ß
.
LLß à
Date
LLà ä
==
LLå ç
Convert
LLè ï
.
LLï ð

ToDateTime
LLð ú
(
LLú û
model
LLû 
.
LL 
	DateDebut
LL 
)
LL 
.
LL 
Date
LL 
||
LL 
i
LL 
.
LL 
ThursdayDate
LL ¢
.
LL¢ £
Value
LL£ ¨
.
LL¨ ©
Date
LL© ­
==
LL® °
Convert
LL± ¸
.
LL¸ ¹

ToDateTime
LL¹ Ã
(
LLÃ Ä
model
LLÄ É
.
LLÉ Ê
	DateDebut
LLÊ Ó
)
LLÓ Ô
.
LLÔ Õ
Date
LLÕ Ù
||
LLÚ Ü
i
LLÝ Þ
.
LLÞ ß
	DateDebut
LLß è
.
LLè é
AddDays
LLé ð
(
LLð ñ
$num
LLñ ò
)
LLò ó
.
LLó ô
Date
LLô ø
==
LLù û
Convert
LLü 
.
LL 

ToDateTime
LL 
(
LL 
model
LL 
.
LL 
	DateDebut
LL 
)
LL 
.
LL  
Date
LL  ¤
||
LL¥ §
i
LL¨ ©
.
LL© ª
	DateDebut
LLª ³
.
LL³ ´
AddDays
LL´ »
(
LL» ¼
$num
LL¼ ½
)
LL½ ¾
.
LL¾ ¿
Date
LL¿ Ã
==
LLÄ Æ
Convert
LLÇ Î
.
LLÎ Ï

ToDateTime
LLÏ Ù
(
LLÙ Ú
model
LLÚ ß
.
LLß à
	DateDebut
LLà é
)
LLé ê
.
LLê ë
Date
LLë ï
||
LLð ò
i
LLó ô
.
LLô õ
	DateDebut
LLõ þ
.
LLþ ÿ
Date
LLÿ 
>=
LL 
Convert
LL 
.
LL 

ToDateTime
LL 
(
LL 
model
LL 
.
LL  
	DateDebut
LL  ©
)
LL© ª
.
LLª «
Date
LL« ¯
)
LL¯ °
&&MM 
(MM  !
modelMM! &
.MM& '
DateFinMM' .
==MM/ 1
$strMM2 4
||MM5 7
iMM8 9
.MM9 :
ThursdayDateMM: F
.MMF G
ValueMMG L
.MML M
DateMMM Q
==MMR T
ConvertMMU \
.MM\ ]

ToDateTimeMM] g
(MMg h
modelMMh m
.MMm n
DateFinMMn u
)MMu v
.MMv w
DateMMw {
||MM| ~
i	MM 
.
MM 
WednesdayDate
MM 
.
MM 
Value
MM 
.
MM 
Date
MM 
==
MM 
Convert
MM ¤
.
MM¤ ¥

ToDateTime
MM¥ ¯
(
MM¯ °
model
MM° µ
.
MMµ ¶
DateFin
MM¶ ½
)
MM½ ¾
.
MM¾ ¿
Date
MM¿ Ã
||
MMÄ Æ
i
MMÇ È
.
MMÈ É
TuesdayDate
MMÉ Ô
.
MMÔ Õ
Value
MMÕ Ú
.
MMÚ Û
Date
MMÛ ß
==
MMà â
Convert
MMã ê
.
MMê ë

ToDateTime
MMë õ
(
MMõ ö
model
MMö û
.
MMû ü
DateFin
MMü 
)
MM 
.
MM 
Date
MM 
||
MM 
i
MM 
.
MM 

mondayDate
MM 
.
MM 
Value
MM 
.
MM  
Date
MM  ¤
==
MM¥ §
Convert
MM¨ ¯
.
MM¯ °

ToDateTime
MM° º
(
MMº »
model
MM» À
.
MMÀ Á
DateFin
MMÁ È
)
MMÈ É
.
MMÉ Ê
Date
MMÊ Î
||
MMÏ Ñ
i
MMÒ Ó
.
MMÓ Ô
DateFin
MMÔ Û
<=
MMÜ Þ
Convert
MMß æ
.
MMæ ç

ToDateTime
MMç ñ
(
MMñ ò
model
MMò ÷
.
MM÷ ø
DateFin
MMø ÿ
)
MMÿ 
.
MM 
Date
MM 
)
MM 
&&OO# %
(PP$ %
modelPP% *
.PP* +
	ListUsersPP+ 4
.PP4 5
CountPP5 :
==PP; =
$numPP> ?
||PP@ B
modelPPC H
.PPH I
	ListUsersPPI R
.PPR S
ContainsPPS [
(PP[ \
uPP\ ]
.PP] ^
IdUserPP^ d
)PPd e
)PPe f
&&QQ% '
(QQ( )
modelQQ) .
.QQ. /

ListClientQQ/ 9
.QQ9 :
CountQQ: ?
==QQ@ B
$numQQC D
||QQE G
modelQQH M
.QQM N

ListClientQQN X
.QQX Y
ContainsQQY a
(QQa b
cQQb c
.QQc d
IdQQd f
)QQf g
)QQg h
selectUU  &
newUU' *
{VV  !
diZZ$ &
,ZZ& '
i[[$ %
.[[% &

mondayDate[[& 0
,[[0 1
i\\$ %
.\\% &
TuesdayDate\\& 1
,\\1 2
i]]$ %
.]]% &
ThursdayDate]]& 2
,]]2 3
i^^$ %
.^^% &

FridayDate^^& 0
,^^0 1
i__$ %
.__% &
WednesdayDate__& 3
,__3 4
pl``$ &
.``& '

ProjetName``' 1
,``1 2
plaa$ &
.aa& '
Idaa' )
,aa) *
cpbb$ &
.bb& '
idbb' )
,bb) *
dicc$ &
.cc& '
Mondaycc' -
,cc- .
didd$ &
.dd& '
Tuesdaydd' .
,dd. /
diee$ &
.ee& '
Fridayee' -
,ee- .
diff$ &
.ff& '
	Wednesdayff' 0
,ff0 1
digg$ &
.gg& '
Thursdaygg' /
,gg/ 0
uhh$ %
.hh% &
IdUserhh& ,
,hh, -
nomii$ '
=ii( )
uii* +
.ii+ ,
Prenomii, 2
+ii3 4
$strii5 8
+ii9 :
uii; <
.ii< =
Nomii= @
,ii@ A
projetLivraisonIdjj$ 5
=jj6 7
pljj8 :
.jj: ;
Idjj; =
,jj= >
projetLivraisonkk$ 3
=kk4 5
plkk6 8
.kk8 9

ProjetNamekk9 C
+kkD E
$strkkF J
+kkK L
plkkM O
.kkO P
DeliverykkP X
,kkX Y
projetComptablell$ 3
=ll4 5
cpll6 8
.ll8 9
Intitulell9 A
+llB C
$strllD I
+llJ K
pcllL N
.llN O
NomllO R
,llR S
codeAnalityquemm$ 2
=mm3 4
cpmm5 7
.mm7 8
Numeromm8 >
+mm? @
$strmmA F
+mmG H
pcmmI K
.mmK L

CodeProjetmmL V
,mmV W
clientnn$ *
=nn+ ,
cnn- .
.nn. /
Nomnn/ 2
,nn2 3
}pp  !
)pp! "
;pp" #
varrr 
resultMondayrr  
=rr! "
awaitrr# (
(rr) *
fromrr* .
mondayrr/ 5
inrr6 8
dbresultrr9 A
grouptt* /
mondaytt0 6
bytt7 9
newtt: =
{tt> ?
mondaytt@ F
.ttF G

mondayDatettG Q
,ttQ R
mondayttS Y
.ttY Z
IdUserttZ `
,tt` a
mondayttb h
.tth i
projetLivraisonIdtti z
,ttz {
monday	tt| 
.
tt 
nom
tt 
,
tt 
monday
tt 
.
tt 
projetLivraison
tt 
,
tt 
monday
tt  ¦
.
tt¦ §
client
tt§ ­
,
tt­ ®
monday
tt¯ µ
.
ttµ ¶
codeAnalityque
tt¶ Ä
,
ttÄ Å
monday
ttÆ Ì
.
ttÌ Í
projetComptable
ttÍ Ü
}
ttÝ Þ
into
ttß ã
g
ttä å
selectuu* 0
newuu1 4
{vv* +
chargeww/ 5
=ww6 7
(ww8 9
doubleww9 ?
)ww? @
(ww@ A
gwwA B
.wwB C
SumwwC F
(wwF G
xwwG H
=>wwI K
ConvertwwL S
.wwS T
ToDoublewwT \
(ww\ ]
xww] ^
.ww^ _
diww_ a
.wwa b
Mondaywwb h
.wwh i
	Substringwwi r
(wwr s
$numwws t
,wwt u
$numwwv w
)www x
)wwx y
)wwy z
+ww{ |
gww} ~
.ww~ 
Sum	ww 
(
ww 
x
ww 
=>
ww 
Convert
ww 
.
ww 
ToDouble
ww 
(
ww 
x
ww 
.
ww 
di
ww 
.
ww 
Monday
ww ¤
.
ww¤ ¥
	Substring
ww¥ ®
(
ww® ¯
$num
ww¯ °
,
ww° ±
$num
ww² ³
)
ww³ ´
)
ww´ µ
)
wwµ ¶
/
ww· ¸
$num
ww¸ º
)
wwº »
,
ww» ¼
gxx. /
.xx/ 0
Keyxx0 3
.xx3 4
nomxx4 7
,xx7 8
gyy. /
.yy/ 0
Keyyy0 3
.yy3 4
projetLivraisonyy4 C
,yyC D
datezz. 2
=zz3 4
gzz5 6
.zz6 7
Keyzz7 :
.zz: ;

mondayDatezz; E
.zzE F
ValuezzF K
.zzK L
DatezzL P
,zzP Q
g{{. /
.{{/ 0
Key{{0 3
.{{3 4
codeAnalityque{{4 B
,{{B C
g||. /
.||/ 0
Key||0 3
.||3 4
projetComptable||4 C
,||C D
year}}. 2
=}}3 4
g}}5 6
.}}6 7
Key}}7 :
.}}: ;

mondayDate}}; E
.}}E F
Value}}F K
.}}K L
Year}}L P
,}}P Q
g~~. /
.~~/ 0
Key~~0 3
.~~3 4
client~~4 :
,~~: ;
monnth. 4
=5 6
g7 8
.8 9
Key9 <
.< =

mondayDate= G
.G H
ValueH M
.M N
MonthN S
,S T
}
* +
)
+ ,
.
, -
ToListAsync
- 8
(
8 9
)
9 :
;
: ;
var
 
resultuesday
  
=
! "
await
# (
(
) *
from
* .
day
/ 2
in
3 5
dbresult
6 >
group
* /
day
0 3
by
4 6
new
7 :
{
; <
day
= @
.
@ A
TuesdayDate
A L
,
L M
day
N Q
.
Q R
IdUser
R X
,
X Y
day
Z ]
.
] ^
projetLivraisonId
^ o
,
o p
day
q t
.
t u
nom
u x
,
x y
day
z }
.
} ~
projetLivraison~ 
, 
day 
. 
client 
, 
day 
. 
codeAnalityque ­
,­ ®
day¯ ²
.² ³
projetComptable³ Â
}Ã Ä
intoÅ É
gÊ Ë
select
* 0
new
1 4
{
* +
charge
/ 5
=
6 7
(
8 9
double
9 ?
)
? @
(
@ A
g
A B
.
B C
Sum
C F
(
F G
x
G H
=>
I K
Convert
L S
.
S T
ToDouble
T \
(
\ ]
x
] ^
.
^ _
di
_ a
.
a b
Tuesday
b i
.
i j
	Substring
j s
(
s t
$num
t u
,
u v
$num
w x
)
x y
)
y z
)
z {
+
| }
g
~ 
. 
Sum 
( 
x 
=> 
Convert 
. 
ToDouble 
( 
x 
. 
di 
. 
Tuesday ¦
.¦ §
	Substring§ °
(° ±
$num± ²
,² ³
$num´ µ
)µ ¶
)¶ ·
)· ¸
/¹ º
$numº ¼
)¼ ½
,½ ¾
g
. /
.
/ 0
Key
0 3
.
3 4
nom
4 7
,
7 8
g
. /
.
/ 0
Key
0 3
.
3 4
projetLivraison
4 C
,
C D
date
. 2
=
3 4
g
5 6
.
6 7
Key
7 :
.
: ;
TuesdayDate
; F
.
F G
Value
G L
.
L M
Date
M Q
,
Q R
g
. /
.
/ 0
Key
0 3
.
3 4
codeAnalityque
4 B
,
B C
g
. /
.
/ 0
Key
0 3
.
3 4
projetComptable
4 C
,
C D
year
. 2
=
3 4
g
5 6
.
6 7
Key
7 :
.
: ;
TuesdayDate
; F
.
F G
Value
G L
.
L M
Year
M Q
,
Q R
g
. /
.
/ 0
Key
0 3
.
3 4
client
4 :
,
: ;
monnth
. 4
=
5 6
g
7 8
.
8 9
Key
9 <
.
< =
TuesdayDate
= H
.
H I
Value
I N
.
N O
Month
O T
,
T U
}
* +
)
+ ,
.
, -
ToListAsync
- 8
(
8 9
)
9 :
;
: ;
var
 
resulWednesday
 "
=
# $
await
% *
(
+ ,
from
, 0
day
1 4
in
5 7
dbresult
8 @
group
, 1
day
2 5
by
6 8
new
9 <
{
= >
day
? B
.
B C
WednesdayDate
C P
,
P Q
day
R U
.
U V
IdUser
V \
,
\ ]
day
^ a
.
a b
projetLivraisonId
b s
,
s t
day
u x
.
x y
nom
y |
,
| }
day~ 
. 
projetLivraison 
, 
day 
. 
client 
, 
day ¢
.¢ £
codeAnalityque£ ±
,± ²
day³ ¶
.¶ ·
projetComptable· Æ
}Ç È
intoÉ Í
gÎ Ï
select
, 2
new
3 6
{
, -
charge
1 7
=
8 9
(
: ;
double
; A
)
A B
(
B C
g
C D
.
D E
Sum
E H
(
H I
x
I J
=>
K M
Convert
N U
.
U V
ToDouble
V ^
(
^ _
x
_ `
.
` a
di
a c
.
c d
	Wednesday
d m
.
m n
	Substring
n w
(
w x
$num
x y
,
y z
$num
{ |
)
| }
)
} ~
)
~ 
+ 
g 
. 
Sum 
( 
x 
=> 
Convert 
. 
ToDouble 
( 
x 
.  
di  ¢
.¢ £
	Wednesday£ ¬
.¬ ­
	Substring­ ¶
(¶ ·
$num· ¸
,¸ ¹
$numº »
)» ¼
)¼ ½
)½ ¾
/¿ À
$numÀ Â
)Â Ã
,Ã Ä
g
0 1
.
1 2
Key
2 5
.
5 6
nom
6 9
,
9 :
g
0 1
.
1 2
Key
2 5
.
5 6
projetLivraison
6 E
,
E F
date
0 4
=
5 6
g
7 8
.
8 9
Key
9 <
.
< =
WednesdayDate
= J
.
J K
Value
K P
.
P Q
Date
Q U
,
U V
g
0 1
.
1 2
Key
2 5
.
5 6
codeAnalityque
6 D
,
D E
g
0 1
.
1 2
Key
2 5
.
5 6
projetComptable
6 E
,
E F
year
0 4
=
5 6
g
7 8
.
8 9
Key
9 <
.
< =
WednesdayDate
= J
.
J K
Value
K P
.
P Q
Year
Q U
,
U V
g
  0 1
.
  1 2
Key
  2 5
.
  5 6
client
  6 <
,
  < =
monnth
¡¡0 6
=
¡¡7 8
g
¡¡9 :
.
¡¡: ;
Key
¡¡; >
.
¡¡> ?
WednesdayDate
¡¡? L
.
¡¡L M
Value
¡¡M R
.
¡¡R S
Month
¡¡S X
,
¡¡X Y
}
¢¢, -
)
¢¢- .
.
¢¢. /
ToListAsync
¢¢/ :
(
¢¢: ;
)
¢¢; <
;
¢¢< =
var
¤¤ 
resulFriday
¤¤ 
=
¤¤  !
await
¤¤" '
(
¤¤( )
from
¤¤) -
day
¤¤. 1
in
¤¤2 4
dbresult
¤¤5 =
group
¦¦) .
day
¦¦/ 2
by
¦¦3 5
new
¦¦6 9
{
¦¦: ;
day
¦¦< ?
.
¦¦? @
projetLivraisonId
¦¦@ Q
,
¦¦Q R
day
¦¦S V
.
¦¦V W

FridayDate
¦¦W a
,
¦¦a b
day
¦¦c f
.
¦¦f g
IdUser
¦¦g m
,
¦¦m n
day
¦¦p s
.
¦¦s t
nom
¦¦t w
,
¦¦w x
day
¦¦y |
.
¦¦| }
projetLivraison¦¦} 
,¦¦ 
day¦¦ 
.¦¦ 
client¦¦ 
,¦¦ 
day¦¦ 
.¦¦ 
codeAnalityque¦¦ ¬
,¦¦¬ ­
day¦¦® ±
.¦¦± ²
projetComptable¦¦² Á
}¦¦Â Ã
into¦¦Ä È
g¦¦É Ê
select
§§) /
new
§§0 3
{
¨¨) *
charge
©©. 4
=
©©5 6
(
©©7 8
double
©©8 >
)
©©> ?
(
©©? @
g
©©@ A
.
©©A B
Sum
©©B E
(
©©E F
x
©©F G
=>
©©H J
Convert
©©K R
.
©©R S
ToDouble
©©S [
(
©©[ \
x
©©\ ]
.
©©] ^
di
©©^ `
.
©©` a
Friday
©©a g
.
©©g h
	Substring
©©h q
(
©©q r
$num
©©r s
,
©©s t
$num
©©u v
)
©©v w
)
©©w x
)
©©x y
+
©©z {
g
©©| }
.
©©} ~
Sum©©~ 
(©© 
x©© 
=>©© 
Convert©© 
.©© 
ToDouble©© 
(©© 
x©© 
.©© 
di©© 
.©© 
Friday©© £
.©©£ ¤
	Substring©©¤ ­
(©©­ ®
$num©©® ¯
,©©¯ °
$num©©± ²
)©©² ³
)©©³ ´
)©©´ µ
/©©¶ ·
$num©©· ¹
)©©¹ º
,©©º »
g
ªª- .
.
ªª. /
Key
ªª/ 2
.
ªª2 3
nom
ªª3 6
,
ªª6 7
g
««- .
.
««. /
Key
««/ 2
.
««2 3
projetLivraison
««3 B
,
««B C
date
¬¬- 1
=
¬¬2 3
g
¬¬4 5
.
¬¬5 6
Key
¬¬6 9
.
¬¬9 :

FridayDate
¬¬: D
.
¬¬D E
Value
¬¬E J
.
¬¬J K
Date
¬¬K O
,
¬¬O P
g
­­- .
.
­­. /
Key
­­/ 2
.
­­2 3
codeAnalityque
­­3 A
,
­­A B
g
®®- .
.
®®. /
Key
®®/ 2
.
®®2 3
projetComptable
®®3 B
,
®®B C
year
¯¯- 1
=
¯¯2 3
g
¯¯4 5
.
¯¯5 6
Key
¯¯6 9
.
¯¯9 :

FridayDate
¯¯: D
.
¯¯D E
Value
¯¯E J
.
¯¯J K
Year
¯¯K O
,
¯¯O P
g
°°- .
.
°°. /
Key
°°/ 2
.
°°2 3
client
°°3 9
,
°°9 :
monnth
±±- 3
=
±±4 5
g
±±6 7
.
±±7 8
Key
±±8 ;
.
±±; <

FridayDate
±±< F
.
±±F G
Value
±±G L
.
±±L M
Month
±±M R
,
±±R S
}
²²) *
)
²²* +
.
²²+ ,
ToListAsync
²², 7
(
²²7 8
)
²²8 9
;
²²9 :
var
³³ 
resulThuresday
³³ "
=
³³# $
await
³³% *
(
³³+ ,
from
³³, 0
day
³³1 4
in
³³5 7
dbresult
³³8 @
group
µµ, 1
day
µµ2 5
by
µµ6 8
new
µµ9 <
{
µµ= >
day
µµ? B
.
µµB C
ThursdayDate
µµC O
,
µµO P
day
µµQ T
.
µµT U
IdUser
µµU [
,
µµ[ \
day
µµ] `
.
µµ` a
projetLivraisonId
µµa r
,
µµr s
day
µµt w
.
µµw x
nom
µµx {
,
µµ{ |
dayµµ} 
.µµ 
projetLivraisonµµ 
,µµ 
dayµµ 
.µµ 
clientµµ 
,µµ 
dayµµ ¡
.µµ¡ ¢
codeAnalityqueµµ¢ °
,µµ° ±
dayµµ² µ
.µµµ ¶
projetComptableµµ¶ Å
}µµÆ Ç
intoµµÈ Ì
gµµÍ Î
select
¶¶, 2
new
¶¶3 6
{
··, -
charge
¸¸1 7
=
¸¸8 9
(
¸¸: ;
double
¸¸; A
)
¸¸A B
(
¸¸B C
g
¸¸C D
.
¸¸D E
Sum
¸¸E H
(
¸¸H I
x
¸¸I J
=>
¸¸K M
Convert
¸¸N U
.
¸¸U V
ToDouble
¸¸V ^
(
¸¸^ _
x
¸¸_ `
.
¸¸` a
di
¸¸a c
.
¸¸c d
Thursday
¸¸d l
.
¸¸l m
	Substring
¸¸m v
(
¸¸v w
$num
¸¸w x
,
¸¸x y
$num
¸¸z {
)
¸¸{ |
)
¸¸| }
)
¸¸} ~
+¸¸ 
g¸¸ 
.¸¸ 
Sum¸¸ 
(¸¸ 
x¸¸ 
=>¸¸ 
Convert¸¸ 
.¸¸ 
ToDouble¸¸ 
(¸¸ 
x¸¸ 
.¸¸ 
di¸¸ ¡
.¸¸¡ ¢
Thursday¸¸¢ ª
.¸¸ª «
	Substring¸¸« ´
(¸¸´ µ
$num¸¸µ ¶
,¸¸¶ ·
$num¸¸¸ ¹
)¸¸¹ º
)¸¸º »
)¸¸» ¼
/¸¸½ ¾
$num¸¸¾ À
)¸¸À Á
,¸¸Á Â
g
¹¹0 1
.
¹¹1 2
Key
¹¹2 5
.
¹¹5 6
nom
¹¹6 9
,
¹¹9 :
g
ºº0 1
.
ºº1 2
Key
ºº2 5
.
ºº5 6
projetLivraison
ºº6 E
,
ººE F
date
»»0 4
=
»»5 6
g
»»7 8
.
»»8 9
Key
»»9 <
.
»»< =
ThursdayDate
»»= I
.
»»I J
Value
»»J O
.
»»O P
Date
»»P T
,
»»T U
g
¼¼0 1
.
¼¼1 2
Key
¼¼2 5
.
¼¼5 6
codeAnalityque
¼¼6 D
,
¼¼D E
g
½½0 1
.
½½1 2
Key
½½2 5
.
½½5 6
projetComptable
½½6 E
,
½½E F
year
¾¾0 4
=
¾¾5 6
g
¾¾7 8
.
¾¾8 9
Key
¾¾9 <
.
¾¾< =
ThursdayDate
¾¾= I
.
¾¾I J
Value
¾¾J O
.
¾¾O P
Year
¾¾P T
,
¾¾T U
g
¿¿0 1
.
¿¿1 2
Key
¿¿2 5
.
¿¿5 6
client
¿¿6 <
,
¿¿< =
monnth
ÀÀ0 6
=
ÀÀ7 8
g
ÀÀ9 :
.
ÀÀ: ;
Key
ÀÀ; >
.
ÀÀ> ?
ThursdayDate
ÀÀ? K
.
ÀÀK L
Value
ÀÀL Q
.
ÀÀQ R
Month
ÀÀR W
,
ÀÀW X
}
ÁÁ, -
)
ÁÁ- .
.
ÁÁ. /
ToListAsync
ÁÁ/ :
(
ÁÁ: ;
)
ÁÁ; <
;
ÁÁ< =
resulFriday
ÂÂ 
.
ÂÂ 
AddRange
ÂÂ $
(
ÂÂ$ %
resulThuresday
ÂÂ% 3
)
ÂÂ3 4
;
ÂÂ4 5
resulFriday
ÃÃ 
.
ÃÃ 
AddRange
ÃÃ $
(
ÃÃ$ %
resulWednesday
ÃÃ% 3
)
ÃÃ3 4
;
ÃÃ4 5
resulFriday
ÄÄ 
.
ÄÄ 
AddRange
ÄÄ $
(
ÄÄ$ %
resultuesday
ÄÄ% 1
)
ÄÄ1 2
;
ÄÄ2 3
resulFriday
ÅÅ 
.
ÅÅ 
AddRange
ÅÅ $
(
ÅÅ$ %
resultMonday
ÅÅ% 1
)
ÅÅ1 2
;
ÅÅ2 3
var
ÆÆ 
finalResult
ÆÆ 
=
ÆÆ  !
resulFriday
ÆÆ" -
.
ÆÆ- .
Where
ÆÆ. 3
(
ÆÆ3 4
x
ÆÆ4 5
=>
ÆÆ6 8
(
ÆÆ9 :
model
ÆÆ: ?
.
ÆÆ? @
	DateDebut
ÆÆ@ I
==
ÆÆJ L
$str
ÆÆM O
||
ÆÆP R
x
ÆÆS T
.
ÆÆT U
date
ÆÆU Y
>=
ÆÆZ \
Convert
ÆÆ] d
.
ÆÆd e

ToDateTime
ÆÆe o
(
ÆÆo p
model
ÆÆp u
.
ÆÆu v
	DateDebut
ÆÆv 
)ÆÆ 
.ÆÆ 
DateÆÆ 
)ÆÆ 
&&
ÇÇ 
(
ÇÇ 
model
ÇÇ 
.
ÇÇ 
DateFin
ÇÇ !
==
ÇÇ" $
$str
ÇÇ% '
||
ÇÇ( *
x
ÇÇ+ ,
.
ÇÇ, -
date
ÇÇ- 1
<=
ÇÇ2 4
Convert
ÇÇ5 <
.
ÇÇ< =

ToDateTime
ÇÇ= G
(
ÇÇG H
model
ÇÇH M
.
ÇÇM N
DateFin
ÇÇN U
)
ÇÇU V
.
ÇÇV W
Date
ÇÇW [
)
ÇÇ[ \
&&
ÈÈ 
x
ÈÈ 
.
ÈÈ 
charge
ÈÈ 
!=
ÈÈ 
$num
ÈÈ  
)
ÈÈ  !
.
ÈÈ! "
OrderByDescending
ÈÈ" 3
(
ÈÈ3 4
x
ÈÈ4 5
=>
ÈÈ6 8
x
ÈÈ9 :
.
ÈÈ: ;
date
ÈÈ; ?
)
ÈÈ? @
;
ÈÈ@ A
return
ÊÊ 
Ok
ÊÊ 
(
ÊÊ 
new
ÊÊ 
{
ÊÊ 
data
ÊÊ! %
=
ÊÊ& '
finalResult
ÊÊ( 3
}
ÊÊ4 5
)
ÊÊ5 6
;
ÊÊ6 7
}
ËË 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
ex
ÌÌ 
)
ÌÌ  
{
ÍÍ 
return
ÏÏ 

BadRequest
ÏÏ !
(
ÏÏ! "
new
ÏÏ" %

JsonResult
ÏÏ& 0
(
ÏÏ0 1
ex
ÏÏ1 3
.
ÏÏ3 4
Message
ÏÏ4 ;
)
ÏÏ; <
)
ÏÏ< =
;
ÏÏ= >
}
ÐÐ 
}
ÒÒ 	
[
×× 	
HttpPost
××	 
(
×× 
$str
×× 4
)
××4 5
]
××5 6
public
ÙÙ 
async
ÙÙ 
Task
ÙÙ 
<
ÙÙ 
IActionResult
ÙÙ '
>
ÙÙ' (.
 StatChargeParUserProjetCompatble
ÙÙ) I
(
ÙÙI J)
StatProjetComptableUsersDto
ÙÙJ e
model
ÙÙf k
)
ÙÙk l
{
ÚÚ 	
try
ÞÞ 
{
ßß 
var
áá 
value
áá 
=
áá 
$str
áá #
;
áá# $
var
ââ 
heur
ââ 
=
ââ 
Convert
ââ "
.
ââ" #
ToDouble
ââ# +
(
ââ+ ,
value
ââ, 1
.
ââ1 2
	Substring
ââ2 ;
(
ââ; <
$num
ââ< =
,
ââ= >
$num
ââ? @
)
ââ@ A
)
ââA B
;
ââC D
var
ää 
menute
ää 
=
ää 
value
ää "
.
ää" #
	Substring
ää# ,
(
ää, -
$num
ää- .
,
ää. /
$num
ää0 1
)
ää1 2
;
ää2 3
var
åå 
menut4e
åå 
=
åå 
Convert
åå %
.
åå% &
ToDouble
åå& .
(
åå. /
menute
åå/ 5
)
åå5 6
;
åå7 8
var
ææ 
menute5
ææ 
=
ææ 
(
ææ 
menut4e
ææ &
/
ææ' (
$num
ææ( *
)
ææ* +
;
ææ+ ,
var
çç 
somme
çç 
=
çç 
heur
çç  
+
çç! "
menute5
çç# *
;
çç* +
List
èè 
<
èè 
double
èè 
>
èè 
list
èè !
=
èè" #
new
èè$ '
List
èè( ,
<
èè, -
double
èè- 3
>
èè3 4
(
èè4 5
)
èè5 6
{
èè7 8
$num
èè9 <
,
èè< =
$num
èè= >
,
èè> ?
$num
èè@ C
,
èèC D
$num
èèD E
,
èèE F
$num
èèF G
,
èèG H
$num
èèI L
}
èèM N
;
èèN O
;
èèP Q
var
ìì 
	listSomme
ìì 
=
ìì 
list
ìì  $
.
ìì$ %
Sum
ìì% (
(
ìì( )
x
ìì) *
=>
ìì+ -
x
ìì. /
)
ìì/ 0
;
ìì0 1
int
ïï 
offset
ïï 
=
ïï 
(
ïï 
model
ïï #
.
ïï# $
page
ïï$ (
*
ïï) *
model
ïï+ 0
.
ïï0 1
size
ïï1 5
)
ïï5 6
;
ïï6 7
var
ññ 
dbresult
ññ 
=
ññ 
(
ññ  
from
ññ! %
di
ññ& (
in
ññ) +
_context
ññ, 4
.
ññ4 5
DetailImputations
ññ5 F
join
õõ& *
i
õõ+ ,
in
õõ- /
_context
õõ0 8
.
õõ8 9
Imputations
õõ9 D
on
õõE G
di
õõH J
.
õõJ K
ImputationId
õõK W
equals
õõX ^
i
õõ_ `
.
õõ` a
Id
õõa c
join
öö& *
u
öö+ ,
in
öö- /
_context
öö0 8
.
öö8 9
Users
öö9 >
on
öö? A
i
ööB C
.
ööC D
UserId
ööD J
equals
ööK Q
u
ööR S
.
ööS T
IdUser
ööT Z
join
÷÷& *
t
÷÷+ ,
in
÷÷- /
_context
÷÷0 8
.
÷÷8 9
Taches
÷÷9 ?
on
÷÷@ B
di
÷÷C E
.
÷÷E F
TacheId
÷÷F M
equals
÷÷N T
t
÷÷U V
.
÷÷V W
Id
÷÷W Y
join
øø& *
dl
øø+ -
in
øø. 0
_context
øø1 9
.
øø9 :
DetailLivraisons
øø: J
on
øøK M
t
øøN O
.
øøO P
detailLivraisonId
øøP a
equals
øøb h
dl
øøi k
.
øøk l
Id
øøl n
join
ùù& *
pl
ùù+ -
in
ùù. 0
_context
ùù1 9
.
ùù9 :
ProjetLivraisons
ùù: J
on
ùùK M
dl
ùùN P
.
ùùP Q
ProjetLivraisonId
ùùQ b
equals
ùùc i
pl
ùùj l
.
ùùl m
Id
ùùm o
join
úú& *
pc
úú+ -
in
úú. 0
_context
úú1 9
.
úú9 :

ProjetEdps
úú: D
on
úúE G
pl
úúH J
.
úúJ K
projetEdpId
úúK V
equals
úúW ]
pc
úú^ `
.
úú` a
id
úúa c
into
úúd h
joinedpc
úúi q
from
ûû& *
pc
ûû+ -
in
ûû. 0
joinedpc
ûû1 9
.
ûû9 :
DefaultIfEmpty
ûû: H
(
ûûH I
)
ûûI J
join
üü& *
c
üü+ ,
in
üü- /
_context
üü0 8
.
üü8 9
Clients
üü9 @
on
üüA C
pc
üüD F
.
üüF G
clientId
üüG O
equals
üüP V
c
üüW X
.
üüX Y
Id
üüY [
into
üü\ `
joinedc
üüa h
from
ýý& *
c
ýý+ ,
in
ýý- /
joinedc
ýý0 7
.
ýý7 8
DefaultIfEmpty
ýý8 F
(
ýýF G
)
ýýG H
join
þþ& *
cp
þþ+ -
in
þþ. 0
_context
þþ1 9
.
þþ9 :

CodeProjet
þþ: D
on
þþE G
pc
þþH J
.
þþJ K
CodeProjetsId
þþK X
equals
þþY _
cp
þþ` b
.
þþb c
id
þþc e
into
þþf j
joinedcp
þþk s
from
ÿÿ& *
cp
ÿÿ+ -
in
ÿÿ. 0
joinedcp
ÿÿ1 9
.
ÿÿ9 :
DefaultIfEmpty
ÿÿ: H
(
ÿÿH I
)
ÿÿI J
where
& +
(
% &
model
& +
.
+ ,
	DateDebut
, 5
==
6 8
$str
9 ;
||
< >
(
? @
i
@ A
.
A B
TuesdayDate
B M
.
M N
Value
N S
.
S T
Date
T X
==
Y [
Convert
\ c
.
c d

ToDateTime
d n
(
n o
model
o t
.
t u
	DateDebut
u ~
)
~ 
. 
Date 
) 
|| 
i 
. 
WednesdayDate 
. 
Value 
. 
Date £
==¤ ¦
Convert§ ®
.® ¯

ToDateTime¯ ¹
(¹ º
modelº ¿
.¿ À
	DateDebutÀ É
)É Ê
.Ê Ë
DateË Ï
||Ð Ò
iÓ Ô
.Ô Õ

FridayDateÕ ß
.ß à
Valueà å
.å æ
Dateæ ê
==ë í
Convertî õ
.õ ö

ToDateTimeö 
( 
model 
. 
	DateDebut 
) 
. 
Date 
|| 
i 
. 
ThursdayDate ¨
.¨ ©
Value© ®
.® ¯
Date¯ ³
==´ ¶
Convert· ¾
.¾ ¿

ToDateTime¿ É
(É Ê
modelÊ Ï
.Ï Ð
	DateDebutÐ Ù
)Ù Ú
.Ú Û
DateÛ ß
||à â
iã ä
.ä å
	DateDebutå î
.î ï
AddDaysï ö
(ö ÷
$num÷ ø
)ø ù
.ù ú
Dateú þ
==ÿ 
Convert 
. 

ToDateTime 
( 
model 
. 
	DateDebut ¤
)¤ ¥
.¥ ¦
Date¦ ª
||« ­
i® ¯
.¯ °
	DateDebut° ¹
.¹ º
AddDaysº Á
(Á Â
$numÂ Ã
)Ã Ä
.Ä Å
DateÅ É
==Ê Ì
ConvertÍ Ô
.Ô Õ

ToDateTimeÕ ß
(ß à
modelà å
.å æ
	DateDebutæ ï
)ï ð
.ð ñ
Dateñ õ
||ö ø
iù ú
.ú û
	DateDebutû 
. 
Date 
>= 
Convert 
. 

ToDateTime 
(  
model  ¥
.¥ ¦
	DateDebut¦ ¯
)¯ °
.° ±
Date± µ
)µ ¶
&&
# %
(
' (
model
( -
.
- .
DateFin
. 5
==
6 8
$str
9 ;
||
= ?
i
@ A
.
A B
ThursdayDate
B N
.
N O
Value
O T
.
T U
Date
U Y
==
Z \
Convert
] d
.
d e

ToDateTime
e o
(
o p
model
p u
.
u v
DateFin
v }
)
} ~
.
~ 
Date 
|| 
i 
. 
WednesdayDate 
. 
Value 
. 
Date ¡
==¢ ¤
Convert¥ ¬
.¬ ­

ToDateTime­ ·
(· ¸
model¸ ½
.½ ¾
DateFin¾ Å
)Å Æ
.Æ Ç
DateÇ Ë
||Ì Î
iÏ Ð
.Ð Ñ
TuesdayDateÑ Ü
.Ü Ý
ValueÝ â
.â ã
Dateã ç
==è ê
Convertë ò
.ò ó

ToDateTimeó ý
(ý þ
modelþ 
. 
DateFin 
) 
. 
Date 
|| 
i 
. 

mondayDate ¡
.¡ ¢
Value¢ §
.§ ¨
Date¨ ¬
==­ ¯
Convert° ·
.· ¸

ToDateTime¸ Â
(Â Ã
modelÃ È
.È É
DateFinÉ Ð
)Ð Ñ
.Ñ Ò
DateÒ Ö
||× Ù
iÚ Û
.Û Ü
DateFinÜ ã
<=ä æ
Convertç î
.î ï

ToDateTimeï ù
(ù ú
modelú ÿ
.ÿ 
DateFin 
) 
. 
Date 
) 
&&
) +
(
* +
model
+ 0
.
0 1
	ListUsers
1 :
.
: ;
Count
; @
==
A C
$num
D E
||
F H
model
I N
.
N O
	ListUsers
O X
.
X Y
Contains
Y a
(
a b
u
b c
.
c d
IdUser
d j
)
j k
)
k l
&&
+ -
(
. /
model
/ 4
.
4 5

ListClient
5 ?
.
? @
Count
@ E
==
F H
$num
I J
||
K M
model
P U
.
U V

ListClient
V `
.
` a
Contains
a i
(
i j
c
j k
.
k l
Id
l n
)
n o
)
o p
select
! '
new
( +
{
& '
di
% '
,
' (
i
% &
.
& '

mondayDate
' 1
,
1 2
i
% &
.
& '
TuesdayDate
' 2
,
2 3
i
% &
.
& '
ThursdayDate
' 3
,
3 4
i
% &
.
& '

FridayDate
' 1
,
1 2
i
% &
.
& '
WednesdayDate
' 4
,
4 5
pl
% '
.
' (

ProjetName
( 2
,
2 3
pl
% '
.
' (
Id
( *
,
* +
cp
$ &
.
& '
id
' )
,
) *
di
$ &
.
& '
Monday
' -
,
- .
di
$ &
.
& '
Tuesday
' .
,
. /
di
$ &
.
& '
Friday
' -
,
- .
di
$ &
.
& '
	Wednesday
' 0
,
0 1
di
$ &
.
& '
Thursday
' /
,
/ 0
u
$ %
.
% &
IdUser
& ,
,
, -
nom
  % (
=
  ) *
u
  + ,
.
  , -
Prenom
  - 3
+
  4 5
$str
  6 9
+
  : ;
u
  < =
.
  = >
Nom
  > A
,
  A B
projetLivraisonId
¡¡% 6
=
¡¡6 7
pl
¡¡8 :
.
¡¡: ;
Id
¡¡; =
,
¡¡= >
projetLivraison
¢¢% 4
=
¢¢5 6
pl
¢¢7 9
.
¢¢9 :

ProjetName
¢¢: D
+
¢¢E F
$str
¢¢G K
+
¢¢L M
pl
¢¢N P
.
¢¢P Q
Delivery
¢¢Q Y
,
¢¢Y Z
projetComptable
££% 4
=
££5 6
cp
££7 9
.
££9 :
Intitule
££: B
+
££C D
$str
££E J
+
££K L
pc
££M O
.
££O P
Nom
££P S
,
££S T
codeAnalityque
¤¤% 3
=
¤¤4 5
cp
¤¤6 8
.
¤¤8 9
Numero
¤¤9 ?
+
¤¤@ A
$str
¤¤B G
+
¤¤H I
pc
¤¤I K
.
¤¤K L

CodeProjet
¤¤L V
,
¤¤V W
client
¥¥% +
=
¥¥, -
c
¥¥. /
.
¥¥/ 0
Nom
¥¥0 3
,
¥¥3 4
}
§§B C
)
§§C D
;
§§D E
var
©© 
resultMonday
©©  
=
©©! "
await
©©# (
(
©©( )
from
©©* .
monday
©©/ 5
in
©©6 8
dbresult
©©9 A
group
««# (
monday
««) /
by
««0 2
new
««3 6
{
««7 8
monday
««9 ?
.
««? @

mondayDate
««@ J
,
««J K
monday
««L R
.
««R S
IdUser
««S Y
,
««Y Z
monday
««[ a
.
««a b
projetLivraisonId
««b s
,
««s t
monday
««u {
.
««{ |
nom
««| 
,«« 
monday«« 
.«« 
projetLivraison«« 
,«« 
monday«« 
.««  
client««  ¦
,««¦ §
monday««¨ ®
.««® ¯
codeAnalityque««¯ ½
,««¾ ¿
monday««À Æ
.««Æ Ç
projetComptable««Ç Ö
}««× Ø
into««Ù Ý
g««Þ ß
select
¬¬# )
new
¬¬* -
{
­­# $
charge
®®( .
=
®®/ 0
(
®®1 2
double
®®2 8
)
®®8 9
(
®®9 :
g
®®: ;
.
®®; <
Sum
®®< ?
(
®®? @
x
®®@ A
=>
®®B D
Convert
®®E L
.
®®L M
ToDouble
®®M U
(
®®U V
x
®®V W
.
®®W X
di
®®X Z
.
®®Z [
Monday
®®[ a
.
®®a b
	Substring
®®b k
(
®®k l
$num
®®l m
,
®®m n
$num
®®o p
)
®®p q
)
®®q r
)
®®r s
+
®®t u
(
®®v w
double
®®w }
)
®®} ~
g®® 
.®® 
Sum®® 
(®® 
x®® 
=>®® 
Convert®® 
.®® 
ToDouble®® 
(®® 
x®® 
.®® 
di®® 
.®®  
Monday®®  ¦
.®®¦ §
	Substring®®§ °
(®®° ±
$num®®± ²
,®®² ³
$num®®´ µ
)®®µ ¶
)®®¶ ·
)®®· ¸
/®®¹ º
$num®®º ¼
)®®¼ ½
,®®½ ¾
g
¯¯' (
.
¯¯( )
Key
¯¯) ,
.
¯¯, -
nom
¯¯- 0
,
¯¯0 1
g
°°' (
.
°°( )
Key
°°) ,
.
°°, -
projetLivraison
°°- <
,
°°< =
date
±±' +
=
±±- .
g
±±. /
.
±±/ 0
Key
±±0 3
.
±±3 4

mondayDate
±±4 >
.
±±> ?
Value
±±? D
.
±±D E
Date
±±E I
,
±±I J
g
²²' (
.
²²( )
Key
²²) ,
.
²², -
codeAnalityque
²²- ;
,
²²; <
g
³³' (
.
³³( )
Key
³³) ,
.
³³, -
projetComptable
³³- <
,
³³< =
year
´´' +
=
´´, -
g
´´. /
.
´´/ 0
Key
´´0 3
.
´´3 4

mondayDate
´´4 >
.
´´> ?
Value
´´? D
.
´´D E
Year
´´E I
,
´´I J
g
µµ& '
.
µµ' (
Key
µµ( +
.
µµ+ ,
client
µµ, 2
,
µµ2 3
monnth
¶¶' -
=
¶¶. /
g
¶¶0 1
.
¶¶1 2
Key
¶¶2 5
.
¶¶5 6

mondayDate
¶¶6 @
.
¶¶@ A
Value
¶¶A F
.
¶¶F G
Month
¶¶G L
,
¶¶L M
}
··# $
)
··$ %
.
··% &
ToListAsync
··& 1
(
··1 2
)
··2 3
;
··3 4
var
ºº 
resultuesday
ºº  
=
ºº! "
await
ºº# (
(
ºº) *
from
ºº* .
day
ºº/ 2
in
ºº3 5
dbresult
ºº6 >
group
¼¼# (
day
¼¼) ,
by
¼¼- /
new
¼¼0 3
{
¼¼4 5
day
¼¼6 9
.
¼¼9 :
TuesdayDate
¼¼: E
,
¼¼E F
day
¼¼G J
.
¼¼J K
IdUser
¼¼K Q
,
¼¼Q R
day
¼¼S V
.
¼¼V W
projetLivraisonId
¼¼W h
,
¼¼h i
day
¼¼j m
.
¼¼m n
nom
¼¼n q
,
¼¼q r
day
¼¼s v
.
¼¼v w
projetLivraison¼¼w 
,¼¼ 
day¼¼ 
.¼¼ 
client¼¼ 
,¼¼ 
day¼¼ 
.¼¼ 
codeAnalityque¼¼ ¦
,¼¼¦ §
day¼¼¨ «
.¼¼« ¬
projetComptable¼¼¬ »
}¼¼¼ ½
into¼¼¾ Â
g¼¼Ã Ä
select
½½# )
new
½½* -
{
¾¾# $
charge
¿¿' -
=
¿¿. /
(
¿¿/ 0
double
¿¿0 6
)
¿¿6 7
(
¿¿8 9
g
¿¿: ;
.
¿¿; <
Sum
¿¿< ?
(
¿¿? @
x
¿¿@ A
=>
¿¿B D
Convert
¿¿E L
.
¿¿L M
ToDouble
¿¿M U
(
¿¿U V
x
¿¿V W
.
¿¿W X
di
¿¿X Z
.
¿¿Z [
Tuesday
¿¿[ b
.
¿¿b c
	Substring
¿¿c l
(
¿¿l m
$num
¿¿m n
,
¿¿n o
$num
¿¿p q
)
¿¿q r
)
¿¿r s
)
¿¿s t
+
¿¿u v
g
¿¿w x
.
¿¿x y
Sum
¿¿y |
(
¿¿| }
x
¿¿} ~
=>¿¿ 
Convert¿¿ 
.¿¿ 
ToDouble¿¿ 
(¿¿ 
x¿¿ 
.¿¿ 
di¿¿ 
.¿¿ 
Tuesday¿¿ 
.¿¿  
	Substring¿¿  ©
(¿¿© ª
$num¿¿ª «
,¿¿« ¬
$num¿¿­ ®
)¿¿® ¯
)¿¿¯ °
)¿¿° ±
/¿¿² ³
$num¿¿³ µ
)¿¿µ ¶
,¿¿¶ ·
g
ÀÀ' (
.
ÀÀ( )
Key
ÀÀ) ,
.
ÀÀ, -
nom
ÀÀ- 0
,
ÀÀ0 1
g
ÁÁ' (
.
ÁÁ( )
Key
ÁÁ) ,
.
ÁÁ, -
projetLivraison
ÁÁ- <
,
ÁÁ< =
date
ÂÂ' +
=
ÂÂ, -
g
ÂÂ. /
.
ÂÂ/ 0
Key
ÂÂ0 3
.
ÂÂ3 4
TuesdayDate
ÂÂ4 ?
.
ÂÂ? @
Value
ÂÂ@ E
.
ÂÂE F
Date
ÂÂF J
,
ÂÂJ K
g
ÃÃ' (
.
ÃÃ( )
Key
ÃÃ) ,
.
ÃÃ, -
codeAnalityque
ÃÃ- ;
,
ÃÃ; <
g
ÄÄ' (
.
ÄÄ( )
Key
ÄÄ) ,
.
ÄÄ, -
projetComptable
ÄÄ- <
,
ÄÄ< =
year
ÅÅ' +
=
ÅÅ, -
g
ÅÅ. /
.
ÅÅ/ 0
Key
ÅÅ0 3
.
ÅÅ3 4
TuesdayDate
ÅÅ4 ?
.
ÅÅ? @
Value
ÅÅ@ E
.
ÅÅE F
Year
ÅÅF J
,
ÅÅJ K
g
ÆÆ' (
.
ÆÆ( )
Key
ÆÆ) ,
.
ÆÆ, -
client
ÆÆ- 3
,
ÆÆ3 4
monnth
ÇÇ' -
=
ÇÇ. /
g
ÇÇ0 1
.
ÇÇ1 2
Key
ÇÇ2 5
.
ÇÇ5 6
TuesdayDate
ÇÇ6 A
.
ÇÇA B
Value
ÇÇB G
.
ÇÇG H
Month
ÇÇH M
,
ÇÇM N
}
ÈÈ# $
)
ÈÈ$ %
.
ÈÈ% &
ToListAsync
ÈÈ& 1
(
ÈÈ1 2
)
ÈÈ2 3
;
ÈÈ3 4
var
ËË 
resulWednesday
ËË "
=
ËË# $
await
ËË% *
(
ËË* +
from
ËË+ /
day
ËË0 3
in
ËË4 6
dbresult
ËË7 ?
group
ÍÍ# (
day
ÍÍ) ,
by
ÍÍ- /
new
ÍÍ0 3
{
ÍÍ4 5
day
ÍÍ6 9
.
ÍÍ9 :
WednesdayDate
ÍÍ: G
,
ÍÍG H
day
ÍÍI L
.
ÍÍL M
IdUser
ÍÍM S
,
ÍÍS T
day
ÍÍU X
.
ÍÍX Y
projetLivraisonId
ÍÍY j
,
ÍÍj k
day
ÍÍl o
.
ÍÍo p
nom
ÍÍp s
,
ÍÍs t
day
ÍÍu x
.
ÍÍx y
projetLivraisonÍÍy 
,ÍÍ 
dayÍÍ 
.ÍÍ 
clientÍÍ 
,ÍÍ 
dayÍÍ 
.ÍÍ 
codeAnalityqueÍÍ ¨
,ÍÍ¨ ©
dayÍÍª ­
.ÍÍ­ ®
projetComptableÍÍ® ½
}ÍÍ¾ ¿
intoÍÍÀ Ä
gÍÍÅ Æ
select
ÎÎ# )
new
ÎÎ* -
{
ÏÏ# $
charge
ÐÐ' -
=
ÐÐ. /
(
ÐÐ0 1
double
ÐÐ1 7
)
ÐÐ7 8
(
ÐÐ8 9
g
ÐÐ9 :
.
ÐÐ: ;
Sum
ÐÐ; >
(
ÐÐ> ?
x
ÐÐ? @
=>
ÐÐA C
Convert
ÐÐD K
.
ÐÐK L
ToDouble
ÐÐL T
(
ÐÐT U
x
ÐÐU V
.
ÐÐV W
di
ÐÐW Y
.
ÐÐY Z
	Wednesday
ÐÐZ c
.
ÐÐc d
	Substring
ÐÐd m
(
ÐÐm n
$num
ÐÐn o
,
ÐÐo p
$num
ÐÐq r
)
ÐÐr s
)
ÐÐs t
)
ÐÐt u
+
ÐÐv w
g
ÐÐx y
.
ÐÐy z
Sum
ÐÐz }
(
ÐÐ} ~
x
ÐÐ~ 
=>ÐÐ 
ConvertÐÐ 
.ÐÐ 
ToDoubleÐÐ 
(ÐÐ 
xÐÐ 
.ÐÐ 
diÐÐ 
.ÐÐ 
	WednesdayÐÐ ¢
.ÐÐ¢ £
	SubstringÐÐ£ ¬
(ÐÐ¬ ­
$numÐÐ­ ®
,ÐÐ® ¯
$numÐÐ° ±
)ÐÐ± ²
)ÐÐ² ³
)ÐÐ³ ´
/ÐÐµ ¶
$numÐÐ¶ ¸
)ÐÐ¸ ¹
,ÐÐ¹ º
g
ÑÑ' (
.
ÑÑ( )
Key
ÑÑ) ,
.
ÑÑ, -
nom
ÑÑ- 0
,
ÑÑ0 1
g
ÒÒ' (
.
ÒÒ( )
Key
ÒÒ) ,
.
ÒÒ, -
projetLivraison
ÒÒ- <
,
ÒÒ< =
date
ÓÓ' +
=
ÓÓ, -
g
ÓÓ. /
.
ÓÓ/ 0
Key
ÓÓ0 3
.
ÓÓ3 4
WednesdayDate
ÓÓ4 A
.
ÓÓA B
Value
ÓÓB G
.
ÓÓG H
Date
ÓÓH L
,
ÓÓL M
g
ÔÔ' (
.
ÔÔ( )
Key
ÔÔ) ,
.
ÔÔ, -
codeAnalityque
ÔÔ- ;
,
ÔÔ; <
g
ÕÕ' (
.
ÕÕ( )
Key
ÕÕ) ,
.
ÕÕ, -
projetComptable
ÕÕ- <
,
ÕÕ< =
year
ÖÖ' +
=
ÖÖ, -
g
ÖÖ. /
.
ÖÖ/ 0
Key
ÖÖ0 3
.
ÖÖ3 4
WednesdayDate
ÖÖ4 A
.
ÖÖA B
Value
ÖÖB G
.
ÖÖG H
Year
ÖÖH L
,
ÖÖL M
g
××' (
.
××( )
Key
××) ,
.
××, -
client
××- 3
,
××3 4
monnth
ØØ' -
=
ØØ. /
g
ØØ0 1
.
ØØ1 2
Key
ØØ2 5
.
ØØ5 6
WednesdayDate
ØØ6 C
.
ØØC D
Value
ØØD I
.
ØØI J
Month
ØØJ O
,
ØØO P
}
ÙÙ# $
)
ÙÙ$ %
.
ÙÙ% &
ToListAsync
ÙÙ& 1
(
ÙÙ1 2
)
ÙÙ2 3
;
ÙÙ3 4
var
ÛÛ 
resulFriday
ÛÛ 
=
ÛÛ  !
await
ÛÛ! &
(
ÛÛ& '
from
ÛÛ( ,
day
ÛÛ- 0
in
ÛÛ1 3
dbresult
ÛÛ4 <
group
ÝÝ% *
day
ÝÝ+ .
by
ÝÝ/ 1
new
ÝÝ2 5
{
ÝÝ6 7
day
ÝÝ8 ;
.
ÝÝ; <

FridayDate
ÝÝ< F
,
ÝÝF G
day
ÝÝH K
.
ÝÝK L
IdUser
ÝÝL R
,
ÝÝR S
day
ÝÝT W
.
ÝÝW X
projetLivraisonId
ÝÝX i
,
ÝÝi j
day
ÝÝk n
.
ÝÝn o
nom
ÝÝo r
,
ÝÝr s
day
ÝÝt w
.
ÝÝw x
projetLivraisonÝÝx 
,ÝÝ 
dayÝÝ 
.ÝÝ 
clientÝÝ 
,ÝÝ 
dayÝÝ 
.ÝÝ 
codeAnalityqueÝÝ §
,ÝÝ§ ¨
dayÝÝ© ¬
.ÝÝ¬ ­
projetComptableÝÝ­ ¼
}ÝÝ½ ¾
intoÝÝ¿ Ã
gÝÝÄ Å
select
ÞÞ% +
new
ÞÞ, /
{
ßß% &
charge
àà* 0
=
àà1 2
(
àà3 4
double
àà4 :
)
àà: ;
(
àà; <
g
àà< =
.
àà= >
Sum
àà> A
(
ààA B
x
ààB C
=>
ààD F
Convert
ààG N
.
ààN O
ToDouble
ààO W
(
ààW X
x
ààX Y
.
ààY Z
di
ààZ \
.
àà\ ]
Friday
àà] c
.
ààc d
	Substring
ààd m
(
ààm n
$num
ààn o
,
àào p
$num
ààq r
)
ààr s
)
ààs t
)
ààt u
+
ààv w
g
ààx y
.
àày z
Sum
ààz }
(
àà} ~
x
àà~ 
=>àà 
Convertàà 
.àà 
ToDoubleàà 
(àà 
xàà 
.àà 
diàà 
.àà 
Fridayàà 
.àà  
	Substringàà  ©
(àà© ª
$numààª «
,àà« ¬
$numàà­ ®
)àà® ¯
)àà¯ °
)àà° ±
/àà² ³
$numàà³ µ
)ààµ ¶
,àà¶ ·
g
áá) *
.
áá* +
Key
áá+ .
.
áá. /
nom
áá/ 2
,
áá2 3
g
ââ) *
.
ââ* +
Key
ââ+ .
.
ââ. /
projetLivraison
ââ/ >
,
ââ> ?
date
ãã) -
=
ãã. /
g
ãã0 1
.
ãã1 2
Key
ãã2 5
.
ãã5 6

FridayDate
ãã6 @
.
ãã@ A
Value
ããA F
.
ããF G
Date
ããG K
,
ããK L
g
ää) *
.
ää* +
Key
ää+ .
.
ää. /
codeAnalityque
ää/ =
,
ää= >
g
åå) *
.
åå* +
Key
åå+ .
.
åå. /
projetComptable
åå/ >
,
åå> ?
year
ææ) -
=
ææ. /
g
ææ0 1
.
ææ1 2
Key
ææ2 5
.
ææ5 6

FridayDate
ææ6 @
.
ææ@ A
Value
ææA F
.
ææF G
Year
ææG K
,
ææK L
g
çç) *
.
çç* +
Key
çç+ .
.
çç. /
client
çç/ 5
,
çç5 6
monnth
èè) /
=
èè0 1
g
èè2 3
.
èè3 4
Key
èè4 7
.
èè7 8

FridayDate
èè8 B
.
èèB C
Value
èèC H
.
èèH I
Month
èèI N
,
èèN O
}
éé 
)
éé 
.
éé  
ToListAsync
éé  +
(
éé+ ,
)
éé, -
;
éé- .
var
êê 
resulThuresday
êê "
=
êê# $
await
êê$ )
(
êê* +
from
êê+ /
day
êê0 3
in
êê4 6
dbresult
êê7 ?
group
ìì" '
day
ìì( +
by
ìì, .
new
ìì/ 2
{
ìì3 4
day
ìì5 8
.
ìì8 9
ThursdayDate
ìì9 E
,
ììE F
day
ììG J
.
ììJ K
IdUser
ììK Q
,
ììQ R
day
ììS V
.
ììV W
projetLivraisonId
ììW h
,
ììh i
day
ììj m
.
ììm n
nom
ììn q
,
ììq r
day
ììs v
.
ììv w
projetLivraisonììw 
,ìì 
dayìì 
.ìì 
clientìì 
,ìì 
dayìì 
.ìì 
codeAnalityqueìì ¦
,ìì¦ §
dayìì¨ «
.ìì« ¬
projetComptableìì¬ »
}ìì¼ ½
intoìì¾ Â
gììÃ Ä
select
íí" (
new
íí) ,
{
îî" #
charge
ïï' -
=
ïï. /
(
ïï0 1
double
ïï1 7
)
ïï7 8
(
ïï8 9
g
ïï9 :
.
ïï: ;
Sum
ïï; >
(
ïï> ?
x
ïï? @
=>
ïïA C
Convert
ïïD K
.
ïïK L
ToDouble
ïïL T
(
ïïT U
x
ïïU V
.
ïïV W
di
ïïW Y
.
ïïY Z
Thursday
ïïZ b
.
ïïb c
	Substring
ïïc l
(
ïïl m
$num
ïïm n
,
ïïn o
$num
ïïp q
)
ïïq r
)
ïïr s
)
ïïs t
+
ïïu v
g
ïïw x
.
ïïx y
Sum
ïïy |
(
ïï| }
x
ïï} ~
=>ïï 
Convertïï 
.ïï 
ToDoubleïï 
(ïï 
xïï 
.ïï 
diïï 
.ïï 
Thursdayïï  
.ïï  ¡
	Substringïï¡ ª
(ïïª «
$numïï« ¬
,ïï¬ ­
$numïï® ¯
)ïï¯ °
)ïï° ±
)ïï± ²
/ïï³ ´
$numïï´ ¶
)ïï¶ ·
,ïï· ¸
g
ðð& '
.
ðð' (
Key
ðð( +
.
ðð+ ,
nom
ðð, /
,
ðð/ 0
g
ññ& '
.
ññ' (
Key
ññ( +
.
ññ+ ,
projetLivraison
ññ, ;
,
ññ; <
date
òò& *
=
òò+ ,
g
òò- .
.
òò. /
Key
òò/ 2
.
òò2 3
ThursdayDate
òò3 ?
.
òò? @
Value
òò@ E
.
òòE F
Date
òòF J
,
òòJ K
g
óó& '
.
óó' (
Key
óó( +
.
óó+ ,
codeAnalityque
óó, :
,
óó: ;
g
ôô& '
.
ôô' (
Key
ôô( +
.
ôô+ ,
projetComptable
ôô, ;
,
ôô; <
year
õõ& *
=
õõ+ ,
g
õõ- .
.
õõ. /
Key
õõ/ 2
.
õõ2 3
ThursdayDate
õõ3 ?
.
õõ? @
Value
õõ@ E
.
õõE F
Year
õõF J
,
õõJ K
g
öö& '
.
öö' (
Key
öö( +
.
öö+ ,
client
öö, 2
,
öö2 3
monnth
÷÷& ,
=
÷÷- .
g
÷÷/ 0
.
÷÷0 1
Key
÷÷1 4
.
÷÷4 5
ThursdayDate
÷÷5 A
.
÷÷A B
Value
÷÷B G
.
÷÷G H
Month
÷÷H M
,
÷÷M N
}
øø" #
)
øø# $
.
øø$ %
ToListAsync
øø% 0
(
øø0 1
)
øø1 2
;
øø2 3
resulFriday
ùù 
.
ùù 
AddRange
ùù $
(
ùù$ %
resulThuresday
ùù% 3
)
ùù3 4
;
ùù4 5
resulFriday
úú 
.
úú 
AddRange
úú $
(
úú$ %
resulWednesday
úú% 3
)
úú3 4
;
úú4 5
resulFriday
ûû 
.
ûû 
AddRange
ûû $
(
ûû$ %
resultuesday
ûû% 1
)
ûû1 2
;
ûû2 3
resulFriday
üü 
.
üü 
AddRange
üü $
(
üü$ %
resultMonday
üü% 1
)
üü1 2
;
üü2 3
var
ýý 
finalResult
ýý 
=
ýý  !
resulFriday
ýý" -
.
ýý- .
Where
ýý. 3
(
ýý3 4
x
ýý4 5
=>
ýý6 8
(
ýý8 9
model
ýý: ?
.
ýý? @
	DateDebut
ýý@ I
==
ýýJ L
$str
ýýM O
||
ýýP R
x
ýýS T
.
ýýT U
date
ýýU Y
>=
ýýZ \
Convert
ýý] d
.
ýýd e

ToDateTime
ýýe o
(
ýýo p
model
ýýp u
.
ýýu v
	DateDebut
ýýv 
)ýý 
.ýý 
Dateýý 
)ýý 
&&
þþ 
(
þþ 
model
þþ 
.
þþ 
DateFin
þþ  
==
þþ! #
$str
þþ$ &
||
þþ' )
x
þþ* +
.
þþ+ ,
date
þþ, 0
<=
þþ1 3
Convert
þþ4 ;
.
þþ; <

ToDateTime
þþ< F
(
þþF G
model
þþG L
.
þþL M
DateFin
þþM T
)
þþT U
.
þþU V
Date
þþV Z
)
þþZ [
&&
ÿÿ 
x
ÿÿ 
.
ÿÿ 
charge
ÿÿ 
!=
ÿÿ 
$num
ÿÿ  
)
ÿÿ  !
;
ÿÿ! "
var
 
nbTotalResults
 "
=
# $
finalResult
% 0
.
0 1
Count
1 6
(
6 7
)
7 8
;
8 9
var
 
data
 
=
 
finalResult
 &
.
& '
OrderByDescending
' 8
(
8 9
x
9 :
=>
; =
x
> ?
.
? @
date
@ D
)
D E
.
E F
Skip
F J
(
J K
offset
K Q
)
Q R
.
R S
Take
S W
(
W X
model
X ]
.
] ^
size
^ b
)
b c
.
c d
ToList
d j
(
j k
)
k l
;
l m
return
 
Ok
 
(
 
new
 
{
 
nbTotalResults
  .
,
. /
data
0 4
}
5 6
)
6 7
;
7 8
;
9 :
}
 
catch
 
(
 
	Exception
 
ex
 
)
  
{
 
return
 

BadRequest
 !
(
! "
new
" %

JsonResult
& 0
(
0 1
ex
1 3
.
3 4
Message
4 ;
)
; <
)
< =
;
= >
}
 
}
 	
[
 	
HttpGet
	 
(
 
$str
 .
)
. /
]
/ 0
public
 
IActionResult
 
StatChargeByUser
 -
(
- .
string
. 4
projetId
5 =
)
= >
{
 	
try
 
{
 
var
 
resultat
 
=
 
(
  
from
  $
user
% )
in
* ,
_context
- 5
.
5 6
Users
6 ;
join
  $
tache
% *
in
+ -
_context
. 6
.
6 7
Taches
7 =
on
> @
user
A E
.
E F
IdUser
F L
equals
M S
tache
T Y
.
Y Z
UserId
Z `
join
  $

DLivraison
% /
in
0 2
_context
3 ;
.
; <
DetailLivraisons
< L
on
M O
tache
P U
.
U V
detailLivraisonId
V g
equals
h n

DLivraison
o y
.
y z
Id
z |
join
  $
	Livraison
% .
in
/ 1
_context
2 :
.
: ;
ProjetLivraisons
; K
on
L N

DLivraison
O Y
.
Y Z
ProjetLivraisonId
Z k
equals
l r
	Livraison
s |
.
| }
Id
} 
join
  $
edp
% (
in
) +
_context
, 4
.
4 5

ProjetEdps
5 ?
on
@ B
	Livraison
C L
.
L M
projetEdpId
M X
equals
Y _
edp
` c
.
c d
id
d f
join
  $
di
% '
in
( *
_context
+ 3
.
3 4
DetailImputations
4 E
on
F H
tache
I N
.
N O
Id
O Q
equals
R X
di
Y [
.
[ \
TacheId
\ c
where
¡¡  %
edp
¡¡& )
.
¡¡) *
id
¡¡* ,
==
¡¡- /
projetId
¡¡0 8
select
§§  &
new
§§' *
{
¨¨  !
user
««$ (
.
««( )
FullName
««) 1
,
««1 2
user
¬¬$ (
.
¬¬( )
	expertise
¬¬) 2
,
¬¬2 3
Monday
¯¯$ *
=
¯¯+ ,
(
¯¯- .
Convert
¯¯. 5
.
¯¯5 6
ToDouble
¯¯6 >
(
¯¯> ?
di
¯¯? A
.
¯¯A B
Monday
¯¯B H
.
¯¯H I
	Substring
¯¯I R
(
¯¯R S
$num
¯¯S T
,
¯¯T U
$num
¯¯V W
)
¯¯W X
)
¯¯X Y
+
¯¯Z [
Convert
¯¯\ c
.
¯¯c d
ToDouble
¯¯d l
(
¯¯l m
di
¯¯m o
.
¯¯o p
Monday
¯¯p v
.
¯¯v w
	Substring¯¯w 
(¯¯ 
$num¯¯ 
,¯¯ 
$num¯¯ 
)¯¯ 
)¯¯ 
/¯¯ 
$num¯¯ 
)¯¯ 
/¯¯ 
$num¯¯ 
,¯¯ 
Tuesday
°°$ +
=
°°, -
(
°°. /
Convert
°°/ 6
.
°°6 7
ToDouble
°°7 ?
(
°°? @
di
°°@ B
.
°°B C
Tuesday
°°C J
.
°°J K
	Substring
°°K T
(
°°T U
$num
°°U V
,
°°V W
$num
°°X Y
)
°°Y Z
)
°°Z [
+
°°\ ]
Convert
°°^ e
.
°°e f
ToDouble
°°f n
(
°°n o
di
°°o q
.
°°q r
Tuesday
°°r y
.
°°y z
	Substring°°z 
(°° 
$num°° 
,°° 
$num°° 
)°° 
)°° 
/°° 
$num°° 
)°° 
/°° 
$num°° 
,°° 
Friday
±±$ *
=
±±+ ,
(
±±- .
Convert
±±. 5
.
±±5 6
ToDouble
±±6 >
(
±±> ?
di
±±? A
.
±±A B
Friday
±±B H
.
±±H I
	Substring
±±I R
(
±±R S
$num
±±S T
,
±±T U
$num
±±V W
)
±±W X
)
±±X Y
+
±±Z [
Convert
±±\ c
.
±±c d
ToDouble
±±d l
(
±±l m
di
±±m o
.
±±o p
Friday
±±p v
.
±±v w
	Substring±±w 
(±± 
$num±± 
,±± 
$num±± 
)±± 
)±± 
/±± 
$num±± 
)±± 
/±± 
$num±± 
,±± 
	Wednesday
²²$ -
=
²². /
(
²²0 1
Convert
²²1 8
.
²²8 9
ToDouble
²²9 A
(
²²A B
di
²²B D
.
²²D E
	Wednesday
²²E N
.
²²N O
	Substring
²²O X
(
²²X Y
$num
²²Y Z
,
²²Z [
$num
²²\ ]
)
²²] ^
)
²²^ _
+
²²` a
Convert
²²b i
.
²²i j
ToDouble
²²j r
(
²²r s
di
²²s u
.
²²u v
	Wednesday
²²v 
.²² 
	Substring²² 
(²² 
$num²² 
,²² 
$num²² 
)²² 
)²² 
/²² 
$num²² 
)²² 
/²² 
$num²² 
,²² 
Thursday
³³$ ,
=
³³- .
(
³³/ 0
Convert
³³0 7
.
³³7 8
ToDouble
³³8 @
(
³³@ A
di
³³A C
.
³³C D
Thursday
³³D L
.
³³L M
	Substring
³³M V
(
³³V W
$num
³³W X
,
³³X Y
$num
³³Z [
)
³³[ \
)
³³\ ]
+
³³^ _
Convert
³³` g
.
³³g h
ToDouble
³³h p
(
³³p q
di
³³q s
.
³³s t
Thursday
³³t |
.
³³| }
	Substring³³} 
(³³ 
$num³³ 
,³³ 
$num³³ 
)³³ 
)³³ 
/³³ 
$num³³ 
)³³ 
/³³ 
$num³³ 
,³³ 
}
»»  !
)
»»! "
.
»»" #
ToList
»»# )
(
»») *
)
»»* +
;
»»+ ,
var
ÁÁ 
groupedByuser
ÁÁ !
=
ÁÁ" #
(
ÁÁ$ %
from
ÁÁ% )
r
ÁÁ* +
in
ÁÁ, .
resultat
ÁÁ/ 7
group
ÂÂ% *
new
ÂÂ+ .
{
ÂÂ/ 0
r
ÂÂ1 2
.
ÂÂ2 3
Monday
ÂÂ3 9
,
ÂÂ9 :
r
ÂÂ; <
.
ÂÂ< =
Tuesday
ÂÂ= D
,
ÂÂD E
r
ÂÂF G
.
ÂÂG H
Thursday
ÂÂH P
,
ÂÂP Q
r
ÂÂR S
.
ÂÂS T
	Wednesday
ÂÂT ]
,
ÂÂ] ^
r
ÂÂ_ `
.
ÂÂ` a
Friday
ÂÂa g
}
ÂÂh i
by
ÂÂj l
new
ÂÂm p
{
ÃÃ% &
r
ÄÄ) *
.
ÄÄ* +
FullName
ÄÄ+ 3
,
ÄÄ3 4
r
ÅÅ) *
.
ÅÅ* +
	expertise
ÅÅ+ 4
,
ÅÅ4 5
}
ÆÆ% &
into
ÆÆ' +
g
ÆÆ, -
select
ÇÇ% +
new
ÇÇ, /
{
ÈÈ% &
g
ÉÉ) *
.
ÉÉ* +
Key
ÉÉ+ .
.
ÉÉ. /
	expertise
ÉÉ/ 8
,
ÉÉ8 9
g
ÊÊ) *
.
ÊÊ* +
Key
ÊÊ+ .
.
ÊÊ. /
FullName
ÊÊ/ 7
,
ÊÊ7 8
charge
ËË) /
=
ËË0 1
g
ËË2 3
.
ËË3 4
Sum
ËË4 7
(
ËË7 8
x
ËË8 9
=>
ËË: <
x
ËË= >
.
ËË> ?
Monday
ËË? E
)
ËËE F
+
ËËG H
g
ËËI J
.
ËËJ K
Sum
ËËK N
(
ËËN O
x
ËËO P
=>
ËËQ S
x
ËËT U
.
ËËU V
Tuesday
ËËV ]
)
ËË] ^
+
ËË_ `
g
ËËa b
.
ËËb c
Sum
ËËc f
(
ËËf g
x
ËËg h
=>
ËËi k
x
ËËl m
.
ËËm n
	Wednesday
ËËn w
)
ËËw x
+
ËËy z
g
ËË{ |
.
ËË| }
SumËË} 
(ËË 
xËË 
=>ËË 
xËË 
.ËË 
FridayËË 
)ËË 
+ËË 
gËË 
.ËË 
SumËË 
(ËË 
xËË 
=>ËË 
xËË 
.ËË 
ThursdayËË §
)ËË§ ¨
,ËË¨ ©
}
ÌÌ% &
)
ÌÌ& '
.
ÌÌ' (
ToList
ÌÌ( .
(
ÌÌ. /
)
ÌÌ/ 0
.
ÌÌ0 1
OrderBy
ÌÌ1 8
(
ÌÌ8 9
x
ÌÌ9 :
=>
ÌÌ; =
x
ÌÌ> ?
.
ÌÌ? @
	expertise
ÌÌ@ I
)
ÌÌI J
;
ÌÌJ K
return
ÍÍ 
Ok
ÍÍ 
(
ÍÍ 
groupedByuser
ÍÍ '
)
ÍÍ' (
;
ÍÍ( )
}
ÎÎ 
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
e
ÏÏ 
)
ÏÏ 
{
ÐÐ 
return
ÒÒ 

BadRequest
ÒÒ !
(
ÒÒ! "
e
ÒÒ" #
)
ÒÒ# $
;
ÒÒ$ %
}
ÓÓ 
}
ÔÔ 	
[
ýý 	
HttpGet
ýý	 
(
ýý 
$str
ýý 1
)
ýý1 2
]
ýý2 3
public
þþ 
IActionResult
þþ !
StatChargeByProfile
þþ 0
(
þþ0 1
string
þþ1 7
projetId
þþ8 @
)
þþ@ A
{
ÿÿ 	
var
 
dbresult
 
=
 
(
 
from
 !
di
" $
in
% '
_context
( 0
.
0 1
DetailImputations
1 B
join
  
t
! "
in
# %
_context
& .
.
. /
Taches
/ 5
on
6 8
di
9 ;
.
; <
TacheId
< C
equals
D J
t
K L
.
L M
Id
M O
join
  
p
! "
in
# %
_context
& .
.
. /
profileUser
/ :
on
; =
t
> ?
.
? @
UserId
@ F
equals
G M
p
N O
.
O P
userId
P V
join
  
dl
! #
in
$ &
_context
' /
.
/ 0
DetailLivraisons
0 @
on
A C
t
D E
.
E F
detailLivraisonId
F W
equals
X ^
dl
_ a
.
a b
Id
b d
join
  
pl
! #
in
$ &
_context
' /
.
/ 0
ProjetLivraisons
0 @
on
A C
dl
D F
.
F G
ProjetLivraisonId
G X
equals
Y _
pl
` b
.
b c
Id
c e
join
  
edp
! $
in
% '
_context
( 0
.
0 1

ProjetEdps
1 ;
on
< >
pl
? A
.
A B
projetEdpId
B M
equals
N T
edp
U X
.
X Y
id
Y [
into
\ `
joinedpc
a i
from
  
edp
! $
in
% '
joinedpc
( 0
.
0 1
DefaultIfEmpty
1 ?
(
? @
)
@ A
where
 !
edp
" %
.
% &
id
& (
==
( *
projetId
+ 3
select
 "
new
# &
{
 
budgetConfirme
  .
=
. /
Convert
0 7
.
7 8
ToDouble
8 @
(
@ A
edp
A D
.
D E
budgetConfirme
E S
)
S T
+
U V
Convert
W ^
.
^ _
ToDouble
_ g
(
g h
edp
h k
.
k l%
budgetConfirmeRallongel 
) 
, 
budgetDirection
  /
=
/ 0
Convert
1 8
.
8 9
ToDouble
9 A
(
A B
edp
B E
.
E F
budgetDirection
F U
)
U V
+
V W
Convert
X _
.
_ `
ToDouble
` h
(
h i
edp
i l
.
l m&
budgetDirectionRallongem 
) 
, 
budgetGP
  (
=
( )
Convert
* 1
.
1 2
ToDouble
2 :
(
: ;
edp
; >
.
> ?
budgetGP
? G
)
G H
+
H I
Convert
J Q
.
Q R
ToDouble
R Z
(
Z [
edp
[ ^
.
^ _
budgetGPRallonge
_ o
)
o p
,
p q
budgetJunior
  ,
=
, -
Math
- 1
.
1 2
Abs
2 5
(
5 6
Convert
6 =
.
= >
ToDouble
> F
(
F G
edp
G J
.
J K
budgetJunior
K W
)
W X
+
Y Z
Convert
[ b
.
b c
ToDouble
c k
(
k l
edp
l o
.
o p#
budgetJuniorRallongep 
) 
) 
, 
budgetSenior
  ,
=
- .
Convert
/ 6
.
6 7
ToDouble
7 ?
(
? @
edp
@ C
.
C D
budgetSenior
D P
)
P Q
+
Q R
Convert
S Z
.
Z [
ToDouble
[ c
(
c d
edp
d g
.
g h"
budgetSeniorRallonge
h |
)
| }
,
} ~
budgetValidation
  0
=
0 1
Convert
2 9
.
9 :
ToDouble
: B
(
B C
edp
C F
.
F G
budgetValidation
G W
)
W X
+
X Y
Convert
Z a
.
a b
ToDouble
b j
(
j k
edp
k n
.
n o'
budgetValidationRallongeo 
) 
, 
p
  !
.
! "
	profileId
" +
,
+ ,
t
  !
.
! "
UserId
" (
,
( )
Monday
  &
=
' (
(
) *
Convert
* 1
.
1 2
ToDouble
2 :
(
: ;
di
; =
.
= >
Monday
> D
.
D E
	Substring
E N
(
N O
$num
O P
,
P Q
$num
R S
)
S T
)
T U
+
V W
Convert
X _
.
_ `
ToDouble
` h
(
h i
di
i k
.
k l
Monday
l r
.
r s
	Substring
s |
(
| }
$num
} ~
,
~ 
$num 
) 
) 
/ 
$num 
) 
/ 
$num 
, 
Tuesday
    '
=
  ( )
(
  * +
Convert
  + 2
.
  2 3
ToDouble
  3 ;
(
  ; <
di
  < >
.
  > ?
Tuesday
  ? F
.
  F G
	Substring
  G P
(
  P Q
$num
  Q R
,
  R S
$num
  T U
)
  U V
)
  V W
+
  X Y
Convert
  Z a
.
  a b
ToDouble
  b j
(
  j k
di
  k m
.
  m n
Tuesday
  n u
.
  u v
	Substring
  v 
(   
$num   
,   
$num   
)   
)   
/   
$num   
)   
/   
$num   
,   
Friday
¡¡  &
=
¡¡' (
(
¡¡) *
Convert
¡¡* 1
.
¡¡1 2
ToDouble
¡¡2 :
(
¡¡: ;
di
¡¡; =
.
¡¡= >
Friday
¡¡> D
.
¡¡D E
	Substring
¡¡E N
(
¡¡N O
$num
¡¡O P
,
¡¡P Q
$num
¡¡R S
)
¡¡S T
)
¡¡T U
+
¡¡V W
Convert
¡¡X _
.
¡¡_ `
ToDouble
¡¡` h
(
¡¡h i
di
¡¡i k
.
¡¡k l
Friday
¡¡l r
.
¡¡r s
	Substring
¡¡s |
(
¡¡| }
$num
¡¡} ~
,
¡¡~ 
$num¡¡ 
)¡¡ 
)¡¡ 
/¡¡ 
$num¡¡ 
)¡¡ 
/¡¡ 
$num¡¡ 
,¡¡ 
	Wednesday
¢¢  )
=
¢¢* +
(
¢¢, -
Convert
¢¢- 4
.
¢¢4 5
ToDouble
¢¢5 =
(
¢¢= >
di
¢¢> @
.
¢¢@ A
	Wednesday
¢¢A J
.
¢¢J K
	Substring
¢¢K T
(
¢¢T U
$num
¢¢U V
,
¢¢V W
$num
¢¢X Y
)
¢¢Y Z
)
¢¢Z [
+
¢¢\ ]
Convert
¢¢^ e
.
¢¢e f
ToDouble
¢¢f n
(
¢¢n o
di
¢¢o q
.
¢¢q r
	Wednesday
¢¢r {
.
¢¢{ |
	Substring¢¢| 
(¢¢ 
$num¢¢ 
,¢¢ 
$num¢¢ 
)¢¢ 
)¢¢ 
/¢¢ 
$num¢¢ 
)¢¢ 
/¢¢ 
$num¢¢ 
,¢¢ 
Thursday
££  (
=
££) *
(
££+ ,
Convert
££, 3
.
££3 4
ToDouble
££4 <
(
££< =
di
££= ?
.
££? @
Thursday
££@ H
.
££H I
	Substring
££I R
(
££R S
$num
££S T
,
££T U
$num
££V W
)
££W X
)
££X Y
+
££Z [
Convert
££\ c
.
££c d
ToDouble
££d l
(
££l m
di
££m o
.
££o p
Thursday
££p x
.
££x y
	Substring££y 
(££ 
$num££ 
,££ 
$num££ 
)££ 
)££ 
/££ 
$num££ 
)££ 
/££ 
$num££ 
,££ 
}
¥¥ 
)
¥¥ 
.
¥¥ 
AsEnumerable
¥¥ +
(
¥¥+ ,
)
¥¥, -
;
¥¥- .
var
¬¬ 
result2
¬¬ 
=
¬¬ 
from
¬¬ 
pr
¬¬ !
in
¬¬" $
dbresult
¬¬% -
group
­­ 
pr
­­  "
by
­­# %
new
­­& )
{
­­* +
pr
­­, .
.
­­. /
	profileId
­­/ 8
,
­­8 9
pr
­­: <
.
­­< =
UserId
­­= C
,
­­D E
pr
­­F H
.
­­H I
budgetConfirme
­­I W
,
­­Y Z
pr
­­[ ]
.
­­] ^
budgetGP
­­^ f
,
­­f g
pr
­­h j
.
­­j k
budgetDirection
­­k z
,
­­z {
pr
­­| ~
.
­­~ 
budgetJunior­­ 
,­­ 
pr­­ 
.­­ 
budgetSenior­­ 
,­­ 
pr­­  
.­­  ¡ 
budgetValidation­­¡ ±
}­­² ³
into­­µ ¹
g­­º »
select
®®  
new
®®! $
{
¯¯ 
g
°° 
.
°° 
Key
°° "
.
°°" #
UserId
°°# )
,
°°) *
g
±± 
.
±± 
Key
±± "
.
±±" #
	profileId
±±# ,
,
±±, -
g
³³ 
.
³³  
Key
³³  #
.
³³# $
budgetConfirme
³³$ 2
,
³³2 3
g
´´ 
.
´´  
Key
´´  #
.
´´# $
budgetGP
´´$ ,
,
´´, -
g
µµ 
.
µµ  
Key
µµ  #
.
µµ# $
budgetDirection
µµ$ 3
,
µµ3 4
g
¶¶ 
.
¶¶  
Key
¶¶  #
.
¶¶# $
budgetJunior
¶¶$ 0
,
¶¶0 1
g
·· 
.
··  
Key
··  #
.
··# $
budgetSenior
··$ 0
,
··0 1
g
¸¸ 
.
¸¸  
Key
¸¸  #
.
¸¸# $
budgetValidation
¸¸$ 4
,
¸¸4 5
charge
¹¹ $
=
¹¹% &
g
¹¹' (
.
¹¹( )
Sum
¹¹) ,
(
¹¹, -
x
¹¹- .
=>
¹¹/ 1
x
¹¹2 3
.
¹¹3 4
Monday
¹¹4 :
)
¹¹: ;
+
¹¹< =
g
¹¹> ?
.
¹¹? @
Sum
¹¹@ C
(
¹¹C D
x
¹¹D E
=>
¹¹F H
x
¹¹I J
.
¹¹J K
Tuesday
¹¹K R
)
¹¹R S
+
¹¹T U
g
¹¹V W
.
¹¹W X
Sum
¹¹X [
(
¹¹[ \
x
¹¹\ ]
=>
¹¹^ `
x
¹¹a b
.
¹¹b c
	Wednesday
¹¹c l
)
¹¹l m
+
¹¹n o
g
¹¹p q
.
¹¹q r
Sum
¹¹r u
(
¹¹u v
x
¹¹v w
=>
¹¹x z
x
¹¹{ |
.
¹¹| }
Friday¹¹} 
)¹¹ 
+¹¹ 
g¹¹ 
.¹¹ 
Sum¹¹ 
(¹¹ 
x¹¹ 
=>¹¹ 
x¹¹ 
.¹¹ 
Thursday¹¹ 
)¹¹ 
,¹¹ 
cout
ºº "
=
ºº# $
(
ºº% &
g
ºº& '
.
ºº' (
Sum
ºº( +
(
ºº+ ,
x
ºº, -
=>
ºº. 0
x
ºº1 2
.
ºº2 3
Monday
ºº3 9
)
ºº9 :
+
ºº; <
g
ºº= >
.
ºº> ?
Sum
ºº? B
(
ººB C
x
ººC D
=>
ººE G
x
ººH I
.
ººI J
Tuesday
ººJ Q
)
ººQ R
+
ººS T
g
ººU V
.
ººV W
Sum
ººW Z
(
ººZ [
x
ºº[ \
=>
ºº] _
x
ºº` a
.
ººa b
	Wednesday
ººb k
)
ººk l
+
ººm n
g
ººo p
.
ººp q
Sum
ººq t
(
ººt u
x
ººu v
=>
ººw y
x
ººz {
.
ºº{ |
Fridayºº| 
)ºº 
+ºº 
gºº 
.ºº 
Sumºº 
(ºº 
xºº 
=>ºº 
xºº 
.ºº 
Thursdayºº 
)ºº 
)ºº 
*
»» 
Convert
»» &
.
»»& '
ToDouble
»»' /
(
»»/ 0
_context
»»0 8
.
»»8 9
profile
»»9 @
.
»»@ A
Where
»»A F
(
»»F G
x
»»G H
=>
»»I K
x
»»L M
.
»»M N
annee
»»N S
==
»»T V
DateTime
»»W _
.
»»_ `
Now
»»` c
.
»»c d
Year
»»d h
.
»»h i
ToString
»»i q
(
»»q r
)
»»r s
&&
»»t v
x
»»w x
.
»»x y
	profileId»»y 
==»» 
g»» 
.»» 
Key»» 
.»» 
	profileId»» 
)»» 
.»» 
Select»» 
(»» 
x»» 
=>»»  ¢
x»»£ ¤
.»»¤ ¥
budget»»¥ «
)»»« ¬
.»»¬ ­
FirstOrDefault»»­ »
(»»» ¼
)»»¼ ½
)»»½ ¾
}
¼¼ 
;
¼¼ 
var
¿¿ 
result3
¿¿ 
=
¿¿ 
from
¿¿ 
pr
¿¿ !
in
¿¿" $
result2
¿¿% ,
group
ÀÀ 
pr
ÀÀ  "
by
ÀÀ# %
new
ÀÀ& )
{
ÀÀ* +
pr
ÀÀ, .
.
ÀÀ. /
	profileId
ÀÀ/ 8
,
ÀÀ8 9
pr
ÀÀ: <
.
ÀÀ< =
budgetConfirme
ÀÀ= K
,
ÀÀK L
pr
ÀÀM O
.
ÀÀO P
budgetGP
ÀÀP X
,
ÀÀX Y
pr
ÀÀZ \
.
ÀÀ\ ]
budgetDirection
ÀÀ] l
,
ÀÀl m
pr
ÀÀn p
.
ÀÀp q
budgetJunior
ÀÀq }
,
ÀÀ} ~
prÀÀ 
.ÀÀ 
budgetSeniorÀÀ 
,ÀÀ 
prÀÀ 
.ÀÀ  
budgetValidationÀÀ £
}ÀÀ¤ ¥
intoÀÀ¦ ª
gÀÀ« ¬
select
ÁÁ  
new
ÁÁ! $
{
ÂÂ 
g
ÃÃ 
.
ÃÃ  
Key
ÃÃ  #
.
ÃÃ# $
	profileId
ÃÃ$ -
,
ÃÃ- .
chargeEstime
ÄÄ *
=
ÄÄ+ ,
(
ÄÄ- .
g
ÄÄ. /
.
ÄÄ/ 0
Key
ÄÄ0 3
.
ÄÄ3 4
	profileId
ÄÄ4 =
==
ÄÄ> @
$str
ÄÄA K
?
ÄÄM N
g
ÄÄO P
.
ÄÄP Q
Key
ÄÄQ T
.
ÄÄT U
budgetConfirme
ÄÄU c
:
ÅÅ 
(
ÅÅ  
g
ÅÅ  !
.
ÅÅ! "
Key
ÅÅ" %
.
ÅÅ% &
	profileId
ÅÅ& /
==
ÅÅ0 2
$str
ÅÅ3 >
?
ÅÅ? @
g
ÅÅA B
.
ÅÅB C
Key
ÅÅC F
.
ÅÅF G
budgetDirection
ÅÅG V
:
ÆÆ 
(
ÆÆ  
g
ÆÆ  !
.
ÆÆ! "
Key
ÆÆ" %
.
ÆÆ% &
	profileId
ÆÆ& /
==
ÆÆ0 2
$str
ÆÆ3 7
?
ÆÆ8 9
g
ÆÆ: ;
.
ÆÆ; <
Key
ÆÆ< ?
.
ÆÆ? @
budgetGP
ÆÆ@ H
:
ÇÇ 
(
ÇÇ  
g
ÇÇ  !
.
ÇÇ! "
Key
ÇÇ" %
.
ÇÇ% &
	profileId
ÇÇ& /
==
ÇÇ0 2
$str
ÇÇ3 ;
?
ÇÇ< =
g
ÇÇ> ?
.
ÇÇ? @
Key
ÇÇ@ C
.
ÇÇC D
budgetJunior
ÇÇD P
:
ÈÈ 
(
ÈÈ  
g
ÈÈ  !
.
ÈÈ! "
Key
ÈÈ" %
.
ÈÈ% &
	profileId
ÈÈ& /
==
ÈÈ0 2
$str
ÈÈ3 ;
?
ÈÈ< =
g
ÈÈ> ?
.
ÈÈ? @
Key
ÈÈ@ C
.
ÈÈC D
budgetSenior
ÈÈD P
:
ÉÉ 
(
ÉÉ  
g
ÉÉ  !
.
ÉÉ! "
Key
ÉÉ" %
.
ÉÉ% &
	profileId
ÉÉ& /
==
ÉÉ0 2
$str
ÉÉ3 ?
?
ÉÉ@ A
g
ÉÉB C
.
ÉÉC D
Key
ÉÉD G
.
ÉÉG H
budgetValidation
ÉÉH X
:
ÊÊ 
$num
ÊÊ 
)
ÊÊ  
)
ÊÊ  !
)
ÊÊ! "
)
ÊÊ" #
)
ÊÊ# $
)
ËË 
,
ËË 

coutEstime
ÌÌ (
=
ÌÌ) *
(
ÌÌ+ ,
g
ÌÌ, -
.
ÌÌ- .
Key
ÌÌ. 1
.
ÌÌ1 2
	profileId
ÌÌ2 ;
==
ÌÌ< >
$str
ÌÌ? I
?
ÌÌJ K
g
ÌÌL M
.
ÌÌM N
Key
ÌÌN Q
.
ÌÌQ R
budgetConfirme
ÌÌR `
:
ÍÍ 
(
ÍÍ  
g
ÍÍ  !
.
ÍÍ! "
Key
ÍÍ" %
.
ÍÍ% &
	profileId
ÍÍ& /
==
ÍÍ0 2
$str
ÍÍ3 >
?
ÍÍ? @
g
ÍÍA B
.
ÍÍB C
Key
ÍÍC F
.
ÍÍF G
budgetDirection
ÍÍG V
:
ÎÎ 
(
ÎÎ  
g
ÎÎ  !
.
ÎÎ! "
Key
ÎÎ" %
.
ÎÎ% &
	profileId
ÎÎ& /
==
ÎÎ0 2
$str
ÎÎ3 7
?
ÎÎ8 9
g
ÎÎ: ;
.
ÎÎ; <
Key
ÎÎ< ?
.
ÎÎ? @
budgetGP
ÎÎ@ H
:
ÏÏ 
(
ÏÏ  
g
ÏÏ  !
.
ÏÏ! "
Key
ÏÏ" %
.
ÏÏ% &
	profileId
ÏÏ& /
==
ÏÏ0 2
$str
ÏÏ3 ;
?
ÏÏ< =
g
ÏÏ> ?
.
ÏÏ? @
Key
ÏÏ@ C
.
ÏÏC D
budgetDirection
ÏÏD S
:
ÐÐ 
(
ÐÐ  
g
ÐÐ  !
.
ÐÐ! "
Key
ÐÐ" %
.
ÐÐ% &
	profileId
ÐÐ& /
==
ÐÐ0 2
$str
ÐÐ3 ;
?
ÐÐ< =
g
ÐÐ> ?
.
ÐÐ? @
Key
ÐÐ@ C
.
ÐÐC D
budgetJunior
ÐÐD P
:
ÑÑ 
(
ÑÑ  
g
ÑÑ  !
.
ÑÑ! "
Key
ÑÑ" %
.
ÑÑ% &
	profileId
ÑÑ& /
==
ÑÑ0 2
$str
ÑÑ3 ?
?
ÑÑ@ A
g
ÑÑB C
.
ÑÑC D
Key
ÑÑD G
.
ÑÑG H
budgetValidation
ÑÑH X
:
ÒÒ 
$num
ÒÒ 
)
ÒÒ  
)
ÒÒ  !
)
ÒÒ! "
)
ÒÒ" #
)
ÒÒ# $
)
ÓÓ 
*
ÓÓ 
Convert
ÓÓ  '
.
ÓÓ' (
ToDouble
ÓÓ( 0
(
ÓÓ0 1
_context
ÓÓ1 9
.
ÓÓ9 :
profile
ÓÓ: A
.
ÓÓA B
Where
ÓÓB G
(
ÓÓG H
x
ÓÓH I
=>
ÓÓJ L
x
ÓÓL M
.
ÓÓM N
	profileId
ÓÓN W
==
ÓÓW Y
g
ÓÓZ [
.
ÓÓ[ \
Key
ÓÓ\ _
.
ÓÓ_ `
	profileId
ÓÓ` i
)
ÓÓi j
.
ÓÓj k
Select
ÓÓk q
(
ÓÓq r
x
ÓÓr s
=>
ÓÓs u
x
ÓÓu v
.
ÓÓv w
budget
ÓÓw }
)
ÓÓ} ~
.
ÓÓ~ 
FirstOrDefaultÓÓ 
(ÓÓ 
)ÓÓ 
)ÓÓ 
,ÓÓ 
nbusers
ÔÔ %
=
ÔÔ& '
g
ÔÔ( )
.
ÔÔ) *
Count
ÔÔ* /
(
ÔÔ/ 0
)
ÔÔ0 1
,
ÔÔ1 2
charge
ÕÕ $
=
ÕÕ$ %
g
ÕÕ& '
.
ÕÕ' (
Sum
ÕÕ( +
(
ÕÕ+ ,
x
ÕÕ, -
=>
ÕÕ. 0
Convert
ÕÕ1 8
.
ÕÕ8 9
ToDouble
ÕÕ9 A
(
ÕÕA B
x
ÕÕB C
.
ÕÕC D
charge
ÕÕD J
)
ÕÕJ K
)
ÕÕK L
,
ÕÕL M
cout
ÖÖ "
=
ÖÖ# $
g
ÖÖ% &
.
ÖÖ& '
Sum
ÖÖ' *
(
ÖÖ* +
x
ÖÖ+ ,
=>
ÖÖ- /
Convert
ÖÖ0 7
.
ÖÖ7 8
ToDouble
ÖÖ8 @
(
ÖÖ@ A
x
ÖÖA B
.
ÖÖB C
cout
ÖÖC G
)
ÖÖG H
)
×× 
}
ÝÝ 
;
ÝÝ 
return
 
Ok
 
(
 
result3
 
)
 
;
 
}
 	
[
 	
HttpPost
	 
(
 
$str
 !
)
! "
]
" #
public
 
IActionResult
 
satatByClient
 *
(
* +
List
+ /
<
/ 0
string
0 6
>
6 7
ClientId
8 @
)
@ A
{
   	
try
¡¡ 
{
¢¢ 
var
££ 
resultat
££ 
=
££ 
(
££  
from
££  $
edp
££% (
in
££) +
_context
££, 4
.
££4 5

ProjetEdps
££5 ?
where
¤¤  %
(
¤¤& '
ClientId
¤¤( 0
.
¤¤0 1
Count
¤¤1 6
==
¤¤7 9
$num
¤¤: ;
||
¤¤; =
ClientId
¤¤= E
.
¤¤E F
Contains
¤¤F N
(
¤¤N O
edp
¤¤O R
.
¤¤R S
clientId
¤¤S [
)
¤¤[ \
)
¦¦  !
select
¨¨  &
new
¨¨' *
{
©©  !#
chargeConsommerTotale
¬¬$ 9
=
¬¬9 :
edp
¬¬; >
.
¬¬> ?
ProjetLivraisons
¬¬? O
.
¬¬O P

SelectMany
¬¬P Z
(
¬¬Z [
x
¬¬[ \
=>
¬¬\ ^
x
¬¬^ _
.
¬¬_ `
DetailLivraisons
¬¬` p
)
¬¬p q
.
¬¬q r

SelectMany
¬¬r |
(
¬¬| }
x
¬¬} ~
=>¬¬~ 
x¬¬ 
.¬¬ 
taches¬¬ 
)¬¬ 
.¬¬ 
Sum¬¬ 
(¬¬ 
x¬¬ 
=>¬¬ 
Convert¬¬ 
.¬¬ 
ToDouble¬¬ £
(¬¬£ ¤
x¬¬¤ ¥
.¬¬¥ ¦
chargeConsomme¬¬¦ ´
)¬¬´ µ
)¬¬µ ¶
,¬¬¶ ·
chargePrprofile
¯¯$ 3
=
¯¯4 5
(
¯¯6 7
from
°°= A
tache
°°C H
in
°°I K
_context
°°L T
.
°°T U
Taches
°°U [
join
±±= A

DLivraison
±±B L
in
±±M O
_context
±±P X
.
±±X Y
DetailLivraisons
±±Y i
on
±±j l
tache
±±m r
.
±±r s 
detailLivraisonId±±s 
equals±± 

DLivraison±± 
.±± 
Id±± 
join
²²= A
	Livraison
²²B K
in
²²L N
_context
²²O W
.
²²W X
ProjetLivraisons
²²X h
on
²²i k

DLivraison
²²l v
.
²²v w 
ProjetLivraisonId²²w 
equals²² 
	Livraison²² 
.²² 
Id²² 
join
³³= A
user
³³B F
in
³³G I
_context
³³J R
.
³³R S
Users
³³S X
on
³³Y [
tache
³³\ a
.
³³a b
UserId
³³b h
equals
³³i o
user
³³q u
.
³³u v
IdUser
³³v |
join
´´= A
Profile
´´B I
in
´´J L
_context
´´M U
.
´´U V
profileUser
´´V a
on
´´b d
user
´´e i
.
´´i j
IdUser
´´j p
equals
´´q w
Profile
´´x 
.´´ 
userId´´ 
where
µµ= B
	Livraison
µµC L
.
µµL M
projetEdpId
µµM X
==
µµY [
edp
µµ\ _
.
µµ_ `
id
µµ` b
&&
µµc e
Profile
µµf m
.
µµm n
	dateDebut
µµn w
>=
µµw y
edp
µµz }
.
µµ} ~
	dateDebutµµ~ 
&&µµ 
Profileµµ 
.µµ 
dateFinµµ 
<=µµ 
edpµµ  
.µµ  ¡
dateFinµµ¡ ¨
group
¶¶= B
tache
¶¶C H
by
¶¶I K
Profile
¶¶L S
.
¶¶S T
	profileId
¶¶T ]
into
¶¶^ b
g
¶¶c d
select
ºº= C
new
ººD G
{
»»= >
charge
½½> D
=
½½D E
g
½½H I
.
½½I J
Sum
½½J M
(
½½M N
x
½½N O
=>
½½O Q
Convert
½½R Y
.
½½Y Z
ToDouble
½½Z b
(
½½b c
x
½½c d
.
½½d e
chargeConsomme
½½e s
)
½½s t
)
½½t u
*
½½v w
Convert
½½x 
.½½ 
ToDouble½½ 
(½½ 
_context½½ 
.½½ 
profile½½ 
.½½ 
Where½½ 
(½½  
x½½  ¡
=>½½¡ £
x½½£ ¤
.½½¤ ¥
annee½½¥ ª
==½½ª ¬
DateTime½½­ µ
.½½µ ¶
Now½½¶ ¹
.½½¹ º
Year½½º ¾
.½½¾ ¿
ToString½½¿ Ç
(½½Ç È
)½½È É
&&½½Ê Ì
x½½Í Î
.½½Î Ï
	profileId½½Ï Ø
==½½Ø Ú
g½½Ú Û
.½½Û Ü
Key½½Ü ß
)½½à á
.½½á â
Select½½â è
(½½è é
x½½é ê
=>½½ê ì
x½½ì í
.½½í î
budget½½î ô
)½½ô õ
.½½õ ö
FirstOrDefault½½ö 
(½½ 
)½½ 
)½½ 
}
¿¿= >
)
¿¿> ?
.
¿¿? @
Sum
¿¿@ C
(
¿¿C D
x
¿¿D E
=>
¿¿E G
x
¿¿G H
.
¿¿H I
charge
¿¿I O
)
¿¿O P
,
¿¿P Q
id
ÇÇ$ &
=
ÇÇ' (
edp
ÇÇ) ,
.
ÇÇ, -
id
ÇÇ- /
,
ÇÇ/ 0
commercantName
ÈÈ# 1
=
ÈÈ2 3
edp
ÈÈ4 7
.
ÈÈ7 8

Commercial
ÈÈ8 B
.
ÈÈB C
FullName
ÈÈC K
,
ÈÈK L

CodeProjet
ÉÉ$ .
=
ÉÉ/ 0
edp
ÉÉ1 4
.
ÉÉ4 5
CodeProjets
ÉÉ5 @
.
ÉÉ@ A
Numero
ÉÉA G
+
ÉÉH I
$str
ÉÉJ M
+
ÉÉN O
edp
ÉÉP S
.
ÉÉS T

CodeProjet
ÉÉT ^
,
ÉÉ^ _
natureCodeProjet
ÊÊ$ 4
=
ÊÊ5 6
edp
ÊÊ7 :
.
ÊÊ: ;
CodeProjets
ÊÊ; F
.
ÊÊF G
Nature
ÊÊG M
,
ÊÊM N
nom
ËË$ '
=
ËË( )
edp
ËË* -
.
ËË- .
Nom
ËË. 1
,
ËË1 2
edp
ÌÌ% (
.
ÌÌ( )
status
ÌÌ) /
,
ÌÌ/ 0
budgetInitial
ÍÍ$ 1
=
ÍÍ2 3
edp
ÍÍ4 7
.
ÍÍ7 8
BudgetInitial
ÍÍ8 E
,
ÍÍE F
budgetRallonge
ÎÎ$ 2
=
ÎÎ3 4
edp
ÎÎ5 8
.
ÎÎ8 9
BudgetRallonge
ÎÎ9 G
,
ÎÎG H

clientName
ÏÏ$ .
=
ÏÏ/ 0
edp
ÏÏ1 4
.
ÏÏ4 5
client
ÏÏ5 ;
.
ÏÏ; <
Nom
ÏÏ< ?
,
ÏÏ? @
dateCreation
ÐÐ$ 0
=
ÐÐ1 2
Convert
ÐÐ3 :
.
ÐÐ: ;

ToDateTime
ÐÐ; E
(
ÐÐE F
edp
ÐÐF I
.
ÐÐI J
DateCreation
ÐÐJ V
)
ÐÐV W
,
ÐÐW X
edp
ÑÑ$ '
.
ÑÑ' (
budgetSenior
ÑÑ( 4
,
ÑÑ4 5
edp
ÒÒ$ '
.
ÒÒ' ("
budgetSeniorRallonge
ÒÒ( <
,
ÒÒ< =
edp
ÔÔ$ '
.
ÔÔ' (
budgetConfirme
ÔÔ( 6
,
ÔÔ6 7
edp
ÕÕ$ '
.
ÕÕ' (
budgetDirection
ÕÕ( 7
,
ÕÕ7 8
edp
ÖÖ$ '
.
ÖÖ' (
budgetGP
ÖÖ( 0
,
ÖÖ0 1
edp
××$ '
.
××' (
budgetJunior
××( 4
,
××4 5
edp
ØØ$ '
.
ØØ' (
budgetValidation
ØØ( 8
,
ØØ8 9"
budgetConfirmeTotale
ÙÙ$ 8
=
ÙÙ9 :
edp
ÙÙ; >
.
ÙÙ> ?$
budgetConfirmeRallonge
ÙÙ? U
+
ÙÙV W
edp
ÙÙX [
.
ÙÙ[ \
budgetConfirme
ÙÙ\ j
,
ÙÙj k
budgetGPTotale
ÚÚ$ 2
=
ÚÚ3 4
edp
ÚÚ5 8
.
ÚÚ8 9
budgetGPRallonge
ÚÚ9 I
+
ÚÚJ K
edp
ÚÚL O
.
ÚÚO P
budgetGP
ÚÚP X
,
ÚÚX Y 
budgetJuniorTotale
ÛÛ$ 6
=
ÛÛ7 8
edp
ÛÛ9 <
.
ÛÛ< ="
budgetJuniorRallonge
ÛÛ= Q
+
ÛÛR S
edp
ÛÛT W
.
ÛÛW X
budgetJunior
ÛÛX d
,
ÛÛd e$
budgetValidationTotale
ÜÜ$ :
=
ÜÜ; <
edp
ÜÜ= @
.
ÜÜ@ A&
budgetValidationRallonge
ÜÜA Y
+
ÜÜZ [
edp
ÜÜ\ _
.
ÜÜ_ `
budgetValidation
ÜÜ` p
,
ÜÜp q 
budgetSeniorTotale
ÝÝ$ 6
=
ÝÝ7 8
edp
ÝÝ9 <
.
ÝÝ< ="
budgetSeniorRallonge
ÝÝ= Q
+
ÝÝR S
edp
ÝÝT W
.
ÝÝW X
budgetSenior
ÝÝX d
,
ÝÝd e
edp
ßß$ '
.
ßß' ($
budgetConfirmeRallonge
ßß( >
,
ßß> ?
edp
àà$ '
.
àà' (%
budgetDirectionRallonge
àà( ?
,
àà? @
edp
áá$ '
.
áá' (
budgetGPRallonge
áá( 8
,
áá8 9
edp
ãã$ '
.
ãã' ("
budgetJuniorRallonge
ãã( <
,
ãã< =
edp
ää$ '
.
ää' (&
budgetValidationRallonge
ää( @
,
ää@ A
ttm
åå$ '
=
åå' (
edp
åå) ,
.
åå, -
dateFinPrevue
åå- :
<
åå: ;
DateTime
åå< D
.
ååD E
Now
ååE H
.
ååH I
Date
ååI M
&&
ååN P
edp
ååQ T
.
ååT U
ProjetLivraisons
ååU e
.
ååe f
Where
ååf k
(
ååk l
x
åål m
=>
ååm o
x
ååo p
.
ååp q
StatusId
ååq y
!=
ååy {
$stråå| 
&&åå 
xåå 
.åå 
StatusIdåå 
!=åå 
$stråå £
)åå£ ¤
.åå¤ ¥
Countåå¥ ª
(ååª «
)åå« ¬
>åå¬ ­
$numåå­ ®
?åå¯ °
$stråå± ·
:åå¸ ¹
(ååº »
edpåå» ¾
.åå¾ ¿
dateFinPrevueåå¿ Ì
>ååÍ Î
DateTimeååÏ ×
.åå× Ø
NowååØ Û
.ååÛ Ü
DateååÜ à
||ååá ã
edpååä ç
.ååç è
dateFinPrevueååè õ
==ååö ø
nullååù ý
?ååþ ÿ
$stråå 
:åå 
$stråå 
)åå 
,åå "
countProjetLivraison
ææ$ 8
=
ææ9 :
edp
ææ; >
.
ææ> ?
ProjetLivraisons
ææ? O
.
ææO P
Count
ææP U
(
ææU V
)
ææV W
,
ææW X
}
éé  !
)
éé! "
.
éé" #
Distinct
éé# +
(
éé+ ,
)
éé, -
.
éé- .
ToList
éé. 4
(
éé4 5
)
éé5 6
.
éé6 7
OrderBy
éé7 >
(
éé> ?
x
éé? @
=>
éé@ B
x
ééB C
.
ééC D

clientName
ééD N
)
ééN O
;
ééO P
return
ìì 
Ok
ìì 
(
ìì 
resultat
ìì "
)
ìì" #
;
ìì# $
}
íí 
catch
îî 
(
îî 
	Exception
îî 
e
îî 
)
îî 
{
ïï 
return
ññ 

BadRequest
ññ !
(
ññ! "
e
ññ" #
)
ññ# $
;
ññ$ %
}
òò 
}
ôô 	
[
÷÷ 	
HttpPost
÷÷	 
(
÷÷ 
$str
÷÷ 3
)
÷÷3 4
]
÷÷4 5
public
øø 
IActionResult
øø -
satatDashboardLivraisonComtable
øø <
(
øø< =
Search
øø= C
search
øøD J
)
øøJ K
{
ùù 	
try
úú 
{
ûû 
if
ýý 
(
ýý 
search
ýý 
.
ýý 
	dateDebut
ýý $
.
ýý$ %
Equals
ýý% +
(
ýý+ ,
$str
ýý, A
)
ýýA B
&&
ýýC E
search
ýýF L
.
ýýL M
dateFin
ýýM T
.
ýýT U
Equals
ýýU [
(
ýý[ \
$str
ýý\ q
)
ýýq r
)
ýýr s
{
þþ 
var
 
dbresult
  
=
! "
(
# $
from
$ (
edp
) ,
in
- /
_context
0 8
.
8 9

ProjetEdps
9 C
where
$ )
(
* +
(
2 3
search
3 9
.
9 :
	idClients
: C
.
C D
Count
D I
==
J L
$num
M N
||
O Q
search
R X
.
X Y
	idClients
Y b
.
b c
Contains
c k
(
k l
edp
l o
.
o p
clientId
p x
)
x y
)
y z
&&
2 4
(
5 6
String
6 <
.
< =
IsNullOrEmpty
= J
(
J K
search
K Q
.
Q R
commercialId
R ^
)
^ _
||
` b
search
c i
.
i j
commercialId
j v
==
w y
edp
z }
.
} ~
CommercialId~ 
) 
&&
2 4
(
5 6
String
6 <
.
< =
IsNullOrEmpty
= J
(
J K
search
K Q
.
Q R
status
R X
)
X Y
||
Z \
search
] c
.
c d
status
d j
==
k m
edp
n q
.
q r
status
r x
)
x y
&&
5 7
(
8 9
(
5 6
(
6 7
string
7 =
.
= >
IsNullOrEmpty
> K
(
K L
search
L R
.
R S
status
S Y
)
Y Z
||
[ ]
search
^ d
.
d e
status
e k
==
l n
$str
o x
)
x y
&&
z |
edp} 
. 
status 
== 
$str 
) 
||
D F
search
G M
.
M N
annees
N T
==
U W
edp
X [
.
[ \
	dateDebut
\ e
.
e f
Value
f k
.
k l
Year
l p
||
D F
search
G M
.
M N
annees
N T
==
U W
edp
X [
.
[ \
dateFin
\ c
.
c d
Value
d i
.
i j
Year
j n
||
D F
search
G M
.
M N
annees
N T
==
U W
edp
X [
.
[ \
dateFinPrevue
\ i
.
i j
Value
j o
.
o p
Year
p t
)
B C
)
B C
join
$ (
pl
) +
in
, .
_context
/ 7
.
7 8
ProjetLivraisons
8 H
on
I K
edp
L O
.
O P
id
P R
equals
S Y
pl
Z \
.
\ ]
projetEdpId
] h
into
$ (
joinedT
) 0
from
$ (
r
) *
in
+ -
joinedT
. 5
.
5 6
DefaultIfEmpty
6 D
(
D E
)
E F
join
$ (
dl
) +
in
, .
_context
/ 7
.
7 8
DetailLivraisons
8 H
on
I K
r
L M
.
M N
Id
N P
equals
Q W
dl
X Z
.
Z [
ProjetLivraisonId
[ l
into
' +
joinedd
, 3
from
$ (
dd
) +
in
, .
joinedd
/ 6
.
6 7
DefaultIfEmpty
7 E
(
E F
)
F G
join
$ (
t
) *
in
+ -
_context
. 6
.
6 7
Taches
7 =
on
> @
dd
A C
.
C D
Id
D F
equals
G M
t
N O
.
O P
detailLivraisonId
P a
into
1 5
joinedt
6 =
from
$ (
tt
) +
in
, .
joinedt
/ 6
.
6 7
DefaultIfEmpty
7 E
(
E F
)
F G
join
$ (
p
) *
in
+ -
_context
. 6
.
6 7
profileUser
7 B
on
C E
tt
F H
.
H I
UserId
I O
equals
P V
p
W X
.
X Y
userId
Y _
into
' +
joinedtg
, 4
from
$ (
tte
) ,
in
- /
joinedtg
0 8
.
8 9
DefaultIfEmpty
9 G
(
G H
)
H I
join
  $ (
di
  ) +
in
  , .
_context
  / 7
.
  7 8
DetailImputations
  8 I
on
  J L
tt
  M O
.
  O P
Id
  P R
equals
  S Y
di
  Z \
.
  \ ]
TacheId
  ] d
into
¢¢& *
	joinedtge
¢¢+ 4
from
££$ (
tted
££) -
in
££. 0
	joinedtge
££1 :
.
££: ;
DefaultIfEmpty
££; I
(
££I J
)
££J K
select
¥¥$ *
new
¥¥+ .
{
¦¦$ %
budgetInitial
§§( 5
=
§§6 7
edp
§§8 ;
.
§§; <
BudgetInitial
§§< I
+
§§J K
(
§§L M
edp
§§M P
.
§§P Q
BudgetRallonge
§§Q _
!=
§§` b
null
§§c g
?
§§h i
edp
§§j m
.
§§m n
BudgetRallonge
§§n |
:
§§} ~
$num§§ 
)§§ 
,§§ 
id
ªª( *
=
ªª+ ,
edp
ªª- 0
.
ªª0 1
id
ªª1 3
,
ªª3 4
commercantName
««( 6
=
««7 8
edp
««9 <
.
««< =

Commercial
««= G
.
««G H
FullName
««H P
,
««P Q

CodeProjet
¬¬( 2
=
¬¬3 4
edp
¬¬5 8
.
¬¬8 9
CodeProjets
¬¬9 D
.
¬¬D E
Numero
¬¬E K
+
¬¬L M
$str
¬¬N Q
+
¬¬R S
edp
¬¬T W
.
¬¬W X

CodeProjet
¬¬X b
,
¬¬b c
natureCodeProjet
­­( 8
=
­­9 :
edp
­­; >
.
­­> ?
CodeProjets
­­? J
.
­­J K
Nature
­­K Q
,
­­Q R
nom
®®( +
=
®®, -
edp
®®. 1
.
®®1 2
Nom
®®2 5
,
®®5 6

clientName
¯¯( 2
=
¯¯3 4
edp
¯¯5 8
.
¯¯8 9
client
¯¯9 ?
.
¯¯? @
Nom
¯¯@ C
,
¯¯C D
dateCreation
°°( 4
=
°°5 6
edp
°°7 :
.
°°: ;
DateCreation
°°; G
,
°°G H
edp
±±( +
.
±±+ ,
dateFin
±±, 3
,
±±3 4
edp
²²( +
.
²²+ ,
dateFinPrevue
²², 9
,
²²9 :
edp
³³( +
.
³³+ ,
status
³³, 2
,
³³2 3
edp
´´( +
.
´´+ ,
Description
´´, 7
,
´´7 8"
budgetConfirmeTotale
··( <
=
··= >
(
··? @
edp
··@ C
.
··C D$
budgetConfirmeRallonge
··D Z
!=
··[ ]
null
··^ b
?
··c d
edp
··e h
.
··h i$
budgetConfirmeRallonge
··i 
:·· 
$num·· 
)·· 
+·· 
(·· 
edp·· 
.·· 
budgetConfirme·· 
!=·· 
null·· ¢
?··£ ¤
edp··¥ ¨
.··¨ ©
budgetConfirme··© ·
:··¸ ¹
$num··º »
)··» ¼
,··¼ ½
budgetGPTotale
¹¹( 6
=
¹¹7 8
(
¹¹9 :
edp
¹¹: =
.
¹¹= >
budgetGPRallonge
¹¹> N
!=
¹¹O Q
null
¹¹R V
?
¹¹W X
edp
¹¹Y \
.
¹¹\ ]
budgetGPRallonge
¹¹] m
:
¹¹n o
$num
¹¹p q
)
¹¹q r
+
¹¹s t
(
¹¹u v
edp
¹¹v y
.
¹¹y z
budgetGP¹¹z 
!=¹¹ 
null¹¹ 
?¹¹ 
edp¹¹ 
.¹¹ 
budgetGP¹¹ 
:¹¹ 
$num¹¹ 
)¹¹ 
,¹¹  
budgetJuniorTotale
¼¼( :
=
¼¼; <
(
¼¼= >
edp
¼¼> A
.
¼¼A B
budgetJunior
¼¼B N
!=
¼¼O Q
null
¼¼R V
?
¼¼W X
edp
¼¼Y \
.
¼¼\ ]
budgetJunior
¼¼] i
:
¼¼j k
$num
¼¼l m
)
¼¼m n
+
¼¼o p
(
¼¼q r
edp
¼¼r u
.
¼¼u v#
budgetJuniorRallonge¼¼v 
!=¼¼ 
null¼¼ 
?¼¼ 
edp¼¼ 
.¼¼ $
budgetJuniorRallonge¼¼ ­
:¼¼® ¯
$num¼¼° ±
)¼¼± ²
,¼¼² ³$
budgetValidationTotale
¾¾( >
=
¾¾? @
(
¾¾A B
edp
¾¾B E
.
¾¾E F
budgetValidation
¾¾F V
!=
¾¾W Y
null
¾¾Z ^
?
¾¾_ `
edp
¾¾a d
.
¾¾d e
budgetValidation
¾¾e u
:
¾¾v w
$num
¾¾x y
)
¾¾y z
+
¾¾{ |
(
¾¾} ~
edp¾¾~ 
.¾¾ (
budgetValidationRallonge¾¾ 
!=¾¾ 
null¾¾ ¢
?¾¾£ ¤
edp¾¾¥ ¨
.¾¾¨ ©(
budgetValidationRallonge¾¾© Á
:¾¾Â Ã
$num¾¾Ä Å
)¾¾Å Æ
,¾¾Æ Ç 
budgetSeniorTotale
ÀÀ( :
=
ÀÀ; <
(
ÀÀ= >
edp
ÀÀ> A
.
ÀÀA B
budgetSenior
ÀÀB N
!=
ÀÀO Q
null
ÀÀR V
?
ÀÀW X
edp
ÀÀY \
.
ÀÀ\ ]
budgetSenior
ÀÀ] i
:
ÀÀj k
$num
ÀÀl m
)
ÀÀm n
+
ÀÀo p
(
ÀÀq r
edp
ÀÀr u
.
ÀÀu v#
budgetSeniorRallongeÀÀv 
!=ÀÀ 
nullÀÀ 
?ÀÀ 
edpÀÀ 
.ÀÀ $
budgetSeniorRallongeÀÀ ­
:ÀÀ® ¯
$numÀÀ° ±
)ÀÀ± ²
,ÀÀ² ³#
budgetDirectionTotale
ÂÂ( =
=
ÂÂ> ?
(
ÂÂ@ A
edp
ÂÂA D
.
ÂÂD E
budgetDirection
ÂÂE T
!=
ÂÂU W
null
ÂÂX \
?
ÂÂ] ^
edp
ÂÂ_ b
.
ÂÂb c
budgetDirection
ÂÂc r
:
ÂÂs t
$num
ÂÂu v
)
ÂÂv w
+
ÂÂx y
(
ÂÂz {
edp
ÂÂ{ ~
.
ÂÂ~ &
budgetDirectionRallongeÂÂ 
!=ÂÂ 
nullÂÂ 
?ÂÂ  
edpÂÂ¡ ¤
.ÂÂ¤ ¥'
budgetDirectionRallongeÂÂ¥ ¼
:ÂÂ½ ¾
$numÂÂ¿ À
)ÂÂÀ Á
,ÂÂÁ Â"
countProjetLivraison
ÅÅ( <
=
ÅÅ= >
edp
ÅÅ? B
.
ÅÅB C
ProjetLivraisons
ÅÅC S
.
ÅÅS T
Count
ÅÅT Y
(
ÅÅY Z
)
ÅÅZ [
,
ÅÅ[ \
tte
ÇÇ( +
.
ÇÇ+ ,
	profileId
ÇÇ, 5
,
ÇÇ5 6
Monday
ÈÈ( .
=
ÈÈ/ 0
(
ÈÈ1 2
Convert
ÈÈ2 9
.
ÈÈ9 :
ToDouble
ÈÈ: B
(
ÈÈB C
tted
ÈÈC G
.
ÈÈG H
Monday
ÈÈH N
.
ÈÈN O
	Substring
ÈÈO X
(
ÈÈX Y
$num
ÈÈY Z
,
ÈÈZ [
$num
ÈÈ\ ]
)
ÈÈ] ^
)
ÈÈ^ _
+
ÈÈ` a
Convert
ÈÈb i
.
ÈÈi j
ToDouble
ÈÈj r
(
ÈÈr s
tted
ÈÈs w
.
ÈÈw x
Monday
ÈÈx ~
.
ÈÈ~ 
	SubstringÈÈ 
(ÈÈ 
$numÈÈ 
,ÈÈ 
$numÈÈ 
)ÈÈ 
)ÈÈ 
/ÈÈ 
$numÈÈ 
)ÈÈ 
/ÈÈ 
$numÈÈ 
,ÈÈ 
Tuesday
ÉÉ( /
=
ÉÉ0 1
(
ÉÉ2 3
Convert
ÉÉ3 :
.
ÉÉ: ;
ToDouble
ÉÉ; C
(
ÉÉC D
tted
ÉÉD H
.
ÉÉH I
Tuesday
ÉÉI P
.
ÉÉP Q
	Substring
ÉÉQ Z
(
ÉÉZ [
$num
ÉÉ[ \
,
ÉÉ\ ]
$num
ÉÉ^ _
)
ÉÉ_ `
)
ÉÉ` a
+
ÉÉb c
Convert
ÉÉd k
.
ÉÉk l
ToDouble
ÉÉl t
(
ÉÉt u
tted
ÉÉu y
.
ÉÉy z
TuesdayÉÉz 
.ÉÉ 
	SubstringÉÉ 
(ÉÉ 
$numÉÉ 
,ÉÉ 
$numÉÉ 
)ÉÉ 
)ÉÉ 
/ÉÉ 
$numÉÉ 
)ÉÉ 
/ÉÉ 
$numÉÉ 
,ÉÉ 
Friday
ÊÊ( .
=
ÊÊ/ 0
(
ÊÊ1 2
Convert
ÊÊ2 9
.
ÊÊ9 :
ToDouble
ÊÊ: B
(
ÊÊB C
tted
ÊÊC G
.
ÊÊG H
Friday
ÊÊH N
.
ÊÊN O
	Substring
ÊÊO X
(
ÊÊX Y
$num
ÊÊY Z
,
ÊÊZ [
$num
ÊÊ\ ]
)
ÊÊ] ^
)
ÊÊ^ _
+
ÊÊ` a
Convert
ÊÊb i
.
ÊÊi j
ToDouble
ÊÊj r
(
ÊÊr s
tted
ÊÊs w
.
ÊÊw x
Friday
ÊÊx ~
.
ÊÊ~ 
	SubstringÊÊ 
(ÊÊ 
$numÊÊ 
,ÊÊ 
$numÊÊ 
)ÊÊ 
)ÊÊ 
/ÊÊ 
$numÊÊ 
)ÊÊ 
/ÊÊ 
$numÊÊ 
,ÊÊ 
	Wednesday
ËË( 1
=
ËË2 3
(
ËË4 5
Convert
ËË5 <
.
ËË< =
ToDouble
ËË= E
(
ËËE F
tted
ËËF J
.
ËËJ K
	Wednesday
ËËK T
.
ËËT U
	Substring
ËËU ^
(
ËË^ _
$num
ËË_ `
,
ËË` a
$num
ËËb c
)
ËËc d
)
ËËd e
+
ËËf g
Convert
ËËh o
.
ËËo p
ToDouble
ËËp x
(
ËËx y
tted
ËËy }
.
ËË} ~
	WednesdayËË~ 
.ËË 
	SubstringËË 
(ËË 
$numËË 
,ËË 
$numËË 
)ËË 
)ËË 
/ËË 
$numËË 
)ËË 
/ËË  
$numËË¡ ¢
,ËË¢ £
Thursday
ÌÌ( 0
=
ÌÌ1 2
(
ÌÌ3 4
Convert
ÌÌ4 ;
.
ÌÌ; <
ToDouble
ÌÌ< D
(
ÌÌD E
tted
ÌÌE I
.
ÌÌI J
Thursday
ÌÌJ R
.
ÌÌR S
	Substring
ÌÌS \
(
ÌÌ\ ]
$num
ÌÌ] ^
,
ÌÌ^ _
$num
ÌÌ` a
)
ÌÌa b
)
ÌÌb c
+
ÌÌd e
Convert
ÌÌf m
.
ÌÌm n
ToDouble
ÌÌn v
(
ÌÌv w
tted
ÌÌw {
.
ÌÌ{ |
ThursdayÌÌ| 
.ÌÌ 
	SubstringÌÌ 
(ÌÌ 
$numÌÌ 
,ÌÌ 
$numÌÌ 
)ÌÌ 
)ÌÌ 
/ÌÌ 
$numÌÌ 
)ÌÌ 
/ÌÌ 
$numÌÌ 
,ÌÌ  
}
ÓÓ$ %
)
ÓÓ% &
.
ÓÓ& '
ToList
ÓÓ' -
(
ÓÓ- .
)
ÓÓ. /
;
ÓÓ/ 0
var
ÔÔ 
result1
ÔÔ 
=
ÔÔ  !
(
ÔÔ" #
from
ÔÔ# '
edp
ÔÔ( +
in
ÔÔ, .
dbresult
ÔÔ/ 7
group
ÕÕ# (
edp
ÕÕ) ,
by
ÕÕ- /
new
ÕÕ0 3
{
ÖÖ# $
edp
××' *
.
××* +
	profileId
××+ 4
,
××4 5
edp
ØØ' *
.
ØØ* +
Description
ØØ+ 6
,
ØØ6 7
edp
ÙÙ' *
.
ÙÙ* +
id
ÙÙ+ -
,
ÙÙ- .
edp
ÚÚ' *
.
ÚÚ* +
commercantName
ÚÚ+ 9
,
ÚÚ9 :
edp
ÛÛ' *
.
ÛÛ* +

CodeProjet
ÛÛ+ 5
,
ÛÛ5 6
edp
ÜÜ' *
.
ÜÜ* +
natureCodeProjet
ÜÜ+ ;
,
ÜÜ; <
edp
ÝÝ' *
.
ÝÝ* +
nom
ÝÝ+ .
,
ÝÝ. /
edp
ÞÞ' *
.
ÞÞ* +
budgetInitial
ÞÞ+ 8
,
ÞÞ8 9
edp
ßß' *
.
ßß* +

clientName
ßß+ 5
,
ßß5 6
edp
àà' *
.
àà* +
dateCreation
àà+ 7
,
àà7 8
edp
áá' *
.
áá* +
dateFin
áá+ 2
,
áá2 3
edp
ââ' *
.
ââ* +
dateFinPrevue
ââ+ 8
,
ââ8 9
edp
ãã' *
.
ãã* +
status
ãã+ 1
,
ãã1 2
edp
ää' *
.
ää* +#
budgetDirectionTotale
ää+ @
,
ää@ A
edp
åå' *
.
åå* +"
budgetConfirmeTotale
åå+ ?
,
åå? @
edp
ææ' *
.
ææ* +
budgetGPTotale
ææ+ 9
,
ææ9 :
edp
çç' *
.
çç* + 
budgetJuniorTotale
çç+ =
,
çç= >
edp
èè' *
.
èè* +$
budgetValidationTotale
èè+ A
,
èèA B
edp
éé' *
.
éé* + 
budgetSeniorTotale
éé+ =
,
éé= >
edp
ëë' *
.
ëë* +"
countProjetLivraison
ëë+ ?
,
ëë? @
}
ìì# $
into
ìì% )
g
ìì* +
select
íí# )
new
íí* -
{
îî# $
g
ïï' (
.
ïï( )
Key
ïï) ,
.
ïï, -
	profileId
ïï- 6
,
ïï6 7
g
ññ' (
.
ññ( )
Key
ññ) ,
.
ññ, -
id
ññ- /
,
ññ/ 0
g
òò' (
.
òò( )
Key
òò) ,
.
òò, -
Description
òò- 8
,
òò8 9
g
óó' (
.
óó( )
Key
óó) ,
.
óó, -
commercantName
óó- ;
,
óó; <
g
ôô' (
.
ôô( )
Key
ôô) ,
.
ôô, -
dateFinPrevue
ôô- :
,
ôô: ;
g
õõ' (
.
õõ( )
Key
õõ) ,
.
õõ, -
dateFin
õõ- 4
,
õõ4 5
g
öö' (
.
öö( )
Key
öö) ,
.
öö, -

CodeProjet
öö- 7
,
öö7 8
g
÷÷' (
.
÷÷( )
Key
÷÷) ,
.
÷÷, -
natureCodeProjet
÷÷- =
,
÷÷= >
g
øø' (
.
øø( )
Key
øø) ,
.
øø, -
nom
øø- 0
,
øø0 1
g
ùù' (
.
ùù( )
Key
ùù) ,
.
ùù, -
budgetInitial
ùù- :
,
ùù: ;
g
úú' (
.
úú( )
Key
úú) ,
.
úú, -

clientName
úú- 7
,
úú7 8
g
ûû' (
.
ûû( )
Key
ûû) ,
.
ûû, -
dateCreation
ûû- 9
,
ûû9 :
g
üü' (
.
üü( )
Key
üü) ,
.
üü, -
status
üü- 3
,
üü3 4
g
ýý' (
.
ýý( )
Key
ýý) ,
.
ýý, -"
countProjetLivraison
ýý- A
,
ýýA B

coutEstime
' 1
=
2 3
g
4 5
.
5 6
Key
6 9
.
9 :"
budgetConfirmeTotale
: N
*
O P
Convert
Q X
.
X Y
ToDouble
Y a
(
a b
_context
b j
.
j k
profile
k r
.
r s
Where
s x
(
x y
x
y z
=>
{ }
x
~ 
. 
	profileId 
== 
$str 
) 
. 
Select 
(  
x  ¡
=>¢ ¤
x¥ ¦
.¦ §
budget§ ­
)­ ®
.® ¯
FirstOrDefault¯ ½
(½ ¾
)¾ ¿
)¿ À
+
& '
g
( )
.
) *
Key
* -
.
- .#
budgetDirectionTotale
. C
*
D E
Convert
F M
.
M N
ToDouble
N V
(
V W
_context
W _
.
_ `
profile
` g
.
g h
Where
h m
(
m n
x
n o
=>
p r
x
s t
.
t u
	profileId
u ~
== 
$str 
) 
. 
Select 
( 
x 
=> 
x 
. 
budget £
)£ ¤
.¤ ¥
FirstOrDefault¥ ³
(³ ´
)´ µ
)µ ¶
+
& '
g
( )
.
) *
Key
* -
.
- .
budgetGPTotale
. <
*
= >
Convert
? F
.
F G
ToDouble
G O
(
O P
_context
P X
.
X Y
profile
Y `
.
` a
Where
a f
(
f g
x
g h
=>
i k
x
l m
.
m n
	profileId
n w
==
x z
$str
{ 
) 
. 
Select 
( 
x 
=> 
x 
. 
budget 
) 
. 
FirstOrDefault ¥
(¥ ¦
)¦ §
)§ ¨
+
& '
g
( )
.
) *
Key
* -
.
- . 
budgetJuniorTotale
. @
*
A B
Convert
C J
.
J K
ToDouble
K S
(
S T
_context
T \
.
\ ]
profile
] d
.
d e
Where
e j
(
j k
x
k l
=>
m o
x
p q
.
q r
	profileId
r {
==
| ~
$str 
) 
. 
Select 
( 
x 
=> 
x 
. 
budget 
) 
. 
FirstOrDefault ­
(­ ®
)® ¯
)¯ °
+
& '
g
( )
.
) *
Key
* -
.
- . 
budgetSeniorTotale
. @
*
A B
Convert
C J
.
J K
ToDouble
K S
(
S T
_context
T \
.
\ ]
profile
] d
.
d e
Where
e j
(
j k
x
k l
=>
m o
x
p q
.
q r
	profileId
r {
==
| ~
$str 
) 
. 
Select 
( 
x 
=> 
x 
. 
budget 
) 
. 
FirstOrDefault ­
(­ ®
)® ¯
)¯ °
+
& '
g
( )
.
) *
Key
* -
.
- .$
budgetValidationTotale
. D
*
E F
Convert
G N
.
N O
ToDouble
O W
(
W X
_context
X `
.
` a
profile
a h
.
h i
Where
i n
(
n o
x
o p
=>
q s
x
t u
.
u v
	profileId
v 
== 
$str 
) 
. 
Select 
( 
x 
=> 
x 
. 
budget ¥
)¥ ¦
.¦ §
FirstOrDefault§ µ
(µ ¶
)¶ ·
)· ¸
,¸ ¹
charge
' -
=
. /
g
0 1
.
1 2
Sum
2 5
(
5 6
x
6 7
=>
8 :
x
; <
.
< =
Monday
= C
)
C D
+
E F
g
G H
.
H I
Sum
I L
(
L M
x
M N
=>
O Q
x
R S
.
S T
Tuesday
T [
)
[ \
+
] ^
g
_ `
.
` a
Sum
a d
(
d e
x
e f
=>
g i
x
j k
.
k l
	Wednesday
l u
)
u v
+
w x
g
y z
.
z {
Sum
{ ~
(
~ 
x 
=> 
x 
. 
Friday 
) 
+ 
g 
. 
Sum 
( 
x 
=> 
x 
. 
Thursday ¥
)¥ ¦
,¦ §
cout
' +
=
, -
(
. /
g
/ 0
.
0 1
Sum
1 4
(
4 5
x
5 6
=>
7 9
x
: ;
.
; <
Monday
< B
)
B C
+
D E
g
F G
.
G H
Sum
H K
(
K L
x
L M
=>
N P
x
Q R
.
R S
Tuesday
S Z
)
Z [
+
\ ]
g
^ _
.
_ `
Sum
` c
(
c d
x
d e
=>
f h
x
i j
.
j k
	Wednesday
k t
)
t u
+
v w
g
x y
.
y z
Sum
z }
(
} ~
x
~ 
=> 
x 
. 
Friday 
) 
+ 
g 
. 
Sum 
( 
x 
=> 
x 
. 
Thursday ¤
)¤ ¥
)¥ ¦
*
& '
Convert
( /
.
/ 0
ToDouble
0 8
(
8 9
_context
9 A
.
A B
profile
B I
.
I J
Where
J O
(
O P
x
P Q
=>
R T
x
U V
.
V W
annee
W \
==
] _
DateTime
` h
.
h i
Now
i l
.
l m
Year
m q
.
q r
ToString
r z
(
z {
)
{ |
&&
} 
x 
. 
	profileId 
== 
g 
. 
Key 
. 
	profileId 
) 
.  
Select  ¦
(¦ §
x§ ¨
=>© «
x¬ ­
.­ ®
budget® ´
)´ µ
.µ ¶
FirstOrDefault¶ Ä
(Ä Å
)Å Æ
)Æ Ç
}
# $
)
$ %
.
% &
ToList
& ,
(
, -
)
- .
;
. /
var
 
ResultFinal
 #
=
$ %
(
& '
from
' +
edp
, /
in
0 2
result1
3 :
group
' ,
edp
- 0
by
1 3
new
4 7
{
' (
edp
+ .
.
. /
Description
/ :
,
: ;
edp
¡¡+ .
.
¡¡. /
dateFin
¡¡/ 6
,
¡¡6 7
edp
¢¢+ .
.
¢¢. /
dateFinPrevue
¢¢/ <
,
¢¢< =
edp
££+ .
.
££. /
id
££/ 1
,
££1 2
edp
¤¤+ .
.
¤¤. /
commercantName
¤¤/ =
,
¤¤= >
edp
¥¥+ .
.
¥¥. /

CodeProjet
¥¥/ 9
,
¥¥9 :
edp
¦¦+ .
.
¦¦. /
natureCodeProjet
¦¦/ ?
,
¦¦? @
edp
§§+ .
.
§§. /
nom
§§/ 2
,
§§2 3
edp
¨¨+ .
.
¨¨. /
budgetInitial
¨¨/ <
,
¨¨< =
edp
©©+ .
.
©©. /

clientName
©©/ 9
,
©©9 :
edp
ªª+ .
.
ªª. /
dateCreation
ªª/ ;
,
ªª; <
edp
¬¬+ .
.
¬¬. /
status
¬¬/ 5
,
¬¬5 6
edp
²²+ .
.
²². /"
countProjetLivraison
²²/ C
,
²²C D
edp
´´+ .
.
´´. /

coutEstime
´´/ 9
}
¶¶' (
into
¶¶) -
g
¶¶. /
select
··' -
new
··. 1
{
¸¸' (
g
½½+ ,
.
½½, -
Key
½½- 0
.
½½0 1
id
½½1 3
,
½½3 4
g
¾¾+ ,
.
¾¾, -
Key
¾¾- 0
.
¾¾0 1
Description
¾¾1 <
,
¾¾< =
g
¿¿+ ,
.
¿¿, -
Key
¿¿- 0
.
¿¿0 1
commercantName
¿¿1 ?
,
¿¿? @
g
ÀÀ+ ,
.
ÀÀ, -
Key
ÀÀ- 0
.
ÀÀ0 1

CodeProjet
ÀÀ1 ;
,
ÀÀ; <
g
ÁÁ+ ,
.
ÁÁ, -
Key
ÁÁ- 0
.
ÁÁ0 1
natureCodeProjet
ÁÁ1 A
,
ÁÁA B
g
ÂÂ+ ,
.
ÂÂ, -
Key
ÂÂ- 0
.
ÂÂ0 1
dateFin
ÂÂ1 8
,
ÂÂ8 9
g
ÃÃ+ ,
.
ÃÃ, -
Key
ÃÃ- 0
.
ÃÃ0 1
dateFinPrevue
ÃÃ1 >
,
ÃÃ> ?
g
ÄÄ+ ,
.
ÄÄ, -
Key
ÄÄ- 0
.
ÄÄ0 1
nom
ÄÄ1 4
,
ÄÄ4 5
g
ÅÅ+ ,
.
ÅÅ, -
Key
ÅÅ- 0
.
ÅÅ0 1

clientName
ÅÅ1 ;
,
ÅÅ; <
g
ÆÆ+ ,
.
ÆÆ, -
Key
ÆÆ- 0
.
ÆÆ0 1
dateCreation
ÆÆ1 =
,
ÆÆ= >
g
ÈÈ+ ,
.
ÈÈ, -
Key
ÈÈ- 0
.
ÈÈ0 1
status
ÈÈ1 7
,
ÈÈ7 8
g
ÉÉ+ ,
.
ÉÉ, -
Key
ÉÉ- 0
.
ÉÉ0 1"
countProjetLivraison
ÉÉ1 E
,
ÉÉE F
g
ËË+ ,
.
ËË, -
Key
ËË- 0
.
ËË0 1
budgetInitial
ËË1 >
,
ËË> ?
showDetails
ÌÌ+ 6
=
ÌÌ7 8
false
ÌÌ9 >
,
ÌÌ> ?

coutEstime
ÍÍ+ 5
=
ÍÍ6 7
g
ÍÍ8 9
.
ÍÍ9 :
Key
ÍÍ: =
.
ÍÍ= >

coutEstime
ÍÍ> H
==
ÍÍI K
$num
ÍÍL M
?
ÍÍN O
g
ÍÍP Q
.
ÍÍQ R
Key
ÍÍR U
.
ÍÍU V
budgetInitial
ÍÍV c
*
ÍÍd e
Convert
ÍÍf m
.
ÍÍm n
ToDouble
ÍÍn v
(
ÍÍv w
_context
ÍÍw 
.ÍÍ 
profileÍÍ 
.ÍÍ 
WhereÍÍ 
(ÍÍ 
xÍÍ 
=>ÍÍ 
xÍÍ 
.ÍÍ 
	profileIdÍÍ 
==ÍÍ ¡
$strÍÍ¢ ®
)ÍÍ® ¯
.ÍÍ¯ °
SelectÍÍ° ¶
(ÍÍ¶ ·
xÍÍ· ¸
=>ÍÍ¹ »
xÍÍ¼ ½
.ÍÍ½ ¾
budgetÍÍ¾ Ä
)ÍÍÄ Å
.ÍÍÅ Æ
FirstOrDefaultÍÍÆ Ô
(ÍÍÔ Õ
)ÍÍÕ Ö
)ÍÍÖ ×
:ÍÍØ Ù
gÍÍÚ Û
.ÍÍÛ Ü
KeyÍÍÜ ß
.ÍÍß à

coutEstimeÍÍà ê
,ÍÍê ë

estimation
ÎÎ+ 5
=
ÎÎ6 7
g
ÎÎ8 9
.
ÎÎ9 :
Key
ÎÎ: =
.
ÎÎ= >

coutEstime
ÎÎ> H
==
ÎÎI K
$num
ÎÎL M
?
ÎÎN O
true
ÎÎP T
:
ÎÎU V
false
ÎÎW \
,
ÎÎ\ ]
charge
ÏÏ+ 1
=
ÏÏ2 3
g
ÏÏ4 5
.
ÏÏ5 6
Sum
ÏÏ6 9
(
ÏÏ9 :
x
ÏÏ: ;
=>
ÏÏ< >
x
ÏÏ? @
.
ÏÏ@ A
charge
ÏÏA G
)
ÏÏG H
,
ÏÏH I
cout
ÐÐ+ /
=
ÐÐ0 1
g
ÐÐ2 3
.
ÐÐ3 4
Sum
ÐÐ4 7
(
ÐÐ7 8
x
ÐÐ8 9
=>
ÐÐ: <
x
ÐÐ= >
.
ÐÐ> ?
cout
ÐÐ? C
)
ÐÐC D
}
ÕÕ' (
)
ÕÕ( )
.
ÕÕ) *
ToList
ÕÕ* 0
(
ÕÕ0 1
)
ÕÕ1 2
;
ÕÕ2 3
var
ÙÙ !
ResultGroupByClient
ÙÙ +
=
ÙÙ, -
(
ÙÙ. /
from
ÙÙ/ 3
edp
ÙÙ4 7
in
ÙÙ8 :
ResultFinal
ÙÙ; F
group
ÚÚ/ 4
edp
ÚÚ5 8
by
ÚÚ9 ;
new
ÚÚ< ?
{
ÛÛ/ 0
edp
ÝÝ3 6
.
ÝÝ6 7

clientName
ÝÝ7 A
,
ÝÝA B
}
ââ/ 0
into
ââ1 5
g
ââ6 7
select
ãã/ 5
new
ãã6 9
{
ää/ 0
g
éé3 4
.
éé4 5
Key
éé5 8
.
éé8 9

clientName
éé9 C
,
ééC D
rowSpan
êê3 :
=
êê; <
g
êê= >
.
êê> ?
Count
êê? D
(
êêD E
)
êêE F
,
êêF G
maxdate
ëë3 :
=
ëë; <
g
ëë= >
.
ëë> ?
Select
ëë? E
(
ëëE F
x
ëëF G
=>
ëëH J
x
ëëK L
.
ëëL M
dateFinPrevue
ëëM Z
)
ëëZ [
.
ëë[ \
Max
ëë\ _
(
ëë_ `
)
ëë` a
,
ëëa b

listProjet
ìì3 =
=
ìì> ?
g
ìì@ A
.
ììA B
ToList
ììB H
(
ììH I
)
ììI J
.
ììJ K
OrderBy
ììK R
(
ììR S
x
ììS T
=>
ììU W
x
ììX Y
.
ììY Z
dateFinPrevue
ììZ g
)
ììg h
,
ììh i
}
ññ/ 0
)
ññ0 1
.
ññ1 2
ToList
ññ2 8
(
ññ8 9
)
ññ9 :
.
ññ: ;
OrderByDescending
ññ; L
(
ññL M
x
ññM N
=>
ññO Q
x
ññR S
.
ññS T
maxdate
ññT [
)
ññ[ \
;
ññ\ ]
return
ôô 
Ok
ôô 
(
ôô !
ResultGroupByClient
ôô 1
)
ôô1 2
;
ôô2 3
}
÷÷ 
else
øø 
{
ùù 
var
úú 
dbresult
úú  
=
úú! "
(
úú# $
from
úú$ (
edp
úú) ,
in
úú- /
_context
úú0 8
.
úú8 9

ProjetEdps
úú9 C
where
ûû$ )
(
ûû* +
(
üü2 3
search
üü3 9
.
üü9 :
	idClients
üü: C
.
üüC D
Count
üüD I
==
üüJ L
$num
üüM N
||
üüO Q
search
üüR X
.
üüX Y
	idClients
üüY b
.
üüb c
Contains
üüc k
(
üük l
edp
üül o
.
üüo p
clientId
üüp x
)
üüx y
)
üüy z
&&
ýý2 4
(
ýý5 6
String
ýý6 <
.
ýý< =
IsNullOrEmpty
ýý= J
(
ýýJ K
search
ýýK Q
.
ýýQ R
commercialId
ýýR ^
)
ýý^ _
||
ýý` b
search
ýýc i
.
ýýi j
commercialId
ýýj v
==
ýýw y
edp
ýýz }
.
ýý} ~
CommercialIdýý~ 
)ýý 
)
þþ2 3
join
ÿÿ$ (
pl
ÿÿ) +
in
ÿÿ, .
_context
ÿÿ/ 7
.
ÿÿ7 8
ProjetLivraisons
ÿÿ8 H
on
ÿÿI K
edp
ÿÿL O
.
ÿÿO P
id
ÿÿP R
equals
ÿÿS Y
pl
ÿÿZ \
.
ÿÿ\ ]
projetEdpId
ÿÿ] h
into
$ (
joinedT
) 0
from
$ (
r
) *
in
+ -
joinedT
. 5
join
$ (
dl
) +
in
, .
_context
/ 7
.
7 8
DetailLivraisons
8 H
on
I K
r
L M
.
M N
Id
N P
equals
Q W
dl
X Z
.
Z [
ProjetLivraisonId
[ l
into
' +
joinedd
, 3
from
$ (
dd
) +
in
, .
joinedd
/ 6
join
$ (
t
) *
in
+ -
_context
. 6
.
6 7
Taches
7 =
on
> @
dd
A C
.
C D
Id
D F
equals
G M
t
N O
.
O P
detailLivraisonId
P a
into
1 5
joinedt
6 =
from
$ (
tt
) +
in
, .
joinedt
/ 6
join
$ (
p
) *
in
+ -
_context
. 6
.
6 7
profileUser
7 B
on
C E
tt
F H
.
H I
UserId
I O
equals
P V
p
W X
.
X Y
userId
Y _
into
' +
joinedtg
, 4
from
$ (
tte
) ,
in
- /
joinedtg
0 8
join
$ (
di
) +
in
, .
_context
/ 7
.
7 8
DetailImputations
8 I
on
J L
tt
M O
.
O P
Id
P R
equals
S Y
di
Z \
.
\ ]
TacheId
] d
into
& *
	joinedtge
+ 4
from
$ (
tted
) -
in
. 0
	joinedtge
1 :
join
$ (
imputa
) /
in
0 2
_context
3 ;
.
; <
Imputations
< G
on
H J
tted
K O
.
O P
ImputationId
P \
equals
] c
imputa
d j
.
j k
Id
k m
into
$ (
	NewFiltre
) 2
from
$ (
rc
) +
in
, .
	NewFiltre
/ 8
where
$ )
(
* +
(
+ ,
(
* +
(
. /
rc
/ 1
.
1 2

mondayDate
2 <
.
< =
Value
= B
.
B C
Date
C G
<
H I
Convert
J Q
.
Q R

ToDateTime
R \
(
\ ]
search
] c
.
c d
dateFin
d k
)
k l
&&
m o
rc
p r
.
r s

mondayDate
s }
.
} ~
Value~ 
. 
Date 
> 
Convert 
. 

ToDateTime 
( 
search ¤
.¤ ¥
	dateDebut¥ ®
)® ¯
&&° ²
rc³ µ
.µ ¶!
DetailImputations¶ Ç
.Ç È
SelectÈ Î
(Î Ï
eÏ Ð
=>Ñ Ó
eÔ Õ
.Õ Ö
MondayÖ Ü
)Ü Ý
.Ý Þ
AnyÞ á
(á â
eâ ã
=>ä æ
eç è
!=é ë
$strì ó
)ó ô
)ô õ
)ö ÷
)
* +
||
+ -
(
+ ,
(
, -
rc
- /
.
/ 0
TuesdayDate
0 ;
.
; <
Value
< A
.
A B
Date
B F
<
G H
Convert
I P
.
P Q

ToDateTime
Q [
(
[ \
search
\ b
.
b c
dateFin
c j
)
j k
&&
l n
rc
p r
.
r s
TuesdayDate
s ~
.
~ 
Value 
. 
Date 
> 
Convert 
. 

ToDateTime 
( 
search ¥
.¥ ¦
	dateDebut¦ ¯
)¯ °
)° ±
&&² ´
rcµ ·
.· ¸!
DetailImputations¸ É
.É Ê
SelectÊ Ð
(Ð Ñ
eÑ Ò
=>Ó Õ
eÖ ×
.× Ø
TuesdayØ ß
)ß à
.à á
Anyá ä
(ä å
eå æ
=>ç é
eê ë
!=ì î
$strï ö
)ö ÷
)ø ù
||
+ -
(
+ ,
(
, -
rc
- /
.
/ 0
WednesdayDate
0 =
.
= >
Value
> C
.
C D
Date
D H
<
I J
Convert
K R
.
R S

ToDateTime
S ]
(
] ^
search
^ d
.
d e
dateFin
e l
)
l m
&&
n p
rc
q s
.
s t
WednesdayDatet 
. 
Value 
. 
Date 
> 
Convert 
. 

ToDateTime ¡
(¡ ¢
search¢ ¨
.¨ ©
	dateDebut© ²
)² ³
)³ ´
&&µ ·
rc¸ º
.º »!
DetailImputations» Ì
.Ì Í
SelectÍ Ó
(Ó Ô
eÔ Õ
=>Ö Ø
eÙ Ú
.Ú Û
	WednesdayÛ ä
)ä å
.å æ
Anyæ é
(é ê
eê ë
=>ì î
eï ð
!=ñ ó
$strô û
)û ü
)
¡¡+ ,
||
¢¢. 0
(
££+ ,
(
££- .
rc
££. 0
.
££0 1
ThursdayDate
££1 =
.
££= >
Value
££> C
.
££C D
Date
££D H
<
££I J
Convert
££K R
.
££R S

ToDateTime
££S ]
(
££] ^
search
££^ d
.
££d e
dateFin
££e l
)
££l m
&&
££n p
rc
££q s
.
££s t
ThursdayDate££t 
.££ 
Value££ 
.££ 
Date££ 
>££ 
Convert££ 
.££ 

ToDateTime££  
(££  ¡
search££¡ §
.££§ ¨
	dateDebut££¨ ±
)££± ²
)££² ³
&&££´ ¶
rc££· ¹
.££¹ º!
DetailImputations££º Ë
.££Ë Ì
Select££Ì Ò
(££Ò Ó
e££Ó Ô
=>££Õ ×
e££Ø Ù
.££Ù Ú
Thursday££Ú â
)££â ã
.££ã ä
Any££ä ç
(££ç è
e££è é
=>££ê ì
e££í î
!=££ï ñ
$str££ò ù
)££ù ú
)
¥¥+ ,
||
¦¦+ -
(
§§+ ,
(
§§, -
rc
§§- /
.
§§/ 0

FridayDate
§§0 :
.
§§: ;
Value
§§; @
.
§§@ A
Date
§§A E
<
§§F G
Convert
§§H O
.
§§O P

ToDateTime
§§P Z
(
§§Z [
search
§§[ a
.
§§a b
dateFin
§§b i
)
§§i j
&&
§§k m
rc
§§n p
.
§§p q

FridayDate
§§q {
.
§§{ |
Value§§| 
.§§ 
Date§§ 
>§§ 
Convert§§ 
.§§ 

ToDateTime§§ 
(§§ 
search§§ ¢
.§§¢ £
	dateDebut§§£ ¬
)§§¬ ­
)§§­ ®
&&§§¯ ±
rc§§² ´
.§§´ µ!
DetailImputations§§µ Æ
.§§Æ Ç
Select§§Ç Í
(§§Í Î
e§§Î Ï
=>§§Ð Ò
e§§Ó Ô
.§§Ô Õ
Friday§§Õ Û
)§§Û Ü
.§§Ü Ý
Any§§Ý à
(§§à á
e§§á â
=>§§ã å
e§§æ ç
!=§§è ê
$str§§ë ò
)§§ò ó
)
©©, -
)
­­+ ,
select
®®$ *
new
®®+ .
{
¯¯$ %
budgetInitial
°°( 5
=
°°6 7
edp
°°8 ;
.
°°; <
BudgetInitial
°°< I
+
°°J K
(
°°L M
edp
°°M P
.
°°P Q
BudgetRallonge
°°Q _
!=
°°` b
null
°°c g
?
°°h i
edp
°°j m
.
°°m n
BudgetRallonge
°°n |
:
°°} ~
$num°° 
)°° 
,°° 
id
³³( *
=
³³+ ,
edp
³³- 0
.
³³0 1
id
³³1 3
,
³³3 4
commercantName
´´( 6
=
´´7 8
edp
´´9 <
.
´´< =

Commercial
´´= G
.
´´G H
FullName
´´H P
,
´´P Q

CodeProjet
µµ( 2
=
µµ3 4
edp
µµ5 8
.
µµ8 9
CodeProjets
µµ9 D
.
µµD E
Numero
µµE K
+
µµL M
$str
µµN Q
+
µµR S
edp
µµT W
.
µµW X

CodeProjet
µµX b
,
µµb c
natureCodeProjet
¶¶( 8
=
¶¶9 :
edp
¶¶; >
.
¶¶> ?
CodeProjets
¶¶? J
.
¶¶J K
Nature
¶¶K Q
,
¶¶Q R
nom
··( +
=
··, -
edp
··. 1
.
··1 2
Nom
··2 5
,
··5 6

clientName
¸¸( 2
=
¸¸3 4
edp
¸¸5 8
.
¸¸8 9
client
¸¸9 ?
.
¸¸? @
Nom
¸¸@ C
,
¸¸C D
dateCreation
¹¹( 4
=
¹¹5 6
edp
¹¹7 :
.
¹¹: ;
DateCreation
¹¹; G
,
¹¹G H
edp
ºº( +
.
ºº+ ,
dateFin
ºº, 3
,
ºº3 4
edp
»»( +
.
»»+ ,
dateFinPrevue
»», 9
,
»»9 :
edp
¼¼( +
.
¼¼+ ,
status
¼¼, 2
,
¼¼2 3
edp
½½( +
.
½½+ ,
Description
½½, 7
,
½½7 8"
budgetConfirmeTotale
ÀÀ( <
=
ÀÀ= >
(
ÀÀ? @
edp
ÀÀ@ C
.
ÀÀC D$
budgetConfirmeRallonge
ÀÀD Z
!=
ÀÀ[ ]
null
ÀÀ^ b
?
ÀÀc d
edp
ÀÀe h
.
ÀÀh i$
budgetConfirmeRallonge
ÀÀi 
:ÀÀ 
$numÀÀ 
)ÀÀ 
+ÀÀ 
(ÀÀ 
edpÀÀ 
.ÀÀ 
budgetConfirmeÀÀ 
!=ÀÀ 
nullÀÀ ¢
?ÀÀ£ ¤
edpÀÀ¥ ¨
.ÀÀ¨ ©
budgetConfirmeÀÀ© ·
:ÀÀ¸ ¹
$numÀÀº »
)ÀÀ» ¼
,ÀÀ¼ ½
budgetGPTotale
ÂÂ( 6
=
ÂÂ7 8
(
ÂÂ9 :
edp
ÂÂ: =
.
ÂÂ= >
budgetGPRallonge
ÂÂ> N
!=
ÂÂO Q
null
ÂÂR V
?
ÂÂW X
edp
ÂÂY \
.
ÂÂ\ ]
budgetGPRallonge
ÂÂ] m
:
ÂÂn o
$num
ÂÂp q
)
ÂÂq r
+
ÂÂs t
(
ÂÂu v
edp
ÂÂv y
.
ÂÂy z
budgetGPÂÂz 
!=ÂÂ 
nullÂÂ 
?ÂÂ 
edpÂÂ 
.ÂÂ 
budgetGPÂÂ 
:ÂÂ 
$numÂÂ 
)ÂÂ 
,ÂÂ  
budgetJuniorTotale
ÅÅ( :
=
ÅÅ; <
(
ÅÅ= >
edp
ÅÅ> A
.
ÅÅA B
budgetJunior
ÅÅB N
!=
ÅÅO Q
null
ÅÅR V
?
ÅÅW X
edp
ÅÅY \
.
ÅÅ\ ]
budgetJunior
ÅÅ] i
:
ÅÅj k
$num
ÅÅl m
)
ÅÅm n
+
ÅÅo p
(
ÅÅq r
edp
ÅÅr u
.
ÅÅu v#
budgetJuniorRallongeÅÅv 
!=ÅÅ 
nullÅÅ 
?ÅÅ 
edpÅÅ 
.ÅÅ $
budgetJuniorRallongeÅÅ ­
:ÅÅ® ¯
$numÅÅ° ±
)ÅÅ± ²
,ÅÅ² ³$
budgetValidationTotale
ÇÇ( >
=
ÇÇ? @
(
ÇÇA B
edp
ÇÇB E
.
ÇÇE F
budgetValidation
ÇÇF V
!=
ÇÇW Y
null
ÇÇZ ^
?
ÇÇ_ `
edp
ÇÇa d
.
ÇÇd e
budgetValidation
ÇÇe u
:
ÇÇv w
$num
ÇÇx y
)
ÇÇy z
+
ÇÇ{ |
(
ÇÇ} ~
edpÇÇ~ 
.ÇÇ (
budgetValidationRallongeÇÇ 
!=ÇÇ 
nullÇÇ ¢
?ÇÇ£ ¤
edpÇÇ¥ ¨
.ÇÇ¨ ©(
budgetValidationRallongeÇÇ© Á
:ÇÇÂ Ã
$numÇÇÄ Å
)ÇÇÅ Æ
,ÇÇÆ Ç 
budgetSeniorTotale
ÉÉ( :
=
ÉÉ; <
(
ÉÉ= >
edp
ÉÉ> A
.
ÉÉA B
budgetSenior
ÉÉB N
!=
ÉÉO Q
null
ÉÉR V
?
ÉÉW X
edp
ÉÉY \
.
ÉÉ\ ]
budgetSenior
ÉÉ] i
:
ÉÉj k
$num
ÉÉl m
)
ÉÉm n
+
ÉÉo p
(
ÉÉq r
edp
ÉÉr u
.
ÉÉu v#
budgetSeniorRallongeÉÉv 
!=ÉÉ 
nullÉÉ 
?ÉÉ 
edpÉÉ 
.ÉÉ $
budgetSeniorRallongeÉÉ ­
:ÉÉ® ¯
$numÉÉ° ±
)ÉÉ± ²
,ÉÉ² ³#
budgetDirectionTotale
ËË( =
=
ËË> ?
(
ËË@ A
edp
ËËA D
.
ËËD E
budgetDirection
ËËE T
!=
ËËU W
null
ËËX \
?
ËË] ^
edp
ËË_ b
.
ËËb c
budgetDirection
ËËc r
:
ËËs t
$num
ËËu v
)
ËËv w
+
ËËx y
(
ËËz {
edp
ËË{ ~
.
ËË~ &
budgetDirectionRallongeËË 
!=ËË 
nullËË 
?ËË  
edpËË¡ ¤
.ËË¤ ¥'
budgetDirectionRallongeËË¥ ¼
:ËË½ ¾
$numËË¿ À
)ËËÀ Á
,ËËÁ Â"
countProjetLivraison
ÎÎ( <
=
ÎÎ= >
edp
ÎÎ? B
.
ÎÎB C
ProjetLivraisons
ÎÎC S
.
ÎÎS T
Count
ÎÎT Y
(
ÎÎY Z
)
ÎÎZ [
,
ÎÎ[ \
tte
ÐÐ( +
.
ÐÐ+ ,
	profileId
ÐÐ, 5
,
ÐÐ5 6
Monday
ÑÑ( .
=
ÑÑ/ 0
(
ÑÑ1 2
Convert
ÑÑ2 9
.
ÑÑ9 :
ToDouble
ÑÑ: B
(
ÑÑB C
tted
ÑÑC G
.
ÑÑG H
Monday
ÑÑH N
.
ÑÑN O
	Substring
ÑÑO X
(
ÑÑX Y
$num
ÑÑY Z
,
ÑÑZ [
$num
ÑÑ\ ]
)
ÑÑ] ^
)
ÑÑ^ _
+
ÑÑ` a
Convert
ÑÑb i
.
ÑÑi j
ToDouble
ÑÑj r
(
ÑÑr s
tted
ÑÑs w
.
ÑÑw x
Monday
ÑÑx ~
.
ÑÑ~ 
	SubstringÑÑ 
(ÑÑ 
$numÑÑ 
,ÑÑ 
$numÑÑ 
)ÑÑ 
)ÑÑ 
/ÑÑ 
$numÑÑ 
)ÑÑ 
/ÑÑ 
$numÑÑ 
,ÑÑ 
Tuesday
ÒÒ( /
=
ÒÒ0 1
(
ÒÒ2 3
Convert
ÒÒ3 :
.
ÒÒ: ;
ToDouble
ÒÒ; C
(
ÒÒC D
tted
ÒÒD H
.
ÒÒH I
Tuesday
ÒÒI P
.
ÒÒP Q
	Substring
ÒÒQ Z
(
ÒÒZ [
$num
ÒÒ[ \
,
ÒÒ\ ]
$num
ÒÒ^ _
)
ÒÒ_ `
)
ÒÒ` a
+
ÒÒb c
Convert
ÒÒd k
.
ÒÒk l
ToDouble
ÒÒl t
(
ÒÒt u
tted
ÒÒu y
.
ÒÒy z
TuesdayÒÒz 
.ÒÒ 
	SubstringÒÒ 
(ÒÒ 
$numÒÒ 
,ÒÒ 
$numÒÒ 
)ÒÒ 
)ÒÒ 
/ÒÒ 
$numÒÒ 
)ÒÒ 
/ÒÒ 
$numÒÒ 
,ÒÒ 
Friday
ÓÓ( .
=
ÓÓ/ 0
(
ÓÓ1 2
Convert
ÓÓ2 9
.
ÓÓ9 :
ToDouble
ÓÓ: B
(
ÓÓB C
tted
ÓÓC G
.
ÓÓG H
Friday
ÓÓH N
.
ÓÓN O
	Substring
ÓÓO X
(
ÓÓX Y
$num
ÓÓY Z
,
ÓÓZ [
$num
ÓÓ\ ]
)
ÓÓ] ^
)
ÓÓ^ _
+
ÓÓ` a
Convert
ÓÓb i
.
ÓÓi j
ToDouble
ÓÓj r
(
ÓÓr s
tted
ÓÓs w
.
ÓÓw x
Friday
ÓÓx ~
.
ÓÓ~ 
	SubstringÓÓ 
(ÓÓ 
$numÓÓ 
,ÓÓ 
$numÓÓ 
)ÓÓ 
)ÓÓ 
/ÓÓ 
$numÓÓ 
)ÓÓ 
/ÓÓ 
$numÓÓ 
,ÓÓ 
	Wednesday
ÔÔ( 1
=
ÔÔ2 3
(
ÔÔ4 5
Convert
ÔÔ5 <
.
ÔÔ< =
ToDouble
ÔÔ= E
(
ÔÔE F
tted
ÔÔF J
.
ÔÔJ K
	Wednesday
ÔÔK T
.
ÔÔT U
	Substring
ÔÔU ^
(
ÔÔ^ _
$num
ÔÔ_ `
,
ÔÔ` a
$num
ÔÔb c
)
ÔÔc d
)
ÔÔd e
+
ÔÔf g
Convert
ÔÔh o
.
ÔÔo p
ToDouble
ÔÔp x
(
ÔÔx y
tted
ÔÔy }
.
ÔÔ} ~
	WednesdayÔÔ~ 
.ÔÔ 
	SubstringÔÔ 
(ÔÔ 
$numÔÔ 
,ÔÔ 
$numÔÔ 
)ÔÔ 
)ÔÔ 
/ÔÔ 
$numÔÔ 
)ÔÔ 
/ÔÔ  
$numÔÔ¡ ¢
,ÔÔ¢ £
Thursday
ÕÕ( 0
=
ÕÕ1 2
(
ÕÕ3 4
Convert
ÕÕ4 ;
.
ÕÕ; <
ToDouble
ÕÕ< D
(
ÕÕD E
tted
ÕÕE I
.
ÕÕI J
Thursday
ÕÕJ R
.
ÕÕR S
	Substring
ÕÕS \
(
ÕÕ\ ]
$num
ÕÕ] ^
,
ÕÕ^ _
$num
ÕÕ` a
)
ÕÕa b
)
ÕÕb c
+
ÕÕd e
Convert
ÕÕf m
.
ÕÕm n
ToDouble
ÕÕn v
(
ÕÕv w
tted
ÕÕw {
.
ÕÕ{ |
ThursdayÕÕ| 
.ÕÕ 
	SubstringÕÕ 
(ÕÕ 
$numÕÕ 
,ÕÕ 
$numÕÕ 
)ÕÕ 
)ÕÕ 
/ÕÕ 
$numÕÕ 
)ÕÕ 
/ÕÕ 
$numÕÕ 
,ÕÕ  
date
ÖÖ( ,
=
ÖÖ- .
rc
ÖÖ/ 1
.
ÖÖ1 2

FridayDate
ÖÖ2 <
.
ÖÖ< =
Value
ÖÖ= B
.
ÖÖB C
Date
ÖÖC G
}
ÝÝ$ %
)
ÝÝ% &
.
ÝÝ& '
ToList
ÝÝ' -
(
ÝÝ- .
)
ÝÝ. /
;
ÝÝ/ 0
var
ÞÞ 
result1
ÞÞ 
=
ÞÞ  !
(
ÞÞ" #
from
ÞÞ# '
edp
ÞÞ( +
in
ÞÞ, .
dbresult
ÞÞ/ 7
group
ßß# (
edp
ßß) ,
by
ßß- /
new
ßß0 3
{
àà# $
edp
áá' *
.
áá* +
	profileId
áá+ 4
,
áá4 5
edp
ââ' *
.
ââ* +
Description
ââ+ 6
,
ââ6 7
edp
ãã' *
.
ãã* +
id
ãã+ -
,
ãã- .
edp
ää' *
.
ää* +
commercantName
ää+ 9
,
ää9 :
edp
åå' *
.
åå* +

CodeProjet
åå+ 5
,
åå5 6
edp
ææ' *
.
ææ* +
natureCodeProjet
ææ+ ;
,
ææ; <
edp
çç' *
.
çç* +
nom
çç+ .
,
çç. /
edp
èè' *
.
èè* +
budgetInitial
èè+ 8
,
èè8 9
edp
éé' *
.
éé* +

clientName
éé+ 5
,
éé5 6
edp
êê' *
.
êê* +
dateCreation
êê+ 7
,
êê7 8
edp
ëë' *
.
ëë* +
dateFin
ëë+ 2
,
ëë2 3
edp
ìì' *
.
ìì* +
dateFinPrevue
ìì+ 8
,
ìì8 9
edp
íí' *
.
íí* +
status
íí+ 1
,
íí1 2
edp
îî' *
.
îî* +#
budgetDirectionTotale
îî+ @
,
îî@ A
edp
ïï' *
.
ïï* +"
budgetConfirmeTotale
ïï+ ?
,
ïï? @
edp
ðð' *
.
ðð* +
budgetGPTotale
ðð+ 9
,
ðð9 :
edp
ññ' *
.
ññ* + 
budgetJuniorTotale
ññ+ =
,
ññ= >
edp
òò' *
.
òò* +$
budgetValidationTotale
òò+ A
,
òòA B
edp
óó' *
.
óó* + 
budgetSeniorTotale
óó+ =
,
óó= >
edp
õõ' *
.
õõ* +"
countProjetLivraison
õõ+ ?
,
õõ? @
}
öö# $
into
öö% )
g
öö* +
select
÷÷# )
new
÷÷* -
{
øø# $
g
ùù' (
.
ùù( )
Key
ùù) ,
.
ùù, -
	profileId
ùù- 6
,
ùù6 7
g
ûû' (
.
ûû( )
Key
ûû) ,
.
ûû, -
id
ûû- /
,
ûû/ 0
g
üü' (
.
üü( )
Key
üü) ,
.
üü, -
Description
üü- 8
,
üü8 9
g
ýý' (
.
ýý( )
Key
ýý) ,
.
ýý, -
commercantName
ýý- ;
,
ýý; <
g
þþ' (
.
þþ( )
Key
þþ) ,
.
þþ, -
dateFinPrevue
þþ- :
,
þþ: ;
g
ÿÿ' (
.
ÿÿ( )
Key
ÿÿ) ,
.
ÿÿ, -
dateFin
ÿÿ- 4
,
ÿÿ4 5
g
		' (
.
		( )
Key
		) ,
.
		, -

CodeProjet
		- 7
,
		7 8
g
		' (
.
		( )
Key
		) ,
.
		, -
natureCodeProjet
		- =
,
		= >
g
		' (
.
		( )
Key
		) ,
.
		, -
nom
		- 0
,
		0 1
g
		' (
.
		( )
Key
		) ,
.
		, -
budgetInitial
		- :
,
		: ;
g
		' (
.
		( )
Key
		) ,
.
		, -

clientName
		- 7
,
		7 8
g
		' (
.
		( )
Key
		) ,
.
		, -
dateCreation
		- 9
,
		9 :
g
		' (
.
		( )
Key
		) ,
.
		, -
status
		- 3
,
		3 4
g
		' (
.
		( )
Key
		) ,
.
		, -"
countProjetLivraison
		- A
,
		A B

coutEstime
		' 1
=
		2 3
g
		4 5
.
		5 6
Key
		6 9
.
		9 :"
budgetConfirmeTotale
		: N
*
		O P
Convert
		Q X
.
		X Y
ToDouble
		Y a
(
		a b
_context
		b j
.
		j k
profile
		k r
.
		r s
Where
		s x
(
		x y
x
		y z
=>
		{ }
x
		~ 
.		 
	profileId		 
==		 
$str		 
)		 
.		 
Select		 
(		  
x		  ¡
=>		¢ ¤
x		¥ ¦
.		¦ §
budget		§ ­
)		­ ®
.		® ¯
FirstOrDefault		¯ ½
(		½ ¾
)		¾ ¿
)		¿ À
+
		& '
g
		( )
.
		) *
Key
		* -
.
		- .#
budgetDirectionTotale
		. C
*
		D E
Convert
		F M
.
		M N
ToDouble
		N V
(
		V W
_context
		W _
.
		_ `
profile
		` g
.
		g h
Where
		h m
(
		m n
x
		n o
=>
		p r
x
		s t
.
		t u
	profileId
		u ~
==		 
$str		 
)		 
.		 
Select		 
(		 
x		 
=>		 
x		 
.		 
budget		 £
)		£ ¤
.		¤ ¥
FirstOrDefault		¥ ³
(		³ ´
)		´ µ
)		µ ¶
+
		& '
g
		( )
.
		) *
Key
		* -
.
		- .
budgetGPTotale
		. <
*
		= >
Convert
		? F
.
		F G
ToDouble
		G O
(
		O P
_context
		P X
.
		X Y
profile
		Y `
.
		` a
Where
		a f
(
		f g
x
		g h
=>
		i k
x
		l m
.
		m n
	profileId
		n w
==
		x z
$str
		{ 
)		 
.		 
Select		 
(		 
x		 
=>		 
x		 
.		 
budget		 
)		 
.		 
FirstOrDefault		 ¥
(		¥ ¦
)		¦ §
)		§ ¨
+
		& '
g
		( )
.
		) *
Key
		* -
.
		- . 
budgetJuniorTotale
		. @
*
		A B
Convert
		C J
.
		J K
ToDouble
		K S
(
		S T
_context
		T \
.
		\ ]
profile
		] d
.
		d e
Where
		e j
(
		j k
x
		k l
=>
		m o
x
		p q
.
		q r
	profileId
		r {
==
		| ~
$str		 
)		 
.		 
Select		 
(		 
x		 
=>		 
x		 
.		 
budget		 
)		 
.		 
FirstOrDefault		 ­
(		­ ®
)		® ¯
)		¯ °
+
		& '
g
		( )
.
		) *
Key
		* -
.
		- . 
budgetSeniorTotale
		. @
*
		A B
Convert
		C J
.
		J K
ToDouble
		K S
(
		S T
_context
		T \
.
		\ ]
profile
		] d
.
		d e
Where
		e j
(
		j k
x
		k l
=>
		m o
x
		p q
.
		q r
	profileId
		r {
==
		| ~
$str		 
)		 
.		 
Select		 
(		 
x		 
=>		 
x		 
.		 
budget		 
)		 
.		 
FirstOrDefault		 ­
(		­ ®
)		® ¯
)		¯ °
+
		& '
g
		( )
.
		) *
Key
		* -
.
		- .$
budgetValidationTotale
		. D
*
		E F
Convert
		G N
.
		N O
ToDouble
		O W
(
		W X
_context
		X `
.
		` a
profile
		a h
.
		h i
Where
		i n
(
		n o
x
		o p
=>
		q s
x
		t u
.
		u v
	profileId
		v 
==		 
$str		 
)		 
.		 
Select		 
(		 
x		 
=>		 
x		 
.		 
budget		 ¥
)		¥ ¦
.		¦ §
FirstOrDefault		§ µ
(		µ ¶
)		¶ ·
)		· ¸
,		¸ ¹
charge
		' -
=
		. /
g
		0 1
.
		1 2
Sum
		2 5
(
		5 6
x
		6 7
=>
		8 :
x
		; <
.
		< =
Monday
		= C
)
		C D
+
		E F
g
		G H
.
		H I
Sum
		I L
(
		L M
x
		M N
=>
		O Q
x
		R S
.
		S T
Tuesday
		T [
)
		[ \
+
		] ^
g
		_ `
.
		` a
Sum
		a d
(
		d e
x
		e f
=>
		g i
x
		j k
.
		k l
	Wednesday
		l u
)
		u v
+
		w x
g
		y z
.
		z {
Sum
		{ ~
(
		~ 
x		 
=>		 
x		 
.		 
Friday		 
)		 
+		 
g		 
.		 
Sum		 
(		 
x		 
=>		 
x		 
.		 
Thursday		 ¥
)		¥ ¦
,		¦ §
cout
		' +
=
		, -
(
		. /
g
		/ 0
.
		0 1
Sum
		1 4
(
		4 5
x
		5 6
=>
		7 9
x
		: ;
.
		; <
Monday
		< B
)
		B C
+
		D E
g
		F G
.
		G H
Sum
		H K
(
		K L
x
		L M
=>
		N P
x
		Q R
.
		R S
Tuesday
		S Z
)
		Z [
+
		\ ]
g
		^ _
.
		_ `
Sum
		` c
(
		c d
x
		d e
=>
		f h
x
		i j
.
		j k
	Wednesday
		k t
)
		t u
+
		v w
g
		x y
.
		y z
Sum
		z }
(
		} ~
x
		~ 
=>		 
x		 
.		 
Friday		 
)		 
+		 
g		 
.		 
Sum		 
(		 
x		 
=>		 
x		 
.		 
Thursday		 ¤
)		¤ ¥
)		¥ ¦
*
¡	¡	& '
Convert
¡	¡	( /
.
¡	¡	/ 0
ToDouble
¡	¡	0 8
(
¡	¡	8 9
_context
¡	¡	9 A
.
¡	¡	A B
profile
¡	¡	B I
.
¡	¡	I J
Where
¡	¡	J O
(
¡	¡	O P
x
¡	¡	P Q
=>
¡	¡	R T
x
¡	¡	U V
.
¡	¡	V W
annee
¡	¡	W \
==
¡	¡	] _
DateTime
¡	¡	` h
.
¡	¡	h i
Now
¡	¡	i l
.
¡	¡	l m
Year
¡	¡	m q
.
¡	¡	q r
ToString
¡	¡	r z
(
¡	¡	z {
)
¡	¡	{ |
&&
¡	¡	} 
x¡	¡	 
.¡	¡	 
	profileId¡	¡	 
==¡	¡	 
g¡	¡	 
.¡	¡	 
Key¡	¡	 
.¡	¡	 
	profileId¡	¡	 
)¡	¡	 
.¡	¡	  
Select¡	¡	  ¦
(¡	¡	¦ §
x¡	¡	§ ¨
=>¡	¡	© «
x¡	¡	¬ ­
.¡	¡	­ ®
budget¡	¡	® ´
)¡	¡	´ µ
.¡	¡	µ ¶
FirstOrDefault¡	¡	¶ Ä
(¡	¡	Ä Å
)¡	¡	Å Æ
)¡	¡	Æ Ç
}
¢	¢	# $
)
¢	¢	$ %
.
¢	¢	% &
ToList
¢	¢	& ,
(
¢	¢	, -
)
¢	¢	- .
;
¢	¢	. /
var
¦	¦	 
ResultFinal
¦	¦	 #
=
¦	¦	$ %
(
¦	¦	& '
from
¦	¦	' +
edp
¦	¦	, /
in
¦	¦	0 2
result1
¦	¦	3 :
group
§	§	' ,
edp
§	§	- 0
by
§	§	1 3
new
§	§	4 7
{
¨	¨	' (
edp
©	©	+ .
.
©	©	. /
Description
©	©	/ :
,
©	©	: ;
edp
«	«	+ .
.
«	«	. /
dateFin
«	«	/ 6
,
«	«	6 7
edp
¬	¬	+ .
.
¬	¬	. /
dateFinPrevue
¬	¬	/ <
,
¬	¬	< =
edp
­	­	+ .
.
­	­	. /
id
­	­	/ 1
,
­	­	1 2
edp
®	®	+ .
.
®	®	. /
commercantName
®	®	/ =
,
®	®	= >
edp
¯	¯	+ .
.
¯	¯	. /

CodeProjet
¯	¯	/ 9
,
¯	¯	9 :
edp
°	°	+ .
.
°	°	. /
natureCodeProjet
°	°	/ ?
,
°	°	? @
edp
±	±	+ .
.
±	±	. /
nom
±	±	/ 2
,
±	±	2 3
edp
²	²	+ .
.
²	²	. /
budgetInitial
²	²	/ <
,
²	²	< =
edp
³	³	+ .
.
³	³	. /

clientName
³	³	/ 9
,
³	³	9 :
edp
´	´	+ .
.
´	´	. /
dateCreation
´	´	/ ;
,
´	´	; <
edp
¶	¶	+ .
.
¶	¶	. /
status
¶	¶	/ 5
,
¶	¶	5 6
edp
¼	¼	+ .
.
¼	¼	. /"
countProjetLivraison
¼	¼	/ C
,
¼	¼	C D
edp
¾	¾	+ .
.
¾	¾	. /

coutEstime
¾	¾	/ 9
}
À	À	' (
into
À	À	) -
g
À	À	. /
select
Á	Á	' -
new
Á	Á	. 1
{
Â	Â	' (
g
Ç	Ç	+ ,
.
Ç	Ç	, -
Key
Ç	Ç	- 0
.
Ç	Ç	0 1
id
Ç	Ç	1 3
,
Ç	Ç	3 4
g
È	È	+ ,
.
È	È	, -
Key
È	È	- 0
.
È	È	0 1
Description
È	È	1 <
,
È	È	< =
g
É	É	+ ,
.
É	É	, -
Key
É	É	- 0
.
É	É	0 1
commercantName
É	É	1 ?
,
É	É	? @
g
Ê	Ê	+ ,
.
Ê	Ê	, -
Key
Ê	Ê	- 0
.
Ê	Ê	0 1

CodeProjet
Ê	Ê	1 ;
,
Ê	Ê	; <
g
Ë	Ë	+ ,
.
Ë	Ë	, -
Key
Ë	Ë	- 0
.
Ë	Ë	0 1
natureCodeProjet
Ë	Ë	1 A
,
Ë	Ë	A B
g
Ì	Ì	+ ,
.
Ì	Ì	, -
Key
Ì	Ì	- 0
.
Ì	Ì	0 1
dateFin
Ì	Ì	1 8
,
Ì	Ì	8 9
g
Í	Í	+ ,
.
Í	Í	, -
Key
Í	Í	- 0
.
Í	Í	0 1
dateFinPrevue
Í	Í	1 >
,
Í	Í	> ?
g
Î	Î	+ ,
.
Î	Î	, -
Key
Î	Î	- 0
.
Î	Î	0 1
nom
Î	Î	1 4
,
Î	Î	4 5
g
Ï	Ï	+ ,
.
Ï	Ï	, -
Key
Ï	Ï	- 0
.
Ï	Ï	0 1

clientName
Ï	Ï	1 ;
,
Ï	Ï	; <
g
Ð	Ð	+ ,
.
Ð	Ð	, -
Key
Ð	Ð	- 0
.
Ð	Ð	0 1
dateCreation
Ð	Ð	1 =
,
Ð	Ð	= >
g
Ò	Ò	+ ,
.
Ò	Ò	, -
Key
Ò	Ò	- 0
.
Ò	Ò	0 1
status
Ò	Ò	1 7
,
Ò	Ò	7 8
g
Ó	Ó	+ ,
.
Ó	Ó	, -
Key
Ó	Ó	- 0
.
Ó	Ó	0 1"
countProjetLivraison
Ó	Ó	1 E
,
Ó	Ó	E F
g
Õ	Õ	+ ,
.
Õ	Õ	, -
Key
Õ	Õ	- 0
.
Õ	Õ	0 1
budgetInitial
Õ	Õ	1 >
,
Õ	Õ	> ?
showDetails
Ö	Ö	+ 6
=
Ö	Ö	7 8
false
Ö	Ö	9 >
,
Ö	Ö	> ?

coutEstime
×	×	+ 5
=
×	×	6 7
g
×	×	8 9
.
×	×	9 :
Key
×	×	: =
.
×	×	= >

coutEstime
×	×	> H
==
×	×	I K
$num
×	×	L M
?
×	×	N O
g
×	×	P Q
.
×	×	Q R
Key
×	×	R U
.
×	×	U V
budgetInitial
×	×	V c
*
×	×	d e
Convert
×	×	f m
.
×	×	m n
ToDouble
×	×	n v
(
×	×	v w
_context
×	×	w 
.×	×	 
profile×	×	 
.×	×	 
Where×	×	 
(×	×	 
x×	×	 
=>×	×	 
x×	×	 
.×	×	 
	profileId×	×	 
==×	×	 ¡
$str×	×	¢ ®
)×	×	® ¯
.×	×	¯ °
Select×	×	° ¶
(×	×	¶ ·
x×	×	· ¸
=>×	×	¹ »
x×	×	¼ ½
.×	×	½ ¾
budget×	×	¾ Ä
)×	×	Ä Å
.×	×	Å Æ
FirstOrDefault×	×	Æ Ô
(×	×	Ô Õ
)×	×	Õ Ö
)×	×	Ö ×
:×	×	Ø Ù
g×	×	Ú Û
.×	×	Û Ü
Key×	×	Ü ß
.×	×	ß à

coutEstime×	×	à ê
,×	×	ê ë

estimation
Ø	Ø	+ 5
=
Ø	Ø	6 7
g
Ø	Ø	8 9
.
Ø	Ø	9 :
Key
Ø	Ø	: =
.
Ø	Ø	= >

coutEstime
Ø	Ø	> H
==
Ø	Ø	I K
$num
Ø	Ø	L M
?
Ø	Ø	N O
true
Ø	Ø	P T
:
Ø	Ø	U V
false
Ø	Ø	W \
,
Ø	Ø	\ ]
charge
Ù	Ù	+ 1
=
Ù	Ù	2 3
g
Ù	Ù	4 5
.
Ù	Ù	5 6
Sum
Ù	Ù	6 9
(
Ù	Ù	9 :
x
Ù	Ù	: ;
=>
Ù	Ù	< >
x
Ù	Ù	? @
.
Ù	Ù	@ A
charge
Ù	Ù	A G
)
Ù	Ù	G H
,
Ù	Ù	H I
cout
Ú	Ú	+ /
=
Ú	Ú	0 1
g
Ú	Ú	2 3
.
Ú	Ú	3 4
Sum
Ú	Ú	4 7
(
Ú	Ú	7 8
x
Ú	Ú	8 9
=>
Ú	Ú	: <
x
Ú	Ú	= >
.
Ú	Ú	> ?
cout
Ú	Ú	? C
)
Ú	Ú	C D
}
ß	ß	' (
)
ß	ß	( )
.
ß	ß	) *
ToList
ß	ß	* 0
(
ß	ß	0 1
)
ß	ß	1 2
;
ß	ß	2 3
var
ã	ã	 !
ResultGroupByClient
ã	ã	 +
=
ã	ã	, -
(
ã	ã	. /
from
ã	ã	/ 3
edp
ã	ã	4 7
in
ã	ã	8 :
ResultFinal
ã	ã	; F
group
ä	ä	/ 4
edp
ä	ä	5 8
by
ä	ä	9 ;
new
ä	ä	< ?
{
å	å	/ 0
edp
ç	ç	3 6
.
ç	ç	6 7

clientName
ç	ç	7 A
,
ç	ç	A B
}
ì	ì	/ 0
into
ì	ì	1 5
g
ì	ì	6 7
select
í	í	/ 5
new
í	í	6 9
{
î	î	/ 0
g
ó	ó	3 4
.
ó	ó	4 5
Key
ó	ó	5 8
.
ó	ó	8 9

clientName
ó	ó	9 C
,
ó	ó	C D
rowSpan
ô	ô	3 :
=
ô	ô	; <
g
ô	ô	= >
.
ô	ô	> ?
Count
ô	ô	? D
(
ô	ô	D E
)
ô	ô	E F
,
ô	ô	F G
maxdate
õ	õ	3 :
=
õ	õ	; <
g
õ	õ	= >
.
õ	õ	> ?
Select
õ	õ	? E
(
õ	õ	E F
x
õ	õ	F G
=>
õ	õ	H J
x
õ	õ	K L
.
õ	õ	L M
dateFinPrevue
õ	õ	M Z
)
õ	õ	Z [
.
õ	õ	[ \
Max
õ	õ	\ _
(
õ	õ	_ `
)
õ	õ	` a
,
õ	õ	a b

listProjet
ö	ö	3 =
=
ö	ö	> ?
g
ö	ö	@ A
.
ö	ö	A B
ToList
ö	ö	B H
(
ö	ö	H I
)
ö	ö	I J
.
ö	ö	J K
OrderBy
ö	ö	K R
(
ö	ö	R S
x
ö	ö	S T
=>
ö	ö	U W
x
ö	ö	X Y
.
ö	ö	Y Z
dateFinPrevue
ö	ö	Z g
)
ö	ö	g h
,
ö	ö	h i
}
û	û	/ 0
)
û	û	0 1
.
û	û	1 2
ToList
û	û	2 8
(
û	û	8 9
)
û	û	9 :
.
û	û	: ;
OrderByDescending
û	û	; L
(
û	û	L M
x
û	û	M N
=>
û	û	O Q
x
û	û	R S
.
û	û	S T
maxdate
û	û	T [
)
û	û	[ \
;
û	û	\ ]
return
þ	þ	 
Ok
þ	þ	 
(
þ	þ	 !
ResultGroupByClient
þ	þ	 1
)
þ	þ	1 2
;
þ	þ	2 3
}
ÿ	ÿ	 
}


 
catch


 
(


 
	Exception


 
e


  
)


  !
{


 
return


 

BadRequest


 !
(


! "
e


" #
)


# $
;


$ %
}


 
}


 	
[


 	
HttpPost


	 
(


 
$str


 ,
)


, -
]


- .
public


 
IActionResult


 &
satatByClientByComercial


 5
(


5 6
Search


6 <
search


= C
)


C D
{


 	
try


 
{


 
var


 
dbresult


 
=


 
(


  
from


  $
edp


& )
in


* ,
_context


- 5
.


5 6

ProjetEdps


6 @
where


  %
(


& '
(


. /
search


/ 5
.


5 6
	idClients


6 ?
.


? @
Count


@ E
==


F H
$num


I J
||


K M
search


N T
.


T U
	idClients


U ^
.


^ _
Contains


_ g
(


g h
edp


h k
.


k l
clientId


l t
)


t u
)


u v
&&


. 0
(


1 2
String


2 8
.


8 9
IsNullOrEmpty


9 F
(


F G
search


G M
.


M N
commercialId


N Z
)


Z [
||


\ ^
search


_ e
.


e f
commercialId


f r
==


s u
edp


v y
.


y z
CommercialId

z 
)

 
&&


. 0
(


1 2
String


2 8
.


8 9
IsNullOrEmpty


9 F
(


F G
search


G M
.


M N
status


N T
)


T U
||


V X
search


Y _
.


_ `
status


` f
==


g i
edp


j m
.


m n
status


n t
)


t u
&&


1 3
(


4 5
(


1 2
(


2 3
string


3 9
.


9 :
IsNullOrEmpty


: G
(


G H
search


H N
.


N O
status


O U
)


U V
||


W Y
search


Z `
.


` a
status


a g
==


h j
$str


k t
)


t u
&&


v x
edp


y |
.


| }
status

} 
==

 
$str

 
)

 
||
 
 
> @
search
 
 
A G
.
 
 
G H
annees
 
 
H N
==
 
 
O Q
edp
 
 
R U
.
 
 
U V
	dateDebut
 
 
V _
.
 
 
_ `
Value
 
 
` e
.
 
 
e f
Year
 
 
f j
||
¡
¡
> @
search
¡
¡
A G
.
¡
¡
G H
annees
¡
¡
H N
==
¡
¡
O Q
edp
¡
¡
R U
.
¡
¡
U V
dateFin
¡
¡
V ]
.
¡
¡
] ^
Value
¡
¡
^ c
.
¡
¡
c d
Year
¡
¡
d h
||
¢
¢
> @
search
¢
¢
A G
.
¢
¢
G H
annees
¢
¢
H N
==
¢
¢
O Q
edp
¢
¢
R U
.
¢
¢
U V
dateFinInitial
¢
¢
V d
.
¢
¢
d e
Value
¢
¢
e j
.
¢
¢
j k
Year
¢
¢
k o
||
£
£
> @
search
£
£
A G
.
£
£
G H
annees
£
£
H N
==
£
£
O Q
edp
£
£
R U
.
£
£
U V
dateFinPrevue
£
£
V c
.
£
£
c d
Value
£
£
d i
.
£
£
i j
Year
£
£
j n
||
¤
¤
> @
search
¤
¤
A G
.
¤
¤
G H
annees
¤
¤
H N
==
¤
¤
O Q
Convert
¤
¤
R Y
.
¤
¤
Y Z
ToInt32
¤
¤
Z a
(
¤
¤
a b
edp
¤
¤
b e
.
¤
¤
e f
DateCreation
¤
¤
f r
.
¤
¤
r s
	Substring
¤
¤
s |
(
¤
¤
| }
$num
¤
¤
} ~
,
¤
¤
~ 
$num¤
¤
 
)¤
¤
 
)¤
¤
 
)
¥
¥
> ?
)
¥
¥
? @
join
¦
¦
  $
pl
¦
¦
% '
in
¦
¦
( *
_context
¦
¦
+ 3
.
¦
¦
3 4
ProjetLivraisons
¦
¦
4 D
on
¦
¦
E G
edp
¦
¦
H K
.
¦
¦
K L
id
¦
¦
L N
equals
¦
¦
O U
pl
¦
¦
V X
.
¦
¦
X Y
projetEdpId
¦
¦
Y d
into
§
§
  $
joinedT
§
§
% ,
from
¨
¨
  $
r
¨
¨
% &
in
¨
¨
' )
joinedT
¨
¨
* 1
.
¨
¨
1 2
DefaultIfEmpty
¨
¨
2 @
(
¨
¨
@ A
)
¨
¨
A B
join
ª
ª
  $
dl
ª
ª
% '
in
ª
ª
( *
_context
ª
ª
+ 3
.
ª
ª
3 4
DetailLivraisons
ª
ª
4 D
on
ª
ª
E G
r
ª
ª
H I
.
ª
ª
I J
Id
ª
ª
J L
equals
ª
ª
M S
dl
ª
ª
T V
.
ª
ª
V W
ProjetLivraisonId
ª
ª
W h
into
«
«
# '
joinedd
«
«
( /
from
¬
¬
  $
dd
¬
¬
% '
in
¬
¬
( *
joinedd
¬
¬
+ 2
.
¬
¬
2 3
DefaultIfEmpty
¬
¬
3 A
(
¬
¬
A B
)
¬
¬
B C
join
®
®
  $
t
®
®
% &
in
®
®
' )
_context
®
®
* 2
.
®
®
2 3
Taches
®
®
3 9
on
®
®
: <
dd
®
®
= ?
.
®
®
? @
Id
®
®
@ B
equals
®
®
C I
t
®
®
J K
.
®
®
K L
detailLivraisonId
®
®
L ]
into
¯
¯
- 1
joinedt
¯
¯
2 9
from
°
°
  $
tt
°
°
% '
in
°
°
( *
joinedt
°
°
+ 2
.
°
°
2 3
DefaultIfEmpty
°
°
3 A
(
°
°
A B
)
°
°
B C
join
±
±
  $
p
±
±
% &
in
±
±
' )
_context
±
±
* 2
.
±
±
2 3
profileUser
±
±
3 >
on
±
±
? A
tt
±
±
B D
.
±
±
D E
UserId
±
±
E K
equals
±
±
L R
p
±
±
S T
.
±
±
T U
userId
±
±
U [
into
²
²
# '
joinedtg
²
²
( 0
from
³
³
  $
tte
³
³
% (
in
³
³
) +
joinedtg
³
³
, 4
.
³
³
4 5
DefaultIfEmpty
³
³
5 C
(
³
³
C D
)
³
³
D E
join
µ
µ
  $
di
µ
µ
& (
in
µ
µ
) +
_context
µ
µ
, 4
.
µ
µ
4 5
DetailImputations
µ
µ
5 F
on
µ
µ
G I
tt
µ
µ
J L
.
µ
µ
L M
Id
µ
µ
M O
equals
µ
µ
P V
di
µ
µ
W Y
.
µ
µ
Y Z
TacheId
µ
µ
Z a
into
·
·
" &
	joinedtge
·
·
' 0
from
¸
¸
  $
tted
¸
¸
% )
in
¸
¸
* ,
	joinedtge
¸
¸
- 6
.
¸
¸
6 7
DefaultIfEmpty
¸
¸
7 E
(
¸
¸
E F
)
¸
¸
F G
select
¼
¼
  &
new
¼
¼
' *
{
½
½
  !
budgetInitial
¾
¾
$ 1
=
¾
¾
2 3
edp
¾
¾
4 7
.
¾
¾
7 8
BudgetInitial
¾
¾
8 E
+
¾
¾
F G
(
¾
¾
H I
edp
¾
¾
I L
.
¾
¾
L M
BudgetRallonge
¾
¾
M [
!=
¾
¾
[ ]
null
¾
¾
] a
?
¾
¾
a b
edp
¾
¾
c f
.
¾
¾
f g
BudgetRallonge
¾
¾
g u
:
¾
¾
v w
$num
¾
¾
w x
)
¾
¾
x y
,
¾
¾
y z
id
Á
Á
$ &
=
Á
Á
' (
edp
Á
Á
) ,
.
Á
Á
, -
id
Á
Á
- /
,
Á
Á
/ 0
commercantName
Â
Â
$ 2
=
Â
Â
3 4
edp
Â
Â
5 8
.
Â
Â
8 9

Commercial
Â
Â
9 C
.
Â
Â
C D
FullName
Â
Â
D L
,
Â
Â
L M

CodeProjet
Ã
Ã
$ .
=
Ã
Ã
/ 0
edp
Ã
Ã
1 4
.
Ã
Ã
4 5
CodeProjets
Ã
Ã
5 @
.
Ã
Ã
@ A
Numero
Ã
Ã
A G
+
Ã
Ã
H I
$str
Ã
Ã
J M
+
Ã
Ã
N O
edp
Ã
Ã
P S
.
Ã
Ã
S T

CodeProjet
Ã
Ã
T ^
,
Ã
Ã
^ _
natureCodeProjet
Ä
Ä
$ 4
=
Ä
Ä
5 6
edp
Ä
Ä
7 :
.
Ä
Ä
: ;
CodeProjets
Ä
Ä
; F
.
Ä
Ä
F G
Nature
Ä
Ä
G M
,
Ä
Ä
M N
nom
Å
Å
$ '
=
Å
Å
( )
edp
Å
Å
* -
.
Å
Å
- .
Nom
Å
Å
. 1
,
Å
Å
1 2

clientName
Æ
Æ
$ .
=
Æ
Æ
/ 0
edp
Æ
Æ
1 4
.
Æ
Æ
4 5
client
Æ
Æ
5 ;
.
Æ
Æ
; <
Nom
Æ
Æ
< ?
,
Æ
Æ
? @
dateCreation
Ç
Ç
$ 0
=
Ç
Ç
1 2
edp
Ç
Ç
3 6
.
Ç
Ç
6 7
DateCreation
Ç
Ç
7 C
,
Ç
Ç
C D
edp
É
É
$ '
.
É
É
' (
status
É
É
( .
,
É
É
. /"
budgetConfirmeTotale
Ì
Ì
$ 8
=
Ì
Ì
9 :
(
Ì
Ì
; <
edp
Ì
Ì
< ?
.
Ì
Ì
? @$
budgetConfirmeRallonge
Ì
Ì
@ V
!=
Ì
Ì
W Y
null
Ì
Ì
Z ^
?
Ì
Ì
_ `
edp
Ì
Ì
a d
.
Ì
Ì
d e$
budgetConfirmeRallonge
Ì
Ì
e {
:
Ì
Ì
| }
$num
Ì
Ì
~ 
)Ì
Ì
 
+Ì
Ì
 
(Ì
Ì
 
edpÌ
Ì
 
.Ì
Ì
 
budgetConfirmeÌ
Ì
 
!=Ì
Ì
 
nullÌ
Ì
 
?Ì
Ì
 
edpÌ
Ì
  £
.Ì
Ì
£ ¤
budgetConfirmeÌ
Ì
¤ ²
:Ì
Ì
³ ´
$numÌ
Ì
µ ¶
)Ì
Ì
¶ ·
,Ì
Ì
· ¸
budgetGPTotale
Î
Î
$ 2
=
Î
Î
3 4
(
Î
Î
5 6
edp
Î
Î
6 9
.
Î
Î
9 :
budgetGPRallonge
Î
Î
: J
!=
Î
Î
K M
null
Î
Î
N R
?
Î
Î
S T
edp
Î
Î
U X
.
Î
Î
X Y
budgetGPRallonge
Î
Î
Y i
:
Î
Î
j k
$num
Î
Î
l m
)
Î
Î
m n
+
Î
Î
o p
(
Î
Î
q r
edp
Î
Î
r u
.
Î
Î
u v
budgetGP
Î
Î
v ~
!=Î
Î
 
nullÎ
Î
 
?Î
Î
 
edpÎ
Î
 
.Î
Î
 
budgetGPÎ
Î
 
:Î
Î
 
$numÎ
Î
 
)Î
Î
 
,Î
Î
  
budgetJuniorTotale
Ñ
Ñ
$ 6
=
Ñ
Ñ
7 8
(
Ñ
Ñ
9 :
edp
Ñ
Ñ
: =
.
Ñ
Ñ
= >
budgetJunior
Ñ
Ñ
> J
!=
Ñ
Ñ
K M
null
Ñ
Ñ
N R
?
Ñ
Ñ
S T
edp
Ñ
Ñ
U X
.
Ñ
Ñ
X Y
budgetJunior
Ñ
Ñ
Y e
:
Ñ
Ñ
f g
$num
Ñ
Ñ
h i
)
Ñ
Ñ
i j
+
Ñ
Ñ
k l
(
Ñ
Ñ
m n
edp
Ñ
Ñ
n q
.
Ñ
Ñ
q r#
budgetJuniorRallongeÑ
Ñ
r 
!=Ñ
Ñ
 
nullÑ
Ñ
 
?Ñ
Ñ
 
edpÑ
Ñ
 
.Ñ
Ñ
 $
budgetJuniorRallongeÑ
Ñ
 ©
:Ñ
Ñ
ª «
$numÑ
Ñ
¬ ­
)Ñ
Ñ
­ ®
,Ñ
Ñ
® ¯$
budgetValidationTotale
Ó
Ó
$ :
=
Ó
Ó
; <
(
Ó
Ó
= >
edp
Ó
Ó
> A
.
Ó
Ó
A B
budgetValidation
Ó
Ó
B R
!=
Ó
Ó
S U
null
Ó
Ó
V Z
?
Ó
Ó
[ \
edp
Ó
Ó
] `
.
Ó
Ó
` a
budgetValidation
Ó
Ó
a q
:
Ó
Ó
r s
$num
Ó
Ó
t u
)
Ó
Ó
u v
+
Ó
Ó
w x
(
Ó
Ó
y z
edp
Ó
Ó
z }
.
Ó
Ó
} ~'
budgetValidationRallongeÓ
Ó
~ 
!=Ó
Ó
 
nullÓ
Ó
 
?Ó
Ó
  
edpÓ
Ó
¡ ¤
.Ó
Ó
¤ ¥(
budgetValidationRallongeÓ
Ó
¥ ½
:Ó
Ó
¾ ¿
$numÓ
Ó
À Á
)Ó
Ó
Á Â
,Ó
Ó
Â Ã 
budgetSeniorTotale
Õ
Õ
$ 6
=
Õ
Õ
7 8
(
Õ
Õ
9 :
edp
Õ
Õ
: =
.
Õ
Õ
= >
budgetSenior
Õ
Õ
> J
!=
Õ
Õ
K M
null
Õ
Õ
N R
?
Õ
Õ
S T
edp
Õ
Õ
U X
.
Õ
Õ
X Y
budgetSenior
Õ
Õ
Y e
:
Õ
Õ
f g
$num
Õ
Õ
h i
)
Õ
Õ
i j
+
Õ
Õ
k l
(
Õ
Õ
m n
edp
Õ
Õ
n q
.
Õ
Õ
q r#
budgetSeniorRallongeÕ
Õ
r 
!=Õ
Õ
 
nullÕ
Õ
 
?Õ
Õ
 
edpÕ
Õ
 
.Õ
Õ
 $
budgetSeniorRallongeÕ
Õ
 ©
:Õ
Õ
ª «
$numÕ
Õ
¬ ­
)Õ
Õ
­ ®
,Õ
Õ
® ¯#
budgetDirectionTotale
×
×
$ 9
=
×
×
: ;
(
×
×
< =
edp
×
×
= @
.
×
×
@ A
budgetDirection
×
×
A P
!=
×
×
Q S
null
×
×
T X
?
×
×
Y Z
edp
×
×
[ ^
.
×
×
^ _
budgetDirection
×
×
_ n
:
×
×
o p
$num
×
×
q r
)
×
×
r s
+
×
×
t u
(
×
×
v w
edp
×
×
w z
.
×
×
z {&
budgetDirectionRallonge×
×
{ 
!=×
×
 
null×
×
 
?×
×
 
edp×
×
  
.×
×
  ¡'
budgetDirectionRallonge×
×
¡ ¸
:×
×
¹ º
$num×
×
» ¼
)×
×
¼ ½
,×
×
½ ¾"
countProjetLivraison
Ú
Ú
$ 8
=
Ú
Ú
9 :
edp
Ú
Ú
; >
.
Ú
Ú
> ?
ProjetLivraisons
Ú
Ú
? O
.
Ú
Ú
O P
Count
Ú
Ú
P U
(
Ú
Ú
U V
)
Ú
Ú
V W
,
Ú
Ú
W X
tte
Ü
Ü
$ '
.
Ü
Ü
' (
	profileId
Ü
Ü
( 1
,
Ü
Ü
1 2
Monday
Ý
Ý
# )
=
Ý
Ý
* +
(
Ý
Ý
, -
Convert
Ý
Ý
- 4
.
Ý
Ý
4 5
ToDouble
Ý
Ý
5 =
(
Ý
Ý
= >
tted
Ý
Ý
> B
.
Ý
Ý
B C
Monday
Ý
Ý
C I
.
Ý
Ý
I J
	Substring
Ý
Ý
J S
(
Ý
Ý
S T
$num
Ý
Ý
T U
,
Ý
Ý
U V
$num
Ý
Ý
W X
)
Ý
Ý
X Y
)
Ý
Ý
Y Z
+
Ý
Ý
[ \
Convert
Ý
Ý
] d
.
Ý
Ý
d e
ToDouble
Ý
Ý
e m
(
Ý
Ý
m n
tted
Ý
Ý
n r
.
Ý
Ý
r s
Monday
Ý
Ý
s y
.
Ý
Ý
y z
	SubstringÝ
Ý
z 
(Ý
Ý
 
$numÝ
Ý
 
,Ý
Ý
 
$numÝ
Ý
 
)Ý
Ý
 
)Ý
Ý
 
/Ý
Ý
 
$numÝ
Ý
 
)Ý
Ý
 
/Ý
Ý
 
$numÝ
Ý
 
,Ý
Ý
 
Tuesday
Þ
Þ
$ +
=
Þ
Þ
, -
(
Þ
Þ
. /
Convert
Þ
Þ
/ 6
.
Þ
Þ
6 7
ToDouble
Þ
Þ
7 ?
(
Þ
Þ
? @
tted
Þ
Þ
@ D
.
Þ
Þ
D E
Tuesday
Þ
Þ
E L
.
Þ
Þ
L M
	Substring
Þ
Þ
M V
(
Þ
Þ
V W
$num
Þ
Þ
W X
,
Þ
Þ
X Y
$num
Þ
Þ
Z [
)
Þ
Þ
[ \
)
Þ
Þ
\ ]
+
Þ
Þ
^ _
Convert
Þ
Þ
` g
.
Þ
Þ
g h
ToDouble
Þ
Þ
h p
(
Þ
Þ
p q
tted
Þ
Þ
q u
.
Þ
Þ
u v
Tuesday
Þ
Þ
v }
.
Þ
Þ
} ~
	SubstringÞ
Þ
~ 
(Þ
Þ
 
$numÞ
Þ
 
,Þ
Þ
 
$numÞ
Þ
 
)Þ
Þ
 
)Þ
Þ
 
/Þ
Þ
 
$numÞ
Þ
 
)Þ
Þ
 
/Þ
Þ
 
$numÞ
Þ
 
,Þ
Þ
 
Friday
ß
ß
$ *
=
ß
ß
+ ,
(
ß
ß
- .
Convert
ß
ß
. 5
.
ß
ß
5 6
ToDouble
ß
ß
6 >
(
ß
ß
> ?
tted
ß
ß
? C
.
ß
ß
C D
Friday
ß
ß
D J
.
ß
ß
J K
	Substring
ß
ß
K T
(
ß
ß
T U
$num
ß
ß
U V
,
ß
ß
V W
$num
ß
ß
X Y
)
ß
ß
Y Z
)
ß
ß
Z [
+
ß
ß
\ ]
Convert
ß
ß
^ e
.
ß
ß
e f
ToDouble
ß
ß
f n
(
ß
ß
n o
tted
ß
ß
o s
.
ß
ß
s t
Friday
ß
ß
t z
.
ß
ß
z {
	Substringß
ß
{ 
(ß
ß
 
$numß
ß
 
,ß
ß
 
$numß
ß
 
)ß
ß
 
)ß
ß
 
/ß
ß
 
$numß
ß
 
)ß
ß
 
/ß
ß
 
$numß
ß
 
,ß
ß
 
	Wednesday
à
à
$ -
=
à
à
. /
(
à
à
0 1
Convert
à
à
1 8
.
à
à
8 9
ToDouble
à
à
9 A
(
à
à
A B
tted
à
à
B F
.
à
à
F G
	Wednesday
à
à
G P
.
à
à
P Q
	Substring
à
à
Q Z
(
à
à
Z [
$num
à
à
[ \
,
à
à
\ ]
$num
à
à
^ _
)
à
à
_ `
)
à
à
` a
+
à
à
b c
Convert
à
à
d k
.
à
à
k l
ToDouble
à
à
l t
(
à
à
t u
tted
à
à
u y
.
à
à
y z
	Wednesdayà
à
z 
.à
à
 
	Substringà
à
 
(à
à
 
$numà
à
 
,à
à
 
$numà
à
 
)à
à
 
)à
à
 
/à
à
 
$numà
à
 
)à
à
 
/à
à
 
$numà
à
 
,à
à
 
Thursday
á
á
$ ,
=
á
á
- .
(
á
á
/ 0
Convert
á
á
0 7
.
á
á
7 8
ToDouble
á
á
8 @
(
á
á
@ A
tted
á
á
A E
.
á
á
E F
Thursday
á
á
F N
.
á
á
N O
	Substring
á
á
O X
(
á
á
X Y
$num
á
á
Y Z
,
á
á
Z [
$num
á
á
\ ]
)
á
á
] ^
)
á
á
^ _
+
á
á
` a
Convert
á
á
b i
.
á
á
i j
ToDouble
á
á
j r
(
á
á
r s
tted
á
á
s w
.
á
á
w x
Thursdayá
á
x 
.á
á
 
	Substringá
á
 
(á
á
 
$numá
á
 
,á
á
 
$numá
á
 
)á
á
 
)á
á
 
/á
á
 
$numá
á
 
)á
á
 
/á
á
 
$numá
á
 
,á
á
 
}
ä
ä
  !
)
ä
ä
! "
.
ä
ä
" #
ToList
ä
ä
# )
(
ä
ä
) *
)
ä
ä
* +
;
ä
ä
+ ,
var
é
é
 
result1
é
é
 
=
é
é
 
(
é
é
 
from
é
é
 #
edp
é
é
$ '
in
é
é
( *
dbresult
é
é
+ 3
group
ê
ê
 $
edp
ê
ê
% (
by
ê
ê
) +
new
ê
ê
, /
{
ë
ë
  
edp
ì
ì
# &
.
ì
ì
& '
	profileId
ì
ì
' 0
,
ì
ì
0 1
edp
ï
ï
# &
.
ï
ï
& '
id
ï
ï
' )
,
ï
ï
) *
edp
ð
ð
# &
.
ð
ð
& '
commercantName
ð
ð
' 5
,
ð
ð
5 6
edp
ñ
ñ
# &
.
ñ
ñ
& '

CodeProjet
ñ
ñ
' 1
,
ñ
ñ
1 2
edp
ò
ò
# &
.
ò
ò
& '
natureCodeProjet
ò
ò
' 7
,
ò
ò
7 8
edp
ó
ó
# &
.
ó
ó
& '
nom
ó
ó
' *
,
ó
ó
* +
edp
ô
ô
# &
.
ô
ô
& '
budgetInitial
ô
ô
' 4
,
ô
ô
4 5
edp
õ
õ
# &
.
õ
õ
& '

clientName
õ
õ
' 1
,
õ
õ
1 2
edp
ö
ö
# &
.
ö
ö
& '
dateCreation
ö
ö
' 3
,
ö
ö
3 4
edp
ø
ø
# &
.
ø
ø
& '
status
ø
ø
' -
,
ø
ø
- .
edp
ú
ú
# &
.
ú
ú
& '#
budgetDirectionTotale
ú
ú
' <
,
ú
ú
< =
edp
û
û
# &
.
û
û
& '"
budgetConfirmeTotale
û
û
' ;
,
û
û
; <
edp
ü
ü
# &
.
ü
ü
& '
budgetGPTotale
ü
ü
' 5
,
ü
ü
5 6
edp
ý
ý
# &
.
ý
ý
& ' 
budgetJuniorTotale
ý
ý
' 9
,
ý
ý
9 :
edp
þ
þ
# &
.
þ
þ
& '$
budgetValidationTotale
þ
þ
' =
,
þ
þ
= >
edp
ÿ
ÿ
# &
.
ÿ
ÿ
& ' 
budgetSeniorTotale
ÿ
ÿ
' 9
,
ÿ
ÿ
9 :
edp
# &
.
& '"
countProjetLivraison
' ;
,
; <
}
  
into
! %
g
& '
select
 %
new
& )
{
  
g
# $
.
$ %
Key
% (
.
( )
	profileId
) 2
,
2 3
g
# $
.
$ %
Key
% (
.
( )
id
) +
,
+ ,
g
# $
.
$ %
Key
% (
.
( )
commercantName
) 7
,
7 8
g
# $
.
$ %
Key
% (
.
( )

CodeProjet
) 3
,
3 4
g
# $
.
$ %
Key
% (
.
( )
natureCodeProjet
) 9
,
9 :
g
# $
.
$ %
Key
% (
.
( )
nom
) ,
,
, -
g
# $
.
$ %
Key
% (
.
( )
budgetInitial
) 6
,
6 7
g
# $
.
$ %
Key
% (
.
( )

clientName
) 3
,
3 4
g
# $
.
$ %
Key
% (
.
( )
dateCreation
) 5
,
5 6
g
# $
.
$ %
Key
% (
.
( )
status
) /
,
/ 0
g
# $
.
$ %
Key
% (
.
( )"
countProjetLivraison
) =
,
= >

coutEstime
# -
=
. /
(
0 1
g
1 2
.
2 3
Key
3 6
.
6 7
	profileId
7 @
==
A C
$str
D N
?
O P
g
Q R
.
R S
Key
S V
.
V W"
budgetConfirmeTotale
W k
:
 
(
 
g
 
.
 
Key
 
.
 
	profileId
 &
==
' )
$str
* 5
?
6 7
g
8 9
.
9 :
Key
: =
.
= >#
budgetDirectionTotale
> S
:
 
(
 
g
 
.
 
Key
 
.
 
	profileId
 &
==
' )
$str
* .
?
/ 0
g
1 2
.
2 3
Key
3 6
.
6 7
budgetGPTotale
7 E
:
 
(
 
g
 
.
 
Key
 
.
 
	profileId
 &
==
' )
$str
* 2
?
3 4
g
5 6
.
6 7
Key
7 :
.
: ; 
budgetJuniorTotale
; M
:
 
(
 
g
 
.
 
Key
 
.
 
	profileId
 &
==
' )
$str
* 2
?
3 4
g
5 6
.
6 7
Key
7 :
.
: ; 
budgetSeniorTotale
; M
:
 
(
 
g
 
.
 
Key
 
.
 
	profileId
 &
==
' )
$str
* 6
?
7 8
g
9 :
.
: ;
Key
; >
.
> ?$
budgetValidationTotale
? U
:
 
$num
 
)
 
)
 
)
 
)
 
)
 
)
 
*
 
Convert
 
.
  
ToDouble
  (
(
( )
_context
) 1
.
1 2
profile
2 9
.
9 :
Where
: ?
(
? @
x
@ A
=>
B D
x
E F
.
F G
	profileId
G P
==
Q S
g
T U
.
U V
Key
V Y
.
Y Z
	profileId
Z c
)
c d
.
d e
Select
e k
(
k l
x
l m
=>
n p
x
q r
.
r s
budget
s y
)
y z
.
z {
FirstOrDefault{ 
( 
) 
) 
, 
charge
¡¡# )
=
¡¡* +
g
¡¡, -
.
¡¡- .
Sum
¡¡. 1
(
¡¡1 2
x
¡¡2 3
=>
¡¡4 6
x
¡¡7 8
.
¡¡8 9
Monday
¡¡9 ?
)
¡¡? @
+
¡¡A B
g
¡¡C D
.
¡¡D E
Sum
¡¡E H
(
¡¡H I
x
¡¡I J
=>
¡¡K M
x
¡¡N O
.
¡¡O P
Tuesday
¡¡P W
)
¡¡W X
+
¡¡Y Z
g
¡¡[ \
.
¡¡\ ]
Sum
¡¡] `
(
¡¡` a
x
¡¡a b
=>
¡¡c e
x
¡¡f g
.
¡¡g h
	Wednesday
¡¡h q
)
¡¡q r
+
¡¡s t
g
¡¡u v
.
¡¡v w
Sum
¡¡w z
(
¡¡z {
x
¡¡{ |
=>
¡¡} 
x¡¡ 
.¡¡ 
Friday¡¡ 
)¡¡ 
+¡¡ 
g¡¡ 
.¡¡ 
Sum¡¡ 
(¡¡ 
x¡¡ 
=>¡¡ 
x¡¡ 
.¡¡ 
Thursday¡¡ ¡
)¡¡¡ ¢
,¡¡¢ £
cout
££# '
=
££( )
(
££* +
g
££+ ,
.
££, -
Sum
££- 0
(
££0 1
x
££1 2
=>
££3 5
x
££6 7
.
££7 8
Monday
££8 >
)
££> ?
+
££@ A
g
££A B
.
££B C
Sum
££C F
(
££F G
x
££G H
=>
££I K
x
££L M
.
££M N
Tuesday
££N U
)
££U V
+
££W X
g
££X Y
.
££Y Z
Sum
££Z ]
(
££] ^
x
££^ _
=>
££` b
x
££c d
.
££d e
	Wednesday
££e n
)
££n o
+
££p q
g
££q r
.
££r s
Sum
££s v
(
££v w
x
££w x
=>
££y {
x
££| }
.
££} ~
Friday££~ 
)££ 
+££ 
g££ 
.££ 
Sum££ 
(££ 
x££ 
=>££ 
x££ 
.££ 
Thursday££ 
)££ 
)££ 
*
¥¥" #
Convert
¥¥$ +
.
¥¥+ ,
ToDouble
¥¥, 4
(
¥¥4 5
_context
¥¥5 =
.
¥¥= >
profile
¥¥> E
.
¥¥E F
Where
¥¥F K
(
¥¥K L
x
¥¥L M
=>
¥¥N P
x
¥¥Q R
.
¥¥R S
annee
¥¥S X
==
¥¥Y [
DateTime
¥¥\ d
.
¥¥d e
Now
¥¥e h
.
¥¥h i
Year
¥¥i m
.
¥¥m n
ToString
¥¥n v
(
¥¥v w
)
¥¥w x
&&
¥¥y {
x
¥¥| }
.
¥¥} ~
	profileId¥¥~ 
==¥¥ 
g¥¥ 
.¥¥ 
Key¥¥ 
.¥¥ 
	profileId¥¥ 
)¥¥ 
.¥¥ 
Select¥¥ ¢
(¥¥¢ £
x¥¥£ ¤
=>¥¥¥ §
x¥¥¨ ©
.¥¥© ª
budget¥¥ª °
)¥¥° ±
.¥¥± ²
FirstOrDefault¥¥² À
(¥¥À Á
)¥¥Á Â
)¥¥Â Ã
}
¦¦  
)
¦¦  !
.
¦¦! "
ToList
¦¦" (
(
¦¦( )
)
¦¦) *
;
¦¦* +
var
ªª 
ResultFinal
ªª 
=
ªª  !
(
ªª" #
from
ªª# '
edp
ªª( +
in
ªª, .
result1
ªª/ 6
group
««# (
edp
««) ,
by
««- /
new
««0 3
{
¬¬# $
edp
¯¯' *
.
¯¯* +
id
¯¯+ -
,
¯¯- .
edp
°°' *
.
°°* +
commercantName
°°+ 9
,
°°9 :
edp
±±' *
.
±±* +

CodeProjet
±±+ 5
,
±±5 6
edp
²²' *
.
²²* +
natureCodeProjet
²²+ ;
,
²²; <
edp
³³' *
.
³³* +
nom
³³+ .
,
³³. /
edp
´´' *
.
´´* +
budgetInitial
´´+ 8
,
´´8 9
edp
µµ' *
.
µµ* +

clientName
µµ+ 5
,
µµ5 6
edp
¶¶' *
.
¶¶* +
dateCreation
¶¶+ 7
,
¶¶7 8
edp
¸¸' *
.
¸¸* +
status
¸¸+ 1
,
¸¸1 2
edp
½½' *
.
½½* +"
countProjetLivraison
½½+ ?
,
½½? @
}
ÁÁ# $
into
ÁÁ% )
g
ÁÁ* +
select
ÂÂ# )
new
ÂÂ* -
{
ÃÃ# $
g
ÈÈ' (
.
ÈÈ( )
Key
ÈÈ) ,
.
ÈÈ, -
id
ÈÈ- /
,
ÈÈ/ 0
g
ÉÉ' (
.
ÉÉ( )
Key
ÉÉ) ,
.
ÉÉ, -
commercantName
ÉÉ- ;
,
ÉÉ; <
g
ÊÊ' (
.
ÊÊ( )
Key
ÊÊ) ,
.
ÊÊ, -

CodeProjet
ÊÊ- 7
,
ÊÊ7 8
g
ËË' (
.
ËË( )
Key
ËË) ,
.
ËË, -
natureCodeProjet
ËË- =
,
ËË= >
g
ÌÌ' (
.
ÌÌ( )
Key
ÌÌ) ,
.
ÌÌ, -
nom
ÌÌ- 0
,
ÌÌ0 1
g
ÍÍ' (
.
ÍÍ( )
Key
ÍÍ) ,
.
ÍÍ, -

clientName
ÍÍ- 7
,
ÍÍ7 8
g
ÎÎ' (
.
ÎÎ( )
Key
ÎÎ) ,
.
ÎÎ, -
dateCreation
ÎÎ- 9
,
ÎÎ9 :
g
ÐÐ' (
.
ÐÐ( )
Key
ÐÐ) ,
.
ÐÐ, -
status
ÐÐ- 3
,
ÐÐ3 4
g
ÑÑ' (
.
ÑÑ( )
Key
ÑÑ) ,
.
ÑÑ, -"
countProjetLivraison
ÑÑ- A
,
ÑÑA B
g
ÓÓ' (
.
ÓÓ( )
Key
ÓÓ) ,
.
ÓÓ, -
budgetInitial
ÓÓ- :
,
ÓÓ: ;

coutEstime
ÕÕ' 1
=
ÕÕ2 3
g
ÕÕ4 5
.
ÕÕ5 6
Sum
ÕÕ6 9
(
ÕÕ9 :
x
ÕÕ: ;
=>
ÕÕ< >
x
ÕÕ? @
.
ÕÕ@ A

coutEstime
ÕÕA K
)
ÕÕK L
,
ÕÕL M
charge
ÖÖ' -
=
ÖÖ. /
g
ÖÖ0 1
.
ÖÖ1 2
Sum
ÖÖ2 5
(
ÖÖ5 6
x
ÖÖ6 7
=>
ÖÖ8 :
x
ÖÖ; <
.
ÖÖ< =
charge
ÖÖ= C
)
ÖÖC D
,
ÖÖD E
cout
××' +
=
××, -
g
××. /
.
××/ 0
Sum
××0 3
(
××3 4
x
××4 5
=>
××6 8
x
××9 :
.
××: ;
cout
××; ?
)
××? @
}
ÜÜ# $
)
ÜÜ$ %
.
ÜÜ% &
ToList
ÜÜ& ,
(
ÜÜ, -
)
ÜÜ- .
;
ÜÜ. /
return
ßß 
Ok
ßß 
(
ßß 
ResultFinal
ßß %
)
ßß% &
;
ßß& '
}
ìì 
catch
íí 
(
íí 
	Exception
íí 
e
íí 
)
íí 
{
îî 
return
ðð 

BadRequest
ðð !
(
ðð! "
e
ðð" #
)
ðð# $
;
ðð$ %
}
ññ 
}
óó 	
[
öö 	
HttpGet
öö	 
(
öö 
$str
öö 
)
öö 
]
öö 
public
÷÷ 
IActionResult
÷÷ !
StatProjetCompatble
÷÷ 0
(
÷÷0 1
)
÷÷1 2
{
øø 	
try
ùù 
{
ùù 
var
úú 
resultat
úú 
=
úú 
(
úú 
from
úú  
edp
úú! $
in
úú% '
_context
úú( 0
.
úú0 1

ProjetEdps
úú1 ;
select
úú< B
new
úúC F
{
ûû #
chargeConsommerTotale
üü %
=
üü& '
(
üü( )
from
üü) -
impu
üü. 2
in
üü3 5
_context
üü6 >
.
üü> ?
Imputations
üü? J
join
ýý) -
Dimpu
ýý. 3
in
ýý4 6
_context
ýý7 ?
.
ýý? @
DetailImputations
ýý@ Q
on
ýýR T
impu
ýýU Y
.
ýýY Z
Id
ýýZ \
equals
ýý] c
Dimpu
ýýd i
.
ýýi j
ImputationId
ýýj v
join
þþ) -
tache
þþ. 3
in
þþ4 6
_context
þþ7 ?
.
þþ? @
Taches
þþ@ F
on
þþG I
Dimpu
þþJ O
.
þþO P
TacheId
þþP W
equals
þþX ^
tache
þþ_ d
.
þþd e
Id
þþe g
join
ÿÿ) -

DLivraison
ÿÿ. 8
in
ÿÿ9 ;
_context
ÿÿ< D
.
ÿÿD E
DetailLivraisons
ÿÿE U
on
ÿÿV X
tache
ÿÿY ^
.
ÿÿ^ _
detailLivraisonId
ÿÿ_ p
equals
ÿÿq w

DLivraisonÿÿx 
.ÿÿ 
Idÿÿ 
join
) -
	Livraison
. 7
in
8 :
_context
; C
.
C D
ProjetLivraisons
D T
on
U W

DLivraison
X b
.
b c
ProjetLivraisonId
c t
equals
u {
	Livraison| 
. 
Id 
where
) .
	Livraison
/ 8
.
8 9
projetEdpId
9 D
==
E G
edp
H K
.
K L
id
L N
&&
O Q
impu
R V
.
V W
StatusImputation
W g
==
h j
$num
k l
select
) /
	Livraison 	
.
	 

DetailLivraisons

 
.
 

SelectMany
 %
(
% &
x
& '
=>
( *
x
+ ,
.
, -
taches
- 3
)
3 4
.
4 5
Sum
5 8
(
8 9
x
9 :
=>
; =
Convert
> E
.
E F
ToDouble
F N
(
N O
x
O P
.
P Q
chargeConsomme
Q _
)
_ `
)
` a
)
a b
.
b c
Distinct
c k
(
k l
)
l m
.
m n
Sum
n q
(
q r
)
r s
,
s t
id
 
=
 
edp
 
.
 
id
 
,
 
commercantName
 
=
  
edp
! $
.
$ %

Commercial
% /
.
/ 0
FullName
0 8
,
8 9

CodeProjet
 
=
 
edp
  
.
  !
CodeProjets
! ,
.
, -
Numero
- 3
+
4 5
$str
6 9
+
: ;
edp
< ?
.
? @

CodeProjet
@ J
,
J K
natureCodeProjet
  
=
! "
edp
# &
.
& '
CodeProjets
' 2
.
2 3
Nature
3 9
,
9 :
nom
 
=
 
edp
 
.
 
Nom
 
,
 
budgetInitial
  -
=
. /
edp
0 3
.
3 4
BudgetInitial
4 A
,
A B
budgetRallonge
  .
=
/ 0
edp
1 4
.
4 5
BudgetRallonge
5 C
,
C D

clientName
  *
=
+ ,
edp
- 0
.
0 1
client
1 7
.
7 8
Nom
8 ;
,
; <
dateCreation
  ,
=
, -
Convert
. 5
.
5 6

ToDateTime
6 @
(
@ A
edp
A D
.
D E
DateCreation
E Q
)
Q R
,
R S"
countProjetLivraison
 $
=
% &
edp
' *
.
* +
ProjetLivraisons
+ ;
.
; <
Count
< A
(
A B
)
B C
,
C D
}
 
)
 
.
 
Distinct
 '
(
' (
)
( )
.
) *
ToList
* 0
(
0 1
)
1 2
;
2 3
return
±± 
Ok
±± 
(
±± 
resultat
±± 
)
±± 
;
±±  
}
²² 	
catch
³³ 
(
³³ 
	Exception
³³ 
e
³³ 
)
³³ 
{
´´ 
return
¶¶ 

BadRequest
¶¶ !
(
¶¶! "
e
¶¶" #
)
¶¶# $
;
¶¶$ %
}
·· 
}¸¸ 
[
¼¼ 
HttpPost
¼¼ 
(
¼¼ 
$str
¼¼ "
)
¼¼" #
]
¼¼# $
public
½½ 
IActionResult
½½ 
getByCommercial
½½ ,
(
½½, -&
FiltreProjetComptableDto
½½- E
model
½½F K
)
½½K L
{
¾¾ 	
try
¿¿ 
{
ÀÀ 
var
ÁÁ 
resultat
ÁÁ 
=
ÁÁ 
(
ÁÁ  
from
ÁÁ  $
edp
ÁÁ% (
in
ÁÁ) +
_context
ÁÁ, 4
.
ÁÁ4 5

ProjetEdps
ÁÁ5 ?
where
ÂÂ  %
(
ÂÂ& '
edp
ÂÂ' *
.
ÂÂ* +
CommercialId
ÂÂ+ 7
==
ÂÂ8 :
model
ÂÂ; @
.
ÂÂ@ A
commercialId
ÂÂA M
&&
ÂÂN P
(
ÃÃ  !
string
ÃÃ! '
.
ÃÃ' (
IsNullOrEmpty
ÃÃ( 5
(
ÃÃ5 6
model
ÃÃ6 ;
.
ÃÃ; <
client
ÃÃ< B
)
ÃÃB C
||
ÃÃD F
model
ÃÃG L
.
ÃÃL M
client
ÃÃM S
==
ÃÃT V
edp
ÃÃW Z
.
ÃÃZ [
clientId
ÃÃ[ c
)
ÃÃc d
&&
ÄÄ  "
(
ÄÄ# $
string
ÄÄ$ *
.
ÄÄ* +
IsNullOrEmpty
ÄÄ+ 8
(
ÄÄ8 9
model
ÄÄ9 >
.
ÄÄ> ?
statut
ÄÄ? E
)
ÄÄE F
||
ÄÄG I
model
ÄÄJ O
.
ÄÄO P
statut
ÄÄP V
==
ÄÄW Y
edp
ÄÄZ ]
.
ÄÄ] ^
status
ÄÄ^ d
)
ÄÄd e
&&
ÅÅ  "
(
ÅÅ# $
(
ÅÅ$ %
(
ÅÅ% &
string
ÅÅ& ,
.
ÅÅ, -
IsNullOrEmpty
ÅÅ- :
(
ÅÅ: ;
model
ÅÅ; @
.
ÅÅ@ A
statut
ÅÅA G
)
ÅÅG H
||
ÅÅI K
model
ÅÅL Q
.
ÅÅQ R
statut
ÅÅR X
==
ÅÅY [
$str
ÅÅ\ e
)
ÅÅe f
&&
ÅÅg i
edp
ÅÅj m
.
ÅÅm n
status
ÅÅn t
==
ÅÅu w
$strÅÅx 
)ÅÅ 
||
ÇÇ  "
model
ÇÇ# (
.
ÇÇ( )
annees
ÇÇ) /
==
ÇÇ0 2
edp
ÇÇ3 6
.
ÇÇ6 7
	dateDebut
ÇÇ7 @
.
ÇÇ@ A
Value
ÇÇA F
.
ÇÇF G
Year
ÇÇG K
||
ÈÈ  "
model
ÈÈ# (
.
ÈÈ( )
annees
ÈÈ) /
==
ÈÈ0 2
edp
ÈÈ3 6
.
ÈÈ6 7
dateFin
ÈÈ7 >
.
ÈÈ> ?
Value
ÈÈ? D
.
ÈÈD E
Year
ÈÈE I
||
ÉÉ  "
model
ÉÉ# (
.
ÉÉ( )
annees
ÉÉ) /
==
ÉÉ0 2
edp
ÉÉ3 6
.
ÉÉ6 7
dateFinInitial
ÉÉ7 E
.
ÉÉE F
Value
ÉÉF K
.
ÉÉK L
Year
ÉÉL P
||
ÊÊ  "
model
ÊÊ# (
.
ÊÊ( )
annees
ÊÊ) /
==
ÊÊ0 2
edp
ÊÊ3 6
.
ÊÊ6 7
dateFinPrevue
ÊÊ7 D
.
ÊÊD E
Value
ÊÊE J
.
ÊÊJ K
Year
ÊÊK O
||
ËË  "
model
ËË# (
.
ËË( )
annees
ËË) /
==
ËË0 2
Convert
ËË3 :
.
ËË: ;
ToInt32
ËË; B
(
ËËB C
edp
ËËC F
.
ËËF G
DateCreation
ËËG S
.
ËËS T
	Substring
ËËT ]
(
ËË] ^
$num
ËË^ _
,
ËË_ `
$num
ËËa b
)
ËËb c
)
ËËc d
)
ÌÌ  !
)
ÌÌ! "
select
ÎÎ  &
new
ÎÎ' *
{
ÏÏ  !

CodeProjet
ÐÐ$ .
=
ÐÐ/ 0
edp
ÐÐ1 4
.
ÐÐ4 5
CodeProjets
ÐÐ5 @
.
ÐÐ@ A
Numero
ÐÐA G
+
ÐÐH I
$str
ÐÐJ M
+
ÐÐN O
edp
ÐÐP S
.
ÐÐS T

CodeProjet
ÐÐT ^
,
ÐÐ^ _
natureCodeProjet
ÑÑ$ 4
=
ÑÑ5 6
edp
ÑÑ7 :
.
ÑÑ: ;
CodeProjets
ÑÑ; F
.
ÑÑF G
Nature
ÑÑG M
,
ÑÑM N
edp
ÒÒ$ '
.
ÒÒ' (
	dateDebut
ÒÒ( 1
,
ÒÒ1 2
edp
ÓÓ$ '
.
ÓÓ' (
dateFin
ÓÓ( /
,
ÓÓ/ 0
edp
ÔÔ$ '
.
ÔÔ' (
status
ÔÔ( .
,
ÔÔ. /
edp
ÕÕ$ '
.
ÕÕ' (
DateCreation
ÕÕ( 4
,
ÕÕ4 5
edp
ÖÖ$ '
.
ÖÖ' (
dateFinInitial
ÖÖ( 6
,
ÖÖ6 7
id
××$ &
=
××' (
edp
××) ,
.
××, -
id
××- /
,
××/ 0
nom
ØØ$ '
=
ØØ( )
edp
ØØ* -
.
ØØ- .
Nom
ØØ. 1
,
ØØ1 2
budgetInitial
ÙÙ$ 1
=
ÙÙ2 3
edp
ÙÙ4 7
.
ÙÙ7 8
BudgetInitial
ÙÙ8 E
,
ÙÙE F
budgetRallonge
ÚÚ$ 2
=
ÚÚ3 4
edp
ÚÚ5 8
.
ÚÚ8 9
BudgetRallonge
ÚÚ9 G
,
ÚÚG H
edp
ÛÛ$ '
.
ÛÛ' (
Description
ÛÛ( 3
,
ÛÛ3 4

clientName
ÜÜ$ .
=
ÜÜ/ 0
edp
ÜÜ1 4
.
ÜÜ4 5
client
ÜÜ5 ;
.
ÜÜ; <
Nom
ÜÜ< ?
,
ÜÜ? @
clientId
ÝÝ$ ,
=
ÝÝ- .
edp
ÝÝ/ 2
.
ÝÝ2 3
clientId
ÝÝ3 ;
,
ÝÝ; <
commercantName
ÞÞ$ 2
=
ÞÞ3 4
edp
ÞÞ5 8
.
ÞÞ8 9

Commercial
ÞÞ9 C
.
ÞÞC D
FullName
ÞÞD L
,
ÞÞL M"
countProjetLivraison
ßß$ 8
=
ßß9 :
edp
ßß; >
.
ßß> ?
ProjetLivraisons
ßß? O
.
ßßO P
Count
ßßP U
(
ßßU V
)
ßßV W
}
àà  !
)
àà! "
.
àà" #
ToList
àà# )
(
àà) *
)
àà* +
.
àà+ ,
OrderBy
àà, 3
(
àà3 4
x
àà4 5
=>
àà6 8
Convert
àà9 @
.
àà@ A

ToDateTime
ààA K
(
ààK L
x
ààL M
.
ààM N
DateCreation
ààN Z
)
ààZ [
)
àà[ \
.
àà\ ]
ThenBy
àà] c
(
ààc d
x
ààd e
=>
ààf h
x
àài j
.
ààj k

clientName
ààk u
)
ààu v
;
ààv w
return
ââ 
Ok
ââ 
(
ââ 
resultat
ââ "
)
ââ" #
;
ââ# $
}
ãã 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
åå 
return
çç 

BadRequest
çç !
(
çç! "
e
çç" #
)
çç# $
;
çç$ %
}
èè 
}
éé 	
[
ëë 	
HttpPost
ëë	 
(
ëë 
$str
ëë 
)
ëë 
]
ëë 
public
ìì 
IActionResult
ìì 
GetProjetEdps
ìì *
(
ìì* +&
FiltreProjetComptableDto
ìì+ C
model
ììD I
)
ììI J
{
íí 	
try
îî 
{
ïï 
var
ðð 
resultat
ðð 
=
ðð 
(
ðð  
from
ðð  $
edp
ðð% (
in
ðð) +
_context
ðð, 4
.
ðð4 5

ProjetEdps
ðð5 ?
where
ññ  %
(
ññ& '
(
òò  !
string
òò! '
.
òò' (
IsNullOrEmpty
òò( 5
(
òò5 6
model
òò6 ;
.
òò; <
client
òò< B
)
òòB C
||
òòD F
model
òòG L
.
òòL M
client
òòM S
==
òòT V
edp
òòW Z
.
òòZ [
clientId
òò[ c
)
òòc d
&&
óó  "
(
óó# $
string
óó$ *
.
óó* +
IsNullOrEmpty
óó+ 8
(
óó8 9
model
óó9 >
.
óó> ?
statut
óó? E
)
óóE F
||
óóG I
model
óóJ O
.
óóO P
statut
óóP V
==
óóW Y
edp
óóZ ]
.
óó] ^
status
óó^ d
)
óód e
&&
ôô  "
(
ôô# $
(
õõ! "
(
õõ" #
string
õõ# )
.
õõ) *
IsNullOrEmpty
õõ* 7
(
õõ7 8
model
õõ8 =
.
õõ= >
statut
õõ> D
)
õõD E
||
õõF H
model
õõI N
.
õõN O
statut
õõO U
==
õõV X
$str
õõY b
)
õõb c
&&
õõd f
edp
õõg j
.
õõj k
status
õõk q
==
õõr t
$str
õõu ~
)
õõ~ 
||
÷÷  "
model
÷÷# (
.
÷÷( )
annees
÷÷) /
==
÷÷0 2
edp
÷÷3 6
.
÷÷6 7
	dateDebut
÷÷7 @
.
÷÷@ A
Value
÷÷A F
.
÷÷F G
Year
÷÷G K
||
øø  "
model
øø# (
.
øø( )
annees
øø) /
==
øø0 2
edp
øø3 6
.
øø6 7
dateFin
øø7 >
.
øø> ?
Value
øø? D
.
øøD E
Year
øøE I
||
ùù  "
model
ùù# (
.
ùù( )
annees
ùù) /
==
ùù0 2
edp
ùù3 6
.
ùù6 7
dateFinInitial
ùù7 E
.
ùùE F
Value
ùùF K
.
ùùK L
Year
ùùL P
||
úú  "
model
úú# (
.
úú( )
annees
úú) /
==
úú0 2
edp
úú3 6
.
úú6 7
dateFinPrevue
úú7 D
.
úúD E
Value
úúE J
.
úúJ K
Year
úúK O
||
ûû  "
model
ûû# (
.
ûû( )
annees
ûû) /
==
ûû0 2
Convert
ûû3 :
.
ûû: ;
ToInt32
ûû; B
(
ûûB C
edp
ûûC F
.
ûûF G
DateCreation
ûûG S
.
ûûS T
	Substring
ûûT ]
(
ûû] ^
$num
ûû^ _
,
ûû_ `
$num
ûû` a
)
ûûa b
)
ýý  !
)
þþ  !
)
ÿÿ 
select
  &
new
' *
{
  !

CodeProjet
$ .
=
/ 0
edp
1 4
.
4 5
CodeProjets
5 @
.
@ A
Numero
A G
+
H I
$str
J M
+
N O
edp
P S
.
S T

CodeProjet
T ^
,
^ _
natureCodeProjet
$ 4
=
5 6
edp
7 :
.
: ;
CodeProjets
; F
.
F G
Nature
G M
,
M N
edp
$ '
.
' (
	dateDebut
( 1
,
1 2
edp
$ '
.
' (
dateFin
( /
,
/ 0
edp
$ '
.
' (
status
( .
,
. /
edp
$ '
.
' (
dateFinInitial
( 6
,
6 7
edp
$ '
.
' (
dateFinPrevue
( 5
,
5 6
edp
$ '
.
' (
DateCreation
( 4
,
4 5
id
$ &
=
' (
edp
) ,
.
, -
id
- /
,
/ 0
nom
$ '
=
( )
edp
* -
.
- .
Nom
. 1
,
1 2
budgetInitial
$ 1
=
2 3
edp
4 7
.
7 8
BudgetInitial
8 E
,
E F
budgetRallonge
$ 2
=
3 4
edp
5 8
.
8 9
BudgetRallonge
9 G
,
G H
edp
$ '
.
' (
Description
( 3
,
3 4

clientName
$ .
=
/ 0
edp
1 4
.
4 5
client
5 ;
.
; <
Nom
< ?
,
? @
clientId
$ ,
=
- .
edp
/ 2
.
2 3
clientId
3 ;
,
; <
commercantName
$ 2
=
3 4
edp
5 8
.
8 9

Commercial
9 C
.
C D
FullName
D L
,
L M"
countProjetLivraison
$ 8
=
9 :
edp
; >
.
> ?
ProjetLivraisons
? O
.
O P
Count
P U
(
U V
)
V W
}
  !
)
! "
.
" #
ToList
# )
(
) *
)
* +
.
+ ,
OrderBy
, 3
(
3 4
x
4 5
=>
6 8
Convert
8 ?
.
? @

ToDateTime
@ J
(
J K
x
K L
.
L M
DateCreation
M Y
)
Y Z
)
Z [
.
[ \
ThenBy
\ b
(
b c
x
c d
=>
e g
x
g h
.
h i

clientName
i s
)
s t
;
t u
return
 
Ok
 
(
 
resultat
 "
)
" #
;
# $
}
 
catch
 
(
 
	Exception
 
e
 
)
 
{
 
return
 

BadRequest
 !
(
! "
e
" #
)
# $
;
$ %
}
 
}
 	
[
 	
HttpGet
	 
]
 
public
 
IActionResult
 
GetProjetEdps
 +
(
+ ,
)
, -
{
   	
try
¢¢ 
{
¢¢ 	
var
££ 
resultat
££ 
=
££ 
(
££ 
from
££  
edp
££! $
in
££% '
_context
££) 1
.
££1 2

ProjetEdps
££2 <
select
¤¤ 
new
¤¤ 
{
¥¥ 

CodeProjet
¦¦ 
=
¦¦  
edp
¦¦  #
.
¦¦# $
CodeProjets
¦¦$ /
.
¦¦/ 0
Numero
¦¦0 6
+
¦¦6 7
$str
¦¦7 :
+
¦¦: ;
edp
¦¦< ?
.
¦¦? @

CodeProjet
¦¦@ J
,
¦¦J K
natureCodeProjet
§§ $
=
§§% &
edp
§§' *
.
§§* +
CodeProjets
§§+ 6
.
§§6 7
Nature
§§7 =
,
§§= >
edp¨¨ 
.
¨¨ 
	dateDebut
¨¨ 
,
¨¨ 
edp©© 
.
©© 
dateFin
©© 
,
©© 
edpªª 
.
ªª 
status
ªª 

,
ªª
 
edp«« 
.
«« 
dateFinInitial
«« 
,
«« 
edp
¬¬ 
.
¬¬ 
dateFinPrevue
¬¬ %
,
¬¬% &
id
®® 
=
®® 
edp
®® 
.
®® 
id
®® 
,
®®  
nom
¯¯ 
=
¯¯ 
edp
¯¯ 
.
¯¯ 
Nom
¯¯ 
,
¯¯ 
budgetInitial
°° !
=
°°" #
edp
°°$ '
.
°°' (
BudgetInitial
°°( 5
,
°°5 6
budgetRallonge
±± "
=
±±# $
edp
±±% (
.
±±( )
BudgetRallonge
±±) 7
,
±±7 8
edp
²² 
.
²² 
Description
²² #
,
²²# $

clientName
³³ 
=
³³  
edp
³³! $
.
³³$ %
client
³³% +
.
³³+ ,
Nom
³³, /
,
³³/ 0
clientId
´´ 
=
´´ 
edp
´´ "
.
´´" #
clientId
´´# +
,
´´+ ,
commercantName
µµ "
=
µµ" #
edp
µµ# &
.
µµ& '

Commercial
µµ' 1
.
µµ1 2
FullName
µµ2 :
,
µµ: ;"
countProjetLivraison
¶¶ (
=
¶¶) *
edp
¶¶+ .
.
¶¶. /
ProjetLivraisons
¶¶/ ?
.
¶¶? @
Count
¶¶@ E
(
¶¶E F
)
¶¶F G
}
·· 
)
·· 
.
·· 
ToList
·· 
(
·· 
)
·· 
.
·· 
OrderBy
·· 
(
··  
x
··  !
=>
··! #
x
··# $
.
··$ %

clientName
··% /
)
··/ 0
;
··0 1
return
¹¹ 
Ok
¹¹ 
(
¹¹ 
resultat
¹¹ 
)
¹¹ 
;
¹¹  
}ºº 
catch
»» 
(
»» 
	Exception
»» 
e
»» 
)
»» 
{
¼¼ 
return
¾¾ 

BadRequest
¾¾ !
(
¾¾! "
e
¾¾" #
)
¾¾# $
;
¾¾$ %
}
¿¿ 
}
ÀÀ 	
[
ÄÄ 	
HttpGet
ÄÄ	 
(
ÄÄ 
$str
ÄÄ 
)
ÄÄ 
]
ÄÄ 
public
ÅÅ 
IActionResult
ÅÅ 
GetRunningProjet
ÅÅ .
(
ÅÅ. /
)
ÅÅ/ 0
{
ÆÆ 	
try
ÈÈ 
{
ÈÈ 	
var
ÉÉ 
resultat
ÉÉ 
=
ÉÉ 
(
ÉÉ 
from
ÉÉ  
edp
ÉÉ! $
in
ÉÉ% '
_context
ÉÉ) 1
.
ÉÉ1 2

ProjetEdps
ÉÉ2 <
where
ÉÉ= B
edp
ÉÉC F
.
ÉÉF G
status
ÉÉG M
==
ÉÉM O
$str
ÉÉP Y
select
ÊÊ "
new
ÊÊ# &
{
ËË 
edpÌÌ 
.
ÌÌ 
status
ÌÌ 

,
ÌÌ
 
nom
ÎÎ 
=
ÎÎ 
edp
ÎÎ 
.
ÎÎ 
Nom
ÎÎ 
,
ÎÎ 
id
ÏÏ  "
=
ÏÏ# $
edp
ÏÏ% (
.
ÏÏ( )
id
ÏÏ) +
,
ÏÏ+ ,
clientId
ÐÐ 
=
ÐÐ 
edp
ÐÐ "
.
ÐÐ" #
clientId
ÐÐ# +
,
ÐÐ+ ,
commercantName
ÑÑ "
=
ÑÑ" #
edp
ÑÑ# &
.
ÑÑ& '

Commercial
ÑÑ' 1
.
ÑÑ1 2
FullName
ÑÑ2 :
,
ÑÑ: ;
}
ÒÒ 
)
ÒÒ 
.
ÒÒ 
ToList
ÒÒ 
(
ÒÒ 
)
ÒÒ 
.
ÒÒ 
OrderBy
ÒÒ 
(
ÒÒ  
x
ÒÒ  !
=>
ÒÒ! #
x
ÒÒ# $
.
ÒÒ$ %
nom
ÒÒ% (
)
ÒÒ( )
;
ÒÒ) *
return
ÔÔ 
Ok
ÔÔ 
(
ÔÔ 
resultat
ÔÔ 
)
ÔÔ 
;
ÔÔ  
}ÕÕ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
e
ÖÖ 
)
ÖÖ 
{
×× 
return
ÙÙ 

BadRequest
ÙÙ !
(
ÙÙ! "
e
ÙÙ" #
)
ÙÙ# $
;
ÙÙ$ %
}
ÚÚ 
}
ÛÛ 	
[
ßß 	
HttpGet
ßß	 
(
ßß 
$str
ßß 
)
ßß 
]
ßß 
public
àà 
async
àà 
Task
àà 
<
àà 
ActionResult
àà &
<
àà& '
	ProjetEdp
àà' 0
>
àà0 1
>
àà1 2
GetProjetEdp
àà3 ?
(
àà? @
string
àà@ F
id
ààG I
)
ààI J
{áá 
try
ââ 
{
ââ 	
var
ãã 
	projetEdp
ãã 
=
ãã 
await
ãã !
_context
ãã" *
.
ãã* +

ProjetEdps
ãã+ 5
.
ãã5 6
	FindAsync
ãã6 ?
(
ãã? @
id
ãã@ B
)
ããB C
;
ããC D
if
åå 
(
åå 
	projetEdp
åå 
==
åå 
null
åå !
)
åå! "
{
ææ 
return
çç 
NotFound
çç 
(
çç  
)
çç  !
;
çç! "
}
èè 
return
êê 
	projetEdp
êê 
;
êê 
}ëë 
catch
ìì 
(
ìì 
	Exception
ìì 
e
ìì 
)
ìì 
{
íí 
return
ïï 

BadRequest
ïï !
(
ïï! "
e
ïï" #
)
ïï# $
;
ïï$ %
}
ðð 
}
ññ 	
[
÷÷ 	
HttpPost
÷÷	 
(
÷÷ 
$str
÷÷ 
)
÷÷  
]
÷÷  !
public
øø 
async
øø 
Task
øø 
<
øø 
IActionResult
øø '
>
øø' (
PutProjetEdp
øø) 5
(
øø5 6
string
øø6 <
id
øø= ?
,
øø? @
	ProjetEdp
øøA J
	projetEdp
øøK T
)
øøT U
{
ùù 	
if
úú 
(
úú 
id
úú 
!=
úú 
	projetEdp
úú 
.
úú  
id
úú  "
)
úú" #
{
ûû 
return
üü 

BadRequest
üü !
(
üü! "
)
üü" #
;
üü# $
}
ýý 
var
ÿÿ 

projetEdp1
ÿÿ 
=
ÿÿ 
await
ÿÿ "
_context
ÿÿ# +
.
ÿÿ+ ,

ProjetEdps
ÿÿ, 6
.
ÿÿ6 7
Where
ÿÿ7 <
(
ÿÿ< =
x
ÿÿ= >
=>
ÿÿ? A
x
ÿÿB C
.
ÿÿC D

CodeProjet
ÿÿD N
==
ÿÿO Q
	projetEdp
ÿÿR [
.
ÿÿ[ \

CodeProjet
ÿÿ\ f
&&
ÿÿg i
x
ÿÿj k
.
ÿÿk l
CodeProjetsId
ÿÿl y
==
ÿÿz |
	projetEdpÿÿ} 
.ÿÿ 
CodeProjetsIdÿÿ 
&&ÿÿ 
xÿÿ 
.ÿÿ 
idÿÿ 
!=ÿÿ 
	projetEdpÿÿ ¨
.ÿÿ¨ ©
idÿÿ© «
)ÿÿ« ¬
.ÿÿ¬ ­#
FirstOrDefaultAsyncÿÿ­ À
(ÿÿÀ Á
)ÿÿÁ Â
;ÿÿÂ Ã
if
 
(
 

projetEdp1
 
!=
 
null
 "
)
" #
{
 
return
 
Ok
 
(
 
new
 
{
 

codeRetour
  *
=
+ ,
$num
- 0
}
1 2
)
2 3
;
3 4
}
 
_context
 
.
 
Entry
 
(
 
	projetEdp
 $
)
$ %
.
% &
State
& +
=
, -
EntityState
. 9
.
9 :
Modified
: B
;
B C
try
 
{
 
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
return
 
Ok
 
(
 
new
 
{
 

codeRetour
  *
=
+ ,
$num
- 0
}
1 2
)
2 3
;
3 4
}
 
catch
 
(
 *
DbUpdateConcurrencyException
 /
)
/ 0
{
 
if
 
(
 
!
 
ProjetEdpExists
 $
(
$ %
id
% '
)
' (
)
( )
{
 
return
 
NotFound
 #
(
# $
)
$ %
;
% &
}
 
else
 
{
 
throw
 
;
 
}
 
}
 
}
 	
[
   	
HttpPost
  	 
]
   
public
¡¡ 
async
¡¡ 
Task
¡¡ 
<
¡¡ 
ActionResult
¡¡ &
<
¡¡& '
	ProjetEdp
¡¡' 0
>
¡¡0 1
>
¡¡1 2
PostProjetEdp
¡¡3 @
(
¡¡@ A
	ProjetEdp
¡¡A J
	projetEdp
¡¡K T
)
¡¡T U
{
¢¢ 	
var
¤¤ 

projetEdp1
¤¤ 
=
¤¤ 
await
¤¤ "
_context
¤¤# +
.
¤¤+ ,

ProjetEdps
¤¤, 6
.
¤¤6 7
Where
¤¤7 <
(
¤¤< =
x
¤¤= >
=>
¤¤> @
x
¤¤@ A
.
¤¤A B

CodeProjet
¤¤B L
==
¤¤L N
	projetEdp
¤¤N W
.
¤¤W X

CodeProjet
¤¤X b
&&
¤¤c e
x
¤¤f g
.
¤¤g h
CodeProjetsId
¤¤h u
==
¤¤u w
	projetEdp¤¤x 
.¤¤ 
CodeProjetsId¤¤ 
)¤¤ 
.¤¤ #
FirstOrDefaultAsync¤¤ ¤
(¤¤¤ ¥
)¤¤¥ ¦
;¤¤¦ §
if
¦¦ 
(
¦¦ 

projetEdp1
¦¦ 
!=
¦¦ 
null
¦¦  
)
¦¦  !
{
§§ 
return
¨¨ 
Ok
¨¨ 
(
¨¨ 
new
¨¨ 
{
¨¨ 

codeRetour
¨¨  *
=
¨¨+ ,
$num
¨¨- 0
}
¨¨1 2
)
¨¨2 3
;
¨¨3 4
}
©© 
	projetEdp
ªª 
.
ªª 
DateCreation
ªª "
=
ªª# $
DateTime
ªª% -
.
ªª- .
Now
ªª. 1
.
ªª1 2
ToString
ªª2 :
(
ªª: ;
)
ªª; <
;
ªª< =
_context
¬¬ 
.
¬¬ 

ProjetEdps
¬¬ 
.
¬¬  
Add
¬¬  #
(
¬¬# $
	projetEdp
¬¬$ -
)
¬¬- .
;
¬¬. /
await
­­ 
_context
­­ 
.
­­ 
SaveChangesAsync
­­ +
(
­­+ ,
)
­­, -
;
­­- .
return
¯¯ 
CreatedAtAction
¯¯ "
(
¯¯" #
$str
¯¯# 1
,
¯¯1 2
new
¯¯3 6
{
¯¯7 8
id
¯¯9 ;
=
¯¯< =
	projetEdp
¯¯> G
.
¯¯G H
id
¯¯H J
,
¯¯J K

codeRetour
¯¯L V
=
¯¯W X
$num
¯¯Y \
}
¯¯] ^
,
¯¯^ _
	projetEdp
¯¯` i
)
¯¯i j
;
¯¯j k
}
°° 	
[
´´ 	
HttpPost
´´	 
(
´´ 
$str
´´ 
)
´´  
]
´´  !
public
µµ 
async
µµ 
Task
µµ 
<
µµ 
ActionResult
µµ &
<
µµ& '
	ProjetEdp
µµ' 0
>
µµ0 1
>
µµ1 2
DeleteProjetEdp
µµ3 B
(
µµB C
string
µµC I
id
µµJ L
)
µµL M
{
¶¶ 	
var
·· 
	projetEdp
·· 
=
·· 
await
·· !
_context
··" *
.
··* +

ProjetEdps
··+ 5
.
··5 6
	FindAsync
··6 ?
(
··? @
id
··@ B
)
··B C
;
··C D
if
¸¸ 
(
¸¸ 
	projetEdp
¸¸ 
==
¸¸ 
null
¸¸ !
)
¸¸! "
{
¹¹ 
return
ºº 
NotFound
ºº 
(
ºº  
)
ºº  !
;
ºº! "
}
»» 
_context
½½ 
.
½½ 

ProjetEdps
½½ 
.
½½  
Remove
½½  &
(
½½& '
	projetEdp
½½' 0
)
½½0 1
;
½½1 2
await
¾¾ 
_context
¾¾ 
.
¾¾ 
SaveChangesAsync
¾¾ +
(
¾¾+ ,
)
¾¾, -
;
¾¾- .
return
ÀÀ 
	projetEdp
ÀÀ 
;
ÀÀ 
}
ÁÁ 	
[
ÄÄ 	
	NonAction
ÄÄ	 
]
ÄÄ 
private
ÅÅ 
bool
ÅÅ 
ProjetEdpExists
ÅÅ $
(
ÅÅ$ %
string
ÅÅ% +
id
ÅÅ, .
)
ÅÅ. /
{
ÆÆ 	
return
ÇÇ 
_context
ÇÇ 
.
ÇÇ 

ProjetEdps
ÇÇ &
.
ÇÇ& '
Any
ÇÇ' *
(
ÇÇ* +
e
ÇÇ+ ,
=>
ÇÇ- /
e
ÇÇ0 1
.
ÇÇ1 2
id
ÇÇ2 4
==
ÇÇ5 7
id
ÇÇ8 :
)
ÇÇ: ;
;
ÇÇ; <
}
ÈÈ 	
}
ÉÉ 
public
ÌÌ 

class
ÌÌ 
resultat
ÌÌ 
{
ÍÍ 
public
ÎÎ 
string
ÎÎ 
item
ÎÎ 
{
ÎÎ 
get
ÎÎ !
;
ÎÎ! "
set
ÎÎ# &
;
ÎÎ& '
}
ÎÎ( )
public
ÏÏ 
double
ÏÏ 
?
ÏÏ 
charge
ÏÏ 
{
ÏÏ 
get
ÏÏ  #
;
ÏÏ# $
set
ÏÏ% (
;
ÏÏ( )
}
ÏÏ* +
public
ÐÐ 
double
ÐÐ 
?
ÐÐ 
cout
ÐÐ 
{
ÐÐ 
get
ÐÐ !
;
ÐÐ! "
set
ÐÐ# &
;
ÐÐ& '
}
ÐÐ( )
}
ÑÑ 
}ÒÒ ô
aC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\ProjetLivraisonClientsController.cs
	namespace

 	

ProjetBack


 
.

 
Controllers

  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class ,
 ProjetLivraisonClientsController 1
:2 3
ControllerBase4 B
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public ,
 ProjetLivraisonClientsController /
(/ 0
PilotageDBContext0 A
contextB I
)I J
{ 	
_context 
= 
context 
; 
} 	
}zz 
}{{ è×	
[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\ProjetLivraisonsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class &
ProjetLivraisonsController +
:, -
ControllerBase. <
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
private 
ProjetLivraison 
projetLivraison  /
;/ 0
public &
ProjetLivraisonsController )
() *
PilotageDBContext* ;
context< C
)C D
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
( 
$str 4
)4 5
]5 6
public 
IActionResult 
StatProjetCompatble 0
(0 1
string1 7
idProjet8 @
)@ A
{   	
var"" 
resultat"" 
="" 
("" 
from""  
pl""! #
in""$ &
_context""' /
.""/ 0
ProjetLivraisons""0 @
where""A F
pl""G I
.""I J
projetEdpId""J U
==""U W
idProjet""W _
select## "
new### &
{$$ 
pl%%  "
.%%" #
Id%%# %
,%%% &
nom&&  #
=&&$ %
pl&&& (
.&&( )

ProjetName&&) 3
,&&3 4
PlannedDate''  +
='', -
pl''. 0
.''0 1
PlannedDate''1 <
,''< =
InitialPlannedDate((  2
=((3 4
pl((5 7
.((7 8
InitialPlannedDate((8 J
,((J K
DeliveryDate**  ,
=**- .
pl**/ 1
.**1 2
DeliveryDate**2 >
,**> ?
Delivery++  (
=++) *
pl+++ -
.++- .
Delivery++. 6
,++6 7
	StartDate,,  )
=,,* +
pl,,, .
.,,. /
	StartDate,,/ 8
,,,8 9
StatusId--  (
=--) *
pl--+ -
.--- .
StatusId--. 6
,--6 7
TTMId..  %
=..& '
pl..( *
...* +
TTMId..+ 0
,..0 1
dateCreation//  ,
=//- .
Convert/// 6
.//6 7

ToDateTime//7 A
(//A B
pl//B D
.//D E
DateCreation//E Q
)//Q R
,//R S!
chargeConsommerTotale00  5
=006 7
(008 9
from119 =
tache11> C
in11D F
_context11G O
.11O P
Taches11P V
join229 =

DLivraison22> H
in22I K
_context22L T
.22T U
DetailLivraisons22U e
on22f h
tache22i n
.22n o
detailLivraisonId	22o 
equals
22 

DLivraison
22 
.
22 
Id
22 
join339 =
	Livraison33> G
in33H J
_context33K S
.33S T
ProjetLivraisons33T d
on33e g

DLivraison33h r
.33r s
ProjetLivraisonId	33s 
equals
33 
	Livraison
33 
.
33 
Id
33 
where449 >
	Livraison44? H
.44H I
Id44I K
==44L N
pl44O Q
.44Q R
Id44R T
select559 ?
	Livraison66 	
.66	 

DetailLivraisons66
 
.66 

SelectMany66 %
(66% &
x66& '
=>66( *
x66+ ,
.66, -
taches66- 3
)663 4
.664 5
Sum665 8
(668 9
x669 :
=>66; =
Convert66> E
.66E F
ToDouble66F N
(66N O
x66O P
.66P Q
chargeConsomme66Q _
)66_ `
)66` a
)66a b
.66b c
First66c h
(66h i
)66i j
,66j k 
countProjetLivraison88  4
=885 6
pl887 9
.889 :
DetailLivraisons88: J
.88J K
Count88K P
(88P Q
)88Q R
}99 
)99 
.99 
Distinct99 '
(99' (
)99( )
.99) *
ToList99* 0
(990 1
)991 2
;992 3
return== 
Ok== 
(== 
resultat== 
)== 
;==  
}>> 	
[DD 	
HttpPostDD	 
(DD 
$strDD :
)DD: ;
]DD; <
publicEE 
IActionResultEE +
satatDashboardLivraisonComtableEE <
(EE< = 
ProjetLivraisonInDtoEE= Q
modelEER W
)EEW X
{FF 	
tryGG 
{HH 
varII 
dateII 
=II 
ConvertII "
.II" #

ToDateTimeII# -
(II- .
modelII. 3
.II3 4
dateFinII4 ;
)II; <
;II< =
ifLL 
(LL 
modelLL 
.LL 
	dateDebutLL #
.LL# $
EqualsLL$ *
(LL* +
$strLL+ @
)LL@ A
&&LLB D
modelLLE J
.LLJ K
dateFinLLK R
.LLR S
EqualsLLS Y
(LLY Z
$strLLZ o
)LLo p
)LLp q
{MM 
varNN 
dbresultNN  
=NN! "
(NN# $
fromPP1 5
plPP6 8
inPP9 ;
_contextPP< D
.PPD E
ProjetLivraisonsPPE U
.PPU V
AsEnumerablePPV b
(PPb c
)PPc d
whereSS1 6
plSS7 9
.SS9 :
projetEdpIdSS: E
==SSF H
modelSSI N
.SSN O
idSSO Q
joinTT1 5
dlTT6 8
inTT9 ;
_contextTT< D
.TTD E
DetailLivraisonsTTE U
onTTV X
plTTY [
?TT[ \
.TT\ ]
IdTT] _
equalsTT` f
dlTTg i
.TTi j
ProjetLivraisonIdTTj {
intoUU4 8
joineddUU9 @
fromWW  $
ddWW% '
inWW( *
joineddWW+ 2
.WW2 3
DefaultIfEmptyWW3 A
(WWA B
)WWB C
joinYY1 5
tYY6 7
inYY8 :
_contextYY; C
.YYC D
TachesYYD J
onYYK M
ddYYN P
?YYP Q
.YYQ R
IdYYR T
equalsYYU [
tYY\ ]
.YY] ^
detailLivraisonIdYY^ o
intoZZ> B
joinedtZZC J
from[[1 5
tt[[6 8
in[[9 ;
joinedt[[< C
.[[C D
DefaultIfEmpty[[D R
([[R S
)[[S T
join\\1 5
p\\6 7
in\\8 :
_context\\; C
.\\C D
profileUser\\D O
on\\P R
tt\\S U
?\\U V
.\\V W
UserId\\W ]
equals\\^ d
p\\e f
.\\f g
userId\\g m
into]]4 8
joinedtg]]9 A
from^^1 5
tte^^6 9
in^^: <
joinedtg^^= E
.^^E F
DefaultIfEmpty^^F T
(^^T U
)^^U V
join``1 5
di``6 8
in``9 ;
_context``< D
.``D E
DetailImputations``E V
on``W Y
tt``Z \
?``\ ]
.``] ^
Id``^ `
equals``a g
di``h j
?``j k
.``k l
TacheId``l s
intobb3 7
	joinedtgebb8 A
fromcc1 5
ttedcc6 :
incc; =
	joinedtgecc> G
.ccG H
DefaultIfEmptyccH V
(ccV W
)ccW X
selectff1 7
newff8 ;
{gg1 2
plii5 7
.ii7 8
Idii8 :
,ii: ;
projectNamejj5 @
=jjA B
pljjC E
.jjE F

ProjetNamejjF P
+jjQ R
$strjjS V
+jjW X
pljjY [
.jj[ \
Deliveryjj\ d
,jjd e
plkk5 7
.kk7 8
StatusIdkk8 @
,kk@ A
plll5 7
.ll7 8
	StartDatell8 A
,llA B
plmm5 7
.mm7 8
PlannedDatemm8 C
,mmC D
plnn5 7
.nn7 8
DeliveryDatenn8 D
,nnD E
ploo5 7
.oo7 8
Natureoo8 >
,oo> ?
plpp5 7
.pp7 8
scopepp8 =
,pp= >
clientqq5 ;
=qq< =
plqq> @
?qq@ A
.qqA B
ClientqqB H
?qqH I
.qqI J
NomqqJ M
,qqM N
tte
$ '
?
' (
.
( )
	profileId
) 2
,
2 3
Monday
5 ;
=
< =
(
> ?
Convert
? F
.
F G
ToDouble
G O
(
O P
tted
P T
?
T U
.
U V
Monday
V \
.
\ ]
	Substring
] f
(
f g
$num
g h
,
h i
$num
j k
)
k l
)
l m
+
n o
Convert
p w
.
w x
ToDoublex 
( 
tted 
? 
. 
Monday 
. 
	Substring 
( 
$num 
, 
$num 
) 
) 
/  
$num¡ £
)£ ¤
/¥ ¦
$num§ ¨
,¨ ©
Tuesday
5 <
=
= >
(
? @
Convert
@ G
.
G H
ToDouble
H P
(
P Q
tted
Q U
?
U V
.
V W
Tuesday
W ^
.
^ _
	Substring
_ h
(
h i
$num
i j
,
j k
$num
l m
)
m n
)
n o
+
p q
Convert
r y
.
y z
ToDoublez 
( 
tted 
? 
. 
Tuesday 
. 
	Substring 
( 
$num 
, 
$num 
)  
)  ¡
/¢ £
$num¤ ¦
)¦ §
/¨ ©
$numª «
,« ¬
Friday
5 ;
=
< =
(
> ?
Convert
? F
.
F G
ToDouble
G O
(
O P
tted
P T
?
T U
.
U V
Friday
V \
.
\ ]
	Substring
] f
(
f g
$num
g h
,
h i
$num
j k
)
k l
)
l m
+
n o
Convert
p w
.
w x
ToDoublex 
( 
tted 
? 
. 
Friday 
. 
	Substring 
( 
$num 
, 
$num 
) 
) 
/  
$num¡ £
)£ ¤
/¥ ¦
$num§ ¨
,¨ ©
	Wednesday
5 >
=
? @
(
A B
Convert
B I
.
I J
ToDouble
J R
(
R S
tted
S W
?
W X
.
X Y
	Wednesday
Y b
.
b c
	Substring
c l
(
l m
$num
m n
,
n o
$num
p q
)
q r
)
r s
+
t u
Convert
v }
.
} ~
ToDouble~ 
( 
tted 
? 
. 
	Wednesday 
. 
	Substring  
(  ¡
$num¡ ¢
,¢ £
$num¤ ¥
)¥ ¦
)¦ §
/¨ ©
$numª ¬
)¬ ­
/® ¯
$num° ±
,± ²
Thursday
5 =
=
> ?
(
@ A
Convert
A H
.
H I
ToDouble
I Q
(
Q R
tted
R V
?
V W
.
W X
Thursday
X `
.
` a
	Substring
a j
(
j k
$num
k l
,
l m
$num
n o
)
o p
)
p q
+
r s
Convert
t {
.
{ |
ToDouble| 
( 
tted 
? 
. 
Thursday 
. 
	Substring 
( 
$num 
,  
$num¡ ¢
)¢ £
)£ ¤
/¥ ¦
$num§ ©
)© ª
/« ¬
$num­ ®
,® ¯
}
1 2
)
2 3
.
3 4
ToList
4 :
(
: ;
)
; <
;
< =
var
 
result1
 
=
  !
(
" #
from
# '
edp
( +
in
, .
dbresult
/ 7
group
# (
edp
) ,
by
- /
new
0 3
{
# $
edp
' *
.
* +
	profileId
+ 4
,
4 5
edp
' *
.
* +
scope
+ 0
,
0 1
edp
' *
.
* +
Id
+ -
,
- .
edp
' *
.
* +
projectName
+ 6
,
6 7
edp
' *
.
* +
StatusId
+ 3
,
3 4
edp
' *
.
* +
	StartDate
+ 4
,
4 5
edp
' *
.
* +
PlannedDate
+ 6
,
6 7
edp
' *
.
* +
DeliveryDate
+ 7
,
7 8
edp
' *
?
* +
.
+ ,
client
, 2
,
2 3
edp
' *
.
* +
Nature
+ 1
,
1 2
}
ªª# $
into
ªª% )
g
ªª* +
select
««# )
new
««* -
{
¬¬# $
g
¯¯' (
.
¯¯( )
Key
¯¯) ,
.
¯¯, -
	profileId
¯¯- 6
,
¯¯6 7
g
°°' (
.
°°( )
Key
°°) ,
.
°°, -
Nature
°°- 3
,
°°3 4
g
²²' (
.
²²( )
Key
²²) ,
.
²², -
projectName
²²- 8
,
²²8 9
g
³³' (
.
³³( )
Key
³³) ,
.
³³, -
Id
³³- /
,
³³/ 0
g
´´' (
.
´´( )
Key
´´) ,
.
´´, -
StatusId
´´- 5
,
´´5 6
g
µµ' (
.
µµ( )
Key
µµ) ,
.
µµ, -
	StartDate
µµ- 6
,
µµ6 7
g
¶¶' (
.
¶¶( )
Key
¶¶) ,
.
¶¶, -
PlannedDate
¶¶- 8
,
¶¶8 9
g
··' (
.
··( )
Key
··) ,
.
··, -
DeliveryDate
··- 9
,
··9 :
g
¸¸' (
.
¸¸( )
Key
¸¸) ,
.
¸¸, -
client
¸¸- 3
,
¸¸3 4
g
¹¹' (
.
¹¹( )
Key
¹¹) ,
.
¹¹, -
scope
¹¹- 2
,
¹¹2 3
charge
ÆÆ' -
=
ÆÆ. /
g
ÆÆ0 1
.
ÆÆ1 2
Sum
ÆÆ2 5
(
ÆÆ5 6
x
ÆÆ6 7
=>
ÆÆ8 :
x
ÆÆ; <
.
ÆÆ< =
Monday
ÆÆ= C
)
ÆÆC D
+
ÆÆE F
g
ÆÆG H
.
ÆÆH I
Sum
ÆÆI L
(
ÆÆL M
x
ÆÆM N
=>
ÆÆO Q
x
ÆÆR S
.
ÆÆS T
Tuesday
ÆÆT [
)
ÆÆ[ \
+
ÆÆ] ^
g
ÆÆ_ `
.
ÆÆ` a
Sum
ÆÆa d
(
ÆÆd e
x
ÆÆe f
=>
ÆÆg i
x
ÆÆj k
.
ÆÆk l
	Wednesday
ÆÆl u
)
ÆÆu v
+
ÆÆw x
g
ÆÆy z
.
ÆÆz {
Sum
ÆÆ{ ~
(
ÆÆ~ 
xÆÆ 
=>ÆÆ 
xÆÆ 
.ÆÆ 
FridayÆÆ 
)ÆÆ 
+ÆÆ 
gÆÆ 
.ÆÆ 
SumÆÆ 
(ÆÆ 
xÆÆ 
=>ÆÆ 
xÆÆ 
.ÆÆ 
ThursdayÆÆ ¥
)ÆÆ¥ ¦
,ÆÆ¦ §
cout
ÈÈ' +
=
ÈÈ, -
(
ÈÈ. /
g
ÈÈ/ 0
.
ÈÈ0 1
Sum
ÈÈ1 4
(
ÈÈ4 5
x
ÈÈ5 6
=>
ÈÈ7 9
x
ÈÈ: ;
.
ÈÈ; <
Monday
ÈÈ< B
)
ÈÈB C
+
ÈÈD E
g
ÈÈF G
.
ÈÈG H
Sum
ÈÈH K
(
ÈÈK L
x
ÈÈL M
=>
ÈÈN P
x
ÈÈQ R
.
ÈÈR S
Tuesday
ÈÈS Z
)
ÈÈZ [
+
ÈÈ\ ]
g
ÈÈ^ _
.
ÈÈ_ `
Sum
ÈÈ` c
(
ÈÈc d
x
ÈÈd e
=>
ÈÈf h
x
ÈÈi j
.
ÈÈj k
	Wednesday
ÈÈk t
)
ÈÈt u
+
ÈÈv w
g
ÈÈx y
.
ÈÈy z
Sum
ÈÈz }
(
ÈÈ} ~
x
ÈÈ~ 
=>ÈÈ 
xÈÈ 
.ÈÈ 
FridayÈÈ 
)ÈÈ 
+ÈÈ 
gÈÈ 
.ÈÈ 
SumÈÈ 
(ÈÈ 
xÈÈ 
=>ÈÈ 
xÈÈ 
.ÈÈ 
ThursdayÈÈ ¤
)ÈÈ¤ ¥
)ÈÈ¥ ¦
*
ÊÊ& '
Convert
ÊÊ( /
.
ÊÊ/ 0
ToDouble
ÊÊ0 8
(
ÊÊ8 9
_context
ÊÊ9 A
.
ÊÊA B
profile
ÊÊB I
.
ÊÊI J
Where
ÊÊJ O
(
ÊÊO P
x
ÊÊP Q
=>
ÊÊR T
x
ÊÊU V
.
ÊÊV W
annee
ÊÊW \
==
ÊÊ] _
DateTime
ÊÊ` h
.
ÊÊh i
Now
ÊÊi l
.
ÊÊl m
Year
ÊÊm q
.
ÊÊq r
ToString
ÊÊr z
(
ÊÊz {
)
ÊÊ{ |
&&
ÊÊ} 
xÊÊ 
.ÊÊ 
	profileIdÊÊ 
==ÊÊ 
gÊÊ 
.ÊÊ 
KeyÊÊ 
.ÊÊ 
	profileIdÊÊ 
)ÊÊ 
.ÊÊ  
SelectÊÊ  ¦
(ÊÊ¦ §
xÊÊ§ ¨
=>ÊÊ© «
xÊÊ¬ ­
.ÊÊ­ ®
budgetÊÊ® ´
)ÊÊ´ µ
.ÊÊµ ¶
FirstOrDefaultÊÊ¶ Ä
(ÊÊÄ Å
)ÊÊÅ Æ
)ÊÊÆ Ç
}
ËË# $
)
ËË$ %
.
ËË% &
ToList
ËË& ,
(
ËË, -
)
ËË- .
;
ËË. /
var
ÏÏ 
ResultFinal
ÏÏ #
=
ÏÏ$ %
(
ÏÏ& '
from
ÏÏ' +
edp
ÏÏ, /
in
ÏÏ0 2
result1
ÏÏ3 :
group
ÐÐ' ,
edp
ÐÐ- 0
by
ÐÐ1 3
new
ÐÐ4 7
{
ÑÑ' (
edp
ÓÓ+ .
.
ÓÓ. /
Id
ÓÓ/ 1
,
ÓÓ1 2
edp
ÔÔ+ .
.
ÔÔ. /
projectName
ÔÔ/ :
,
ÔÔ: ;
edp
ÕÕ+ .
.
ÕÕ. /
StatusId
ÕÕ/ 7
,
ÕÕ7 8
edp
ÖÖ+ .
.
ÖÖ. /
	StartDate
ÖÖ/ 8
,
ÖÖ8 9
edp
××+ .
.
××. /
PlannedDate
××/ :
,
××: ;
edp
ØØ+ .
.
ØØ. /
DeliveryDate
ØØ/ ;
,
ØØ; <
edp
ÙÙ+ .
.
ÙÙ. /
client
ÙÙ/ 5
,
ÙÙ5 6
edp
ÚÚ+ .
.
ÚÚ. /
scope
ÚÚ/ 4
,
ÚÚ4 5
edp
ÛÛ+ .
.
ÛÛ. /
Nature
ÛÛ/ 5
,
ÛÛ5 6
}
ÝÝ' (
into
ÝÝ) -
g
ÝÝ. /
select
ÞÞ' -
new
ÞÞ. 1
{
ßß' (
g
àà+ ,
.
àà, -
Key
àà- 0
.
àà0 1
Nature
àà1 7
,
àà7 8
g
áá+ ,
.
áá, -
Key
áá- 0
.
áá0 1
projectName
áá1 <
,
áá< =
g
ââ+ ,
.
ââ, -
Key
ââ- 0
.
ââ0 1
Id
ââ1 3
,
ââ3 4
g
ãã+ ,
.
ãã, -
Key
ãã- 0
.
ãã0 1
StatusId
ãã1 9
,
ãã9 :
g
ää+ ,
.
ää, -
Key
ää- 0
.
ää0 1
	StartDate
ää1 :
,
ää: ;
g
åå+ ,
.
åå, -
Key
åå- 0
.
åå0 1
PlannedDate
åå1 <
,
åå< =
g
ææ+ ,
.
ææ, -
Key
ææ- 0
.
ææ0 1
DeliveryDate
ææ1 =
,
ææ= >
g
çç+ ,
.
çç, -
Key
çç- 0
.
çç0 1
client
çç1 7
,
çç7 8
g
èè+ ,
.
èè, -
Key
èè- 0
.
èè0 1
scope
èè1 6
,
èè6 7
showDetails
éé+ 6
=
éé7 8
false
éé9 >
,
éé> ?

coutEstime
êê+ 5
=
êê6 7
$num
êê8 9
,
êê9 :
charge
ëë+ 1
=
ëë2 3
g
ëë4 5
.
ëë5 6
Sum
ëë6 9
(
ëë9 :
x
ëë: ;
=>
ëë< >
x
ëë? @
.
ëë@ A
charge
ëëA G
)
ëëG H
,
ëëH I
cout
ìì+ /
=
ìì0 1
g
ìì2 3
.
ìì3 4
Sum
ìì4 7
(
ìì7 8
x
ìì8 9
=>
ìì: <
x
ìì= >
.
ìì> ?
cout
ìì? C
)
ììC D
}
íí' (
)
íí( )
.
íí) *
ToList
íí* 0
(
íí0 1
)
íí1 2
;
íí2 3
return
òò 
Ok
òò 
(
òò 
ResultFinal
òò )
)
òò) *
;
òò* +
}
óó 
else
öö 
{
÷÷ 
var
øø 
dbresult
øø  
=
øø! "
(
øø# $
from
úú" &
pl
úú' )
in
úú* ,
_context
úú- 5
.
úú5 6
ProjetLivraisons
úú6 F
.
úúF G
AsEnumerable
úúG S
(
úúS T
)
úúT U
where
ýý" '
pl
ýý( *
.
ýý* +
projetEdpId
ýý+ 6
==
ýý7 9
model
ýý: ?
.
ýý? @
id
ýý@ B
join
þþ" &
dl
þþ' )
in
þþ* ,
_context
þþ- 5
.
þþ5 6
DetailLivraisons
þþ6 F
on
þþG I
pl
þþJ L
?
þþL M
.
þþM N
Id
þþN P
equals
þþQ W
dl
þþX Z
.
þþZ [
ProjetLivraisonId
þþ[ l
into
ÿÿ% )
joinedd
ÿÿ* 1
from
  $
dd
% '
in
( *
joinedd
+ 2
.
2 3
DefaultIfEmpty
3 A
(
A B
)
B C
join
" &
t
' (
in
) +
_context
, 4
.
4 5
Taches
5 ;
on
< >
dd
? A
?
A B
.
B C
Id
C E
equals
F L
t
M N
.
N O
detailLivraisonId
O `
into
/ 3
joinedt
4 ;
from
" &
tt
' )
in
* ,
joinedt
- 4
.
4 5
DefaultIfEmpty
5 C
(
C D
)
D E
join
" &
p
' (
in
) +
_context
, 4
.
4 5
profileUser
5 @
on
A C
tt
D F
?
F G
.
G H
UserId
H N
equals
O U
p
V W
.
W X
userId
X ^
into
% )
joinedtg
* 2
from
" &
tte
' *
in
+ -
joinedtg
. 6
.
6 7
DefaultIfEmpty
7 E
(
E F
)
F G
join
" &
di
' )
in
* ,
_context
- 5
.
5 6
DetailImputations
6 G
on
H J
tt
K M
?
M N
.
N O
Id
O Q
equals
R X
di
Y [
.
[ \
TacheId
\ c
into
$ (
	joinedtge
) 2
from
" &
tted
' +
in
, .
	joinedtge
/ 8
.
8 9
DefaultIfEmpty
9 G
(
G H
)
H I
join
" &
imputa
' -
in
. 0
_context
1 9
.
9 :
Imputations
: E
on
F H
tted
I M
?
M N
.
N O
ImputationId
O [
equals
\ b
imputa
c i
.
i j
Id
j l
into
# '
	NewFiltre
( 1
from
" &
rc
' )
in
* ,
	NewFiltre
- 6
where
" '
(
( )
(
) *
rc
* ,
.
, -

mondayDate
- 7
.
7 8
Value
8 =
.
= >
Date
> B
<
C D
Convert
E L
.
L M

ToDateTime
M W
(
W X
model
X ]
.
] ^
dateFin
^ e
)
e f
&&
g i
rc
j l
.
l m

mondayDate
m w
.
w x
Value
x }
.
} ~
Date~ 
> 
Convert 
. 

ToDateTime 
( 
model 
. 
	dateDebut §
)§ ¨
&&
) +
rc
, .
.
. /
DetailImputations
/ @
.
@ A
Select
A G
(
G H
e
H I
=>
J L
e
M N
.
N O
Monday
O U
)
U V
.
V W
Any
W Z
(
Z [
e
[ \
=>
] _
e
` a
!=
b d
$str
e l
)
l m
)
m n
||
) +
(
) *
rc
* ,
.
, -
TuesdayDate
- 8
.
8 9
Value
9 >
.
> ?
Date
? C
<
D E
Convert
F M
.
M N

ToDateTime
N X
(
X Y
model
Y ^
.
^ _
dateFin
_ f
)
f g
&&
h j
rc
k m
.
m n
TuesdayDate
n y
.
y z
Value
z 
. 
Date 
> 
Convert 
. 

ToDateTime 
( 
model 
.  
	dateDebut  ©
)© ª
&&
) +
rc
, .
.
. /
DetailImputations
/ @
.
@ A
Select
A G
(
G H
e
H I
=>
J L
e
M N
.
N O
Tuesday
O V
)
V W
.
W X
Any
X [
(
[ \
e
\ ]
=>
^ `
e
a b
!=
c e
$str
f m
)
m n
)
n o
||
) +
(
) *
rc
* ,
.
, -
WednesdayDate
- :
.
: ;
Value
; @
.
@ A
Date
A E
<
F G
Convert
H O
.
O P

ToDateTime
P Z
(
Z [
model
[ `
.
` a
dateFin
a h
)
h i
&&
j l
rc
m o
.
o p
WednesdayDate
p }
.
} ~
Value~ 
. 
Date 
> 
Convert 
. 

ToDateTime 
( 
model £
.£ ¤
	dateDebut¤ ­
)­ ®
&&
) +
rc
, .
.
. /
DetailImputations
/ @
.
@ A
Select
A G
(
G H
e
H I
=>
J L
e
M N
.
N O
	Wednesday
O X
)
X Y
.
Y Z
Any
Z ]
(
] ^
e
^ _
=>
` b
e
c d
!=
e g
$str
h o
)
o p
)
p q
||
) +
(
) *
rc
* ,
.
, -
ThursdayDate
- 9
.
9 :
Value
: ?
.
? @
Date
@ D
<
E F
Convert
G N
.
N O

ToDateTime
O Y
(
Y Z
model
Z _
.
_ `
dateFin
` g
)
g h
&&
i k
rc
l n
.
n o
ThursdayDate
o {
.
{ |
Value| 
. 
Date 
> 
Convert 
. 

ToDateTime 
( 
model ¡
.¡ ¢
	dateDebut¢ «
)« ¬
&&
  ) +
rc
  , .
.
  . /
DetailImputations
  / @
.
  @ A
Select
  A G
(
  G H
e
  H I
=>
  J L
e
  M N
.
  N O
Thursday
  O W
)
  W X
.
  X Y
Any
  Y \
(
  \ ]
e
  ] ^
=>
  _ a
e
  b c
!=
  d f
$str
  g n
)
  n o
)
  o p
||
¡¡) +
(
¢¢) *
rc
¢¢* ,
.
¢¢, -

FridayDate
¢¢- 7
.
¢¢7 8
Value
¢¢8 =
.
¢¢= >
Date
¢¢> B
<
¢¢C D
Convert
¢¢E L
.
¢¢L M

ToDateTime
¢¢M W
(
¢¢W X
model
¢¢X ]
.
¢¢] ^
dateFin
¢¢^ e
)
¢¢e f
&&
¢¢g i
rc
¢¢j l
.
¢¢l m

FridayDate
¢¢m w
.
¢¢w x
Value
¢¢x }
.
¢¢} ~
Date¢¢~ 
>¢¢ 
Convert¢¢ 
.¢¢ 

ToDateTime¢¢ 
(¢¢ 
model¢¢ 
.¢¢ 
	dateDebut¢¢ §
)¢¢§ ¨
&&
¤¤) +
rc
¤¤, .
.
¤¤. /
DetailImputations
¤¤/ @
.
¤¤@ A
Select
¤¤A G
(
¤¤G H
e
¤¤H I
=>
¤¤J L
e
¤¤M N
.
¤¤N O
Friday
¤¤O U
)
¤¤U V
.
¤¤V W
Any
¤¤W Z
(
¤¤Z [
e
¤¤[ \
=>
¤¤] _
e
¤¤` a
!=
¤¤b d
$str
¤¤e l
)
¤¤l m
)
¤¤m n
)
§§- .
where
©©" '
(
©©( )
pl
©©) +
.
©©+ ,
PlannedDate
©©, 7
.
©©7 8
Date
©©8 <
<=
©©= ?
Convert
©©@ G
.
©©G H

ToDateTime
©©H R
(
©©R S
model
©©S X
.
©©X Y
dateFin
©©Y `
)
©©` a
||
©©b d
pl
©©e g
.
©©g h
PlannedDate
©©h s
.
©©s t
Date
©©t x
>=
©©y {
Convert©©| 
.©© 

ToDateTime©© 
(©© 
model©© 
.©© 
	dateDebut©© 
)©© 
)©©  
select
ªª" (
new
ªª) ,
{
««" #
pl
­­& (
.
­­( )
Id
­­) +
,
­­+ ,
projectName
®®& 1
=
®®2 3
pl
®®4 6
.
®®6 7

ProjetName
®®7 A
+
®®B C
$str
®®D G
+
®®H I
pl
®®J L
.
®®L M
Delivery
®®M U
,
®®U V
pl
¯¯& (
.
¯¯( )
StatusId
¯¯) 1
,
¯¯1 2
pl
°°& (
.
°°( )
	StartDate
°°) 2
,
°°2 3
pl
±±& (
.
±±( )
PlannedDate
±±) 4
,
±±4 5
pl
²²& (
.
²²( )
DeliveryDate
²²) 5
,
²²5 6
pl
³³& (
.
³³( )
Nature
³³) /
,
³³/ 0
pl
´´& (
.
´´( )
scope
´´) .
,
´´. /
client
µµ& ,
=
µµ- .
pl
µµ/ 1
?
µµ1 2
.
µµ2 3
Client
µµ3 9
?
µµ9 :
.
µµ: ;
Nom
µµ; >
,
µµ> ?
tte
ÇÇ& )
?
ÇÇ) *
.
ÇÇ* +
	profileId
ÇÇ+ 4
,
ÇÇ4 5
Monday
ÈÈ& ,
=
ÈÈ- .
(
ÈÈ/ 0
Convert
ÈÈ0 7
.
ÈÈ7 8
ToDouble
ÈÈ8 @
(
ÈÈ@ A
tted
ÈÈA E
?
ÈÈE F
.
ÈÈF G
Monday
ÈÈG M
.
ÈÈM N
	Substring
ÈÈN W
(
ÈÈW X
$num
ÈÈX Y
,
ÈÈY Z
$num
ÈÈ[ \
)
ÈÈ\ ]
)
ÈÈ] ^
+
ÈÈ_ `
Convert
ÈÈa h
.
ÈÈh i
ToDouble
ÈÈi q
(
ÈÈq r
tted
ÈÈr v
?
ÈÈv w
.
ÈÈw x
Monday
ÈÈx ~
.
ÈÈ~ 
	SubstringÈÈ 
(ÈÈ 
$numÈÈ 
,ÈÈ 
$numÈÈ 
)ÈÈ 
)ÈÈ 
/ÈÈ 
$numÈÈ 
)ÈÈ 
/ÈÈ 
$numÈÈ 
,ÈÈ 
Tuesday
ÉÉ& -
=
ÉÉ. /
(
ÉÉ0 1
Convert
ÉÉ1 8
.
ÉÉ8 9
ToDouble
ÉÉ9 A
(
ÉÉA B
tted
ÉÉB F
?
ÉÉF G
.
ÉÉG H
Tuesday
ÉÉH O
.
ÉÉO P
	Substring
ÉÉP Y
(
ÉÉY Z
$num
ÉÉZ [
,
ÉÉ[ \
$num
ÉÉ] ^
)
ÉÉ^ _
)
ÉÉ_ `
+
ÉÉa b
Convert
ÉÉc j
.
ÉÉj k
ToDouble
ÉÉk s
(
ÉÉs t
tted
ÉÉt x
?
ÉÉx y
.
ÉÉy z
TuesdayÉÉz 
.ÉÉ 
	SubstringÉÉ 
(ÉÉ 
$numÉÉ 
,ÉÉ 
$numÉÉ 
)ÉÉ 
)ÉÉ 
/ÉÉ 
$numÉÉ 
)ÉÉ 
/ÉÉ 
$numÉÉ 
,ÉÉ 
Friday
ÊÊ& ,
=
ÊÊ- .
(
ÊÊ/ 0
Convert
ÊÊ0 7
.
ÊÊ7 8
ToDouble
ÊÊ8 @
(
ÊÊ@ A
tted
ÊÊA E
?
ÊÊE F
.
ÊÊF G
Friday
ÊÊG M
.
ÊÊM N
	Substring
ÊÊN W
(
ÊÊW X
$num
ÊÊX Y
,
ÊÊY Z
$num
ÊÊ[ \
)
ÊÊ\ ]
)
ÊÊ] ^
+
ÊÊ_ `
Convert
ÊÊa h
.
ÊÊh i
ToDouble
ÊÊi q
(
ÊÊq r
tted
ÊÊr v
?
ÊÊv w
.
ÊÊw x
Friday
ÊÊx ~
.
ÊÊ~ 
	SubstringÊÊ 
(ÊÊ 
$numÊÊ 
,ÊÊ 
$numÊÊ 
)ÊÊ 
)ÊÊ 
/ÊÊ 
$numÊÊ 
)ÊÊ 
/ÊÊ 
$numÊÊ 
,ÊÊ 
	Wednesday
ËË& /
=
ËË0 1
(
ËË2 3
Convert
ËË3 :
.
ËË: ;
ToDouble
ËË; C
(
ËËC D
tted
ËËD H
?
ËËH I
.
ËËI J
	Wednesday
ËËJ S
.
ËËS T
	Substring
ËËT ]
(
ËË] ^
$num
ËË^ _
,
ËË_ `
$num
ËËa b
)
ËËb c
)
ËËc d
+
ËËe f
Convert
ËËg n
.
ËËn o
ToDouble
ËËo w
(
ËËw x
tted
ËËx |
?
ËË| }
.
ËË} ~
	WednesdayËË~ 
.ËË 
	SubstringËË 
(ËË 
$numËË 
,ËË 
$numËË 
)ËË 
)ËË 
/ËË 
$numËË 
)ËË 
/ËË  
$numËË¡ ¢
,ËË¢ £
Thursday
ÌÌ& .
=
ÌÌ/ 0
(
ÌÌ1 2
Convert
ÌÌ2 9
.
ÌÌ9 :
ToDouble
ÌÌ: B
(
ÌÌB C
tted
ÌÌC G
?
ÌÌG H
.
ÌÌH I
Thursday
ÌÌI Q
.
ÌÌQ R
	Substring
ÌÌR [
(
ÌÌ[ \
$num
ÌÌ\ ]
,
ÌÌ] ^
$num
ÌÌ_ `
)
ÌÌ` a
)
ÌÌa b
+
ÌÌc d
Convert
ÌÌe l
.
ÌÌl m
ToDouble
ÌÌm u
(
ÌÌu v
tted
ÌÌv z
?
ÌÌz {
.
ÌÌ{ |
ThursdayÌÌ| 
.ÌÌ 
	SubstringÌÌ 
(ÌÌ 
$numÌÌ 
,ÌÌ 
$numÌÌ 
)ÌÌ 
)ÌÌ 
/ÌÌ 
$numÌÌ 
)ÌÌ 
/ÌÌ 
$numÌÌ 
,ÌÌ  
}
ÏÏ" #
)
ÏÏ# $
.
ÏÏ$ %
ToList
ÏÏ% +
(
ÏÏ+ ,
)
ÏÏ, -
;
ÏÏ- .
var
ÔÔ 
result1
ÔÔ 
=
ÔÔ  !
(
ÔÔ" #
from
ÔÔ# '
edp
ÔÔ( +
in
ÔÔ, .
dbresult
ÔÔ/ 7
group
ÕÕ# (
edp
ÕÕ) ,
by
ÕÕ- /
new
ÕÕ0 3
{
ÖÖ# $
edp
××' *
.
××* +
	profileId
××+ 4
,
××4 5
edp
ÙÙ' *
.
ÙÙ* +
scope
ÙÙ+ 0
,
ÙÙ0 1
edp
ÚÚ' *
.
ÚÚ* +
Id
ÚÚ+ -
,
ÚÚ- .
edp
ÛÛ' *
.
ÛÛ* +
projectName
ÛÛ+ 6
,
ÛÛ6 7
edp
ÜÜ' *
.
ÜÜ* +
StatusId
ÜÜ+ 3
,
ÜÜ3 4
edp
ÝÝ' *
.
ÝÝ* +
	StartDate
ÝÝ+ 4
,
ÝÝ4 5
edp
ÞÞ' *
.
ÞÞ* +
PlannedDate
ÞÞ+ 6
,
ÞÞ6 7
edp
ßß' *
.
ßß* +
DeliveryDate
ßß+ 7
,
ßß7 8
edp
àà' *
?
àà* +
.
àà+ ,
client
àà, 2
,
àà2 3
edp
áá' *
.
áá* +
Nature
áá+ 1
,
áá1 2
}
îî# $
into
îî% )
g
îî* +
select
ïï# )
new
ïï* -
{
ðð# $
g
óó' (
.
óó( )
Key
óó) ,
.
óó, -
	profileId
óó- 6
,
óó6 7
g
ôô' (
.
ôô( )
Key
ôô) ,
.
ôô, -
Nature
ôô- 3
,
ôô3 4
g
öö' (
.
öö( )
Key
öö) ,
.
öö, -
projectName
öö- 8
,
öö8 9
g
÷÷' (
.
÷÷( )
Key
÷÷) ,
.
÷÷, -
Id
÷÷- /
,
÷÷/ 0
g
øø' (
.
øø( )
Key
øø) ,
.
øø, -
StatusId
øø- 5
,
øø5 6
g
ùù' (
.
ùù( )
Key
ùù) ,
.
ùù, -
	StartDate
ùù- 6
,
ùù6 7
g
úú' (
.
úú( )
Key
úú) ,
.
úú, -
PlannedDate
úú- 8
,
úú8 9
g
ûû' (
.
ûû( )
Key
ûû) ,
.
ûû, -
DeliveryDate
ûû- 9
,
ûû9 :
g
üü' (
.
üü( )
Key
üü) ,
.
üü, -
client
üü- 3
,
üü3 4
g
ýý' (
.
ýý( )
Key
ýý) ,
.
ýý, -
scope
ýý- 2
,
ýý2 3
charge
' -
=
. /
g
0 1
.
1 2
Sum
2 5
(
5 6
x
6 7
=>
8 :
x
; <
.
< =
Monday
= C
)
C D
+
E F
g
G H
.
H I
Sum
I L
(
L M
x
M N
=>
O Q
x
R S
.
S T
Tuesday
T [
)
[ \
+
] ^
g
_ `
.
` a
Sum
a d
(
d e
x
e f
=>
g i
x
j k
.
k l
	Wednesday
l u
)
u v
+
w x
g
y z
.
z {
Sum
{ ~
(
~ 
x 
=> 
x 
. 
Friday 
) 
+ 
g 
. 
Sum 
( 
x 
=> 
x 
. 
Thursday ¥
)¥ ¦
,¦ §
cout
' +
=
, -
(
. /
g
/ 0
.
0 1
Sum
1 4
(
4 5
x
5 6
=>
7 9
x
: ;
.
; <
Monday
< B
)
B C
+
D E
g
F G
.
G H
Sum
H K
(
K L
x
L M
=>
N P
x
Q R
.
R S
Tuesday
S Z
)
Z [
+
\ ]
g
^ _
.
_ `
Sum
` c
(
c d
x
d e
=>
f h
x
i j
.
j k
	Wednesday
k t
)
t u
+
v w
g
x y
.
y z
Sum
z }
(
} ~
x
~ 
=> 
x 
. 
Friday 
) 
+ 
g 
. 
Sum 
( 
x 
=> 
x 
. 
Thursday ¤
)¤ ¥
)¥ ¦
*
& '
Convert
( /
.
/ 0
ToDouble
0 8
(
8 9
_context
9 A
.
A B
profile
B I
.
I J
Where
J O
(
O P
x
P Q
=>
R T
x
U V
.
V W
annee
W \
==
] _
DateTime
` h
.
h i
Now
i l
.
l m
Year
m q
.
q r
ToString
r z
(
z {
)
{ |
&&
} 
x 
. 
	profileId 
== 
g 
. 
Key 
. 
	profileId 
) 
.  
Select  ¦
(¦ §
x§ ¨
=>© «
x¬ ­
.­ ®
budget® ´
)´ µ
.µ ¶
FirstOrDefault¶ Ä
(Ä Å
)Å Æ
)Æ Ç
}
# $
)
$ %
.
% &
ToList
& ,
(
, -
)
- .
;
. /
var
 
ResultFinal
 #
=
$ %
(
& '
from
' +
edp
, /
in
0 2
result1
3 :
group
' ,
edp
- 0
by
1 3
new
4 7
{
' (
edp
+ .
.
. /
Id
/ 1
,
1 2
edp
+ .
.
. /
projectName
/ :
,
: ;
edp
+ .
.
. /
StatusId
/ 7
,
7 8
edp
+ .
.
. /
	StartDate
/ 8
,
8 9
edp
+ .
.
. /
PlannedDate
/ :
,
: ;
edp
+ .
.
. /
DeliveryDate
/ ;
,
; <
edp
+ .
.
. /
client
/ 5
,
5 6
edp
+ .
.
. /
scope
/ 4
,
4 5
edp
+ .
.
. /
Nature
/ 5
,
5 6
}
¡¡' (
into
¡¡) -
g
¡¡. /
select
¢¢' -
new
¢¢. 1
{
££' (
g
¤¤+ ,
.
¤¤, -
Key
¤¤- 0
.
¤¤0 1
Nature
¤¤1 7
,
¤¤7 8
g
¥¥+ ,
.
¥¥, -
Key
¥¥- 0
.
¥¥0 1
projectName
¥¥1 <
,
¥¥< =
g
¦¦+ ,
.
¦¦, -
Key
¦¦- 0
.
¦¦0 1
Id
¦¦1 3
,
¦¦3 4
g
§§+ ,
.
§§, -
Key
§§- 0
.
§§0 1
StatusId
§§1 9
,
§§9 :
g
¨¨+ ,
.
¨¨, -
Key
¨¨- 0
.
¨¨0 1
	StartDate
¨¨1 :
,
¨¨: ;
g
©©+ ,
.
©©, -
Key
©©- 0
.
©©0 1
PlannedDate
©©1 <
,
©©< =
g
ªª+ ,
.
ªª, -
Key
ªª- 0
.
ªª0 1
DeliveryDate
ªª1 =
,
ªª= >
g
««+ ,
.
««, -
Key
««- 0
.
««0 1
client
««1 7
,
««7 8
g
¬¬+ ,
.
¬¬, -
Key
¬¬- 0
.
¬¬0 1
scope
¬¬1 6
,
¬¬6 7
showDetails
­­+ 6
=
­­7 8
false
­­9 >
,
­­> ?

coutEstime
®®+ 5
=
®®6 7
$num
®®8 9
,
®®9 :
charge
¯¯+ 1
=
¯¯2 3
g
¯¯4 5
.
¯¯5 6
Sum
¯¯6 9
(
¯¯9 :
x
¯¯: ;
=>
¯¯< >
x
¯¯? @
.
¯¯@ A
charge
¯¯A G
)
¯¯G H
,
¯¯H I
cout
°°+ /
=
°°0 1
g
°°2 3
.
°°3 4
Sum
°°4 7
(
°°7 8
x
°°8 9
=>
°°: <
x
°°= >
.
°°> ?
cout
°°? C
)
°°C D
}
±±' (
)
±±( )
.
±±) *
ToList
±±* 0
(
±±0 1
)
±±1 2
;
±±2 3
return
¶¶ 
Ok
¶¶ 
(
¶¶ 
ResultFinal
¶¶ )
)
¶¶) *
;
¶¶* +
}
¹¹ 
}
»» 
catch
¼¼ 
(
¼¼ 
	Exception
¼¼ 
e
¼¼ 
)
¼¼ 
{
½½ 
return
¿¿ 

BadRequest
¿¿ !
(
¿¿! "
e
¿¿" #
)
¿¿# $
;
¿¿$ %
}
ÀÀ 
}
ÅÅ 	
[
ÈÈ 	
HttpGet
ÈÈ	 
(
ÈÈ 
$str
ÈÈ 7
)
ÈÈ7 8
]
ÈÈ8 9
public
ÉÉ 
IActionResult
ÉÉ '
getStatDetailsByLivraison
ÉÉ 6
(
ÉÉ6 7
string
ÉÉ7 =
idProjet
ÉÉ> F
)
ÉÉF G
{
ÊÊ 	
var
ÌÌ 
resultat
ÌÌ 
=
ÌÌ 
(
ÌÌ 
from
ÌÌ  
pl
ÌÌ! #
in
ÌÌ$ &
_context
ÌÌ' /
.
ÌÌ/ 0
DetailLivraisons
ÌÌ0 @
where
ÏÏ !
pl
ÏÏ" $
.
ÏÏ$ %
ProjetLivraisonId
ÏÏ% 6
==
ÏÏ7 9
idProjet
ÏÏ: B
select
ÐÐ "
new
ÐÐ# &
{
ÑÑ 
nom
ÒÒ  #
=
ÒÒ$ %
pl
ÒÒ& (
.
ÒÒ( )
Projet
ÒÒ) /
.
ÒÒ/ 0
Nommenclature
ÒÒ0 =
,
ÒÒ= >
PlannedDate
ÓÓ  +
=
ÓÓ, -
pl
ÓÓ. 0
.
ÓÓ0 1
PlannedDate
ÓÓ1 <
,
ÓÓ< = 
InitialPlannedDate
ÔÔ  2
=
ÔÔ3 4
pl
ÔÔ5 7
.
ÔÔ7 8 
InitialPlannedDate
ÔÔ8 J
,
ÔÔJ K
DeliveryDate
ÖÖ  ,
=
ÖÖ- .
pl
ÖÖ/ 1
.
ÖÖ1 2
DeliveryDate
ÖÖ2 >
,
ÖÖ> ?
Delivery
××  (
=
××) *
pl
××+ -
.
××- .
Delivery
××. 6
,
××6 7
	StartDate
ØØ  )
=
ØØ* +
pl
ØØ, .
.
ØØ. /
	StartDate
ØØ/ 8
,
ØØ8 9
StatusId
ÙÙ  (
=
ÙÙ) *
pl
ÙÙ+ -
.
ÙÙ- .
StatusId
ÙÙ. 6
,
ÙÙ6 7
TTMId
ÚÚ  %
=
ÚÚ& '
pl
ÚÚ( *
.
ÚÚ* +
TTMId
ÚÚ+ 0
,
ÚÚ0 1#
chargeConsommerTotale
ÛÛ  5
=
ÛÛ6 7
pl
ÛÛ7 9
.
ÛÛ9 :
taches
ÛÛ: @
.
ÛÛ@ A
Sum
ÛÛA D
(
ÛÛD E
x
ÛÛE F
=>
ÛÛG I
Convert
ÛÛJ Q
.
ÛÛQ R
ToDouble
ÛÛR Z
(
ÛÛZ [
x
ÛÛ[ \
.
ÛÛ\ ]
chargeConsomme
ÛÛ] k
)
ÛÛk l
)
ÛÛl m
}
ÝÝ 
)
ÝÝ 
.
ÝÝ 
Distinct
ÝÝ '
(
ÝÝ' (
)
ÝÝ( )
.
ÝÝ) *
ToList
ÝÝ* 0
(
ÝÝ0 1
)
ÝÝ1 2
;
ÝÝ2 3
return
áá 
Ok
áá 
(
áá 
resultat
áá 
)
áá 
;
áá  
}
ââ 	
[
ææ 	
HttpPost
ææ	 
(
ææ 
$str
ææ 
)
ææ 
]
ææ 
public
çç 
IActionResult
çç !
GetProjetLivraisons
çç 1
(
çç1 2
Search
çç2 8
Search
çç9 ?
)
çç? @
{
èè 	
var
éé 
resulat
éé 
=
éé 
(
éé 
from
éé 
projetLivraisons
éé  0
in
éé1 3
_context
éé4 <
.
éé< =
ProjetLivraisons
éé= M
where
ìì  
(
íí 
Search
íí "
.
íí" #'
AssocitionProjetCompatble
íí# <
==
íí= ?
$num
íí@ A
||
ííB D
(
ííE F
Search
ííF L
.
ííL M'
AssocitionProjetCompatble
ííM f
==
ííg i
$num
ííj k
&&
ííl n
projetLivraisons
íío 
.íí 
projetEdpIdíí 
!=íí 
nullíí 
)íí 
||íí 
(íí 
Searchíí 
.íí  )
AssocitionProjetCompatbleíí  ¹
==ííº ¼
$numíí½ ¾
&&íí¿ Á 
projetLivraisonsííÂ Ò
.ííÒ Ó
projetEdpIdííÓ Þ
==ííß á
nullííâ æ
)ííæ ç
)ííç è
&&ííé ë
(
îî 
Search
îî $
.
îî$ %
client
îî% +
==
îî, .
$str
îî/ 2
||
îî3 5
projetLivraisons
îî6 F
.
îîF G
ClientId
îîG O
==
îîP R
Search
îîS Y
.
îîY Z
client
îîZ `
)
îî` a
&&
ïï 
(
ïï 
Search
ïï %
.
ïï% &
nature
ïï& ,
==
ïï- /
$str
ïï0 3
||
ïï4 6
projetLivraisons
ïï7 G
.
ïïG H
Nature
ïïH N
==
ïïO Q
Search
ïïR X
.
ïïX Y
nature
ïïY _
)
ïï_ `
&&
ññ 
(
ññ 
Search
ññ %
.
ññ% &
status
ññ& ,
==
ññ- /
$str
ññ0 3
||
ññ4 6
projetLivraisons
ññ7 G
.
ññG H
StatusId
ññH P
==
ññQ S
Search
ññT Z
.
ññZ [
status
ññ[ a
)
ñña b
&&
óó 
(
óó 
projetLivraisons
óó ,
.
óó, -
DetailLivraisons
óó- =
.
óó= >
Select
óó> D
(
óóD E
x
óóE F
=>
óóF H
x
óóH I
.
óóI J
Projet
óóJ P
)
óóP Q
.
óóQ R
Where
óóR W
(
óóW X
x
óóX Y
=>
óóZ \
x
óó] ^
.
óó^ _
Type
óó_ c
==
óód f
Search
óóg m
.
óóm n
type
óón r
)
óór s
.
óós t
Count
óót y
(
óóy z
)
óóz {
>
óó{ |
$num
óó| }
||óó~ 
(óó 
Searchóó 
.óó 
typeóó 
==óó 
$stróó 
&&óó  
projetLivraisonsóó ¨
.óó¨ © 
DetailLivraisonsóó© ¹
.óó¹ º
Countóóº ¿
==óó¿ Á
$numóóÁ Â
)óóÂ Ã
)óóÃ Ä
select
öö !
new
öö" %
{
÷÷ "
withProjectComptable
øø 3
=
øø3 4
projetLivraisons
øø5 E
.
øøE F
projetEdpId
øøF Q
!=
øøQ S
null
øøS W
?
øøW X
true
øøY ]
:
øø^ _
false
øø_ d
,
øød e
projetLivraisons
ùù /
.
ùù/ 0
projetEdpId
ùù0 ;
,
ùù; <
projetLivraisons
úú /
.
úú/ 0
Nature
úú0 6
,
úú6 7

ProjetName
ûû )
=
ûû* +
projetLivraisons
ûû, <
.
ûû< =

ProjetName
ûû= G
,
ûûG H
Id
üü !
=
üü" #
projetLivraisons
üü$ 4
.
üü4 5
Id
üü5 7
,
üü7 8 
InitialPlannedDate
ýý 1
=
ýý2 3
projetLivraisons
ýý4 D
.
ýýD E 
InitialPlannedDate
ýýE W
,
ýýW X
Modificateur
þþ +
=
þþ, -
projetLivraisons
þþ. >
.
þþ> ?
Modificateur
þþ? K
,
þþK L
Planned
ÿÿ &
=
ÿÿ' (
projetLivraisons
ÿÿ) 9
.
ÿÿ9 :
Planned
ÿÿ: A
,
ÿÿA B
PlannedDate
 *
=
+ ,
projetLivraisons
- =
.
= >
PlannedDate
> I
,
I J
	StartDate
 (
=
) *
projetLivraisons
+ ;
.
; <
	StartDate
< E
,
E F
StatusId
 '
=
( )
projetLivraisons
* :
.
: ;
StatusId
; C
,
C D
TTMId
 $
=
% &
projetLivraisons
' 7
.
7 8
TTMId
8 =
,
= >
ClientId
 '
=
( )
projetLivraisons
* :
.
: ;
ClientId
; C
,
C D
Createur
 '
=
( )
projetLivraisons
* :
.
: ;
Createur
; C
,
C D
DateCreation
 +
=
, -
projetLivraisons
. >
.
> ?
DateCreation
? K
,
K L&
DateDerniereModification
 7
=
8 9
projetLivraisons
: J
.
J K&
DateDerniereModification
K c
,
c d
Delivery
 '
=
( )
projetLivraisons
* :
.
: ;
Delivery
; C
,
C D
DeliveryDate
 +
=
, -
projetLivraisons
. >
.
> ?
DeliveryDate
? K
,
K L
Description
 *
=
+ ,
projetLivraisons
- =
.
= >
Description
> I
,
I J
EBRC
 #
=
$ %
projetLivraisons
& 6
.
6 7
EBRC
7 ;
,
; <
type
 #
=
$ %
projetLivraisons
& 6
.
6 7
Type
7 ;
,
; <
	NomClient
 (
=
) *
projetLivraisons
+ ;
.
; <
Client
< B
.
B C
Nom
C F
,
F G
countProjet
 *
=
+ ,
projetLivraisons
- =
.
= >
DetailLivraisons
> N
.
N O
Count
O T
(
T U
)
U V
}
 
)
 
.
 
ToList
 $
(
$ %
)
% &
.
& '
OrderBy
' .
(
. /
x
/ 0
=>
0 2
x
3 4
.
4 5
PlannedDate
5 @
)
@ A
;
A B
return
 
Ok
 
(
 
resulat
 
)
  
;
  !
}
 	
[
 	
HttpPost
	 
(
 
$str
 ,
)
, -
]
- .
public
 
IActionResult
 &
satatByClientByComercial
 5
(
5 6
Search
6 <
search
= C
)
C D
{
 	
try
 
{
 
var
   
resultat
   
=
   
(
    
from
    $
edp
  % (
in
  ) +
_context
  , 4
.
  4 5

ProjetEdps
  5 ?
where
¡¡  %
(
¡¡& '
(
¢¢  !
search
¢¢! '
.
¢¢' (
	idClients
¢¢( 1
.
¢¢1 2
Count
¢¢2 7
==
¢¢8 :
$num
¢¢; <
||
¢¢= ?
search
¢¢@ F
.
¢¢F G
	idClients
¢¢G P
.
¢¢P Q
Contains
¢¢Q Y
(
¢¢Y Z
edp
¢¢Z ]
.
¢¢] ^
clientId
¢¢^ f
)
¢¢f g
)
¢¢g h
&&
££  "
(
££# $
String
££$ *
.
££* +
IsNullOrEmpty
££+ 8
(
££8 9
search
££9 ?
.
££? @
commercialId
££@ L
)
££L M
||
££N P
search
££Q W
.
££W X
commercialId
££X d
==
££e g
edp
££h k
.
££k l
CommercialId
££l x
)
££x y
&&
¤¤  "
(
¤¤# $
String
¤¤$ *
.
¤¤* +
IsNullOrEmpty
¤¤+ 8
(
¤¤8 9
search
¤¤9 ?
.
¤¤? @
status
¤¤@ F
)
¤¤F G
||
¤¤H J
search
¤¤K Q
.
¤¤Q R
status
¤¤R X
==
¤¤Y [
edp
¤¤\ _
.
¤¤_ `
status
¤¤` f
)
¤¤f g
&&
¥¥# %
(
¥¥& '
(
¦¦# $
(
¦¦$ %
string
¦¦% +
.
¦¦+ ,
IsNullOrEmpty
¦¦, 9
(
¦¦9 :
search
¦¦: @
.
¦¦@ A
status
¦¦A G
)
¦¦G H
||
¦¦I K
search
¦¦L R
.
¦¦R S
status
¦¦S Y
==
¦¦Z \
$str
¦¦] f
)
¦¦f g
&&
¦¦h j
edp
¦¦k n
.
¦¦n o
status
¦¦o u
==
¦¦v x
$str¦¦y 
)¦¦ 
||
¨¨  "
search
¨¨# )
.
¨¨) *
annees
¨¨* 0
==
¨¨1 3
edp
¨¨4 7
.
¨¨7 8
	dateDebut
¨¨8 A
.
¨¨A B
Value
¨¨B G
.
¨¨G H
Year
¨¨H L
||
©©  "
search
©©# )
.
©©) *
annees
©©* 0
==
©©1 3
edp
©©4 7
.
©©7 8
dateFin
©©8 ?
.
©©? @
Value
©©@ E
.
©©E F
Year
©©F J
||
ªª  "
search
ªª# )
.
ªª) *
annees
ªª* 0
==
ªª1 3
edp
ªª4 7
.
ªª7 8
dateFinInitial
ªª8 F
.
ªªF G
Value
ªªG L
.
ªªL M
Year
ªªM Q
||
««  "
search
««# )
.
««) *
annees
««* 0
==
««1 3
edp
««4 7
.
««7 8
dateFinPrevue
««8 E
.
««E F
Value
««F K
.
««K L
Year
««L P
||
¬¬  "
search
¬¬# )
.
¬¬) *
annees
¬¬* 0
==
¬¬1 3
Convert
¬¬4 ;
.
¬¬; <
ToInt32
¬¬< C
(
¬¬C D
edp
¬¬D G
.
¬¬G H
DateCreation
¬¬H T
.
¬¬T U
	Substring
¬¬U ^
(
¬¬^ _
$num
¬¬_ `
,
¬¬` a
$num
¬¬b c
)
¬¬c d
)
¬¬d e
)
­­  !
)
­­! "
select
¯¯  &
new
¯¯' *
{
°°  !#
chargeConsommerTotale
±±$ 9
=
±±: ;
edp
±±< ?
.
±±? @
ProjetLivraisons
±±@ P
.
±±P Q

SelectMany
±±Q [
(
±±[ \
x
±±\ ]
=>
±±^ `
x
±±a b
.
±±b c
DetailLivraisons
±±c s
)
±±s t
.
±±t u

SelectMany
±±u 
(±± 
x±± 
=>±± 
x±± 
.±± 
taches±± 
)±± 
.±± 
Sum±± 
(±± 
x±± 
=>±± 
Convert±± 
.±±  
ToDouble±±  ¨
(±±¨ ©
x±±© ª
.±±ª «
chargeConsomme±±« ¹
)±±¹ º
)±±º »
,±±» ¼
id
´´$ &
=
´´' (
edp
´´) ,
.
´´, -
id
´´- /
,
´´/ 0
commercantName
µµ$ 2
=
µµ3 4
edp
µµ5 8
.
µµ8 9

Commercial
µµ9 C
.
µµC D
FullName
µµD L
,
µµL M

CodeProjet
¶¶$ .
=
¶¶/ 0
edp
¶¶1 4
.
¶¶4 5
CodeProjets
¶¶5 @
.
¶¶@ A
Numero
¶¶A G
+
¶¶H I
$str
¶¶J M
+
¶¶N O
edp
¶¶P S
.
¶¶S T

CodeProjet
¶¶T ^
,
¶¶^ _
natureCodeProjet
··$ 4
=
··5 6
edp
··7 :
.
··: ;
CodeProjets
··; F
.
··F G
Nature
··G M
,
··M N
nom
¸¸$ '
=
¸¸( )
edp
¸¸* -
.
¸¸- .
Nom
¸¸. 1
,
¸¸1 2
budgetInitial
¹¹$ 1
=
¹¹2 3
edp
¹¹4 7
.
¹¹7 8
BudgetInitial
¹¹8 E
,
¹¹E F
budgetRallonge
ºº$ 2
=
ºº3 4
edp
ºº5 8
.
ºº8 9
BudgetRallonge
ºº9 G
,
ººG H

clientName
»»$ .
=
»»/ 0
edp
»»1 4
.
»»4 5
client
»»5 ;
.
»»; <
Nom
»»< ?
,
»»? @
dateCreation
¼¼$ 0
=
¼¼1 2
Convert
¼¼3 :
.
¼¼: ;

ToDateTime
¼¼; E
(
¼¼E F
edp
¼¼F I
.
¼¼I J
DateCreation
¼¼J V
)
¼¼V W
,
¼¼W X
edp
½½$ '
.
½½' (
budgetSenior
½½( 4
,
½½4 5
edp
¾¾$ '
.
¾¾' ("
budgetSeniorRallonge
¾¾( <
,
¾¾< =
edp
¿¿$ '
.
¿¿' (
status
¿¿( .
,
¿¿. /
edp
ÁÁ$ '
.
ÁÁ' (
budgetConfirme
ÁÁ( 6
,
ÁÁ6 7
edp
ÂÂ$ '
.
ÂÂ' (
budgetDirection
ÂÂ( 7
,
ÂÂ7 8
edp
ÃÃ$ '
.
ÃÃ' (
budgetGP
ÃÃ( 0
,
ÃÃ0 1
edp
ÄÄ$ '
.
ÄÄ' (
budgetJunior
ÄÄ( 4
,
ÄÄ4 5
edp
ÅÅ$ '
.
ÅÅ' (
budgetValidation
ÅÅ( 8
,
ÅÅ8 9"
budgetConfirmeTotale
ÆÆ$ 8
=
ÆÆ9 :
edp
ÆÆ; >
.
ÆÆ> ?$
budgetConfirmeRallonge
ÆÆ? U
+
ÆÆV W
edp
ÆÆX [
.
ÆÆ[ \
budgetConfirme
ÆÆ\ j
,
ÆÆj k
budgetGPTotale
ÇÇ$ 2
=
ÇÇ3 4
edp
ÇÇ5 8
.
ÇÇ8 9
budgetGPRallonge
ÇÇ9 I
+
ÇÇJ K
edp
ÇÇL O
.
ÇÇO P
budgetGP
ÇÇP X
,
ÇÇX Y 
budgetJuniorTotale
ÈÈ$ 6
=
ÈÈ7 8
edp
ÈÈ9 <
.
ÈÈ< ="
budgetJuniorRallonge
ÈÈ= Q
+
ÈÈR S
edp
ÈÈT W
.
ÈÈW X
budgetJunior
ÈÈX d
,
ÈÈd e$
budgetValidationTotale
ÉÉ$ :
=
ÉÉ; <
edp
ÉÉ= @
.
ÉÉ@ A&
budgetValidationRallonge
ÉÉA Y
+
ÉÉZ [
edp
ÉÉ\ _
.
ÉÉ_ `
budgetValidation
ÉÉ` p
,
ÉÉp q 
budgetSeniorTotale
ÊÊ$ 6
=
ÊÊ7 8
edp
ÊÊ9 <
.
ÊÊ< ="
budgetSeniorRallonge
ÊÊ= Q
+
ÊÊR S
edp
ÊÊT W
.
ÊÊW X
budgetSenior
ÊÊX d
,
ÊÊd e
edp
ÌÌ$ '
.
ÌÌ' ($
budgetConfirmeRallonge
ÌÌ( >
,
ÌÌ> ?
edp
ÍÍ$ '
.
ÍÍ' (%
budgetDirectionRallonge
ÍÍ( ?
,
ÍÍ? @
edp
ÎÎ$ '
.
ÎÎ' (
budgetGPRallonge
ÎÎ( 8
,
ÎÎ8 9
edp
ÐÐ$ '
.
ÐÐ' ("
budgetJuniorRallonge
ÐÐ( <
,
ÐÐ< =
edp
ÑÑ$ '
.
ÑÑ' (&
budgetValidationRallonge
ÑÑ( @
,
ÑÑ@ A"
countProjetLivraison
ÒÒ$ 8
=
ÒÒ9 :
edp
ÒÒ; >
.
ÒÒ> ?
ProjetLivraisons
ÒÒ? O
.
ÒÒO P
Count
ÒÒP U
(
ÒÒU V
)
ÒÒV W
,
ÒÒW X
ProjetLivraison
ÕÕ! 0
=
ÕÕ0 1
edp
ÕÕ4 7
.
ÕÕ7 8
ProjetLivraisons
ÕÕ8 H
}
ØØ  !
)
ØØ! "
.
ØØ" #
Distinct
ØØ# +
(
ØØ+ ,
)
ØØ, -
.
ØØ- .
ToList
ØØ. 4
(
ØØ4 5
)
ØØ5 6
;
ØØ6 7
return
ââ 
Ok
ââ 
(
ââ 
resultat
ââ "
)
ââ" #
;
ââ# $
}
ãã 
catch
ää 
(
ää 
	Exception
ää 
e
ää 
)
ää 
{
åå 
return
çç 

BadRequest
çç !
(
çç! "
e
çç" #
)
çç# $
;
çç$ %
}
èè 
}
íí 	
[
ññ 	
HttpPost
ññ	 
(
ññ 
$str
ññ /
)
ññ/ 0
]
ññ0 1
public
òò 
IActionResult
òò )
GetProjetLivraisonsByClient
òò 8
(
òò8 9
Search
òò9 ?
searsh
òò@ F
)
òòF G
{
óó 	
var
ôô 
clients
ôô 
=
ôô 
(
ôô 
from
ôô 
client
ôô  &
in
ôô' )
_context
ôô* 2
.
ôô2 3
Clients
ôô3 :
where
õõ  
(
÷÷ 
searsh
÷÷ 
.
÷÷ 
	idClients
÷÷ "
.
÷÷" #
Contains
÷÷# +
(
÷÷+ ,
client
÷÷, 2
.
÷÷2 3
Id
÷÷3 5
)
÷÷5 6
||
÷÷7 9
searsh
÷÷: @
.
÷÷@ A
	idClients
÷÷A J
.
÷÷J K
Count
÷÷K P
==
÷÷Q S
$num
÷÷T U
)
÷÷U V
&&
÷÷W Y
client
÷÷Z `
.
÷÷` a
ProjetLivraisons
÷÷a q
.
÷÷q r
Count
÷÷r w
>
÷÷x y
$num
÷÷z {
select
úú !
new
úú" %
{
ûû 
client
üü %
=
üü& '
client
üü( .
.
üü. /
Nom
üü/ 2
,
üü2 3
filtredLivraison
ÿÿ /
=
ÿÿ0 1
client
ÿÿ2 8
.
ÿÿ8 9
ProjetLivraisons
ÿÿ9 I
.
ÿÿI J
OrderByDescending
ÿÿJ [
(
ÿÿ[ \
x
ÿÿ\ ]
=>
ÿÿ^ `
x
ÿÿa b
.
ÿÿb c
PlannedDate
ÿÿc n
.
ÿÿn o
Date
ÿÿo s
<
ÿÿt u
DateTime
ÿÿv ~
.
ÿÿ~ 
Nowÿÿ 
.ÿÿ 
Dateÿÿ 
?ÿÿ 
xÿÿ 
.ÿÿ 
PlannedDateÿÿ 
:ÿÿ 
DateTimeÿÿ ¢
.ÿÿ¢ £
Nowÿÿ£ ¦
)ÿÿ¦ §
.
7 8
ThenBy
8 >
(
> ?
x
? @
=>
A C
x
D E
.
E F
PlannedDate
F Q
.
Q R
Date
R V
>=
W Y
DateTime
Z b
.
b c
Now
c f
.
f g
Date
g k
?
l m
x
n o
.
o p
PlannedDate
p {
:
| }
DateTime~ 
. 
Now 
) 
. 
Where 
( 
x 
=> 
( 
searsh 
. 
types ¤
.¤ ¥
Count¥ ª
==« ­
$num® ¯
||° ²
(³ ´
x´ µ
.µ ¶ 
DetailLivraisons¶ Æ
.Æ Ç
CountÇ Ì
!=Í Ï
$numÐ Ñ
&&Ò Ô
xÕ Ö
.Ö × 
DetailLivraisons× ç
.ç è
Selectè î
(î ï
zï ð
=>ñ ó
zô õ
.õ ö
Projetö ü
)ü ý
.ý þ
Whereþ 
( 
y 
=> 
searsh 
. 
types 
. 
Contains 
( 
y  
.  ¡
Type¡ ¥
)¥ ¦
)¦ §
.§ ¨
Count¨ ­
(­ ®
)® ¯
>° ±
$num² ³
)³ ´
)´ µ
&&
 !
(
" #
(
# $
x
$ %
.
% &
PlannedDate
& 1
.
1 2
Date
2 6
>=
7 9
searsh
: @
.
@ A
	startDate
A J
&&
K M
x
N O
.
O P
PlannedDate
P [
.
[ \
Date
\ `
<=
a c
searsh
d j
.
j k
endDate
k r
)
r s
||
t v
(
w x
x
x y
.
y z
DeliveryDatez 
!= 
null 
&& 
( 
x 
. 
DeliveryDate ¡
>=¢ ¤
searsh¥ «
.« ¬
	startDate¬ µ
&&¶ ¸
x¹ º
.º »
DeliveryDate» Ç
<=È Ê
searshË Ñ
.Ñ Ò
endDateÒ Ù
)Ù Ú
)Ú Û
)Û Ü
)Ü Ý
}
 
)
 
;
 
var
 
resulat
 
=
 
clients
 !
?
! "
.
" #
Where
# (
(
( )
x
) *
=>
+ -
x
. /
.
/ 0
filtredLivraison
0 @
.
@ A
Count
A F
(
F G
)
G H
>
I J
$num
K L
)
L M
.
M N
Select
N T
(
T U
x
U V
=>
W Y
new
Z ]
{
 
rowSpan
 
=
 
x
 
.
 
filtredLivraison
 ,
.
, -
Count
- 2
(
2 3
)
3 4
,
4 5
x
 
.
 
client
 
,
 
maxDate
 
=
 
x
 
.
 
filtredLivraison
 ,
.
, -
Select
- 3
(
3 4
y
4 5
=>
6 8
y
9 :
.
: ;
PlannedDate
; F
)
F G
.
G H
First
H M
(
M N
)
N O
,
O P

Livraisons
 
=
 
x
 
.
 
filtredLivraison
 /
.
/ 0
Select
0 6
(
6 7
z
7 8
=>
9 ;
new
< ?
{
 
z
 
.
 
	StartDate
 
,
  
z
 
.
 
DateCreation
 "
,
" #
z
 
.
 
DeliveryDate
 "
,
" #
z
 
.
 
PlannedDate
 !
,
! "
z
 
.
 
scope
 
,
 
z
 
.
  
InitialPlannedDate
 (
,
( )
z
 
.
 

ProjetName
  
,
  !
z
 
.
 
StatusId
 
,
 
z
 
.
 
TTMId
 
,
 
z
 
.
 
Delivery
 
,
 
detailsCount
  
=
! "
z
# $
.
$ %
DetailLivraisons
% 5
.
5 6
Count
6 ;
,
; <
z
 
.
 
Id
 
,
 
showDetails
 
=
  !
false
" '
,
' (
z
 
.
 
Nature
 
}
   
)
   
}
¢¢ 
)
¢¢ 
;
¢¢ 
return
££ 
Ok
££ 
(
££ 
new
££ 
{
¤¤ 
projetLivraisons
¥¥  
=
¥¥! "
resulat
¥¥# *
?
¥¥* +
.
¥¥+ ,
OrderByDescending
¥¥, =
(
¥¥= >
x
¥¥> ?
=>
¥¥@ B
x
¥¥C D
.
¥¥D E
maxDate
¥¥E L
<
¥¥M N
DateTime
¥¥O W
.
¥¥W X
Now
¥¥X [
.
¥¥[ \
Date
¥¥\ `
?
¥¥a b
x
¥¥c d
.
¥¥d e
maxDate
¥¥e l
:
¥¥m n
DateTime
¥¥o w
.
¥¥w x
Now
¥¥x {
)
¥¥{ |
.
¦¦' (
ThenBy
¦¦( .
(
¦¦. /
x
¦¦/ 0
=>
¦¦1 3
x
¦¦4 5
.
¦¦5 6
maxDate
¦¦6 =
.
¦¦= >
Date
¦¦> B
>=
¦¦C E
DateTime
¦¦F N
.
¦¦N O
Now
¦¦O R
.
¦¦R S
Date
¦¦S W
?
¦¦X Y
x
¦¦Z [
.
¦¦[ \
maxDate
¦¦\ c
:
¦¦d e
DateTime
¦¦f n
.
¦¦n o
Now
¦¦o r
)
¦¦r s
.
¦¦s t
ToList
¦¦t z
(
¦¦z {
)
¦¦{ |
,
¦¦| }
totaleLivrasion
§§ 
=
§§  !
resulat
§§" )
?
§§) *
.
§§* +

SelectMany
§§+ 5
(
§§5 6
x
§§6 7
=>
§§8 :
x
§§; <
.
§§< =

Livraisons
§§= G
)
§§G H
.
§§H I
Count
§§I N
(
§§N O
)
§§O P
,
§§P Q
NotStarttedCount
¨¨  
=
¨¨! "
resulat
¨¨# *
?
¨¨* +
.
¨¨+ ,

SelectMany
¨¨, 6
(
¨¨6 7
x
¨¨7 8
=>
¨¨9 ;
x
¨¨< =
.
¨¨= >

Livraisons
¨¨> H
)
¨¨H I
.
¨¨I J
Where
¨¨J O
(
¨¨O P
x
¨¨P Q
=>
¨¨R T
x
¨¨U V
.
¨¨V W
StatusId
¨¨W _
==
¨¨` b
$str
¨¨c p
)
¨¨p q
.
¨¨q r
Count
¨¨r w
(
¨¨w x
)
¨¨x y
,
¨¨y z
RunningCount
©© 
=
©© 
resulat
©© &
?
©©& '
.
©©' (

SelectMany
©©( 2
(
©©2 3
x
©©3 4
=>
©©5 7
x
©©8 9
.
©©9 :

Livraisons
©©: D
)
©©D E
.
©©E F
Where
©©F K
(
©©K L
x
©©L M
=>
©©N P
x
©©Q R
.
©©R S
StatusId
©©S [
==
©©\ ^
$str
©©_ h
)
©©h i
.
©©i j
Count
©©j o
(
©©o p
)
©©p q
,
©©q r
CanceledCount
ªª 
=
ªª 
resulat
ªª  '
?
ªª' (
.
ªª( )

SelectMany
ªª) 3
(
ªª3 4
x
ªª4 5
=>
ªª6 8
x
ªª9 :
.
ªª: ;

Livraisons
ªª; E
)
ªªE F
.
ªªF G
Where
ªªG L
(
ªªL M
x
ªªM N
=>
ªªO Q
x
ªªR S
.
ªªS T
StatusId
ªªT \
==
ªª] _
$str
ªª` j
)
ªªj k
.
ªªk l
Count
ªªl q
(
ªªq r
)
ªªr s
,
ªªs t
DeliveredCount
«« 
=
««  
resulat
««! (
?
««( )
.
««) *

SelectMany
««* 4
(
««4 5
x
««5 6
=>
««7 9
x
««: ;
.
««; <

Livraisons
««< F
)
««F G
.
««G H
Where
««H M
(
««M N
x
««N O
=>
««P R
x
««S T
.
««T U
StatusId
««U ]
==
««^ `
$str
««a l
)
««l m
.
««m n
Count
««n s
(
««s t
)
««t u
,
««u v
PostponedCount
¬¬ 
=
¬¬  
resulat
¬¬! (
?
¬¬( )
.
¬¬) *

SelectMany
¬¬* 4
(
¬¬4 5
x
¬¬5 6
=>
¬¬7 9
x
¬¬: ;
.
¬¬; <

Livraisons
¬¬< F
)
¬¬F G
.
¬¬G H
Where
¬¬H M
(
¬¬M N
x
¬¬N O
=>
¬¬P R
x
¬¬S T
.
¬¬T U
StatusId
¬¬U ]
==
¬¬^ `
$str
¬¬a l
)
¬¬l m
.
¬¬m n
Count
¬¬n s
(
¬¬s t
)
¬¬t u
,
¬¬u v
	lateCount
­­ 
=
­­ 
resulat
­­ #
?
­­# $
.
­­$ %

SelectMany
­­% /
(
­­/ 0
x
­­0 1
=>
­­2 4
x
­­5 6
.
­­6 7

Livraisons
­­7 A
)
­­A B
.
­­B C
Where
­­C H
(
­­H I
x
­­I J
=>
­­K M
x
­­N O
.
­­O P
TTMId
­­P U
==
­­V X
$str
­­Y _
&&
­­` b
x
­­c d
.
­­d e
StatusId
­­e m
==
­­n p
$str
­­q |
)
­­| }
.
­­} ~
Count­­~ 
(­­ 
)­­ 
,­­ 
solutionCount
®® 
=
®® 
resulat
®®  '
?
®®' (
.
®®( )

SelectMany
®®) 3
(
®®3 4
x
®®4 5
=>
®®6 8
x
®®9 :
.
®®: ;

Livraisons
®®; E
)
®®E F
.
®®F G
Where
®®G L
(
®®L M
x
®®M N
=>
®®O Q
x
®®R S
.
®®S T
Nature
®®T Z
==
®®[ ]
$str
®®^ h
)
®®h i
.
®®i j
Count
®®j o
(
®®o p
)
®®p q
,
®®q r
tpeCount
¯¯ 
=
¯¯ 
resulat
¯¯ "
?
¯¯" #
.
¯¯# $

SelectMany
¯¯$ .
(
¯¯. /
x
¯¯/ 0
=>
¯¯1 3
x
¯¯4 5
.
¯¯5 6

Livraisons
¯¯6 @
)
¯¯@ A
.
¯¯A B
Where
¯¯B G
(
¯¯G H
x
¯¯H I
=>
¯¯J L
x
¯¯M N
.
¯¯N O
Nature
¯¯O U
==
¯¯V X
$str
¯¯Y ^
)
¯¯^ _
.
¯¯_ `
Count
¯¯` e
(
¯¯e f
)
¯¯f g
,
¯¯g h
onTimeCount
³³ 
=
³³ 
resulat
³³ %
.
³³% &

SelectMany
³³& 0
(
³³0 1
x
³³1 2
=>
³³3 5
x
³³6 7
.
³³7 8

Livraisons
³³8 B
)
³³B C
.
³³C D
Where
³³D I
(
³³I J
x
³³J K
=>
³³L N
x
³³O P
.
³³P Q
TTMId
³³Q V
==
³³W Y
$str
³³Z c
&&
³³d f
x
³³g h
.
³³h i
StatusId
³³i q
==
³³r t
$str³³u 
)³³ 
.³³ 
Count³³ 
(³³ 
)³³ 
,³³ 
standByCount
´´ 
=
´´ 
resulat
´´ &
.
´´& '

SelectMany
´´' 1
(
´´1 2
x
´´2 3
=>
´´4 6
x
´´7 8
.
´´8 9

Livraisons
´´9 C
)
´´C D
.
´´D E
Where
´´E J
(
´´J K
x
´´K L
=>
´´M O
x
´´P Q
.
´´Q R
StatusId
´´R Z
==
´´[ ]
$str
´´^ h
)
´´h i
.
´´i j
Count
´´j o
(
´´o p
)
´´p q
}
µµ 
)
µµ 
;
µµ 
}
ÄÄ 	
[
		 	
HttpGet
			 
(
		 
$str
		 4
)
		4 5
]
		5 6
public
		 
IActionResult
		 &
GetProjetLivraisonByUser
		 5
(
		5 6
string
		6 <
iduser
		= C
)
		C D
{
		 	
var
 	 	 
resulat
 	 	 
=
 	 	 
(
 	 	 
from
 	 	 
projetLivraisons
 	 	  0
in
 	 	1 3
_context
 	 	4 <
.
 	 	< =
ProjetLivraisons
 	 	= M
join
¡	¡	 
detailLivraisons
¡	¡	  0
in
¡	¡	1 3
_context
¡	¡	4 <
.
¡	¡	< =
DetailLivraisons
¡	¡	= M
on
¡	¡	N P
projetLivraisons
¡	¡	Q a
.
¡	¡	a b
Id
¡	¡	b d
equals
¡	¡	e k
detailLivraisons
¡	¡	l |
.
¡	¡	| } 
ProjetLivraisonId¡	¡	} 
join
¢	¢	 
project
¢	¢	  '
in
¢	¢	( *
_context
¢	¢	+ 3
.
¢	¢	3 4
Projets
¢	¢	4 ;
on
¢	¢	< >
detailLivraisons
¢	¢	? O
.
¢	¢	O P
ProjetId
¢	¢	P X
equals
¢	¢	Y _
project
¢	¢	` g
.
¢	¢	g h
Id
¢	¢	h j
join
£	£	 
ProjetEquipes
£	£	  -
in
£	£	. 0
_context
£	£	1 9
.
£	£	9 :
ProjetEquipes
£	£	: G
on
£	£	H J
project
£	£	K R
.
£	£	R S
Id
£	£	S U
equals
£	£	V \
ProjetEquipes
£	£	] j
.
£	£	j k
ProjetId
£	£	k s
join
¤	¤	 

userEquipe
¤	¤	  *
in
¤	¤	+ -
_context
¤	¤	. 6
.
¤	¤	6 7

EquipeUser
¤	¤	7 A
on
¤	¤	B D
ProjetEquipes
¤	¤	E R
.
¤	¤	R S
EquipeId
¤	¤	S [
equals
¤	¤	\ b

userEquipe
¤	¤	c m
.
¤	¤	m n
EquipeId
¤	¤	n v
where
¥	¥	  

userEquipe
¥	¥	! +
.
¥	¥	+ ,
UserId
¥	¥	, 2
==
¥	¥	3 5
iduser
¥	¥	6 <
group
¦	¦	  
new
¦	¦	! $
{
¦	¦	% &
projetLivraisons
¦	¦	' 7
}
¦	¦	8 9
by
¦	¦	: <
new
¦	¦	= @
{
¦	¦	A B
projetLivraisons
¦	¦	C S
.
¦	¦	S T

ProjetName
¦	¦	T ^
,
¦	¦	^ _
projetLivraisons
¦	¦	` p
.
¦	¦	p q
Delivery
¦	¦	q y
,
¦	¦	y z
projetLivraisons¦	¦	{ 
.¦	¦	 
Id¦	¦	 
}¦	¦	 
into¦	¦	 
grp¦	¦	 
select
§	§	 !
new
§	§	" %
{
¨	¨	 

ProjetName
ª	ª	 )
=
ª	ª	* +
grp
ª	ª	, /
.
ª	ª	/ 0
Key
ª	ª	0 3
.
ª	ª	3 4

ProjetName
ª	ª	4 >
+
ª	ª	? @
$str
ª	ª	A F
+
ª	ª	G H
grp
ª	ª	I L
.
ª	ª	L M
Key
ª	ª	M P
.
ª	ª	P Q
Delivery
ª	ª	Q Y
,
ª	ª	Y Z
Id
«	«	 !
=
«	«	" #
grp
«	«	$ '
.
«	«	' (
Key
«	«	( +
.
«	«	+ ,
Id
«	«	, .
,
«	«	. /
}
­	­	 
)
­	­	 
.
­	­	 
ToList
­	­	 $
(
­	­	$ %
)
­	­	% &
;
­	­	& '
return
®	®	 
Ok
®	®	 
(
®	®	 
resulat
®	®	 
)
®	®	 
;
®	®	 
}
±	±	 	
[
¶	¶	 	
HttpGet
¶	¶		 
(
¶	¶	 
$str
¶	¶	 @
)
¶	¶	@ A
]
¶	¶	A B
public
·	·	 
IActionResult
·	·	 2
$GetProjetLivraisonByUser2weeksBefore
·	·	 A
(
·	·	A B
string
·	·	B H
iduser
·	·	I O
)
·	·	O P
{
¸	¸	 	
var
¹	¹	 
date
¹	¹	 
=
¹	¹	 
DateTime
¹	¹	 
.
¹	¹	  
Now
¹	¹	  #
.
¹	¹	# $
AddDays
¹	¹	$ +
(
¹	¹	+ ,
-
¹	¹	, -
$num
¹	¹	- /
)
¹	¹	/ 0
;
¹	¹	0 1
var
»	»	 
resulat
»	»	 
=
»	»	 
(
»	»	 
from
»	»	 
projetLivraisons
»	»	  0
in
»	»	1 3
_context
»	»	4 <
.
»	»	< =
ProjetLivraisons
»	»	= M
join
¼	¼	 
detailLivraisons
¼	¼	  0
in
¼	¼	1 3
_context
¼	¼	4 <
.
¼	¼	< =
DetailLivraisons
¼	¼	= M
on
¼	¼	N P
projetLivraisons
¼	¼	Q a
.
¼	¼	a b
Id
¼	¼	b d
equals
¼	¼	e k
detailLivraisons
¼	¼	l |
.
¼	¼	| } 
ProjetLivraisonId¼	¼	} 
join
½	½	 
project
½	½	  '
in
½	½	( *
_context
½	½	+ 3
.
½	½	3 4
Projets
½	½	4 ;
on
½	½	< >
detailLivraisons
½	½	? O
.
½	½	O P
ProjetId
½	½	P X
equals
½	½	Y _
project
½	½	` g
.
½	½	g h
Id
½	½	h j
join
¾	¾	 
ProjetEquipes
¾	¾	  -
in
¾	¾	. 0
_context
¾	¾	1 9
.
¾	¾	9 :
ProjetEquipes
¾	¾	: G
on
¾	¾	H J
project
¾	¾	K R
.
¾	¾	R S
Id
¾	¾	S U
equals
¾	¾	V \
ProjetEquipes
¾	¾	] j
.
¾	¾	j k
ProjetId
¾	¾	k s
join
¿	¿	 

userEquipe
¿	¿	  *
in
¿	¿	+ -
_context
¿	¿	. 6
.
¿	¿	6 7

EquipeUser
¿	¿	7 A
on
¿	¿	B D
ProjetEquipes
¿	¿	E R
.
¿	¿	R S
EquipeId
¿	¿	S [
equals
¿	¿	\ b

userEquipe
¿	¿	c m
.
¿	¿	m n
EquipeId
¿	¿	n v
where
À	À	  

userEquipe
À	À	! +
.
À	À	+ ,
UserId
À	À	, 2
==
À	À	3 5
iduser
À	À	6 <
&&
À	À	= ?
(
À	À	@ A
projetLivraisons
À	À	A Q
.
À	À	Q R
DeliveryDate
À	À	R ^
>=
À	À	^ `
date
À	À	` d
.
À	À	d e
Date
À	À	e i
||
À	À	i k
projetLivraisons
À	À	l |
.
À	À	| }
DeliveryDateÀ	À	} 
==À	À	 
nullÀ	À	 
)À	À	 
group
Á	Á	  
new
Á	Á	! $
{
Á	Á	% &
projetLivraisons
Á	Á	' 7
}
Á	Á	8 9
by
Á	Á	: <
new
Á	Á	= @
{
Á	Á	A B
projetLivraisons
Á	Á	C S
.
Á	Á	S T

ProjetName
Á	Á	T ^
,
Á	Á	^ _
projetLivraisons
Á	Á	` p
.
Á	Á	p q
Id
Á	Á	q s
,
Á	Á	t u
projetLivraisonsÁ	Á	v 
.Á	Á	 
DeliveryÁ	Á	 
}Á	Á	 
intoÁ	Á	 
grpÁ	Á	 
select
Â	Â	 !
new
Â	Â	" %
{
Ã	Ã	 

ProjetName
Å	Å	 )
=
Å	Å	* +
grp
Å	Å	, /
.
Å	Å	/ 0
Key
Å	Å	0 3
.
Å	Å	3 4

ProjetName
Å	Å	4 >
+
Å	Å	? @
$str
Å	Å	@ E
+
Å	Å	E F
grp
Å	Å	G J
.
Å	Å	J K
Key
Å	Å	K N
.
Å	Å	N O
Delivery
Å	Å	O W
,
Å	Å	W X
Id
Æ	Æ	 !
=
Æ	Æ	" #
grp
Æ	Æ	$ '
.
Æ	Æ	' (
Key
Æ	Æ	( +
.
Æ	Æ	+ ,
Id
Æ	Æ	, .
,
Æ	Æ	. /
}
È	È	 
)
È	È	 
.
È	È	 
ToList
È	È	 $
(
È	È	$ %
)
È	È	% &
;
È	È	& '
return
Ê	Ê	 
Ok
Ê	Ê	 
(
Ê	Ê	 
resulat
Ê	Ê	 
)
Ê	Ê	 
;
Ê	Ê	 
}
Ë	Ë	 	
[
Î	Î	 	
HttpGet
Î	Î		 
(
Î	Î	 
$str
Î	Î	 8
)
Î	Î	8 9
]
Î	Î	9 :
public
Ï	Ï	 
IActionResult
Ï	Ï	 (
GetProjetLivraisonByEquipe
Ï	Ï	 7
(
Ï	Ï	7 8
string
Ï	Ï	8 >
idEquipe
Ï	Ï	? G
)
Ï	Ï	G H
{
Ð	Ð	 	
var
Ò	Ò	 
resulat
Ò	Ò	 
=
Ò	Ò	 
(
Ò	Ò	 
from
Ò	Ò	 
projetLivraisons
Ò	Ò	  0
in
Ò	Ò	1 3
_context
Ò	Ò	4 <
.
Ò	Ò	< =
ProjetLivraisons
Ò	Ò	= M
join
Ó	Ó	 
detailLivraisons
Ó	Ó	  0
in
Ó	Ó	1 3
_context
Ó	Ó	4 <
.
Ó	Ó	< =
DetailLivraisons
Ó	Ó	= M
on
Ó	Ó	N P
projetLivraisons
Ó	Ó	Q a
.
Ó	Ó	a b
Id
Ó	Ó	b d
equals
Ó	Ó	e k
detailLivraisons
Ó	Ó	l |
.
Ó	Ó	| } 
ProjetLivraisonIdÓ	Ó	} 
join
Ô	Ô	 
project
Ô	Ô	  '
in
Ô	Ô	( *
_context
Ô	Ô	+ 3
.
Ô	Ô	3 4
Projets
Ô	Ô	4 ;
on
Ô	Ô	< >
detailLivraisons
Ô	Ô	? O
.
Ô	Ô	O P
ProjetId
Ô	Ô	P X
equals
Ô	Ô	Y _
project
Ô	Ô	` g
.
Ô	Ô	g h
Id
Ô	Ô	h j
join
Õ	Õ	 
ProjetEquipes
Õ	Õ	  -
in
Õ	Õ	. 0
_context
Õ	Õ	1 9
.
Õ	Õ	9 :
ProjetEquipes
Õ	Õ	: G
on
Õ	Õ	H J
project
Õ	Õ	K R
.
Õ	Õ	R S
Id
Õ	Õ	S U
equals
Õ	Õ	V \
ProjetEquipes
Õ	Õ	] j
.
Õ	Õ	j k
ProjetId
Õ	Õ	k s
where
Ö	Ö	  
ProjetEquipes
Ö	Ö	! .
.
Ö	Ö	. /
EquipeId
Ö	Ö	/ 7
==
Ö	Ö	8 :
idEquipe
Ö	Ö	; C
group
×	×	  
new
×	×	! $
{
×	×	% &
projetLivraisons
×	×	' 7
}
×	×	8 9
by
×	×	: <
new
×	×	= @
{
×	×	A B
projetLivraisons
×	×	C S
.
×	×	S T

ProjetName
×	×	T ^
,
×	×	^ _
projetLivraisons
×	×	` p
.
×	×	p q
Id
×	×	q s
,
×	×	s t
projetLivraisons×	×	u 
.×	×	 
Delivery×	×	 
}×	×	 
into×	×	 
grp×	×	 
select
Ø	Ø	 !
new
Ø	Ø	" %
{
Ù	Ù	 

ProjetName
Û	Û	 )
=
Û	Û	* +
grp
Û	Û	, /
.
Û	Û	/ 0
Key
Û	Û	0 3
.
Û	Û	3 4

ProjetName
Û	Û	4 >
+
Û	Û	? @
$str
Û	Û	A F
+
Û	Û	G H
grp
Û	Û	I L
.
Û	Û	L M
Key
Û	Û	M P
.
Û	Û	P Q
Delivery
Û	Û	Q Y
,
Û	Û	Y Z
Id
Ü	Ü	 !
=
Ü	Ü	" #
grp
Ü	Ü	$ '
.
Ü	Ü	' (
Key
Ü	Ü	( +
.
Ü	Ü	+ ,
Id
Ü	Ü	, .
,
Ü	Ü	. /
}
Þ	Þ	 
)
Þ	Þ	 
.
Þ	Þ	 
ToList
Þ	Þ	 $
(
Þ	Þ	$ %
)
Þ	Þ	% &
;
Þ	Þ	& '
return
ß	ß	 
Ok
ß	ß	 
(
ß	ß	 
resulat
ß	ß	 
)
ß	ß	  
;
ß	ß	  !
}
â	â	 	
[
å	å	 	
HttpGet
å	å		 
(
å	å	 
$str
å	å	 6
)
å	å	6 7
]
å	å	7 8
public
æ	æ	 
IActionResult
æ	æ	 (
GetProjetLivraisonForTasks
æ	æ	 7
(
æ	æ	7 8
string
æ	æ	8 >
idUser
æ	æ	? E
)
æ	æ	E F
{
ç	ç	 	
var
é	é	 
resulat
é	é	 
=
é	é	 
(
é	é	 
from
é	é	 
projetLivraisons
é	é	  0
in
é	é	1 3
_context
é	é	4 <
.
é	é	< =
ProjetLivraisons
é	é	= M
join
ê	ê	 
detailLivraisons
ê	ê	  0
in
ê	ê	1 3
_context
ê	ê	4 <
.
ê	ê	< =
DetailLivraisons
ê	ê	= M
on
ê	ê	N P
projetLivraisons
ê	ê	Q a
.
ê	ê	a b
Id
ê	ê	b d
equals
ê	ê	e k
detailLivraisons
ê	ê	l |
.
ê	ê	| } 
ProjetLivraisonIdê	ê	} 
join
ë	ë	 
taches
ë	ë	  &
in
ë	ë	' )
_context
ë	ë	* 2
.
ë	ë	2 3
Taches
ë	ë	3 9
on
ë	ë	: <
detailLivraisons
ë	ë	= M
.
ë	ë	M N
Id
ë	ë	N P
equals
ë	ë	Q W
taches
ë	ë	X ^
.
ë	ë	^ _
detailLivraisonId
ë	ë	_ p
join
ì	ì	  
project
ì	ì	! (
in
ì	ì	) +
_context
ì	ì	, 4
.
ì	ì	4 5
Projets
ì	ì	5 <
on
ì	ì	= ?
detailLivraisons
ì	ì	@ P
.
ì	ì	P Q
ProjetId
ì	ì	Q Y
equals
ì	ì	Z `
project
ì	ì	a h
.
ì	ì	h i
Id
ì	ì	i k
where
í	í	 "
(
í	í	" #
taches
í	í	$ *
.
í	í	* +
UserId
í	í	+ 1
==
í	í	1 3
idUser
í	í	3 9
||
í	í	: <
project
í	í	= D
.
í	í	D E
Publique
í	í	E M
==
í	í	M O
$str
í	í	O U
)
í	í	V W
&&
í	í	X Z
taches
í	í	[ a
.
í	í	a b
status
í	í	b h
!=
í	í	h j
$str
í	í	j m
select
ï	ï	 !
new
ï	ï	" %
{
ð	ð	 

ProjetName
ò	ò	 )
=
ò	ò	* +
projetLivraisons
ò	ò	, <
.
ò	ò	< =

ProjetName
ò	ò	= G
+
ò	ò	H I
$str
ò	ò	J O
+
ò	ò	P Q
projetLivraisons
ò	ò	R b
.
ò	ò	b c
Delivery
ò	ò	c k
,
ò	ò	k l
Id
ó	ó	 !
=
ó	ó	" #
projetLivraisons
ó	ó	$ 4
.
ó	ó	4 5
Id
ó	ó	5 7
,
ó	ó	7 8
}
õ	õ	 
)
õ	õ	 
.
õ	õ	 
ToList
õ	õ	 $
(
õ	õ	$ %
)
õ	õ	% &
;
õ	õ	& '
return
ö	ö	 
Ok
ö	ö	 
(
ö	ö	 
resulat
ö	ö	 
)
ö	ö	 
;
ö	ö	 
}
ù	ù	 	
[
ý	ý	 	
HttpGet
ý	ý		 
(
ý	ý	 
$str
ý	ý	 F
)
ý	ý	F G
]
ý	ý	G H
public
þ	þ	 
IActionResult
þ	þ	 5
'GetProjetLivraisonByManager2weeksBefore
þ	þ	 D
(
þ	þ	D E
string
þ	þ	E K
	idManager
þ	þ	L U
)
þ	þ	U V
{
ÿ	ÿ	 	
var


 
date


 
=


 
DateTime


 
.


  
Now


  #
.


# $
AddDays


$ +
(


+ ,
-


, -
$num


- /
)


/ 0
;


0 1
var


 
resulat


 
=


 
(


 
from


 
projetLivraisons


  0
in


1 3
_context


4 <
.


< =
ProjetLivraisons


= M
join


 
detailLivraisons


  0
in


1 3
_context


4 <
.


< =
DetailLivraisons


= M
on


N P
projetLivraisons


Q a
.


a b
Id


b d
equals


e k
detailLivraisons


l |
.


| } 
ProjetLivraisonId

} 
join


 
project


  '
in


( *
_context


+ 3
.


3 4
Projets


4 ;
on


< >
detailLivraisons


? O
.


O P
ProjetId


P X
equals


Y _
project


` g
.


g h
Id


h j
join


 
ProjetEquipes


  -
in


. 0
_context


1 9
.


9 :
ProjetEquipes


: G
on


H J
project


K R
.


R S
Id


S U
equals


V \
ProjetEquipes


] j
.


j k
ProjetId


k s
join


 
equipe


  &
in


' )
_context


* 2
.


2 3
Equips


3 9
on


: <
ProjetEquipes


= J
.


J K
EquipeId


K S
equals


T Z
equipe


[ a
.


a b
Id


b d
join


 

userEquipe


  *
in


+ -
_context


. 6
.


6 7

EquipeUser


7 A
on


B D
ProjetEquipes


E R
.


R S
EquipeId


S [
equals


\ b

userEquipe


c m
.


m n
EquipeId


n v
where


  
(


! "

userEquipe


" ,
.


, -
UserId


- 3
==


4 6
	idManager


7 @
||


A C
equipe


D J
.


J K
	ManagerId


K T
==


U W
	idManager


X a
)


a b
&&


c e
(


f g
projetLivraisons


g w
.


w x
DeliveryDate

x 
>=

 
date

 
.

 
Date

 
||

  
projetLivraisons

 ¥
.

¥ ¦
DeliveryDate

¦ ²
==

³ µ
null

¶ º
)

º »
group


  
new


! $
{


% &
projetLivraisons


' 7
}


8 9
by


: <
new


= @
{


A B
projetLivraisons


C S
.


S T

ProjetName


T ^
,


^ _
projetLivraisons


` p
.


p q
Id


q s
,


s t
projetLivraisons

u 
.

 
Delivery

 
}

 
into

 
grp

 
select


 !
new


" %
{


 

ProjetName


 )
=


* +
grp


, /
.


/ 0
Key


0 3
.


3 4

ProjetName


4 >
+


? @
$str


A F
+


G H
grp


I L
.


L M
Key


M P
.


P Q
Delivery


Q Y
,


Y Z
Id


 !
=


" #
grp


$ '
.


' (
Key


( +
.


+ ,
Id


, .
,


. /
}


 
)


 
.


 
Distinct


 &
(


& '
)


' (
.


( )
ToList


) /
(


/ 0
)


0 1
;


1 2
return


 
Ok


 
(


 
resulat


 
)


 
;


 
}


 	
[


 	
HttpGet


	 
(


 
$str


 :
)


: ;
]


; <
public


 
IActionResult


 )
GetProjetLivraisonByManager


 8
(


8 9
string


9 ?
	idManager


@ I
)


I J
{


 	
var


 
resulat


 
=


 
(


 
from


 
projetLivraisons


  0
in


1 3
_context


4 <
.


< =
ProjetLivraisons


= M
join


 
detailLivraisons


  0
in


1 3
_context


4 <
.


< =
DetailLivraisons


= M
on


N P
projetLivraisons


Q a
.


a b
Id


b d
equals


e k
detailLivraisons


l |
.


| } 
ProjetLivraisonId

} 
join


 
project


  '
in


( *
_context


+ 3
.


3 4
Projets


4 ;
on


< >
detailLivraisons


? O
.


O P
ProjetId


P X
equals


Y _
project


` g
.


g h
Id


h j
join
¡
¡
 
ProjetEquipes
¡
¡
  -
in
¡
¡
. 0
_context
¡
¡
1 9
.
¡
¡
9 :
ProjetEquipes
¡
¡
: G
on
¡
¡
H J
project
¡
¡
K R
.
¡
¡
R S
Id
¡
¡
S U
equals
¡
¡
V \
ProjetEquipes
¡
¡
] j
.
¡
¡
j k
ProjetId
¡
¡
k s
join
¢
¢
 
equipe
¢
¢
  &
in
¢
¢
' )
_context
¢
¢
* 2
.
¢
¢
2 3
Equips
¢
¢
3 9
on
¢
¢
: <
ProjetEquipes
¢
¢
= J
.
¢
¢
J K
EquipeId
¢
¢
K S
equals
¢
¢
T Z
equipe
¢
¢
[ a
.
¢
¢
a b
Id
¢
¢
b d
join
¤
¤
 

userEquipe
¤
¤
  *
in
¤
¤
+ -
_context
¤
¤
. 6
.
¤
¤
6 7

EquipeUser
¤
¤
7 A
on
¤
¤
B D
ProjetEquipes
¤
¤
E R
.
¤
¤
R S
EquipeId
¤
¤
S [
equals
¤
¤
\ b

userEquipe
¤
¤
c m
.
¤
¤
m n
EquipeId
¤
¤
n v
where
¥
¥
  
(
¥
¥
! "

userEquipe
¥
¥
" ,
.
¥
¥
, -
UserId
¥
¥
- 3
==
¥
¥
4 6
	idManager
¥
¥
7 @
||
¥
¥
A C
equipe
¥
¥
D J
.
¥
¥
J K
	ManagerId
¥
¥
K T
==
¥
¥
U W
	idManager
¥
¥
X a
)
¥
¥
a b
group
§
§
  
new
§
§
! $
{
§
§
% &
projetLivraisons
§
§
' 7
}
§
§
8 9
by
§
§
: <
new
§
§
= @
{
§
§
A B
projetLivraisons
§
§
C S
.
§
§
S T

ProjetName
§
§
T ^
,
§
§
^ _
projetLivraisons
§
§
` p
.
§
§
p q
Id
§
§
q s
,
§
§
t u
projetLivraisons§
§
u 
.§
§
 
Delivery§
§
 
}§
§
 
into§
§
 
grp§
§
 
select
¨
¨
 !
new
¨
¨
" %
{
©
©
 

ProjetName
«
«
 )
=
«
«
* +
grp
«
«
, /
.
«
«
/ 0
Key
«
«
0 3
.
«
«
3 4

ProjetName
«
«
4 >
+
«
«
? @
$str
«
«
A F
+
«
«
G H
grp
«
«
I L
.
«
«
L M
Key
«
«
M P
.
«
«
P Q
Delivery
«
«
Q Y
,
«
«
Y Z
Id
¬
¬
 !
=
¬
¬
" #
grp
¬
¬
$ '
.
¬
¬
' (
Key
¬
¬
( +
.
¬
¬
+ ,
Id
¬
¬
, .
,
¬
¬
. /
}
®
®
 
)
®
®
 
.
®
®
 
Distinct
®
®
 &
(
®
®
& '
)
®
®
' (
.
®
®
( )
ToList
®
®
) /
(
®
®
/ 0
)
®
®
0 1
;
®
®
1 2
return
¯
¯
 
Ok
¯
¯
 
(
¯
¯
 
resulat
¯
¯
 
)
¯
¯
 
;
¯
¯
 
}
²
²
 	
[
´
´
 	
HttpGet
´
´
	 
(
´
´
 
$str
´
´
 B
)
´
´
B C
]
´
´
C D
public
µ
µ
 
IActionResult
µ
µ
 <
.GetProjetLivraisonForAdminForTaches2weekslater
µ
µ
 K
(
µ
µ
K L
)
µ
µ
L M
{
¶
¶
 	
var
¸
¸
 
date
¸
¸
 
=
¸
¸
 
DateTime
¸
¸
 
.
¸
¸
  
Now
¸
¸
  #
.
¸
¸
# $
AddDays
¸
¸
$ +
(
¸
¸
+ ,
-
¸
¸
, -
$num
¸
¸
- /
)
¸
¸
/ 0
;
¸
¸
0 1
var
¹
¹
 
resulat
¹
¹
 
=
¹
¹
 
(
¹
¹
 
from
¹
¹
 
projetLivraisons
¹
¹
  0
in
¹
¹
1 3
_context
¹
¹
4 <
.
¹
¹
< =
ProjetLivraisons
¹
¹
= M
where
»
»
  
(
»
»
! "
projetLivraisons
»
»
" 2
.
»
»
2 3
DeliveryDate
»
»
3 ?
>=
»
»
? A
date
»
»
B F
.
»
»
F G
Date
»
»
G K
||
»
»
L N
projetLivraisons
»
»
O _
.
»
»
_ `
DeliveryDate
»
»
` l
==
»
»
m o
null
»
»
p t
)
»
»
t u
select
½
½
 !
new
½
½
" %
{
¾
¾
 

ProjetName
À
À
 )
=
À
À
* +
projetLivraisons
À
À
, <
.
À
À
< =

ProjetName
À
À
= G
+
À
À
H I
$str
À
À
J O
+
À
À
O P
projetLivraisons
À
À
P `
.
À
À
` a
Delivery
À
À
a i
,
À
À
i j
Id
Á
Á
 !
=
Á
Á
" #
projetLivraisons
Á
Á
$ 4
.
Á
Á
4 5
Id
Á
Á
5 7
,
Á
Á
7 8
}
Ã
Ã
 
)
Ã
Ã
 
.
Ã
Ã
 
ToList
Ã
Ã
 $
(
Ã
Ã
$ %
)
Ã
Ã
% &
;
Ã
Ã
& '
return
Ä
Ä
 
Ok
Ä
Ä
 
(
Ä
Ä
 
resulat
Ä
Ä
 
)
Ä
Ä
 
;
Ä
Ä
 
}
Ç
Ç
 	
[
É
É
 	
HttpGet
É
É
	 
(
É
É
 
$str
É
É
 6
)
É
É
6 7
]
É
É
7 8
public
Ê
Ê
 
IActionResult
Ê
Ê
 1
#GetProjetLivraisonForAdminForTaches
Ê
Ê
 @
(
Ê
Ê
@ A
)
Ê
Ê
A B
{
Ë
Ë
 	
var
Í
Í
 
resulat
Í
Í
 
=
Í
Í
 
(
Í
Í
 
from
Í
Í
 
projetLivraisons
Í
Í
  0
in
Í
Í
1 3
_context
Í
Í
4 <
.
Í
Í
< =
ProjetLivraisons
Í
Í
= M
select
Ñ
Ñ
 !
new
Ñ
Ñ
" %
{
Ò
Ò
 

ProjetName
Ô
Ô
 )
=
Ô
Ô
* +
projetLivraisons
Ô
Ô
, <
.
Ô
Ô
< =

ProjetName
Ô
Ô
= G
+
Ô
Ô
H I
$str
Ô
Ô
J O
+
Ô
Ô
P Q
projetLivraisons
Ô
Ô
R b
.
Ô
Ô
b c
Delivery
Ô
Ô
c k
,
Ô
Ô
k l
Id
Õ
Õ
 !
=
Õ
Õ
" #
projetLivraisons
Õ
Õ
$ 4
.
Õ
Õ
4 5
Id
Õ
Õ
5 7
,
Õ
Õ
7 8
}
×
×
 
)
×
×
 
.
×
×
 
ToList
×
×
 $
(
×
×
$ %
)
×
×
% &
;
×
×
& '
return
Ø
Ø
 
Ok
Ø
Ø
 
(
Ø
Ø
 
resulat
Ø
Ø
 
)
Ø
Ø
 
;
Ø
Ø
 
}
Û
Û
 	
[
ß
ß
 	
HttpGet
ß
ß
	 
(
ß
ß
 
$str
ß
ß
 
)
ß
ß
 
]
ß
ß
 
public
à
à
 
async
à
à
 
Task
à
à
 
<
à
à
 
IActionResult
à
à
 '
>
à
à
' ( 
GetProjetLivraison
à
à
) ;
(
à
à
; <
string
à
à
< B
id
à
à
C E
)
à
à
E F
{
á
á
 	
var
â
â
 
projetLivraison
â
â
 
=
â
â
  !
await
â
â
" '
_context
â
â
( 0
.
â
â
0 1
ProjetLivraisons
â
â
1 A
.
â
â
A B
Where
â
â
B G
(
â
â
G H
x
â
â
H I
=>
â
â
J L
x
â
â
M N
.
â
â
N O
Id
â
â
O Q
==
â
â
R T
id
â
â
U W
)
â
â
W X
.
â
â
X Y
Select
â
â
Y _
(
â
â
_ `
x
â
â
` a
=>
â
â
b d
new
â
â
e h
{
ã
ã
 
x
ä
ä
 
.
ä
ä
 
Id
ä
ä
 
,
ä
ä
 
x
å
å
 
.
å
å
 
DeliveryDate
å
å
 
,
å
å
 
x
æ
æ
 
.
æ
æ
 
scope
æ
æ
 
,
æ
æ
 
x
ç
ç
 
.
ç
ç
 
Createur
ç
ç
 
,
ç
ç
 
x
è
è
 
.
è
è
 
ClientId
è
è
 
,
è
è
 
x
é
é
 
.
é
é
 

ProjetName
é
é
 
,
é
é
 
x
ê
ê
 
.
ê
ê
 
DateCreation
ê
ê
 
,
ê
ê
 
x
ë
ë
 
.
ë
ë
 
Delivery
ë
ë
 
,
ë
ë
 
x
ì
ì
 
.
ì
ì
 
Description
ì
ì
 
,
ì
ì
 
x
í
í
 
.
í
í
 
EBRC
í
í
 
,
í
í
 
x
î
î
 
.
î
î
  
InitialPlannedDate
î
î
 $
,
î
î
$ %
x
ï
ï
 
.
ï
ï
 
Nature
ï
ï
 
,
ï
ï
 
x
ð
ð
 
.
ð
ð
 
Planned
ð
ð
 
,
ð
ð
 
x
ñ
ñ
 
.
ñ
ñ
 
PlannedDate
ñ
ñ
 
,
ñ
ñ
 
x
ò
ò
 
.
ò
ò
 
projetEdpId
ò
ò
 
,
ò
ò
 
x
ó
ó
 
.
ó
ó
 
	StartDate
ó
ó
 
,
ó
ó
 
x
ô
ô
 
.
ô
ô
 
StatusId
ô
ô
 
,
ô
ô
 
x
õ
õ
 
.
õ
õ
 
Type
õ
õ
 
,
õ
õ
 
x
ö
ö
 
.
ö
ö
 
Commentaires
ö
ö
 
,
ö
ö
 
x
÷
÷
 
.
÷
÷
 
TTMId
÷
÷
 
,
÷
÷
 
x
ø
ø
 
.
ø
ø
 
lockoutEnabled
ø
ø
  
,
ø
ø
  !
x
ù
ù
 
.
ù
ù
 
Modificateur
ù
ù
 
,
ù
ù
 
x
ú
ú
 
.
ú
ú
 &
DateDerniereModification
ú
ú
 *
,
ú
ú
* +
projetEdpNom
û
û
 
=
û
û
 
x
û
û
  
.
û
û
  !
	projetEdp
û
û
! *
.
û
û
* +
Nom
û
û
+ .
,
û
û
. /$
clientProjetCompatable
ü
ü
 &
=
ü
ü
' (
x
ü
ü
) *
.
ü
ü
* +
	projetEdp
ü
ü
+ 4
.
ü
ü
4 5
clientId
ü
ü
5 =
,
ü
ü
= >
Listdelivarydates
ý
ý
 !
=
ý
ý
" #
x
ý
ý
$ %
.
ý
ý
% &
DetailLivraisons
ý
ý
& 6
.
ý
ý
6 7
Select
ý
ý
7 =
(
ý
ý
= >
x
ý
ý
> ?
=>
ý
ý
? A
x
ý
ý
A B
.
ý
ý
B C
DeliveryDate
ý
ý
C O
)
ý
ý
O P
.
ý
ý
P Q
ToList
ý
ý
Q W
(
ý
ý
W X
)
ý
ý
X Y
,
ý
ý
Y Z
ListdeStartdates
þ
þ
  
=
þ
þ
! "
x
þ
þ
# $
.
þ
þ
$ %
DetailLivraisons
þ
þ
% 5
.
þ
þ
5 6
Select
þ
þ
6 <
(
þ
þ
< =
x
þ
þ
= >
=>
þ
þ
> @
x
þ
þ
@ A
.
þ
þ
A B
	StartDate
þ
þ
B K
)
þ
þ
K L
.
þ
þ
L M
ToList
þ
þ
M S
(
þ
þ
S T
)
þ
þ
T U
,
þ
þ
U V

listStatus
ÿ
ÿ
 
=
ÿ
ÿ
 
x
ÿ
ÿ
 
.
ÿ
ÿ
 
DetailLivraisons
ÿ
ÿ
 /
.
ÿ
ÿ
/ 0
Select
ÿ
ÿ
0 6
(
ÿ
ÿ
6 7
x
ÿ
ÿ
7 8
=>
ÿ
ÿ
9 ;
x
ÿ
ÿ
< =
.
ÿ
ÿ
= >
StatusId
ÿ
ÿ
> F
)
ÿ
ÿ
F G
.
ÿ
ÿ
G H
ToList
ÿ
ÿ
H N
(
ÿ
ÿ
N O
)
ÿ
ÿ
O P
}
 
)
 
.
 !
FirstOrDefaultAsync
 "
(
" #
)
# $
;
% &
if
 
(
 
projetLivraison
 
==
  "
null
# '
)
' (
{
 
return
 
NotFound
 
(
  
)
  !
;
! "
}
 
return
 
Ok
 
(
 
projetLivraison
 %
)
% &
;
& '
}
 	
[
 	
HttpPost
	 
(
 
$str
  
)
  !
]
! "
public
 
async
 
Task
 
<
 
ActionResult
 &
>
& ''
GetProjetLivraisonDetails
( A
(
A B
string
B H
id
I K
)
L M
{
 	
try
 
{
 
var
 
result
 
=
 
await
 "
_context
# +
.
+ ,
DetailLivraisons
, <
.
< =
Include
= D
(
D E
x
E F
=>
G I
x
J K
.
K L
Projet
L R
)
R S
.
S T
Where
 

(

 
x
 
=>
 
x
 
.
 
ProjetLivraisonId
 #
==
$ &
id
' )
)
) *
.
 
Select
 
(
 
x
 
=>
 
new
 
{
 
x
	 

.

 
ProjetLivraisonId
 
,
 
x
	 

.

 
Createur
 
,
 
x
	 

.

 
DateCreation
 
,
 
x
	 

.

 
Id
 
,
 
x
	 

.

 
Description
 
,
 
x
	 

.

 
Delivery
 
,
 
x
	 

.

 
Planned
 
,
 
x
	 

.

 
EBRC
 
,
 
x
	 

.

 
Type
 
,
 
x
	 

.

 
	StartDate
 
,
 
x
	 

.

 
PlannedDate
 
,
 
x
  	 

.
  
  
InitialPlannedDate
   
,
   
x
¡¡	 

.
¡¡
 
DeliveryDate
¡¡ 
,
¡¡ 
x
¢¢	 

.
¢¢
 
TTMId
¢¢ 
,
¢¢ 
x
££	 

.
££
 
StatusId
££ 
,
££ 
x
¤¤	 

.
¤¤
 
ProjetId
¤¤ 
,
¤¤ 

projetName
¥¥	 
=
¥¥ 
x
¥¥ 
.
¥¥ 
Projet
¥¥ 
.
¥¥ 
Nommenclature
¥¥ ,
,
¥¥, -

countTache
¦¦	 
=
¦¦ 
x
¦¦ 
.
¦¦ 
taches
¦¦ 
.
¦¦ 
Count
¦¦ $
(
¦¦$ %
)
¦¦% &
}
§§ 
)
§§ 
.
§§ 
ToListAsync
§§ 
(
§§ 
)
§§ 
;
§§ 
return
©© 
Ok
©© 
(
©© 
result
©©  
)
©©  !
;
©©! "
}
ªª 
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
««  
{
¬¬ 
return
®® 
Ok
®® 
(
®® 
e
®® 
)
®® 
;
®® 
}
¯¯ 
}
²² 	
[
´´ 	
HttpGet
´´	 
(
´´ 
$str
´´ @
)
´´@ A
]
´´A B
public
µµ 
async
µµ 
Task
µµ 
<
µµ 
ActionResult
µµ &
>
µµ& '-
GetProjetLivraisonDetailsByUser
µµ( G
(
µµG H
string
µµH N
id
µµO Q
,
µµQ R
string
µµS Y
idUser
µµZ `
)
µµ` a
{
¶¶ 	
var
¹¹ 
result
¹¹ 
=
¹¹ 
await
¹¹ 
(
¹¹  
from
¹¹  $
dl
¹¹% '
in
¹¹( *
_context
¹¹+ 3
.
¹¹3 4
DetailLivraisons
¹¹4 D
join
ºº  $
p
ºº% &
in
ºº' )
_context
ºº* 2
.
ºº2 3
Projets
ºº3 :
on
ºº; =
dl
ºº> @
.
ºº@ A
ProjetId
ººA I
equals
ººJ P
p
ººQ R
.
ººR S
Id
ººS U
join
»»  $
pe
»»% '
in
»»( *
_context
»»+ 3
.
»»3 4
ProjetEquipes
»»4 A
on
»»B D
p
»»E F
.
»»F G
Id
»»G I
equals
»»J P
pe
»»Q S
.
»»S T
ProjetId
»»T \
join
¼¼  $
eu
¼¼% '
in
¼¼( *
_context
¼¼+ 3
.
¼¼3 4

EquipeUser
¼¼4 >
on
¼¼? A
pe
¼¼B D
.
¼¼D E
EquipeId
¼¼E M
equals
¼¼N T
eu
¼¼U W
.
¼¼W X
EquipeId
¼¼X `
where
½½  %
dl
½½& (
.
½½( )
ProjetLivraisonId
½½) :
==
½½; =
id
½½> @
&&
½½A C
eu
½½D F
.
½½F G
UserId
½½G M
==
½½N P
idUser
½½Q W
select
¾¾  &
new
¾¾' *
{
ÁÁ  !
dl
ÁÁ! #
.
ÁÁ# $
Id
ÁÁ$ &
,
ÁÁ& '
dl
ÂÂ$ &
.
ÂÂ& '
ProjetLivraisonId
ÂÂ' 8
,
ÂÂ8 9
dl
ÃÃ$ &
.
ÃÃ& '
Createur
ÃÃ' /
,
ÃÃ/ 0
dl
ÄÄ$ &
.
ÄÄ& '
DateCreation
ÄÄ' 3
,
ÄÄ3 4
dl
ÅÅ$ &
.
ÅÅ& '
Description
ÅÅ' 2
,
ÅÅ2 3
dl
ÆÆ$ &
.
ÆÆ& '
Delivery
ÆÆ' /
,
ÆÆ/ 0
dl
ÇÇ$ &
.
ÇÇ& '
Planned
ÇÇ' .
,
ÇÇ. /
dl
ÈÈ$ &
.
ÈÈ& '
EBRC
ÈÈ' +
,
ÈÈ+ ,
dl
ÉÉ$ &
.
ÉÉ& '
Type
ÉÉ' +
,
ÉÉ+ ,
dl
ÊÊ$ &
.
ÊÊ& '
	StartDate
ÊÊ' 0
,
ÊÊ0 1
dl
ËË$ &
.
ËË& '
PlannedDate
ËË' 2
,
ËË2 3
dl
ÌÌ$ &
.
ÌÌ& ' 
InitialPlannedDate
ÌÌ' 9
,
ÌÌ9 :
dl
ÍÍ$ &
.
ÍÍ& '
DeliveryDate
ÍÍ' 3
,
ÍÍ3 4
dl
ÎÎ$ &
.
ÎÎ& '
TTMId
ÎÎ' ,
,
ÎÎ, -
dl
ÏÏ$ &
.
ÏÏ& '
StatusId
ÏÏ' /
,
ÏÏ/ 0
dl
ÐÐ$ &
.
ÐÐ& '
ProjetId
ÐÐ' /
,
ÐÐ/ 0

projetName
ÑÑ$ .
=
ÑÑ/ 0
p
ÑÑ1 2
.
ÑÑ2 3
Nommenclature
ÑÑ3 @
,
ÑÑ@ A

countTache
ÒÒ$ .
=
ÒÒ/ 0
dl
ÒÒ1 3
.
ÒÒ3 4
taches
ÒÒ4 :
.
ÒÒ: ;
Count
ÒÒ; @
(
ÒÒ@ A
)
ÒÒA B
}
ÓÓ  !
)
ÓÓ! "
.
ÓÓ" #
Distinct
ÓÓ# +
(
ÓÓ+ ,
)
ÓÓ, -
.
ÓÓ- .
ToListAsync
ÓÓ. 9
(
ÓÓ9 :
)
ÓÓ: ;
;
ÓÓ; <
return
ÔÔ 
Ok
ÔÔ 
(
ÔÔ 
result
ÔÔ 
)
ÔÔ 
;
ÔÔ 
}
ÕÕ 	
[
×× 	
HttpGet
××	 
(
×× 
$str
×× D
)
××D E
]
××E F
public
ØØ 
async
ØØ 
Task
ØØ 
<
ØØ 
ActionResult
ØØ &
>
ØØ& '/
!GetProjetLivraisonDetailsByEquipe
ØØ( I
(
ØØI J
string
ØØJ P
id
ØØQ S
,
ØØS T
string
ØØU [
idEquipe
ØØ\ d
)
ØØd e
{
ÙÙ 	
var
ÜÜ 
result
ÜÜ 
=
ÜÜ 
await
ÜÜ 
(
ÜÜ 
from
ÜÜ  $
dl
ÜÜ% '
in
ÜÜ( *
_context
ÜÜ+ 3
.
ÜÜ3 4
DetailLivraisons
ÜÜ4 D
join
ÝÝ 
p
ÝÝ 
in
ÝÝ  "
_context
ÝÝ# +
.
ÝÝ+ ,
Projets
ÝÝ, 3
on
ÝÝ4 6
dl
ÝÝ7 9
.
ÝÝ9 :
ProjetId
ÝÝ: B
equals
ÝÝC I
p
ÝÝJ K
.
ÝÝK L
Id
ÝÝL N
join
ÞÞ 
pe
ÞÞ  
in
ÞÞ! #
_context
ÞÞ$ ,
.
ÞÞ, -
ProjetEquipes
ÞÞ- :
on
ÞÞ; =
p
ÞÞ> ?
.
ÞÞ? @
Id
ÞÞ@ B
equals
ÞÞC I
pe
ÞÞJ L
.
ÞÞL M
ProjetId
ÞÞM U
where
ßß 
dl
ßß !
.
ßß! "
ProjetLivraisonId
ßß" 3
==
ßß3 5
id
ßß5 7
&&
ßß8 :
pe
ßß; =
.
ßß= >
EquipeId
ßß> F
==
ßßF H
idEquipe
ßßH P
select
àà 
new
àà  #
{
ää 
dl
åå 
.
åå  
Id
åå  "
,
åå" #
dl
ææ 
.
ææ  
ProjetLivraisonId
ææ  1
,
ææ1 2
dl
çç 
.
çç  
Createur
çç  (
,
çç( )
dl
èè 
.
èè  
DateCreation
èè  ,
,
èè, -
dl
éé 
.
éé  
Description
éé  +
,
éé+ ,
dl
êê 
.
êê  
Delivery
êê  (
,
êê( )
dl
ëë 
.
ëë 
Planned
ëë 
,
ëë 
dl
ìì 
.
ìì 
EBRC
ìì 
,
ìì 
dl
íí 
.
íí 
Type
íí 
,
íí 
dl
îî 
.
îî 
	StartDate
îî  
,
îî  !
dl
ïï 
.
ïï 
PlannedDate
ïï "
,
ïï" #
dl
ðð 
.
ðð  
InitialPlannedDate
ðð )
,
ðð) *
dl
ññ 
.
ññ 
DeliveryDate
ññ #
,
ññ# $
dl
òò 
.
òò 
TTMId
òò 
,
òò 
dl
óó 
.
óó 
StatusId
óó 
,
óó  
dl
ôô 
.
ôô 
ProjetId
ôô 
,
ôô  

projetName
õõ 
=
õõ 
p
õõ 
.
õõ 
Nommenclature
õõ '
,
õõ' (

countTache
öö 
=
öö  
dl
öö! #
.
öö# $
taches
öö$ *
.
öö* +
Count
öö+ 0
(
öö0 1
)
öö1 2
}
÷÷ 
)
÷÷ 
.
÷÷ 
ToListAsync
÷÷ 
(
÷÷ 
)
÷÷  
;
÷÷  !
return
ùù 
Ok
ùù 
(
ùù 
result
ùù 
)
ùù 
;
ùù 
}
úú 	
[
ýý 	
HttpGet
ýý	 
(
ýý 
$str
ýý F
)
ýýF G
]
ýýG H
public
þþ 
async
þþ 
Task
þþ 
<
þþ 
ActionResult
þþ &
>
þþ& '0
"GetProjetLivraisonDetailsByManager
þþ( J
(
þþJ K
string
þþK Q
id
þþR T
,
þþT U
string
þþV \
	idManager
þþ] f
)
þþf g
{
ÿÿ 	
var
²² 
result
²² 
=
²² 
await
²² 
(
²² 
from
²² #
dl
²²$ &
in
²²' )
_context
²²* 2
.
²²2 3
DetailLivraisons
²²3 C
where
¶¶ 
dl
¶¶  "
.
¶¶" #
ProjetLivraisonId
¶¶# 4
==
¶¶5 7
id
¶¶8 :
select
¸¸ %
new
¸¸& )
{
¼¼ 
	isManager
½½ (
=
½½( )
dl
½½) +
.
½½+ ,
Projet
½½, 2
.
½½2 3
projetsEquipe
½½3 @
.
½½@ A
Select
½½A G
(
½½G H
x
½½H I
=>
½½I K
x
½½K L
.
½½L M
Equipe
½½M S
)
½½S T
.
½½T U
Where
½½U Z
(
½½Z [
x
½½[ \
=>
½½\ ^
x
½½^ _
.
½½_ `
	ManagerId
½½` i
==
½½i k
	idManager
½½l u
)
½½u v
.
½½v w
Count
½½w |
(
½½| }
)
½½} ~
,
½½~ 
isUser
¾¾ %
=
¾¾% &
dl
¾¾' )
.
¾¾) *
Projet
¾¾* 0
.
¾¾0 1
projetsEquipe
¾¾1 >
.
¾¾> ?
Select
¾¾? E
(
¾¾E F
x
¾¾F G
=>
¾¾H J
x
¾¾K L
.
¾¾L M
Equipe
¾¾M S
)
¾¾S T
.
¾¾T U

SelectMany
¾¾U _
(
¾¾_ `
x
¾¾` a
=>
¾¾a c
x
¾¾c d
.
¾¾d e
equipeUsers
¾¾e p
)
¾¾p q
.
¾¾q r
Where
¾¾r w
(
¾¾w x
x
¾¾x y
=>
¾¾y {
x
¾¾{ |
.
¾¾| }
UserId¾¾} 
==¾¾ 
	idManager¾¾ 
)¾¾ 
.¾¾ 
Count¾¾ 
(¾¾ 
)¾¾ 
,¾¾ 
dl
¿¿  
.
¿¿  !
Id
¿¿! #
,
¿¿# $
dl
ÀÀ  
.
ÀÀ  !
ProjetLivraisonId
ÀÀ! 2
,
ÀÀ2 3
dl
ÁÁ  
.
ÁÁ  !
Createur
ÁÁ! )
,
ÁÁ) *
dl
ÂÂ  
.
ÂÂ  !
DateCreation
ÂÂ! -
,
ÂÂ- .
dl
ÃÃ  
.
ÃÃ  !
Description
ÃÃ! ,
,
ÃÃ, -
dl
ÄÄ  
.
ÄÄ  !
Delivery
ÄÄ! )
,
ÄÄ) *
dl
ÅÅ  
.
ÅÅ  !
Planned
ÅÅ! (
,
ÅÅ( )
dl
ÆÆ  
.
ÆÆ  !
EBRC
ÆÆ! %
,
ÆÆ% &
dl
ÇÇ  
.
ÇÇ  !
Type
ÇÇ! %
,
ÇÇ% &
dl
ÈÈ  
.
ÈÈ  !
	StartDate
ÈÈ! *
,
ÈÈ* +
dl
ÉÉ  
.
ÉÉ  !
PlannedDate
ÉÉ! ,
,
ÉÉ, -
dl
ÊÊ  
.
ÊÊ  ! 
InitialPlannedDate
ÊÊ! 3
,
ÊÊ3 4
dl
ËË  
.
ËË  !
DeliveryDate
ËË! -
,
ËË- .
dl
ÌÌ  
.
ÌÌ  !
TTMId
ÌÌ! &
,
ÌÌ& '
dl
ÍÍ  
.
ÍÍ  !
StatusId
ÍÍ! )
,
ÍÍ) *
dl
ÎÎ  
.
ÎÎ  !
ProjetId
ÎÎ! )
,
ÎÎ) *

projetName
ÏÏ  
=
ÏÏ  !
dl
ÏÏ" $
.
ÏÏ$ %
Projet
ÏÏ% +
.
ÏÏ+ ,
Nommenclature
ÏÏ, 9
,
ÏÏ9 :

countTache
ÐÐ (
=
ÐÐ) *
dl
ÐÐ+ -
.
ÐÐ- .
taches
ÐÐ. 4
.
ÐÐ4 5
Count
ÐÐ5 :
(
ÐÐ: ;
)
ÐÐ; <
}
ÑÑ 
)
ÑÑ 
.
ÑÑ 
Distinct
ÑÑ %
(
ÑÑ% &
)
ÑÑ& '
.
ÑÑ' (
ToListAsync
ÑÑ( 3
(
ÑÑ3 4
)
ÑÑ4 5
;
ÑÑ5 6
return
ÒÒ 
Ok
ÒÒ 
(
ÒÒ 
result
ÒÒ 
)
ÒÒ 
;
ÒÒ 
}
ÓÓ 	
[
ÕÕ 	
HttpPost
ÕÕ	 
(
ÕÕ 
$str
ÕÕ 
)
ÕÕ 
]
ÕÕ 
public
ÖÖ 
async
ÖÖ 
Task
ÖÖ 
<
ÖÖ 
ActionResult
ÖÖ &
>
ÖÖ& ' 
PostProjectDetails
ÖÖ( :
(
ÖÖ: ;
DetailLivraison
ÖÖ; J
model
ÖÖK P
)
ÖÖP Q
{
×× 	
if
ÙÙ 
(
ÙÙ 
string
ÙÙ 
.
ÙÙ 
IsNullOrEmpty
ÙÙ $
(
ÙÙ$ %
model
ÙÙ% *
.
ÙÙ* +
Id
ÙÙ+ -
)
ÙÙ- .
)
ÙÙ. /
{
ÚÚ 
model
ææ 
.
ææ 
DateCreation
ææ "
=
ææ# $
DateTime
ææ% -
.
ææ- .
Now
ææ. 1
.
ææ1 2
ToString
ææ2 :
(
ææ: ;
)
ææ; <
;
ææ< =
model
èè 
.
èè 
Id
èè 
=
èè 
Guid
èè 
.
èè  
NewGuid
èè  '
(
èè' (
)
èè( )
.
èè) *
ToString
èè* 2
(
èè2 3
)
èè3 4
;
èè4 5
_context
éé 
.
éé 
DetailLivraisons
éé )
.
éé) *
Add
éé* -
(
éé- .
model
éé. 3
)
éé3 4
;
éé4 5
}
êê 
else
ëë 
{
ìì 
_context
íí 
.
íí 
Entry
íí 
(
íí 
model
íí $
)
íí$ %
.
íí% &
State
íí& +
=
íí, -
EntityState
íí. 9
.
íí9 :
Modified
íí: B
;
ííB C
}
îî 
await
ïï 
_context
ïï 
.
ïï 
SaveChangesAsync
ïï +
(
ïï+ ,
)
ïï, -
;
ïï- .
return
ðð 
Ok
ðð 
(
ðð 
model
ðð 
)
ðð 
;
ðð 
}
ññ 	
[
óó 
HttpPost
óó 
(
óó 
$str
óó &
)
óó& '
]
óó' (
public
ôô 
async
ôô 
Task
ôô 
<
ôô 
ActionResult
ôô &
>
ôô& '"
DeleteProjectDetails
ôô( <
(
ôô< =
string
ôô= C
id
ôôD F
)
ôôF G
{
õõ 	
var
öö 
entry
öö 
=
öö 
await
öö 
_context
öö &
.
öö& '
DetailLivraisons
öö' 7
.
öö7 8
	FindAsync
öö8 A
(
ööA B
id
ööB D
)
ööD E
;
ööE F
if
÷÷ 
(
÷÷ 
entry
÷÷ 
!=
÷÷ 
null
÷÷ 
)
÷÷ 
{
øø 
_context
ùù 
.
ùù 
DetailLivraisons
ùù )
.
ùù) *
Remove
ùù* 0
(
ùù0 1
entry
ùù1 6
)
ùù6 7
;
ùù7 8
await
úú 
_context
úú 
.
úú 
SaveChangesAsync
úú /
(
úú/ 0
)
úú0 1
;
úú1 2
}
ûû 
return
üü 
Ok
üü 
(
üü 
)
üü 
;
üü 
}
ýý 	
[
¢¢ 	
HttpPost
¢¢	 
]
¢¢ 
public
££ 
async
££ 
Task
££ 
<
££ 
ActionResult
££ &
<
££& '
ProjetLivraison
££' 6
>
££6 7
>
££7 8!
PostProjetLivraison
££9 L
(
££L M
ProjetLivraison
££M \
model
££] b
)
££b c
{
¤¤ 	
if
²² 
(
²² 
string
²² 
.
²² 
IsNullOrEmpty
²² $
(
²²$ %
model
²²% *
.
²²* +
Id
²²+ -
)
²²- .
)
²². /
{
³³ 
model
´´ 
.
´´ 
DateCreation
´´ "
=
´´# $
DateTime
´´% -
.
´´- .
Now
´´. 1
.
´´1 2
ToString
´´2 :
(
´´: ;
)
´´; <
;
´´< =
_context
¶¶ 
.
¶¶ 
ProjetLivraisons
¶¶ )
.
¶¶) *
Add
¶¶* -
(
¶¶- .
model
¶¶. 3
)
¶¶3 4
;
¶¶4 5
}
·· 
else
¸¸ 
{
¹¹ 
model
»» 
.
»» &
DateDerniereModification
»» .
=
»»/ 0
DateTime
»»1 9
.
»»9 :
Now
»»: =
.
»»= >
ToString
»»> F
(
»»F G
)
»»G H
;
»»H I
_context
¼¼ 
.
¼¼ 
Entry
¼¼ 
(
¼¼ 
model
¼¼ $
)
¼¼$ %
.
¼¼% &
State
¼¼& +
=
¼¼, -
EntityState
¼¼. 9
.
¼¼9 :
Modified
¼¼: B
;
¼¼B C
}
¾¾ 
await
ÀÀ 
_context
ÀÀ 
.
ÀÀ 
SaveChangesAsync
ÀÀ +
(
ÀÀ+ ,
)
ÀÀ, -
;
ÀÀ- .
return
ÁÁ 
CreatedAtAction
ÁÁ "
(
ÁÁ" #
$str
ÁÁ# 7
,
ÁÁ7 8
new
ÁÁ9 <
{
ÁÁ= >
id
ÁÁ? A
=
ÁÁB C
model
ÁÁD I
.
ÁÁI J
Id
ÁÁJ L
}
ÁÁM N
,
ÁÁN O
model
ÁÁP U
)
ÁÁU V
;
ÁÁV W
}
ØØ 	
[
ÛÛ 
HttpPost
ÛÛ 
(
ÛÛ 
$str
ÛÛ 
)
ÛÛ 
]
ÛÛ  
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
ActionResult
ÜÜ &
<
ÜÜ& '
ProjetLivraison
ÜÜ' 6
>
ÜÜ6 7
>
ÜÜ7 8#
DeleteProjetLivraison
ÜÜ9 N
(
ÜÜN O
string
ÜÜO U
id
ÜÜV X
)
ÜÜX Y
{
ÝÝ 	
var
ÞÞ 
projetLivraison
ÞÞ 
=
ÞÞ  !
await
ÞÞ" '
_context
ÞÞ( 0
.
ÞÞ0 1
ProjetLivraisons
ÞÞ1 A
.
ÞÞA B
Include
ÞÞB I
(
ÞÞI J
c
ÞÞJ K
=>
ÞÞK M
c
ÞÞM N
.
ÞÞN O
DetailLivraisons
ÞÞO _
)
ÞÞ_ `
.
ÞÞ` a
Where
ÞÞa f
(
ÞÞf g
c
ÞÞg h
=>
ÞÞh j
c
ÞÞj k
.
ÞÞk l
Id
ÞÞl n
==
ÞÞn p
id
ÞÞp r
)
ÞÞr s
.
ÞÞs t"
FirstOrDefaultAsyncÞÞt 
(ÞÞ 
)ÞÞ 
;ÞÞ 
if
ßß 
(
ßß 
projetLivraison
ßß 
==
ßß  "
null
ßß# '
)
ßß' (
{
àà 
return
áá 
NotFound
áá 
(
áá  
)
áá  !
;
áá! "
}
ââ 
_context
ãã 
.
ãã 
DetailLivraisons
ãã %
.
ãã% &
RemoveRange
ãã& 1
(
ãã1 2
projetLivraison
ãã2 A
.
ããA B
DetailLivraisons
ããB R
)
ããR S
;
ããS T
_context
ää 
.
ää 
ProjetLivraisons
ää %
.
ää% &
Remove
ää& ,
(
ää, -
projetLivraison
ää- <
)
ää< =
;
ää= >
await
åå 
_context
åå 
.
åå 
SaveChangesAsync
åå +
(
åå+ ,
)
åå, -
;
åå- .
return
çç 
projetLivraison
çç "
;
çç" #
}
èè 	
[
éé 	
	NonAction
éé	 
]
éé 
public
êê 
IEnumerable
êê 
<
êê 
DetailLivraison
êê *
>
êê* +
getDtail
êê, 4
(
êê4 5
string
êê5 ;
ProjetLivraisonId
êê< M
)
êêM N
{
ëë 	
return
ìì 
_context
ìì 
.
ìì 
DetailLivraisons
ìì ,
.
ìì, -
Where
ìì- 2
(
ìì2 3
x
ìì3 4
=>
ìì5 7
x
ìì8 9
.
ìì9 :
ProjetLivraisonId
ìì: K
==
ììL N
ProjetLivraisonId
ììO `
)
ìì` a
;
ììa b
}
ïï 	
[
 	
	NonAction
	 
]
 
private
 
bool
 #
ProjetLivraisonExists
 *
(
* +
string
+ 1
id
2 4
)
4 5
{
 	
return
 
_context
 
.
 
ProjetLivraisons
 ,
.
, -
Any
- 0
(
0 1
e
1 2
=>
3 5
e
6 7
.
7 8
Id
8 :
==
; =
id
> @
)
@ A
;
A B
}
 	
[
 	
HttpGet
	 
(
 
$str
 
)
 
]
 
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
IEnumerable
' 2
<
2 3
ProjetLivraison
3 B
>
B C
>
C D
>
D E%
GetFullProjetLivraisons
F ]
(
] ^
)
^ _
{
 	
var
 
result
 
=
 
await
 
_context
 '
.
' (
ProjetLivraisons
( 8
.
8 9
Include
9 @
(
@ A
p
A B
=>
C E
p
F G
.
G H
DetailLivraisons
H X
)
X Y
.
Y Z
ToListAsync
Z e
(
e f
)
f g
;
g h
return
 
result
 
;
 
}
 	
[
 	
HttpGet
	 
(
 
$str
 
)
 
]
 
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' ($
GetFulProjetLivraisons
) ?
(
? @
)
@ A
{
 	
var
 
result
 
=
 
await
 
_context
 '
.
' (
ProjetLivraisons
( 8
.
8 9
Include
9 @
(
@ A
p
A B
=>
C E
p
F G
.
G H
DetailLivraisons
H X
)
X Y
.
 
Select
 
(
 
s
 
=>
 
new
 
{
 
s
 
.
 
Id
 
,
 
Project
 
=
 
s
 
.
 
Description
 )
,
) *
s
 
.
 
Delivery
 
,
 
s
 
.
 
Planned
 
,
 
s
   
.
   
EBRC
   
,
   
s
¡¡ 
.
¡¡ 
Type
¡¡ 
,
¡¡ 
s
¢¢ 
.
¢¢ 
	StartDate
¢¢ 
,
¢¢ 
s
££ 
.
££  
InitialPlannedDate
££ %
,
££% &
s
¤¤ 
.
¤¤ 
PlannedDate
¤¤ 
,
¤¤ 
s
¥¥ 
.
¥¥ 
DeliveryDate
¥¥ 
,
¥¥  
TTM
¦¦ 
=
¦¦ 
s
¦¦ 
.
¦¦ 
TTMId
¦¦ 
,
¦¦ 
Status
§§ 
=
§§ 
s
§§ 
.
§§ 
StatusId
§§ $
,
§§$ %
details
¨¨ 
=
¨¨ 
s
¨¨ 
.
¨¨ 
DetailLivraisons
¨¨ +
.
¨¨+ ,
Select
¨¨, 2
(
¨¨2 3
c
¨¨3 4
=>
¨¨5 7
new
¨¨8 ;
{
¨¨< =
c
©© 
.
©© 
Id
©© 
,
©© 
Project
ªª 
=
ªª 
c
ªª  
.
ªª  !
Description
ªª! ,
,
ªª, -
c
«« 
.
«« 
Delivery
«« 
,
««  
c
¬¬ 
.
¬¬ 
Planned
¬¬ 
,
¬¬ 
c
­­ 
.
­­ 
EBRC
­­ 
,
­­ 
c
®® 
.
®® 
Type
®® 
,
®® 
c
¯¯ 
.
¯¯ 
	StartDate
¯¯  
,
¯¯  !
c
°° 
.
°°  
InitialPlannedDate
°° )
,
°°) *
c
±± 
.
±± 
PlannedDate
±± "
,
±±" #
c
²² 
.
²² 
DeliveryDate
²² #
,
²²# $
TTM
³³ 
=
³³ 
c
³³ 
.
³³ 
TTMId
³³ "
,
³³" #
Status
´´ 
=
´´ 
c
´´ 
.
´´  
StatusId
´´  (
}
´´( )
)
´´) *
.
´´* +
ToList
´´+ 1
(
´´1 2
)
´´2 3
}
µµ 
)
µµ 
.
µµ 
ToListAsync
µµ 
(
µµ 
)
µµ 
;
µµ 
return
¶¶ 
Ok
¶¶ 
(
¶¶ 
result
¶¶ 
)
¶¶ 
;
¶¶ 
}
·· 	
[
»» 	
HttpGet
»»	 
(
»» 
$str
»» 
)
»» 
]
»» 
public
¼¼ 
ActionResult
¼¼ 
<
¼¼ 

IQueryable
¼¼ &
<
¼¼& '
ProjetLivraison
¼¼' 6
>
¼¼6 7
>
¼¼7 8+
GetSousProjetLivraisonforTree
¼¼9 V
(
¼¼V W
)
¼¼W X
{
½½ 	
var
¾¾ !
sousprojetLivraison
¾¾ #
=
¾¾$ %
_context
¾¾& .
.
¾¾. /
ProjetLivraisons
¾¾/ ?
.
¾¾? @
Select
¾¾@ F
(
¾¾F G
s
¾¾G H
=>
¾¾I K
new
¾¾L O
{
¿¿ 
s
ÀÀ 
.
ÀÀ 
Id
ÀÀ 
,
ÀÀ 
s
ÁÁ 
.
ÁÁ 
Description
ÁÁ 
,
ÁÁ 
s
ÂÂ 
.
ÂÂ 
Delivery
ÂÂ 
,
ÂÂ 
s
ÃÃ 
.
ÃÃ 
Planned
ÃÃ 
,
ÃÃ 
s
ÄÄ 
.
ÄÄ 
EBRC
ÄÄ 
,
ÄÄ 
s
ÅÅ 
.
ÅÅ 
Type
ÅÅ 
,
ÅÅ 
s
ÆÆ 
.
ÆÆ 
	StartDate
ÆÆ 
,
ÆÆ 
s
ÇÇ 
.
ÇÇ  
InitialPlannedDate
ÇÇ $
,
ÇÇ$ %
s
ÈÈ 
.
ÈÈ 
PlannedDate
ÈÈ 
,
ÈÈ 
s
ÉÉ 
.
ÉÉ 
DeliveryDate
ÉÉ 
,
ÉÉ 
s
ÊÊ 
.
ÊÊ 
TTMId
ÊÊ 
,
ÊÊ 
s
ËË 
.
ËË 
StatusId
ËË 
}
ÎÎ 
)
ÎÎ 
;
ÎÎ 
return
ÐÐ 
Ok
ÐÐ 
(
ÐÐ !
sousprojetLivraison
ÐÐ )
)
ÐÐ) *
;
ÐÐ* +
}
ÑÑ 	
[
öö 	
HttpPost
öö	 
(
öö 
$str
öö #
)
öö# $
]
öö$ %
public
÷÷ 
async
÷÷ 
Task
÷÷ 
<
÷÷ 
IActionResult
÷÷ '
>
÷÷' (#
ProjetLivraisonStatus
÷÷* ?
(
÷÷? @
SecondSearch
÷÷@ L
search
÷÷M S
)
÷÷S T
{
øø 	
var
ùù 

CountTotal
ùù 
=
ùù 
$num
ùù 
;
ùù 
var
úú 
	CountDone
úú 
=
úú 
$num
úú 
;
úú 
var
ûû 
CountDate1Semaine
ûû !
=
ûû" #
$num
ûû$ %
;
ûû% &
var
üü 
CountDate2Semaine
üü !
=
üü" #
$num
üü$ %
;
üü% &
var
ýý 
CountDate4Semaine
ýý !
=
ýý" #
$num
ýý$ %
;
ýý% &
var
þþ 
CountDate5Semaine
þþ !
=
þþ" #
$num
þþ$ %
;
þþ% &
List
 
<
 
ProjetLivraison
  
>
  !
result
" (
=
) *
new
+ .
List
/ 3
<
3 4
ProjetLivraison
4 C
>
C D
(
D E
)
E F
;
F G
if
 
(
 
search
 
.
 
	idClients
 
==
 !
null
! %
)
% &
{
 
search
 
.
 
	idClients
  
=
! "
new
# &
List
' +
<
+ ,
string
, 2
>
2 3
(
3 4
)
4 5
;
5 6
search
 
.
 
	idClients
  
.
  !
Add
! $
(
$ %
$str
% (
)
( )
;
) *
}
 
result
 
=
 
await
 
_context
 $
.
$ %
ProjetLivraisons
% 5
.
 
Include
 
(
 
e
 
=>
 
e
 
.
  
DetailLivraisons
  0
)
0 1
.
 
Include
 
(
 
e
 
=>
 
e
 
.
  
Client
  &
)
& '
.
 
Where
 
(
 
e
 
=>
 
e
 
.
 
StatusId
 
.
 
Equals
 !
(
! "
$str
" -
)
- .
&&
 
(
 
(
 
(
 
search
 
.
 
	startDate
 "
==
" $
null
$ (
||
( *
e
 
.
 
DeliveryDate
 
>=
  
search
  &
.
& '
	startDate
' 0
)
1 2
&&
 
(
 
search
 
.
 
endDate
 "
==
# %
null
& *
||
+ -
e
. /
.
/ 0
DeliveryDate
0 <
<=
< >
search
> D
.
D E
endDate
E L
)
L M
)
M N
&&
 
(
 
search
 
.
 
	idClients
 #
.
# $
Contains
$ ,
(
, -
$str
- 0
)
0 1
||
2 4
search
5 ;
.
; <
	idClients
< E
.
E F
Contains
F N
(
N O
e
O P
.
P Q
Client
Q W
.
W X
Nom
X [
)
[ \
)
\ ]
&&
 
(
 
(
 
String
 
.
 
IsNullOrEmpty
 )
(
) *
search
* 0
.
0 1
type
1 5
)
5 6
||
6 8
search
9 ?
.
? @
type
@ D
.
D E
Equals
E K
(
K L
$str
L R
)
R S
)
T U
||
U W
(
X Y
e
Y Z
.
Z [
Nature
[ a
.
a b
ToLower
b i
(
i j
)
j k
.
k l
Equals
l r
(
r s
search
s y
.
y z
type
z ~
.
~ 
ToLower 
( 
) 
) 
) 
) 
) 
)
 
.
 
ToListAsync
 
(
 
)
 
;
 

CountTotal
 
=
 
result
 
.
  
Count
  %
(
% &
)
& '
;
' (
	CountDone
 
=
 
result
 
.
 
Where
 $
(
$ %
e
% &
=>
' )
e
* +
.
+ ,
DeliveryDate
, 8
<=
9 ;
(
< =
e
= >
.
> ?
PlannedDate
? J
)
J K
)
K L
.
L M
Count
M R
(
R S
)
S T
;
T U
try
 
{
 
result
 
.
 
ForEach
 
(
 
e
  
=>
! #
{
   
if
¢¢ 
(
¢¢ 
e
¢¢ 
.
¢¢ 
DeliveryDate
¢¢ &
.
¢¢& '
HasValue
¢¢' /
)
¢¢/ 0
{
¤¤ 
if
¥¥ 
(
¥¥ 
(
¥¥ 
e
¥¥ 
.
¥¥ 
DeliveryDate
¥¥ '
-
¥¥' (
e
¥¥( )
.
¥¥) *
PlannedDate
¥¥* 5
)
¥¥5 6
.
¥¥6 7
Value
¥¥7 <
.
¥¥< =
	TotalDays
¥¥= F
>=
¥¥F H
$num
¥¥H I
&&
¥¥J L
(
¥¥M N
e
¥¥N O
.
¥¥O P
DeliveryDate
¥¥P \
-
¥¥] ^
e
¥¥_ `
.
¥¥` a
PlannedDate
¥¥a l
)
¥¥l m
.
¥¥m n
Value
¥¥n s
.
¥¥s t
	TotalDays
¥¥t }
<
¥¥~ 
$num¥¥ 
)¥¥ 
{
¦¦ 
CountDate1Semaine
¨¨ -
++
¨¨- /
;
¨¨/ 0
}
©© 
else
ªª 
if
ªª 
(
ªª  
(
ªª  !
e
ªª! "
.
ªª" #
DeliveryDate
ªª# /
-
ªª0 1
e
ªª2 3
.
ªª3 4
PlannedDate
ªª4 ?
)
ªª? @
.
ªª@ A
Value
ªªA F
.
ªªF G
	TotalDays
ªªG P
>=
ªªQ S
$num
ªªT V
&&
ªªW Y
(
ªªZ [
e
ªª[ \
.
ªª\ ]
DeliveryDate
ªª] i
-
ªªj k
e
ªªl m
.
ªªm n
PlannedDate
ªªn y
)
ªªy z
.
ªªz {
Valueªª{ 
.ªª 
	TotalDaysªª 
<ªª 
$numªª 
)ªª 
{
«« 
CountDate2Semaine
­­ -
++
­­- /
;
­­/ 0
}
®® 
else
¯¯ 
if
¯¯ 
(
¯¯  !
(
¯¯! "
e
¯¯" #
.
¯¯# $
DeliveryDate
¯¯$ 0
-
¯¯1 2
e
¯¯3 4
.
¯¯4 5
PlannedDate
¯¯5 @
)
¯¯@ A
.
¯¯A B
Value
¯¯B G
.
¯¯G H
	TotalDays
¯¯H Q
>=
¯¯R T
$num
¯¯U W
&&
¯¯X Z
(
¯¯[ \
e
¯¯\ ]
.
¯¯] ^
DeliveryDate
¯¯^ j
-
¯¯k l
e
¯¯m n
.
¯¯n o
PlannedDate
¯¯o z
)
¯¯z {
.
¯¯{ |
Value¯¯| 
.¯¯ 
	TotalDays¯¯ 
<¯¯ 
$num¯¯ 
)¯¯ 
{
°° 
CountDate4Semaine
²² -
++
²²- /
;
²²/ 0
}
³³ 
else
´´ 
if
´´ 
(
´´  !
(
´´! "
e
´´" #
.
´´# $
DeliveryDate
´´$ 0
-
´´1 2
e
´´3 4
.
´´4 5
PlannedDate
´´5 @
)
´´@ A
.
´´A B
Value
´´B G
.
´´G H
	TotalDays
´´H Q
>=
´´R T
$num
´´U W
)
´´W X
{
µµ 
CountDate5Semaine
·· -
++
··- /
;
··/ 0
}
¸¸ 
}
ºº 
}
½½ 
)
½½ 
;
½½ 
}
ÀÀ 
catch
ÁÁ 
{
ÁÁ 
}
ÁÁ 
var
ÂÂ 
res
ÂÂ 
=
ÂÂ 
new
ÂÂ 
{
ÂÂ 
	CountDone
ÂÂ %
,
ÂÂ% &

CountTotal
ÂÂ& 0
,
ÂÂ0 1
CountDate1Semaine
ÂÂ1 B
,
ÂÂB C
CountDate2Semaine
ÂÂC T
,
ÂÂT U
CountDate4Semaine
ÂÂU f
,
ÂÂf g
CountDate5Semaine
ÂÂg x
}
ÂÂx y
;
ÂÂy z
return
ÉÉ 
Ok
ÉÉ 
(
ÉÉ 
res
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ËË 	
[
ÓÓ 	
HttpPost
ÓÓ	 
(
ÓÓ 
$str
ÓÓ $
)
ÓÓ$ %
]
ÓÓ% &
public
ÔÔ 
async
ÔÔ 
Task
ÔÔ 
<
ÔÔ 
IActionResult
ÔÔ '
>
ÔÔ' ($
ProjetLivraisonStatus2
ÔÔ) ?
(
ÔÔ? @
SecondSearch
ÔÔ@ L
search
ÔÔM S
)
ÔÔS T
{
ÕÕ 	
var
ÖÖ 

CountTotal
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
var
×× 
	CountDone
×× 
=
×× 
$num
×× 
;
×× 
var
ØØ 
CountDate1Semaine
ØØ !
=
ØØ" #
$num
ØØ$ %
;
ØØ% &
var
ÙÙ 
CountDate2Semaine
ÙÙ !
=
ÙÙ" #
$num
ÙÙ$ %
;
ÙÙ% &
var
ÚÚ 
CountDate4Semaine
ÚÚ !
=
ÚÚ" #
$num
ÚÚ$ %
;
ÚÚ% &
var
ÛÛ 
CountDate5Semaine
ÛÛ !
=
ÛÛ" #
$num
ÛÛ$ %
;
ÛÛ% &
List
ÝÝ 
<
ÝÝ 
ProjetLivraison
ÝÝ  
>
ÝÝ  !
result
ÝÝ" (
=
ÝÝ) *
new
ÝÝ+ .
List
ÝÝ/ 3
<
ÝÝ3 4
ProjetLivraison
ÝÝ4 C
>
ÝÝC D
(
ÝÝD E
)
ÝÝE F
;
ÝÝF G
if
ÞÞ 
(
ÞÞ 
search
ÞÞ 
.
ÞÞ 
	idClients
ÞÞ  
==
ÞÞ! #
null
ÞÞ$ (
)
ÞÞ( )
{
ßß 
search
àà 
.
àà 
	idClients
àà  
=
àà! "
new
àà# &
List
àà' +
<
àà+ ,
string
àà, 2
>
àà2 3
(
àà3 4
)
àà4 5
;
àà5 6
search
áá 
.
áá 
	idClients
áá  
.
áá  !
Add
áá! $
(
áá$ %
$str
áá% (
)
áá( )
;
áá) *
}
ââ 
result
ææ 
=
ææ 
await
ææ 
_context
ææ #
.
ææ# $
ProjetLivraisons
ææ$ 4
.
çç 
Include
çç 
(
çç 
e
çç 
=>
çç 
e
çç 
.
çç 
DetailLivraisons
çç /
)
çç/ 0
.
èè 
Include
èè 
(
èè 
e
èè 
=>
èè 
e
èè 
.
èè 
Client
èè %
)
èè% &
.
éé 
Where
éé 
(
éé 
e
éé 
=>
éé 
e
êê 
.
êê 
StatusId
êê 
.
êê 
Equals
êê  
(
êê  !
$str
êê! ,
)
êê, -
&&
ëë 
(
ìì 
(
íí 
(
íí 
search
íí 
.
íí 
	startDate
íí !
==
íí" $
null
íí% )
||
íí* ,
e
ññ 
.
ññ  
InitialPlannedDate
ññ #
>=
ññ$ &
search
ññ' -
.
ññ- .
	startDate
ññ. 7
)
ññ7 8
&&
óó 
(
óó 
search
óó 
.
óó 
endDate
óó !
==
óó" $
null
óó% )
||
óó* ,
e
óó- .
.
óó. / 
InitialPlannedDate
óó/ A
<=
óóB D
search
óóE K
.
óóK L
endDate
óóL S
)
óóS T
)
óóT U
&&
ôô 
(
ôô 
search
ôô 
.
ôô 
	idClients
ôô "
.
ôô" #
Contains
ôô# +
(
ôô+ ,
$str
ôô, /
)
ôô/ 0
||
ôô1 3
search
ôô4 :
.
ôô: ;
	idClients
ôô; D
.
ôôD E
Contains
ôôE M
(
ôôM N
e
ôôN O
.
ôôO P
Client
ôôP V
.
ôôV W
Nom
ôôW Z
)
ôôZ [
)
ôô[ \
&&
õõ 
(
õõ 
(
õõ 
String
õõ 
.
õõ 
IsNullOrEmpty
õõ '
(
õõ' (
search
õõ( .
.
õõ. /
type
õõ/ 3
)
õõ3 4
||
õõ5 7
search
õõ8 >
.
õõ> ?
type
õõ? C
.
õõC D
Equals
õõD J
(
õõJ K
$str
õõK Q
)
õõQ R
)
õõR S
||
õõT V
(
õõW X
e
õõX Y
.
õõY Z
Nature
õõZ `
.
õõ` a
ToLower
õõa h
(
õõh i
)
õõi j
.
õõj k
Equals
õõk q
(
õõq r
search
õõr x
.
õõx y
type
õõy }
.
õõ} ~
ToLowerõõ~ 
(õõ 
)õõ 
)õõ 
)õõ 
)õõ 
)õõ 
)
öö 
.
öö 
ToListAsync
öö 
(
öö 
)
öö 
;
öö 

CountTotal
÷÷ 
=
÷÷ 
result
÷÷ 
.
÷÷  
Count
÷÷  %
(
÷÷% &
)
÷÷& '
;
÷÷' (
try
úú 
{
ûû 
result
þþ 
.
þþ 
ForEach
þþ 
(
þþ 
e
þþ 
=>
þþ !
{
 
if
 
(
 
e
 
.
 
DeliveryDate
 &
.
& '
HasValue
' /
)
0 1
{
 
double
 

difference
 )
=
* +
(
, -
e
- .
.
. /
DeliveryDate
/ ;
-
< =
e
> ?
.
? @ 
InitialPlannedDate
@ R
)
R S
.
S T
Value
T Y
.
Y Z
	TotalDays
Z c
;
c d
if
 
(
 

difference
 %
<
% &
$num
& '
)
' (
{
 
	CountDone
 %
++
% '
;
' (
}
 
else
 
if
 
(
  

difference
  *
<
* +
$num
+ -
&&
. 0

difference
1 ;
>=
; =
$num
= >
)
> ?
{
 
CountDate1Semaine
 -
++
- /
;
/ 0
}
 
else
 
if
 
(
  !

difference
! +
>=
+ -
$num
- /
&&
0 2

difference
3 =
<
= >
$num
> @
)
@ A
{
 
CountDate2Semaine
 -
++
- /
;
/ 0
}
 
else
 
if
 
(
  !

difference
! +
<
+ ,
$num
, .
&&
/ 1

difference
2 <
>=
< >
$num
> @
)
@ A
{
 
CountDate4Semaine
 -
++
- /
;
/ 0
}
 
else
   
if
   
(
    !

difference
  ! +
>=
  , .
$num
  / 1
)
  1 2
{
¡¡ 
CountDate5Semaine
££ -
++
££- /
;
££/ 0
}
¤¤ 
}
¦¦ 
}
©© 
)
©© 
;
©© 
}
¬¬ 
catch
­­ 
{
­­ 
}
­­ 
var
®® 
res
®® 
=
®® 
new
®® 
{
®® 
	CountDone
®® %
,
®®% &

CountTotal
®®' 1
,
®®1 2
CountDate1Semaine
®®3 D
,
®®D E
CountDate2Semaine
®®F W
,
®®W X
CountDate4Semaine
®®Y j
,
®®j k
CountDate5Semaine
®®l }
}
®®~ 
;®® 
return
µµ 
Ok
µµ 
(
µµ 
res
µµ 
)
µµ 
;
µµ 
}
·· 	
[
¼¼ 	
HttpPost
¼¼	 
(
¼¼ 
$str
¼¼ "
)
¼¼" #
]
¼¼# $
public
½½ 
async
½½ 
Task
½½ 
<
½½ 
IActionResult
½½ '
>
½½' (
LivraisonStat
½½) 6
(
½½6 7
)
½½7 8
{
¾¾ 	
var
¿¿ 

CountTotal
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
var
ÀÀ 
	CountDone
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
var
ÁÁ 
CountDate1Semaine
ÁÁ !
=
ÁÁ" #
$num
ÁÁ$ %
;
ÁÁ% &
var
ÂÂ 
CountDate2Semaine
ÂÂ !
=
ÂÂ" #
$num
ÂÂ$ %
;
ÂÂ% &
var
ÃÃ 
CountDate4Semaine
ÃÃ !
=
ÃÃ" #
$num
ÃÃ$ %
;
ÃÃ% &
var
ÄÄ 
CountDate5Semaine
ÄÄ !
=
ÄÄ" #
$num
ÄÄ$ %
;
ÄÄ% &
var
ÅÅ 
result
ÅÅ 
=
ÅÅ 
new
ÅÅ 
List
ÅÅ !
<
ÅÅ! "
ProjetLivraison
ÅÅ" 1
>
ÅÅ1 2
(
ÅÅ2 3
)
ÅÅ3 4
;
ÅÅ4 5
result
ÇÇ 
=
ÇÇ 
await
ÇÇ 
_context
ÇÇ '
.
ÇÇ' (
ProjetLivraisons
ÇÇ( 8
.
ÇÇ8 9
Include
ÇÇ9 @
(
ÇÇ@ A
e
ÇÇA B
=>
ÇÇC E
e
ÇÇF G
.
ÇÇG H
DetailLivraisons
ÇÇH X
)
ÇÇX Y
.
ÇÇY Z
Where
ÇÇZ _
(
ÇÇ_ `
e
ÇÇ` a
=>
ÇÇb d
e
ÇÇe f
.
ÇÇf g
StatusId
ÇÇg o
.
ÇÇo p
Equals
ÇÇp v
(
ÇÇv w
$strÇÇw 
)ÇÇ 
)ÇÇ 
.ÇÇ 
ToListAsyncÇÇ 
(ÇÇ 
)ÇÇ 
;ÇÇ 

CountTotal
ÊÊ 
=
ÊÊ 
result
ÊÊ 
.
ÊÊ  
Count
ÊÊ  %
(
ÊÊ% &
)
ÊÊ& '
;
ÊÊ' (
	CountDone
ËË 
=
ËË 
result
ËË 
.
ËË 
Where
ËË $
(
ËË$ %
e
ËË% &
=>
ËË' )
e
ËË* +
.
ËË+ ,
DeliveryDate
ËË, 8
<=
ËË9 ;
(
ËË< =
e
ËË= >
.
ËË> ?
PlannedDate
ËË? J
)
ËËJ K
)
ËËK L
.
ËËL M
Count
ËËM R
(
ËËR S
)
ËËS T
;
ËËT U
try
ÌÌ 
{
ÍÍ 
result
ÐÐ 
.
ÐÐ 
ForEach
ÐÐ 
(
ÐÐ 
e
ÐÐ  
=>
ÐÐ! #
{
ÑÑ 
if
ÓÓ 
(
ÓÓ 
e
ÓÓ 
.
ÓÓ 
DeliveryDate
ÓÓ &
.
ÓÓ& '
HasValue
ÓÓ' /
)
ÓÓ/ 0
{
ÕÕ 
if
ÖÖ 
(
ÖÖ 
(
ÖÖ 
e
ÖÖ 
.
ÖÖ 
DeliveryDate
ÖÖ +
-
ÖÖ, -
e
ÖÖ. /
.
ÖÖ/ 0
PlannedDate
ÖÖ0 ;
)
ÖÖ; <
.
ÖÖ< =
Value
ÖÖ= B
.
ÖÖB C
	TotalDays
ÖÖC L
>=
ÖÖM O
$num
ÖÖP Q
&&
ÖÖR T
(
ÖÖU V
e
ÖÖV W
.
ÖÖW X
DeliveryDate
ÖÖX d
-
ÖÖe f
e
ÖÖg h
.
ÖÖh i
PlannedDate
ÖÖi t
)
ÖÖt u
.
ÖÖu v
Value
ÖÖv {
.
ÖÖ{ |
	TotalDaysÖÖ| 
<ÖÖ 
$numÖÖ 
)ÖÖ 
{
×× 
CountDate1Semaine
ÙÙ -
++
ÙÙ- /
;
ÙÙ/ 0
}
ÚÚ 
else
ÛÛ 
if
ÛÛ 
(
ÛÛ  !
(
ÛÛ! "
e
ÛÛ" #
.
ÛÛ# $
DeliveryDate
ÛÛ$ 0
-
ÛÛ1 2
e
ÛÛ3 4
.
ÛÛ4 5
PlannedDate
ÛÛ5 @
)
ÛÛ@ A
.
ÛÛA B
Value
ÛÛB G
.
ÛÛG H
	TotalDays
ÛÛH Q
>=
ÛÛR T
$num
ÛÛU W
&&
ÛÛX Z
(
ÛÛ[ \
e
ÛÛ\ ]
.
ÛÛ] ^
DeliveryDate
ÛÛ^ j
-
ÛÛk l
e
ÛÛm n
.
ÛÛn o
PlannedDate
ÛÛo z
)
ÛÛz {
.
ÛÛ{ |
ValueÛÛ| 
.ÛÛ 
	TotalDaysÛÛ 
<ÛÛ 
$numÛÛ 
)ÛÛ 
{
ÜÜ 
CountDate2Semaine
ÞÞ -
++
ÞÞ- /
;
ÞÞ/ 0
}
ßß 
else
àà 
if
àà 
(
àà  !
(
àà! "
e
àà" #
.
àà# $
DeliveryDate
àà$ 0
-
àà1 2
e
àà3 4
.
àà4 5
PlannedDate
àà5 @
)
àà@ A
.
ààA B
Value
ààB G
.
ààG H
	TotalDays
ààH Q
>=
ààR T
$num
ààU W
&&
ààX Z
(
àà[ \
e
àà\ ]
.
àà] ^
DeliveryDate
àà^ j
-
ààk l
e
ààm n
.
ààn o
PlannedDate
àào z
)
ààz {
.
àà{ |
Valueàà| 
.àà 
	TotalDaysàà 
<àà 
$numàà 
)àà 
{
áá 
CountDate4Semaine
ãã -
++
ãã- /
;
ãã/ 0
}
ää 
else
åå 
if
åå 
(
åå  !
(
åå! "
e
åå" #
.
åå# $
DeliveryDate
åå$ 0
-
åå1 2
e
åå3 4
.
åå4 5
PlannedDate
åå5 @
)
åå@ A
.
ååA B
Value
ååB G
.
ååG H
	TotalDays
ååH Q
>=
ååR T
$num
ååU W
)
ååW X
{
ææ 
CountDate5Semaine
èè -
++
èè- /
;
èè/ 0
}
éé 
}
ëë 
}
îî 
)
îî 
;
îî 
}
ññ 
catch
òò 
{
òò 
}
òò 
var
óó 
res
óó 
=
óó 
new
óó 
{
óó 
	CountDone
óó %
,
óó% &

CountTotal
óó' 1
,
óó1 2
CountDate1Semaine
óó3 D
,
óóD E
CountDate2Semaine
óóF W
,
óóW X
CountDate4Semaine
óóY j
,
óój k
CountDate5Semaine
óól }
}
óó~ 
;óó 
return
úú 
Ok
úú 
(
úú 
res
úú 
)
úú 
;
úú 
}
üü 	
[
þþ 	
HttpPost
þþ	 
(
þþ 
$str
þþ "
)
þþ" #
]
þþ# $
public
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
<
ÿÿ 
IActionResult
ÿÿ '
>
ÿÿ' (
GetClientNames
ÿÿ) 7
(
ÿÿ7 8
)
ÿÿ8 9
{
 	
List
 
<
 
string
 
>
 
names
 
=
 
new
  #
List
$ (
<
( )
string
) /
>
/ 0
(
0 1
)
1 2
;
2 3
var
 
result
 
=
 
await
 
_context
 '
.
' (
Clients
( /
.
/ 0
ToListAsync
0 ;
(
; <
)
< =
;
= >
foreach
 
(
 
var
 
a
 
in
 
result
 $
)
$ %
{
 
names
 
.
 
Add
 
(
 
a
 
.
 
Nom
 
)
  
;
  !
}
 
string
 
[
 
]
 
noms
 
=
 
names
 !
.
! "
ToArray
" )
(
) *
)
* +
;
+ ,
var
 
res
 
=
 
noms
 
;
 
return
 
Ok
 
(
 
res
 
)
 
;
 
}
 	
}
¡¡ 
}¢¢ ìÏ
RC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\ProjetsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class 
ProjetsController "
:# $
ControllerBase% 3
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
private 
readonly 
IConfiguration '
_config( /
;/ 0
private 
SqlConnection 
con !
;! "
private 
readonly 
AppSettings $
_appSettings% 1
;1 2
public   
ProjetsController    
(    !
IConfiguration  ! /
config  0 6
,  6 7
PilotageDBContext  8 I
context  J Q
,  Q R
IOptions  S [
<  [ \
AppSettings  \ g
>  g h
appSettings  i t
)  t u
{!! 	
_context"" 
="" 
context"" 
;"" 
_appSettings## 
=## 
appSettings## &
?##& '
.##' (
Value##( -
;##- .
_config%% 
=%% 
config%% 
;%% 
var&& 
x&& 
=&& 
_config&& 
[&& 
$str&& 9
]&&9 :
;&&: ;
con'' 
='' 
new'' 
SqlConnection'' #
(''# $
_config''$ +
[''+ ,
$str'', I
]''I J
)''J K
;''K L
con(( 
.(( 
Open(( 
((( 
)(( 
;(( 
})) 	
[33 	
	NonAction33	 
]33 
public55 
	DataTable55 
ExecuteRequest55 '
(55' (
string55( .
requete55/ 6
)556 7
{66 	

SqlCommand88 
cmd88 
;88 
SqlDataAdapter99 
sda99 
;99 
	DataTable:: 
dt:: 
;:: 
dt?? 
=?? 
new?? 
	DataTable?? 
(?? 
$str?? $
)??$ %
;??% &
if@@ 
(@@ 
requete@@ 
!=@@ 
string@@ !
.@@! "
Empty@@" '
)@@' (
{AA 
cmdCC 
=CC 
newCC 

SqlCommandCC $
(CC$ %
requeteCC% ,
,CC, -
conCC. 1
)CC1 2
;CC2 3
cmdDD 
.DD 
CommandTimeoutDD "
=DD# $
$numDD% &
;DD& '
sdaEE 
=EE 
newEE 
SqlDataAdapterEE (
(EE( )
cmdEE) ,
)EE, -
;EE- .
sdaGG 
.GG 
FillGG 
(GG 
dtGG 
)GG 
;GG 
}JJ 
returnMM 
dtMM 
;MM 
}NN 	
[PP 	
HttpPostPP	 
(PP 
$strPP +
)PP+ ,
]PP, -
publicQQ 
asyncQQ 
TaskQQ 
<QQ 
ActionResultQQ &
<QQ& '
UserQQ' +
>QQ+ ,
>QQ, -#
GetprojetStatClientTypeQQ. E
(QQE F
SearchQQF L
searshQQM S
)QQS T
{RR 	
varSS 
resultatAllSS 
=SS 
(SS 
fromTT  
detailTT! '
inTT( *
_contextTT+ 3
.TT3 4
DetailImputationsTT4 E
joinVV  

imputationVV" ,
inVV- /
_contextVV0 8
.VV8 9
ImputationsVV9 D
onVVE G
detailVVH N
.VVN O
ImputationIdVVO [
equalsVV\ b

imputationVVc m
.VVm n
IdVVn p
joinXX  
tacheXX! &
inXX' )
_contextXX* 2
.XX2 3
TachesXX3 9
onXX: <
detailXX= C
.XXC D
TacheIdXXD K
equalsXXL R
tacheXXS X
.XXX Y
IdXXY [
joinYY  
detailLYY! (
inYY) +
_contextYY, 4
.YY4 5
DetailLivraisonsYY5 E
onYYF H
tacheYYI N
.YYN O
detailLivraisonIdYYO `
equalsYYa g
detailLYYh o
.YYo p
IdYYp r
joinZZ  
projetZZ! '
inZZ( *
_contextZZ+ 3
.ZZ3 4
ProjetsZZ4 ;
onZZ< >
detailLZZ? F
.ZZF G
ProjetIdZZG O
equalsZZP V
projetZZW ]
.ZZ] ^
IdZZ^ `
join[[  
	livraison[[! *
in[[+ -
_context[[. 6
.[[6 7
ProjetLivraisons[[7 G
on[[H J
detailL[[K R
.[[R S
ProjetLivraisonId[[S d
equals[[e k
	livraison[[l u
.[[u v
Id[[v x
join\\  
client\\! '
in\\( *
_context\\+ 3
.\\3 4
Clients\\4 ;
on\\< >
	livraison\\? H
.\\H I
ClientId\\I Q
equals\\R X
client\\Y _
.\\_ `
Id\\` b
where]] !
(__ 
searsh__ 
.__ 
	idClients__ %
.__% &
Count__& +
(__+ ,
)__, -
==__. 0
$num__1 2
||__3 5
searsh__6 <
.__< =
	idClients__= F
.__F G
Contains__G O
(__O P
client__P V
.__V W
Id__W Y
)__Y Z
)__Z [
&&__\ ^
(aa 
searshaa 
.aa 
	startDateaa %
==aa& (
nullaa) -
||aa. 0

imputationaa1 ;
.aa; <
	DateDebutaa< E
>=aaF H
searshaaI O
.aaO P
	startDateaaP Y
)aaY Z
&&aa[ ]
(bb 
searshbb 
.bb 
endDatebb #
==bb$ &
nullbb' +
||bb, .

imputationbb/ 9
.bb9 :
DateFinbb: A
<=bbB D
searshbbE K
.bbK L
endDatebbL S
)bbS T
selectcc "
newcc# &
{dd 
detailee  &
,ee& '

projetNameff  *
=ff+ ,
projetff- 3
.ff3 4
Nommenclatureff4 A
,ffA B
projetIdgg  (
=gg) *
projetgg+ 1
.gg1 2
Idgg2 4
,gg4 5

projetTypehh  *
=hh+ ,
projethh- 3
.hh3 4
Typehh4 8
,hh8 9

clientNamejj  *
=jj+ ,
clientjj- 3
.jj3 4
Nomjj4 7
,jj7 8
clientIdkk  (
=kk) *
clientkk+ 1
.kk1 2
Idkk2 4
,kk4 5
}ll 
)nn  
.nn  !
ToListnn! '
(nn' (
)nn( )
;nn) *
varoo 
chargeConsomeTotaleoo #
=oo$ %
resultatAlloo& 1
.oo1 2
Selectoo2 8
(oo8 9
xoo9 :
=>oo; =
xoo> ?
.oo? @
detailoo@ F
)ooF G
.ooG H
SumooH K
(ooK L
yooL M
=>ooN P
GetTimeInHoursooQ _
(oo_ `
yoo` a
)ooa b
)oob c
;ooc d
varqq 
statqq 
=qq 
(qq 
fromqq 
rqq 
inqq  "
resultatAllqq# .
grouprr 
rrr 
byrr 
rrr 
.rr 

projetTyperr $
intorr% )
grr* +
selectss 
newss 
{tt 
guu 
.uu 
Keyuu 
,uu 
chargeParTypevv 
=vv  
gvv! "
.vv" #
Selectvv# )
(vv) *
xvv* +
=>vv, .
xvv/ 0
.vv0 1
detailvv1 7
)vv7 8
.vv8 9
Sumvv9 <
(vv< =
yvv= >
=>vv? A
GetTimeInHoursvvB P
(vvP Q
yvvQ R
)vvR S
)vvS T
,vvT U
nbTypesww 
=ww 
gww 
.ww 
GroupByww $
(ww$ %
xww% &
=>ww& (
xww( )
.ww) *
projetIdww* 2
)ww2 3
.ww3 4
Countww4 9
(ww9 :
)ww: ;
}yy 
)yy 
.yy 
ToListyy 
(yy 
)yy 
;yy 
var{{  
resultatbyFilterType{{ $
={{% &
resultatAll{{' 2
.{{2 3
Where{{3 8
({{8 9
x{{9 :
=>{{; =
searsh{{> D
.{{D E
types{{E J
.{{J K
Count{{K P
({{P Q
){{Q R
=={{S U
$num{{V W
||{{X Z
searsh{{[ a
.{{a b
types{{b g
.{{g h
Contains{{h p
({{p q
x{{q r
.{{r s

projetType{{s }
){{} ~
){{~ 
.	{{ 
ToList
{{ 
(
{{ 
)
{{ 
;
{{ 
var|| 
groupByProjet|| 
=|| 
(||  !
from||! %
r||& '
in||( * 
resultatbyFilterType||+ ?
group}}! &
r}}' (
by}}) +
r}}, -
.}}- .

projetType}}. 8
into}}9 =
g}}> ?
select~~ 
new~~  #
{ 
g
 
.
 
Key
 "
,
" #
chargeParType
 *
=
+ ,
g
- .
.
. /
Select
/ 5
(
5 6
x
6 7
=>
8 :
x
; <
.
< =
detail
= C
)
C D
.
D E
Sum
E H
(
H I
y
I J
=>
K M
GetTimeInHours
N \
(
\ ]
y
] ^
)
^ _
)
_ `
,
` a
projets
 $
=
% &
(
' (
from
( ,
i
- .
in
/ 1
g
2 3
group
( -
i
. /
by
0 2
(
3 4
i
4 5
.
5 6
projetId
6 >
,
> ?
i
@ A
.
A B

projetName
B L
)
L M
into
N R
g2
S U
select
( .
new
/ 2
{
( )
g2
, .
.
. /
Key
/ 2
.
2 3

projetName
3 =
,
= >
chargeParProjet
, ;
=
< =
g2
> @
.
@ A
Select
A G
(
G H
x
H I
=>
J L
x
M N
.
N O
detail
O U
)
U V
.
V W
Sum
W Z
(
Z [
y
[ \
=>
] _
GetTimeInHours
` n
(
n o
y
o p
)
p q
)
q r
,
r s
Clients
, 3
=
4 5
(
' (
from
( ,
i
- .
in
/ 1
g2
2 4
group
( -
i
. /
by
0 2
(
3 4
i
4 5
.
5 6
clientId
6 >
,
> ?
i
@ A
.
A B

clientName
B L
)
L M
into
N R
g3
S U
select
( .
new
/ 2
{
( )
g3
, .
.
. /
Key
/ 2
.
2 3

clientName
3 =
,
= >
chargeParClient
, ;
=
< =
g3
> @
.
@ A
Select
A G
(
G H
x
H I
=>
J L
x
M N
.
N O
detail
O U
)
U V
.
V W
Sum
W Z
(
Z [
y
[ \
=>
] _
GetTimeInHours
` n
(
n o
y
o p
)
p q
)
q r
,
r s
}
( )
)
( )
}
( )
)
( )
}
 
)
 
.
 
ToList
 "
(
" #
)
# $
;
$ %
var
 
groupbyClient
 
=
 
(
  !
from
! %
r
& '
in
( *"
resultatbyFilterType
+ ?
group
! &
r
' (
by
) +
(
, -
r
- .
.
. /
clientId
/ 7
,
7 8
r
9 :
.
: ;

clientName
; E
)
E F
into
G K
g
L M
select
 
new
  #
{
   
g
¡¡ 
.
¡¡ 
Key
¡¡ "
.
¡¡" #

clientName
¡¡# -
,
¡¡- .
chargeParClient
¢¢ ,
=
¢¢- .
g
¢¢/ 0
.
¢¢0 1
Select
¢¢1 7
(
¢¢7 8
x
¢¢8 9
=>
¢¢: <
x
¢¢= >
.
¢¢> ?
detail
¢¢? E
)
¢¢E F
.
¢¢F G
Sum
¢¢G J
(
¢¢J K
y
¢¢K L
=>
¢¢M O
GetTimeInHours
¢¢P ^
(
¢¢^ _
y
¢¢_ `
)
¢¢` a
)
¢¢a b
,
¢¢b c
types
¤¤ "
=
¤¤# $
(
¥¥' (
from
¥¥( ,
i
¥¥- .
in
¥¥/ 1
g
¥¥2 3
group
¦¦( -
i
¦¦. /
by
¦¦0 2
i
¦¦3 4
.
¦¦4 5

projetType
¦¦5 ?
into
¦¦@ D
g2
¦¦E G
select
¨¨( .
new
¨¨/ 2
{
©©( )
g2
««, .
.
««. /
Key
««/ 2
,
««2 3
chargeParTypes
¬¬, :
=
¬¬; <
g2
¬¬= ?
.
¬¬? @
Select
¬¬@ F
(
¬¬F G
x
¬¬G H
=>
¬¬I K
x
¬¬L M
.
¬¬M N
detail
¬¬N T
)
¬¬T U
.
¬¬U V
Sum
¬¬V Y
(
¬¬Y Z
y
¬¬Z [
=>
¬¬\ ^
GetTimeInHours
¬¬_ m
(
¬¬m n
y
¬¬n o
)
¬¬o p
)
¬¬p q
,
¬¬q r
projets
®®, 3
=
®®4 5
(
¯¯' (
from
¯¯( ,
i
¯¯- .
in
¯¯/ 1
g2
¯¯2 4
group
°°( -
i
°°. /
by
°°0 2
(
°°3 4
i
°°4 5
.
°°5 6
projetId
°°6 >
,
°°> ?
i
°°@ A
.
°°A B

projetName
°°B L
)
°°L M
into
°°N R
g3
°°S U
select
²²( .
new
²²/ 2
{
³³( )
g3
µµ, .
.
µµ. /
Key
µµ/ 2
.
µµ2 3

projetName
µµ3 =
,
µµ= >
chargeParProjet
¶¶, ;
=
¶¶< =
g3
¶¶> @
.
¶¶@ A
Select
¶¶A G
(
¶¶G H
x
¶¶H I
=>
¶¶J L
x
¶¶M N
.
¶¶N O
detail
¶¶O U
)
¶¶U V
.
¶¶V W
Sum
¶¶W Z
(
¶¶Z [
y
¶¶[ \
=>
¶¶] _
GetTimeInHours
¶¶` n
(
¶¶n o
y
¶¶o p
)
¶¶p q
)
¶¶q r
,
¶¶r s
g3
··, .
.
··. /
Key
··/ 2
,
··2 3
}
»»( )
)
¼¼( )
}
ÀÀ( )
)
ÁÁ( )
,
ÁÁ) *
}
ÄÄ 
)
ÄÄ 
.
ÄÄ 
ToList
ÄÄ "
(
ÄÄ" #
)
ÄÄ# $
;
ÄÄ$ %
return
ÇÇ 
Ok
ÇÇ 
(
ÇÇ 
new
ÇÇ 
{
ÇÇ !
chargeConsomeTotale
ÇÇ /
,
ÇÇ/ 0
groupByProjet
ÇÇ1 >
,
ÇÇ> ?
groupbyClient
ÇÇ@ M
,
ÇÇM N
stat
ÇÇO S
}
ÇÇT U
)
ÇÇU V
;
ÇÇV W
}
ÊÊ 	
[
ËË 	
	NonAction
ËË	 
]
ËË 
public
ÍÍ 
double
ÍÍ 
GetTimeInHours
ÍÍ $
(
ÍÍ$ %
DetailImputation
ÍÍ% 5
detail
ÍÍ6 <
)
ÍÍ< =
{
ÎÎ 	
TimeSpan
ÏÏ 
ConvertToTimeSpan
ÏÏ &
(
ÏÏ& '
string
ÏÏ' -
time
ÏÏ. 2
)
ÏÏ2 3
{
ÐÐ 
if
ÑÑ 
(
ÑÑ 
string
ÑÑ 
.
ÑÑ  
IsNullOrWhiteSpace
ÑÑ -
(
ÑÑ- .
time
ÑÑ. 2
)
ÑÑ2 3
)
ÑÑ3 4
return
ÒÒ 
new
ÒÒ 
TimeSpan
ÒÒ '
(
ÒÒ' (
$num
ÒÒ( )
,
ÒÒ) *
$num
ÒÒ+ ,
,
ÒÒ, -
$num
ÒÒ. /
)
ÒÒ/ 0
;
ÒÒ0 1
var
ÓÓ 
timecomponents
ÓÓ "
=
ÓÓ# $
time
ÓÓ% )
.
ÓÓ) *
Split
ÓÓ* /
(
ÓÓ/ 0
$char
ÓÓ0 3
,
ÓÓ3 4 
StringSplitOptions
ÓÓ5 G
.
ÓÓG H 
RemoveEmptyEntries
ÓÓH Z
)
ÓÓZ [
;
ÓÓ[ \
int
ÔÔ 
.
ÔÔ 
TryParse
ÔÔ 
(
ÔÔ 
timecomponents
ÔÔ +
[
ÔÔ+ ,
$num
ÔÔ, -
]
ÔÔ- .
,
ÔÔ. /
out
ÔÔ0 3
int
ÔÔ4 7
hours
ÔÔ8 =
)
ÔÔ= >
;
ÔÔ> ?
int
ÕÕ 
.
ÕÕ 
TryParse
ÕÕ 
(
ÕÕ 
timecomponents
ÕÕ +
[
ÕÕ+ ,
$num
ÕÕ, -
]
ÕÕ- .
,
ÕÕ. /
out
ÕÕ0 3
int
ÕÕ4 7
minutes
ÕÕ8 ?
)
ÕÕ? @
;
ÕÕ@ A
return
×× 
new
×× 
TimeSpan
×× #
(
××# $
hours
××$ )
,
××) *
minutes
××+ 2
,
××2 3
$num
××4 5
)
××5 6
/
××7 8
$num
××9 :
;
××: ;
}
ØØ 
if
ÙÙ 
(
ÙÙ 
detail
ÙÙ 
==
ÙÙ 
null
ÙÙ 
)
ÙÙ 
detail
ÙÙ  &
=
ÙÙ' (
new
ÙÙ) ,
DetailImputation
ÙÙ- =
(
ÙÙ= >
)
ÙÙ> ?
;
ÙÙ? @
return
ÛÛ 
ConvertToTimeSpan
ÛÛ $
(
ÛÛ$ %
detail
ÛÛ% +
.
ÛÛ+ ,
Monday
ÛÛ, 2
)
ÛÛ2 3
.
ÛÛ3 4
Add
ÛÛ4 7
(
ÛÛ7 8
ConvertToTimeSpan
ÛÛ8 I
(
ÛÛI J
detail
ÛÛJ P
.
ÛÛP Q
Tuesday
ÛÛQ X
)
ÛÛX Y
)
ÛÛY Z
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
ConvertToTimeSpan
ÜÜ ,
(
ÜÜ, -
detail
ÜÜ- 3
.
ÜÜ3 4
	Wednesday
ÜÜ4 =
)
ÜÜ= >
)
ÜÜ> ?
.
ÜÜ? @
Add
ÜÜ@ C
(
ÜÜC D
ConvertToTimeSpan
ÜÜD U
(
ÜÜU V
detail
ÜÜV \
.
ÜÜ\ ]
Thursday
ÜÜ] e
)
ÜÜe f
)
ÜÜf g
.
ÝÝ 
Add
ÝÝ 
(
ÝÝ 
ConvertToTimeSpan
ÝÝ ,
(
ÝÝ, -
detail
ÝÝ- 3
.
ÝÝ3 4
Friday
ÝÝ4 :
)
ÝÝ: ;
)
ÝÝ; <
.
ÞÞ 

TotalHours
ÞÞ !
;
ÞÞ! "
}
àà 	
[
åå 	
HttpGet
åå	 
]
åå 
public
ææ 
async
ææ 
Task
ææ 
<
ææ 
ActionResult
ææ &
<
ææ& '
IEnumerable
ææ' 2
<
ææ2 3
Projet
ææ3 9
>
ææ9 :
>
ææ: ;
>
ææ; <$
GetnommenclaturProjets
ææ= S
(
ææS T
)
ææT U
{
çç 	
var
ëë 
result
ëë 
=
ëë 
(
ëë 
from
ëë 
projet
ëë %
in
ëë& (
_context
ëë) 1
.
ëë1 2
Projets
ëë2 9
where
ìì 
projet
ìì  &
.
ìì& '
lockoutEnabled
ìì' 5
==
ìì6 8
true
ìì9 =
select
íí  
new
íí! $
{
îî 
Description
ôô )
=
ôô* +
projet
ôô, 2
.
ôô2 3
Description
ôô3 >
,
ôô> ?
Publique
õõ &
=
õõ' (
projet
õõ) /
.
õõ/ 0
Publique
õõ0 8
,
õõ8 9
DateCreation
öö *
=
öö+ ,
projet
öö- 3
.
öö3 4
DateCreation
öö4 @
,
öö@ A
Createur
÷÷ &
=
÷÷' (
projet
÷÷) /
.
÷÷/ 0
Createur
÷÷0 8
,
÷÷8 9&
DateDerniereModification
øø 6
=
øø7 8
projet
øø9 ?
.
øø? @&
DateDerniereModification
øø@ X
,
øøX Y
PhaseProjetId
ùù +
=
ùù, -
projet
ùù. 4
.
ùù4 5
PhaseProjetId
ùù5 B
,
ùùB C
Id
ûû  
=
ûû! "
projet
ûû# )
.
ûû) *
Id
ûû* ,
,
ûû, -
lockoutEnabled
üü ,
=
üü- .
projet
üü/ 5
.
üü5 6
lockoutEnabled
üü6 D
,
üüD E
Nommenclature
ýý +
=
ýý, -
projet
ýý. 4
.
ýý4 5
Nommenclature
ýý5 B
,
ýýB C
	DateDebut
þþ '
=
þþ( )
projet
þþ* 0
.
þþ0 1
	DateDebut
þþ1 :
,
þþ: ;
DateFin
ÿÿ %
=
ÿÿ& '
projet
ÿÿ( .
.
ÿÿ. /
DateFin
ÿÿ/ 6
,
ÿÿ6 7
projet
 $
.
$ %
Type
% )
,
) *
phaseProjet
 )
=
* +
projet
, 2
.
2 3
PhaseProjetId
3 @
,
@ A
ClientCount
 )
=
* +
projet
, 2
.
2 3
ClientProjets
3 @
.
@ A
Count
A F
(
F G
)
G H
,
H I
EquipeCount
 )
=
* +
projet
, 2
.
2 3
projetsEquipe
3 @
.
@ A
Count
A F
(
F G
)
G H
,
H I#
DetailLivraisonsCount
 3
=
4 5
projet
6 <
.
< =
DetailLivraisons
= M
.
M N
Count
N S
(
S T
)
T U
,
U V
}
 
)
 
.
 
ToList
 #
(
# $
)
$ %
;
% &
return
 
Ok
 
(
 
result
 
)
 
;
 
}
 	
[
 	
HttpGet
	 
(
 
$str
 (
)
( )
]
) *
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
IEnumerable
' 2
<
2 3
Projet
3 9
>
9 :
>
: ;
>
; <
GetByManager
= I
(
I J
string
J P
	idManager
Q Z
)
Z [
{
 	
var
 
result
 
=
 
(
 
from
 
projet
 %
in
& (
_context
) 1
.
1 2
Projets
2 9
where
 
projet
  &
.
& '
lockoutEnabled
' 5
==
6 8
true
9 =
select
  
new
! $
{
 
Description
 )
=
* +
projet
, 2
.
2 3
Description
3 >
,
> ?
Publique
 &
=
' (
projet
) /
.
/ 0
Publique
0 8
,
8 9
DateCreation
   *
=
  + ,
projet
  - 3
.
  3 4
DateCreation
  4 @
,
  @ A
Createur
¡¡ &
=
¡¡' (
projet
¡¡) /
.
¡¡/ 0
Createur
¡¡0 8
,
¡¡8 9&
DateDerniereModification
¢¢ 6
=
¢¢7 8
projet
¢¢9 ?
.
¢¢? @&
DateDerniereModification
¢¢@ X
,
¢¢X Y
PhaseProjetId
££ +
=
££, -
projet
££. 4
.
££4 5
PhaseProjetId
££5 B
,
££B C
Id
¥¥  
=
¥¥! "
projet
¥¥# )
.
¥¥) *
Id
¥¥* ,
,
¥¥, -
lockoutEnabled
¦¦ ,
=
¦¦- .
projet
¦¦/ 5
.
¦¦5 6
lockoutEnabled
¦¦6 D
,
¦¦D E
Nommenclature
§§ +
=
§§, -
projet
§§. 4
.
§§4 5
Nommenclature
§§5 B
,
§§B C
	DateDebut
¨¨ '
=
¨¨( )
projet
¨¨* 0
.
¨¨0 1
	DateDebut
¨¨1 :
,
¨¨: ;
DateFin
©© %
=
©©& '
projet
©©( .
.
©©. /
DateFin
©©/ 6
,
©©6 7#
DetailLivraisonsCount
«« 3
=
««4 5
projet
««6 <
.
««< =
DetailLivraisons
««= M
.
««M N
Count
««N S
(
««S T
)
««T U
,
««U V
phaseProjet
¬¬ )
=
¬¬* +
projet
¬¬, 2
.
¬¬2 3
PhaseProjetId
¬¬3 @
,
¬¬@ A
ClientCount
­­ )
=
­­* +
projet
­­, 2
.
­­2 3
ClientProjets
­­3 @
.
­­@ A
Count
­­A F
(
­­F G
)
­­G H
,
­­H I
EquipeCount
®® )
=
®®* +
projet
®®, 2
.
®®2 3
projetsEquipe
®®3 @
.
®®@ A
Count
®®A F
(
®®F G
)
®®G H
,
®®H I
	isManager
³³ '
=
³³( )
projet
³³* 0
.
³³0 1
projetsEquipe
³³1 >
.
³³> ?
Select
³³? E
(
³³E F
x
³³F G
=>
³³G I
x
³³I J
.
³³J K
Equipe
³³K Q
)
³³Q R
.
³³R S
Where
³³S X
(
³³X Y
x
³³Y Z
=>
³³Z \
x
³³\ ]
.
³³] ^
	ManagerId
³³^ g
==
³³g i
	idManager
³³j s
)
³³s t
.
³³t u
Distinct
³³u }
(
³³} ~
)
³³~ 
.³³ 
Count³³ 
(³³ 
)³³ 
}
´´ 
)
µµ 
.
µµ 
Distinct
µµ #
(
µµ# $
)
µµ$ %
;
µµ% &
return
·· 
Ok
·· 
(
·· 
result
·· 
)
·· 
;
·· 
}
¹¹ 	
[
ËË 	
HttpGet
ËË	 
(
ËË 
$str
ËË )
)
ËË) *
]
ËË* +
public
ÌÌ 
IActionResult
ÌÌ $
GetProjectForReporting
ÌÌ 3
(
ÌÌ3 4
)
ÌÌ4 5
{
ÍÍ 	
var
ÎÎ 
projets
ÎÎ 
=
ÎÎ 
(
ÎÎ 
from
ÎÎ 
projects
ÎÎ  (
in
ÎÎ) +
_context
ÎÎ, 4
.
ÎÎ4 5
Projets
ÎÎ5 <
join
ÏÏ 
detailImputations
ÏÏ  1
in
ÏÏ2 4
_context
ÏÏ5 =
.
ÏÏ= >
DetailImputations
ÏÏ> O
on
ÏÏP R
projects
ÏÏS [
.
ÏÏ[ \
Id
ÏÏ\ ^
equals
ÏÏ_ e
detailImputations
ÏÏf w
.
ÏÏw x
IdProjetÏÏx 
join
ÐÐ 

Imputation
ÐÐ  *
in
ÐÐ+ -
_context
ÐÐ. 6
.
ÐÐ6 7
Imputations
ÐÐ7 B
on
ÐÐC E
detailImputations
ÐÐF W
.
ÐÐW X
ImputationId
ÐÐX d
equals
ÐÐe k

Imputation
ÐÐl v
.
ÐÐv w
Id
ÐÐw y
where
ÑÑ  

Imputation
ÑÑ! +
.
ÑÑ+ ,
StatusImputation
ÑÑ, <
==
ÑÑ< >
$num
ÑÑ> ?
&&
ÑÑ@ B
projects
ÑÑC K
.
ÑÑK L
lockoutEnabled
ÑÑL Z
==
ÑÑZ \
true
ÑÑ\ `
group
ÒÒ  
new
ÒÒ! $
{
ÒÒ% &
projects
ÒÒ' /
}
ÒÒ0 1
by
ÒÒ2 4
new
ÒÒ5 8
{
ÒÒ9 :
projects
ÒÒ; C
.
ÒÒC D
Id
ÒÒD F
,
ÒÒF G
projects
ÒÒH P
.
ÒÒP Q
Nommenclature
ÒÒQ ^
}
ÒÒ_ `
into
ÒÒa e
grp
ÒÒf i
select
ÓÓ !
new
ÓÓ" %
{
ÔÔ 
Id
ÕÕ  
=
ÕÕ! "
grp
ÕÕ# &
.
ÕÕ& '
Key
ÕÕ' *
.
ÕÕ* +
Id
ÕÕ+ -
,
ÕÕ- .
Nommenclature
ÖÖ +
=
ÖÖ, -
grp
ÖÖ. 1
.
ÖÖ1 2
Key
ÖÖ2 5
.
ÖÖ5 6
Nommenclature
ÖÖ6 C
,
ÖÖC D
}
×× 
)
×× 
.
×× 
ToList
×× $
(
××$ %
)
××% &
;
××& '
return
ÙÙ 
Ok
ÙÙ 
(
ÙÙ 
projets
ÙÙ 
)
ÙÙ 
;
ÙÙ 
}
ÚÚ 	
[
ÜÜ 	
HttpGet
ÜÜ	 
(
ÜÜ 
$str
ÜÜ "
)
ÜÜ" #
]
ÜÜ# $
public
ÝÝ 
IActionResult
ÝÝ 
GetProjectByUser
ÝÝ -
(
ÝÝ- .
string
ÝÝ. 4
iduser
ÝÝ5 ;
)
ÝÝ; <
{
ÞÞ 	
var
îî 
projets
îî 
=
îî 
(
îî 
from
îî 
projects
îî  (
in
îî) +
_context
îî, 4
.
îî4 5
Projets
îî5 <
join
ïï 
ProjetEquipes
ïï  -
in
ïï. 0
_context
ïï1 9
.
ïï9 :
ProjetEquipes
ïï: G
on
ïïH J
projects
ïïK S
.
ïïS T
Id
ïïT V
equals
ïïW ]
ProjetEquipes
ïï^ k
.
ïïk l
ProjetId
ïïl t
join
ðð 
equipe
ðð  &
in
ðð' )
_context
ðð* 2
.
ðð2 3
Equips
ðð3 9
on
ðð: <
ProjetEquipes
ðð= J
.
ððJ K
EquipeId
ððK S
equals
ððT Z
equipe
ðð[ a
.
ðða b
Id
ððb d
select
óó !
new
óó" %
{
ôô 
id
õõ !
=
õõ" #
projects
õõ$ ,
.
õõ, -
Id
õõ- /
,
õõ/ 0
Nommenclature
öö ,
=
öö- .
projects
öö/ 7
.
öö7 8
Nommenclature
öö8 E
,
ööE F
}
øø 
)
øø 
.
øø 
ToList
øø $
(
øø$ %
)
øø% &
;
øø& '
return
úú 
Ok
úú 
(
úú 
projets
úú 
)
úú 
;
úú 
}
ûû 	
[
ýý 	
HttpGet
ýý	 
(
ýý 
$str
ýý 1
)
ýý1 2
]
ýý2 3
public
þþ 
IActionResult
þþ #
GetProjectUsersByUser
þþ 2
(
þþ2 3
string
þþ3 9
iduser
þþ: @
)
þþ@ A
{
ÿÿ 	
var
 
userlist
 
=
 
(
 
from
  
ProjetUsers
! ,
in
- /
_context
0 8
.
8 9
ProjetUsers
9 D
join
  
users
! &
in
' )
_context
* 2
.
2 3
Users
3 8
on
9 ;
ProjetUsers
< G
.
G H
UserId
H N
equals
O U
users
V [
.
[ \
IdUser
\ b
where
 !
ProjetUsers
" -
.
- .
UserId
. 4
==
5 7
iduser
8 >
select
 "
new
# &
{
 
UserId
  &
=
' (
users
) .
.
. /
IdUser
/ 5
,
5 6
FullName
  (
=
) *
users
+ 0
.
0 1
FullName
1 9
,
9 :
}
 
)
 
.
 
ToList
 %
(
% &
)
& '
;
' (
return
 
Ok
 
(
 
userlist
 
)
 
;
  
}
 	
[
 	
HttpGet
	 
(
 
$str
 4
)
4 5
]
5 6
public
 
IActionResult
 &
GetProjectUsersByManager
 5
(
5 6
string
6 <
	idmanager
= F
)
F G
{
 	
var
 
userlist
 
=
 
(
 
from
  
ProjetUsers
! ,
in
- /
_context
0 8
.
8 9
ProjetUsers
9 D
join
  
users
! &
in
' )
_context
* 2
.
2 3
Users
3 8
on
9 ;
ProjetUsers
< G
.
G H
UserId
H N
equals
O U
users
V [
.
[ \
IdUser
\ b
select
 "
new
# &
{
 
UserId
  &
=
' (
users
) .
.
. /
IdUser
/ 5
,
5 6
FullName
  (
=
) *
users
+ 0
.
0 1
FullName
1 9
,
9 :
}
 
)
 
.
 
ToList
 %
(
% &
)
& '
;
' (
return
 
Ok
 
(
 
userlist
 
)
 
;
  
}
 	
[
 	
HttpGet
	 
(
 
$str
 "
)
" #
]
# $
public
 
IActionResult
 
GetProjectUsers
 ,
(
, -
)
- .
{
 	
var
 
userlist
 
=
 
(
 
from
  
ProjetUsers
! ,
in
- /
_context
0 8
.
8 9
ProjetUsers
9 D
join
 
users
  %
in
& (
_context
) 1
.
1 2
Users
2 7
on
8 :
ProjetUsers
; F
.
F G
UserId
G M
equals
N T
users
U Z
.
Z [
IdUser
[ a
select
 "
new
# &
{
   
UserId
¡¡ %
=
¡¡% &
users
¡¡' ,
.
¡¡, -
IdUser
¡¡- 3
,
¡¡3 4
FullName
¢¢ '
=
¢¢( )
users
¢¢* /
.
¢¢/ 0
FullName
¢¢0 8
,
¢¢8 9
}
££ 
)
££ 
.
££ 
ToList
££ $
(
££$ %
)
££% &
;
££& '
return
¥¥ 
Ok
¥¥ 
(
¥¥ 
userlist
¥¥ 
)
¥¥ 
;
¥¥  
}
¦¦ 	
[
¨¨ 	
HttpGet
¨¨	 
(
¨¨ 
$str
¨¨ 
)
¨¨ 
]
¨¨ 
public
©© 
IActionResult
©© 
	GetProjet
©© &
(
©©& '
string
©©' -
id
©©. 0
)
©©0 1
{
ªª 	
var
«« 
projet
«« 
=
«« 
_context
«« !
.
««! "
Projets
««" )
.
««) *
Where
««* /
(
««/ 0
x
««0 1
=>
««2 4
x
««5 6
.
««6 7
Id
««7 9
==
««: <
id
««= ?
&&
««@ B
x
««C D
.
««D E
lockoutEnabled
««E S
==
««T V
true
««W [
)
««[ \
.
««\ ]
Include
««] d
(
««d e
x
««e f
=>
««f h
x
««h i
.
««i j
projetsEquipe
««j w
)
««x y
.
««y z
Include««z 
(«« 
x«« 
=>«« 
x«« 
.«« 
ClientProjets«« 
)«« 
.«« 
FirstOrDefault«« ¦
(««¦ §
)««§ ¨
;««¨ ©
if
­­ 
(
­­ 
projet
­­ 
==
­­ 
null
­­ 
)
­­ 
{
®® 
return
¯¯ 
NotFound
¯¯ 
(
¯¯  
)
¯¯  !
;
¯¯! "
}
°° 
return
²² 
Ok
²² 
(
²² 
projet
²² 
)
²² 
;
²² 
}
³³ 	
[
¶¶ 	
HttpGet
¶¶	 
(
¶¶ 
$str
¶¶ -
)
¶¶- .
]
¶¶. /
public
·· 
IActionResult
·· (
GetProjetWithClientProject
·· 7
(
··7 8
)
··8 9
{
¸¸ 	
var
¹¹ 
projet
¹¹ 
=
¹¹ 
_context
¹¹ !
.
¹¹! "
Projets
¹¹" )
.
¹¹) *
Where
¹¹* /
(
¹¹/ 0
x
¹¹0 1
=>
¹¹2 4
x
¹¹6 7
.
¹¹7 8
lockoutEnabled
¹¹8 F
==
¹¹G I
true
¹¹J N
)
¹¹N O
.
¹¹O P
Include
¹¹P W
(
¹¹W X
x
¹¹X Y
=>
¹¹Z \
x
¹¹] ^
.
¹¹^ _
ClientProjets
¹¹_ l
)
¹¹l m
.
¹¹m n
ToList
¹¹n t
(
¹¹t u
)
¹¹u v
;
¹¹v w
if
»» 
(
»» 
projet
»» 
==
»» 
null
»» 
)
»» 
{
¼¼ 
return
½½ 
NotFound
½½ 
(
½½  
)
½½  !
;
½½! "
}
¾¾ 
return
ÀÀ 
Ok
ÀÀ 
(
ÀÀ 
projet
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
ÁÁ 	
[
ÃÃ 	
HttpGet
ÃÃ	 
(
ÃÃ 
$str
ÃÃ @
)
ÃÃ@ A
]
ÃÃA B
public
ÄÄ 
IActionResult
ÄÄ (
GetProjetWithClientProject
ÄÄ 7
(
ÄÄ7 8
string
ÄÄ8 >
EquipeId
ÄÄ? G
)
ÄÄG H
{
ÅÅ 	
var
ÆÆ 
projet
ÆÆ 
=
ÆÆ 
(
ÆÆ 
from
ÆÆ 
project
ÆÆ &
in
ÆÆ' )
_context
ÆÆ* 2
.
ÆÆ2 3
Projets
ÆÆ3 :
join
ÇÇ 
ProjetEquipes
ÇÇ ,
in
ÇÇ- /
_context
ÇÇ0 8
.
ÇÇ8 9
ProjetEquipes
ÇÇ9 F
on
ÇÇG I
project
ÇÇJ Q
.
ÇÇQ R
Id
ÇÇR T
equals
ÇÇU [
ProjetEquipes
ÇÇ\ i
.
ÇÇi j
ProjetId
ÇÇj r
where
ÈÈ 
ProjetEquipes
ÈÈ  -
.
ÈÈ- .
EquipeId
ÈÈ. 6
==
ÈÈ7 9
EquipeId
ÈÈ: B
&&
ÈÈC E
project
ÈÈF M
.
ÈÈM N
lockoutEnabled
ÈÈN \
==
ÈÈ\ ^
true
ÈÈ^ b
select
ÉÉ  
new
ÉÉ! $
{
ÊÊ 
project
ÌÌ %
.
ÌÌ% &
Id
ÌÌ& (
,
ÌÌ( )
project
ÍÍ %
.
ÍÍ% &
Nommenclature
ÍÍ& 3
,
ÍÍ3 4
project
ÎÎ %
.
ÎÎ% &
ClientProjets
ÎÎ& 3
}
ÏÏ 
)
ÏÏ 
.
ÏÏ 
ToList
ÏÏ #
(
ÏÏ# $
)
ÏÏ$ %
;
ÏÏ% &
if
ÒÒ 
(
ÒÒ 
projet
ÒÒ 
==
ÒÒ 
null
ÒÒ 
)
ÒÒ 
{
ÓÓ 
return
ÔÔ 
NotFound
ÔÔ 
(
ÔÔ  
)
ÔÔ  !
;
ÔÔ! "
}
ÕÕ 
return
×× 
Ok
×× 
(
×× 
projet
×× 
)
×× 
;
×× 
}
ØØ 	
[
ÛÛ 	
HttpGet
ÛÛ	 
(
ÛÛ 
$str
ÛÛ <
)
ÛÛ< =
]
ÛÛ= >
public
ÜÜ 
IActionResult
ÜÜ .
 GetProjetWithClientProjectbyuser
ÜÜ =
(
ÜÜ= >
string
ÜÜ> D
idUser
ÜÜE K
)
ÜÜK L
{
ÝÝ 	
var
ÞÞ 
projet
ÞÞ 
=
ÞÞ 
(
ÞÞ 
from
ÞÞ 
project
ÞÞ &
in
ÞÞ' )
_context
ÞÞ* 2
.
ÞÞ2 3
Projets
ÞÞ3 :
join
ßß 
ProjetEquipes
ßß ,
in
ßß- /
_context
ßß0 8
.
ßß8 9
ProjetEquipes
ßß9 F
on
ßßG I
project
ßßJ Q
.
ßßQ R
Id
ßßR T
equals
ßßU [
ProjetEquipes
ßß\ i
.
ßßi j
ProjetId
ßßj r
join
àà 

userEquipe
àà )
in
àà* ,
_context
àà- 5
.
àà5 6

EquipeUser
àà6 @
on
ààA C
ProjetEquipes
ààD Q
.
ààQ R
EquipeId
ààR Z
equals
àà[ a

userEquipe
ààb l
.
ààl m
EquipeId
ààm u
where
áá 

userEquipe
áá  *
.
áá* +
UserId
áá+ 1
==
áá1 3
idUser
áá4 :
&&
áá; =
project
áá> E
.
ááE F
lockoutEnabled
ááF T
==
ááU W
true
ááX \
select
ââ  
new
ââ! $
{
ãã 
project
åå %
.
åå% &
Id
åå& (
,
åå( )
project
ææ %
.
ææ% &
Nommenclature
ææ& 3
,
ææ3 4
project
çç %
.
çç% &
ClientProjets
çç& 3
}
èè 
)
èè 
.
èè 
Distinct
èè %
(
èè% &
)
èè& '
.
èè' (
ToList
èè( .
(
èè. /
)
èè/ 0
;
èè0 1
if
ëë 
(
ëë 
projet
ëë 
==
ëë 
null
ëë 
)
ëë 
{
ìì 
return
íí 
NotFound
íí 
(
íí  
)
íí  !
;
íí! "
}
îî 
return
ðð 
Ok
ðð 
(
ðð 
projet
ðð 
)
ðð 
;
ðð 
}
ññ 	
[
ôô 	
HttpGet
ôô	 
(
ôô 
$str
ôô B
)
ôôB C
]
ôôC D
public
õõ 
IActionResult
õõ 1
#GetProjetWithClientProjectByManager
õõ @
(
õõ@ A
string
õõA G
	idManager
õõH Q
)
õõQ R
{
öö 	
var
÷÷ 
projets
÷÷ 
=
÷÷ 
(
÷÷ 
from
÷÷ 
projet
÷÷  &
in
÷÷' )
_context
÷÷* 2
.
÷÷2 3
Projets
÷÷3 :
join
øø 
projetsEquipe
øø ,
in
øø- /
_context
øø0 8
.
øø8 9
ProjetEquipes
øø9 F
on
øøG I
projet
øøJ P
.
øøP Q
Id
øøQ S
equals
øøT Z
projetsEquipe
øø[ h
.
øøh i
ProjetId
øøi q
join
ùù 
Equipe
ùù %
in
ùù& (
_context
ùù) 1
.
ùù1 2
Equips
ùù2 8
on
ùù9 ;
projetsEquipe
ùù< I
.
ùùI J
EquipeId
ùùJ R
equals
ùùS Y
Equipe
ùùZ `
.
ùù` a
Id
ùùa c
join
úú 

userEquipe
úú  *
in
úú+ -
_context
úú. 6
.
úú6 7

EquipeUser
úú7 A
on
úúB D
Equipe
úúE K
.
úúK L
Id
úúL N
equals
úúO U

userEquipe
úúV `
.
úú` a
EquipeId
úúa i
where
üü  
(
üü! "
projetsEquipe
üü" /
.
üü/ 0
Equipe
üü0 6
.
üü6 7
	ManagerId
üü7 @
==
üü@ B
	idManager
üüC L
||
üüM O

userEquipe
üüP Z
.
üüZ [
UserId
üü[ a
==
üüb d
	idManager
üüe n
)
üün o
&&
üüp r
projet
üüs y
.
üüy z
lockoutEnabledüüz 
select
 !
new
" %
{
 
projet
 %
.
% &
Id
& (
,
( )
projet
 %
.
% &
Nommenclature
& 3
,
3 4
projet
 %
.
% &
ClientProjets
& 3
}
 
)
 
.
 
Distinct
 &
(
& '
)
' (
.
( )
ToList
) /
(
/ 0
)
0 1
;
1 2
return
 
Ok
 
(
 
projets
 
)
 
;
 
}
 	
[
ïï 	
HttpPost
ïï	 
]
ïï 
public
ðð 
async
ðð 
Task
ðð 
<
ðð 
ActionResult
ðð &
<
ðð& '
Projet
ðð' -
>
ðð- .
>
ðð. /

PostProjet
ðð0 :
(
ðð: ;
Projet
ðð; A
projet
ððB H
)
ððH I
{
ññ 	
var
òò 
isNew
òò 
=
òò 
false
òò 
;
òò 
if
óó 
(
óó 
string
óó 
.
óó 
IsNullOrEmpty
óó $
(
óó$ %
projet
óó% +
.
óó+ ,
Id
óó, .
)
óó. /
)
óó/ 0
{
ôô 
isNew
õõ 
=
õõ 
true
õõ 
;
õõ 
projet
öö 
.
öö 
DateCreation
öö #
=
öö$ %
DateTime
öö& .
.
öö. /
Now
öö/ 2
.
öö2 3
ToString
öö3 ;
(
öö; <
)
öö< =
;
öö= >
_context
÷÷ 
.
÷÷ 
Projets
÷÷  
.
÷÷  !
Add
÷÷! $
(
÷÷$ %
projet
÷÷% +
)
÷÷+ ,
;
÷÷, -
foreach
ùù 
(
ùù 
var
ùù 
item
ùù !
in
ùù" $
projet
ùù% +
.
ùù+ ,
ClientProjets
ùù, 9
)
ùù9 :
{
úú 
item
ûû 
.
ûû 
ProjetId
ûû !
=
ûû" #
projet
ûû$ *
.
ûû* +
Id
ûû+ -
;
ûû- .
_context
ýý 
.
ýý 
ClientProjet
ýý )
.
ýý) *
Add
ýý* -
(
ýý- .
item
ýý. 2
)
ýý2 3
;
ýý3 4
}
þþ 
}
 
else
 
{
 
var
 
detail
 
=
 
_context
 %
.
% &
ClientProjet
& 2
.
2 3
Where
3 8
(
8 9
x
9 :
=>
; =
x
> ?
.
? @
ProjetId
@ H
==
I K
projet
L R
.
R S
Id
S U
)
U V
.
V W
ToList
W ]
(
] ^
)
^ _
;
_ `
var
 
equips
 
=
 
_context
 %
.
% &
ProjetEquipes
& 3
.
3 4
Where
4 9
(
9 :
x
: ;
=>
< >
x
? @
.
@ A
ProjetId
A I
==
J L
projet
M S
.
S T
Id
T V
)
V W
.
W X
ToList
X ^
(
^ _
)
_ `
;
` a
_context
 
.
 
ClientProjet
 %
.
% &
RemoveRange
& 1
(
1 2
detail
2 8
)
8 9
;
9 :
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
_context
 
.
 
ClientProjet
 %
.
% &
AddRange
& .
(
. /
projet
/ 5
.
5 6
ClientProjets
6 C
)
C D
;
D E
_context
 
.
 
ProjetEquipes
 &
.
& '
RemoveRange
' 2
(
2 3
equips
3 9
)
9 :
;
: ;
_context
 
.
 
ProjetEquipes
 &
.
& '
AddRange
' /
(
/ 0
projet
0 6
.
6 7
projetsEquipe
7 D
)
D E
;
E F
_context
 
.
 
Entry
 
(
 
projet
 %
)
% &
.
& '
State
' ,
=
- .
EntityState
/ :
.
: ;
Modified
; C
;
C D
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
}
££ 
try
¤¤ 
{
¥¥ 
await
¨¨ 
_context
¨¨ 
.
¨¨ 
SaveChangesAsync
¨¨ /
(
¨¨/ 0
)
¨¨0 1
;
¨¨1 2
if
©© 
(
©© 
isNew
©© 
)
©© 
{
ªª 
foreach
¬¬ 
(
¬¬ 
ProjetEquipe
¬¬ )
item
¬¬* .
in
¬¬/ 1
projet
¬¬2 8
.
¬¬8 9
projetsEquipe
¬¬9 F
)
¬¬F G
{
­­ 
var
®® 
users
®® !
=
®®" #
(
®®$ %
from
®®% )
user
®®* .
in
®®/ 1
_context
®®2 :
.
®®: ;
Users
®®; @
join
¯¯% )
equipeusers
¯¯* 5
in
¯¯6 8
_context
¯¯9 A
.
¯¯A B

EquipeUser
¯¯B L
on
¯¯M O
user
¯¯P T
.
¯¯T U
IdUser
¯¯U [
equals
¯¯\ b
equipeusers
¯¯c n
.
¯¯n o
UserId
¯¯o u
where
°°% *
equipeusers
°°+ 6
.
°°6 7
EquipeId
°°7 ?
==
°°@ B
item
°°C G
.
°°G H
EquipeId
°°H P
select
±±% +
user
±±, 0
)
±±0 1
.
±±1 2
Distinct
±±2 :
(
±±: ;
)
±±; <
.
±±< =
ToList
±±= C
(
±±C D
)
±±D E
;
±±E F
foreach
²² 
(
²²  !
var
²²! $
user
²²% )
in
²²* ,
users
²²- 2
)
²²2 3
{
³³ 
var
µµ 
message
µµ  '
=
µµ( )
$str
µµ* J
+
µµK L
user
µµM Q
.
µµQ R
Nom
µµR U
+
µµV W
$str
µµX [
+
µµ\ ]
user
µµ^ b
.
µµb c
Prenom
µµc i
+
µµj k
$str
µµl x
+
µµy z
$strµµ{ Ò
+µµÓ Ô
projetµµÕ Û
.µµÛ Ü
NommenclatureµµÜ é
+µµê ë
$strµµì Ê
+µµË Ì
$strµµÍ °
;µµ° ±
var
¶¶ 
subject
¶¶  '
=
¶¶( )
$str
¶¶* 3
+
¶¶4 5
projet
¶¶6 <
.
¶¶< =
Nommenclature
¶¶= J
;
¶¶J K
	SendEmail
·· %
(
··% &
user
··& *
.
··* +
AdresseEmail
··+ 7
,
··7 8
message
··9 @
,
··@ A
subject
··B I
)
··I J
;
··J K
}
¸¸ 
}
»» 
}
¼¼ 
return
½½ 
Ok
½½ 
(
½½ 
)
½½ 
;
½½ 
}
¿¿ 
catch
ÀÀ 
{
ÁÁ 
throw
ÂÂ 
;
ÂÂ 
}
ÃÃ 
}
ÅÅ 	
[
ÆÆ 	
	NonAction
ÆÆ	 
]
ÆÆ 
private
ÇÇ 
void
ÇÇ 
	SendEmail
ÇÇ 
(
ÇÇ 
string
ÇÇ %
email
ÇÇ& +
,
ÇÇ+ ,
string
ÇÇ- 3
messageBody
ÇÇ4 ?
,
ÇÇ? @
string
ÇÇA G
subject
ÇÇH O
)
ÇÇO P
{
ÈÈ 	

SmtpClient
ÉÉ 
client
ÉÉ 
=
ÉÉ 
new
ÉÉ  #

SmtpClient
ÉÉ$ .
(
ÉÉ. /
_appSettings
ÉÉ/ ;
.
ÉÉ; <
Host
ÉÉ< @
,
ÉÉ@ A
_appSettings
ÉÉB N
.
ÉÉN O
	EmailPort
ÉÉO X
)
ÉÉX Y
;
ÉÉY Z
client
ËË 
.
ËË 
	EnableSsl
ËË 
=
ËË 
_appSettings
ËË +
.
ËË+ ,
	EnableSsl
ËË, 5
;
ËË5 6
client
ÌÌ 
.
ÌÌ 
DeliveryMethod
ÌÌ !
=
ÌÌ" # 
SmtpDeliveryMethod
ÌÌ$ 6
.
ÌÌ6 7
Network
ÌÌ7 >
;
ÌÌ> ?
client
ÍÍ 
.
ÍÍ #
UseDefaultCredentials
ÍÍ (
=
ÍÍ) *
false
ÍÍ+ 0
;
ÍÍ0 1
client
ÎÎ 
.
ÎÎ 
Credentials
ÎÎ 
=
ÎÎ  
new
ÎÎ! $
NetworkCredential
ÎÎ% 6
(
ÎÎ6 7
_appSettings
ÎÎ7 C
.
ÎÎC D
EmailSender
ÎÎD O
,
ÎÎO P
_appSettings
ÎÎQ ]
.
ÎÎ] ^
Password
ÎÎ^ f
)
ÎÎf g
;
ÎÎg h
MailMessage
ÏÏ 
mailMessage
ÏÏ #
=
ÏÏ$ %
new
ÏÏ& )
MailMessage
ÏÏ* 5
(
ÏÏ5 6
)
ÏÏ6 7
;
ÏÏ7 8
mailMessage
ÐÐ 
.
ÐÐ 
To
ÐÐ 
.
ÐÐ 
Add
ÐÐ 
(
ÐÐ 
email
ÐÐ $
)
ÐÐ$ %
;
ÐÐ% &
mailMessage
ÑÑ 
.
ÑÑ 
From
ÑÑ 
=
ÑÑ 
new
ÑÑ "
MailAddress
ÑÑ# .
(
ÑÑ. /
_appSettings
ÑÑ/ ;
.
ÑÑ; <
EmailSender
ÑÑ< G
)
ÑÑG H
;
ÑÑH I
mailMessage
ÒÒ 
.
ÒÒ 
Subject
ÒÒ 
=
ÒÒ  !
subject
ÒÒ" )
;
ÒÒ) *
mailMessage
ÓÓ 
.
ÓÓ 

IsBodyHtml
ÓÓ "
=
ÓÓ# $
true
ÓÓ% )
;
ÓÓ) *
mailMessage
ÔÔ 
.
ÔÔ 
Body
ÔÔ 
=
ÔÔ 
messageBody
ÔÔ *
;
ÔÔ* +
client
ÕÕ 
.
ÕÕ 
Send
ÕÕ 
(
ÕÕ 
mailMessage
ÕÕ #
)
ÕÕ# $
;
ÕÕ$ %
}
×× 	
[
ÙÙ 	
	NonAction
ÙÙ	 
]
ÙÙ 
public
ÚÚ 
Task
ÚÚ 
	SendAsync
ÚÚ 
(
ÚÚ 
string
ÚÚ $
email
ÚÚ% *
,
ÚÚ* +
string
ÚÚ, 2
messageBody
ÚÚ3 >
,
ÚÚ> ?
string
ÚÚ@ F
subject
ÚÚG N
)
ÚÚN O
{
ÛÛ 	
var
ÜÜ 
_sender
ÜÜ 
=
ÜÜ 
_appSettings
ÜÜ &
.
ÜÜ& '
EmailSender
ÜÜ' 2
;
ÜÜ2 3
var
ÝÝ 
_user
ÝÝ 
=
ÝÝ 
_appSettings
ÝÝ $
.
ÝÝ$ %
	EmailUser
ÝÝ% .
;
ÝÝ. /
var
ÞÞ 
	_password
ÞÞ 
=
ÞÞ 
_appSettings
ÞÞ (
.
ÞÞ( )
Password
ÞÞ) 1
;
ÞÞ1 2
var
ßß 
_smtpClient
ßß 
=
ßß 
_appSettings
ßß *
.
ßß* +
Host
ßß+ /
;
ßß/ 0
int
àà 
_port
àà 
=
àà 
_appSettings
àà $
.
àà$ %
	EmailPort
àà% .
;
àà. /
MailMessage
ââ 
mail
ââ 
=
ââ 
new
ââ "
MailMessage
ââ# .
(
ââ. /
)
ââ/ 0
;
ââ0 1

SmtpClient
ãã 

SmtpServer
ãã !
=
ãã" #
new
ãã$ '

SmtpClient
ãã( 2
(
ãã2 3
_smtpClient
ãã3 >
)
ãã> ?
;
ãã? @
mail
ää 
.
ää 
From
ää 
=
ää 
new
ää 
MailAddress
ää '
(
ää' (
_sender
ää( /
)
ää/ 0
;
ää0 1
mail
ææ 
.
ææ 
To
ææ 
.
ææ 
Add
ææ 
(
ææ 
email
ææ 
)
ææ 
;
ææ 
mail
èè 
.
èè 
Subject
èè 
=
èè 
subject
èè "
;
èè" #
mail
éé 
.
éé 
Body
éé 
=
éé 
messageBody
éé #
;
éé# $

SmtpServer
ëë 
.
ëë 
Port
ëë 
=
ëë 
_port
ëë #
;
ëë# $

SmtpServer
ìì 
.
ìì 
Credentials
ìì "
=
ìì# $
new
ìì% (
System
ìì) /
.
ìì/ 0
Net
ìì0 3
.
ìì3 4
NetworkCredential
ìì4 E
(
ììE F
_user
ììF K
,
ììK L
	_password
ììM V
)
ììV W
;
ììW X

SmtpServer
íí 
.
íí 
	EnableSsl
íí  
=
íí! "
true
íí# '
;
íí' (
try
îî 
{
ïï 

SmtpServer
ðð 
.
ðð 
Send
ðð 
(
ðð  
mail
ðð  $
)
ðð$ %
;
ðð% &
}
ññ 
catch
òò 
{
òò 
}
òò 
return
óó 
Task
óó 
.
óó 

FromResult
óó "
(
óó" #
$num
óó# $
)
óó$ %
;
óó% &
}
ôô 	
[
÷÷ 	
HttpPost
÷÷	 
(
÷÷ 
$str
÷÷ 
)
÷÷  
]
÷÷  !
public
øø 
async
øø 
Task
øø 
<
øø 
ActionResult
øø &
<
øø& '
Projet
øø' -
>
øø- .
>
øø. /
DeleteProjet
øø0 <
(
øø< =
string
øø= C
id
øøD F
)
øøF G
{
ùù 	
var
úú 
projet
úú 
=
úú 
await
úú 
_context
úú '
.
úú' (
Projets
úú( /
.
úú/ 0
	FindAsync
úú0 9
(
úú9 :
id
úú: <
)
úú< =
;
úú= >
if
ûû 
(
ûû 
projet
ûû 
==
ûû 
null
ûû 
)
ûû 
{
üü 
return
ýý 
NotFound
ýý 
(
ýý  
)
ýý  !
;
ýý! "
}
þþ 
_context
 
.
 
Projets
 
.
 
Remove
 #
(
# $
projet
$ *
)
* +
;
+ ,
await
 
_context
 
.
 
SaveChangesAsync
 +
(
+ ,
)
, -
;
- .
return
 
projet
 
;
 
}
 	
[
 	
HttpPost
	 
(
 
$str
 
)
  
]
  !
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
Projet
' -
>
- .
>
. /
put
0 3
(
3 4
string
4 :
id
; =
,
= >
Projet
? E
projet
F L
)
L M
{
 	
if
 
(
 
projet
 
.
 
Id
 
!=
 
id
 
)
  
{
 
return
 

BadRequest
 !
(
! "
)
" #
;
# $
}
 
_context
 
.
 
Entry
 
(
 
projet
 !
)
! "
.
" #
State
# (
=
) *
EntityState
+ 6
.
6 7
Modified
7 ?
;
? @
try
 
{
 
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
return
 
Ok
 
(
 
)
 
;
 
}
 
catch
 
(
 *
DbUpdateConcurrencyException
 /
)
/ 0
{
 
throw
 
;
 
}
 
return
 
	NoContent
 
(
 
)
 
;
 
}
 	
[
 	
	NonAction
	 
]
 
private
   
bool
   
ProjetExists
   !
(
  ! "
string
  " (
id
  ) +
)
  + ,
{
¡¡ 	
return
¢¢ 
_context
¢¢ 
.
¢¢ 
Projets
¢¢ #
.
¢¢# $
Any
¢¢$ '
(
¢¢' (
e
¢¢( )
=>
¢¢* ,
e
¢¢- .
.
¢¢. /
Id
¢¢/ 1
==
¢¢2 4
id
¢¢5 7
)
¢¢7 8
;
¢¢8 9
}
££ 	
}
¤¤ 
}¥¥ ·7
VC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\ProjetUsersController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class !
ProjetUsersController &
:' (
ControllerBase) 7
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public !
ProjetUsersController $
($ %
PilotageDBContext% 6
context7 >
)> ?
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3

ProjetUser3 =
>= >
>> ?
>? @
GetProjetUsersA O
(O P
)P Q
{ 	
return 
await 
_context !
.! "
ProjetUsers" -
.- .
ToListAsync. 9
(9 :
): ;
;; <
} 	
[   	
HttpGet  	 
(   
$str   
)   
]   
public!! 
async!! 
Task!! 
<!! 
ActionResult!! &
<!!& '

ProjetUser!!' 1
>!!1 2
>!!2 3
GetProjetUser!!4 A
(!!A B
string!!B H
id!!I K
)!!K L
{"" 	
var## 

projetUser## 
=## 
await## "
_context### +
.##+ ,
ProjetUsers##, 7
.##7 8
	FindAsync##8 A
(##A B
id##B D
)##D E
;##E F
if%% 
(%% 

projetUser%% 
==%% 
null%% "
)%%" #
{&& 
return'' 
NotFound'' 
(''  
)''  !
;''! "
}(( 
return** 

projetUser** 
;** 
}++ 	
[00 	
HttpPost00	 
(00 
$str00 
)00  
]00  !
public11 
async11 
Task11 
<11 
IActionResult11 '
>11' (
PutProjetUser11) 6
(116 7
string117 =
id11> @
,11@ A

ProjetUser11B L

projetUser11M W
)11W X
{22 	
if33 
(33 
id33 
!=33 

projetUser33  
.33  !
ProjetId33! )
)33) *
{44 
return55 

BadRequest55 !
(55! "
)55" #
;55# $
}66 
_context88 
.88 
Entry88 
(88 

projetUser88 %
)88% &
.88& '
State88' ,
=88- .
EntityState88/ :
.88: ;
Modified88; C
;88C D
try:: 
{;; 
await<< 
_context<< 
.<< 
SaveChangesAsync<< /
(<</ 0
)<<0 1
;<<1 2
}== 
catch>> 
(>> (
DbUpdateConcurrencyException>> /
)>>/ 0
{?? 
if@@ 
(@@ 
!@@ 
ProjetUserExists@@ %
(@@% &
id@@& (
)@@( )
)@@) *
{AA 
returnBB 
NotFoundBB #
(BB# $
)BB$ %
;BB% &
}CC 
elseDD 
{EE 
throwFF 
;FF 
}GG 
}HH 
returnJJ 
	NoContentJJ 
(JJ 
)JJ 
;JJ 
}KK 	
[PP 	
HttpPostPP	 
]PP 
publicQQ 
asyncQQ 
TaskQQ 
<QQ 
ActionResultQQ &
<QQ& '

ProjetUserQQ' 1
>QQ1 2
>QQ2 3
PostProjetUserQQ4 B
(QQB C

ProjetUserQQC M

projetUserQQN X
)QQX Y
{RR 	
_contextSS 
.SS 
ProjetUsersSS  
.SS  !
AddSS! $
(SS$ %

projetUserSS% /
)SS/ 0
;SS0 1
tryTT 
{UU 
awaitVV 
_contextVV 
.VV 
SaveChangesAsyncVV /
(VV/ 0
)VV0 1
;VV1 2
}WW 
catchXX 
(XX 
DbUpdateExceptionXX $
)XX$ %
{YY 
ifZZ 
(ZZ 
ProjetUserExistsZZ $
(ZZ$ %

projetUserZZ% /
.ZZ/ 0
ProjetIdZZ0 8
)ZZ8 9
)ZZ9 :
{[[ 
return\\ 
Conflict\\ #
(\\# $
)\\$ %
;\\% &
}]] 
else^^ 
{__ 
throw`` 
;`` 
}aa 
}bb 
returndd 
CreatedAtActiondd "
(dd" #
$strdd# 2
,dd2 3
newdd4 7
{dd8 9
iddd: <
=dd= >

projetUserdd? I
.ddI J
ProjetIdddJ R
}ddS T
,ddT U

projetUserddV `
)dd` a
;dda b
}ee 	
[hh 
HttpPosthh 
(hh 
$strhh 
)hh 
]hh  
publicii 
asyncii 
Taskii 
<ii 
ActionResultii &
<ii& '

ProjetUserii' 1
>ii1 2
>ii2 3
DeleteProjetUserii4 D
(iiD E
stringiiE K
idiiL N
)iiN O
{jj 	
varkk 

projetUserkk 
=kk 
awaitkk "
_contextkk# +
.kk+ ,
ProjetUserskk, 7
.kk7 8
	FindAsynckk8 A
(kkA B
idkkB D
)kkD E
;kkE F
ifll 
(ll 

projetUserll 
==ll 
nullll "
)ll" #
{mm 
returnnn 
NotFoundnn 
(nn  
)nn  !
;nn! "
}oo 
_contextqq 
.qq 
ProjetUsersqq  
.qq  !
Removeqq! '
(qq' (

projetUserqq( 2
)qq2 3
;qq3 4
awaitrr 
_contextrr 
.rr 
SaveChangesAsyncrr +
(rr+ ,
)rr, -
;rr- .
returntt 

projetUsertt 
;tt 
}uu 	
[vv 	
	NonActionvv	 
]vv 
privateww 
boolww 
ProjetUserExistsww %
(ww% &
stringww& ,
idww- /
)ww/ 0
{xx 	
returnyy 
_contextyy 
.yy 
ProjetUsersyy '
.yy' (
Anyyy( +
(yy+ ,
eyy, -
=>yy. 0
eyy1 2
.yy2 3
ProjetIdyy3 ;
==yy< >
idyy? A
)yyA B
;yyB C
}zz 	
}{{ 
}|| ª
QC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\StatusController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class 
StatusController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public 
StatusController 
(  
PilotageDBContext  1
context2 9
)9 :
{ 	
_context 
= 
context 
; 
} 	
}nn 
}oo å
\C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\StatusImputationsController.cs
	namespace

 	

ProjetBack


 
.

 
Controllers

  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class '
StatusImputationsController ,
:- .
ControllerBase/ =
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public '
StatusImputationsController *
(* +
PilotageDBContext+ <
context= D
)D E
{ 	
_context 
= 
context 
; 
} 	
}ll 
}mm Å4
WC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\StatutTachesController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class "
StatutTachesController '
:( )
ControllerBase* 8
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public "
StatutTachesController %
(% &
PilotageDBContext& 7
context8 ?
)? @
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
StatutTache3 >
>> ?
>? @
>@ A
GetStatutTachesB Q
(Q R
)R S
{ 	
return 
await 
_context !
.! "
StatutTaches" .
.. /
ToListAsync/ :
(: ;
); <
;< =
} 	
[!! 	
HttpGet!!	 
(!! 
$str!! 
)!! 
]!! 
public"" 
async"" 
Task"" 
<"" 
ActionResult"" &
<""& '
StatutTache""' 2
>""2 3
>""3 4
GetStatutTache""5 C
(""C D
string""D J
id""K M
)""M N
{## 	
var$$ 
statutTache$$ 
=$$ 
await$$ #
_context$$$ ,
.$$, -
StatutTaches$$- 9
.$$9 :
	FindAsync$$: C
($$C D
id$$D F
)$$F G
;$$G H
if&& 
(&& 
statutTache&& 
==&& 
null&& #
)&&# $
{'' 
return(( 
NotFound(( 
(((  
)((  !
;((! "
})) 
return++ 
statutTache++ 
;++ 
},, 	
[11 	
HttpPost11	 
(11 
$str11 
)11  
]11  !
public22 
async22 
Task22 
<22 
IActionResult22 '
>22' (
PutStatutTache22) 7
(227 8
string228 >
id22? A
,22A B
StatutTache22C N
statutTache22O Z
)22Z [
{33 	
if44 
(44 
id44 
!=44 
statutTache44 !
.44! "
IdStatutTache44" /
)44/ 0
{55 
return66 

BadRequest66 !
(66! "
)66" #
;66# $
}77 
_context99 
.99 
Entry99 
(99 
statutTache99 &
)99& '
.99' (
State99( -
=99. /
EntityState990 ;
.99; <
Modified99< D
;99D E
try;; 
{<< 
await== 
_context== 
.== 
SaveChangesAsync== /
(==/ 0
)==0 1
;==1 2
}>> 
catch?? 
(?? (
DbUpdateConcurrencyException?? /
)??/ 0
{@@ 
ifAA 
(AA 
!AA 
StatutTacheExistsAA &
(AA& '
idAA' )
)AA) *
)AA* +
{BB 
returnCC 
NotFoundCC #
(CC# $
)CC$ %
;CC% &
}DD 
elseEE 
{FF 
throwGG 
;GG 
}HH 
}II 
returnKK 
	NoContentKK 
(KK 
)KK 
;KK 
}LL 	
[QQ 	
HttpPostQQ	 
]QQ 
publicRR 
asyncRR 
TaskRR 
<RR 
ActionResultRR &
<RR& '
StatutTacheRR' 2
>RR2 3
>RR3 4
PostStatutTacheRR5 D
(RRD E
StatutTacheRRE P
statutTacheRRQ \
)RR\ ]
{SS 	
_contextTT 
.TT 
StatutTachesTT !
.TT! "
AddTT" %
(TT% &
statutTacheTT& 1
)TT1 2
;TT2 3
awaitUU 
_contextUU 
.UU 
SaveChangesAsyncUU +
(UU+ ,
)UU, -
;UU- .
returnWW 
CreatedAtActionWW "
(WW" #
$strWW# 3
,WW3 4
newWW5 8
{WW9 :
idWW; =
=WW> ?
statutTacheWW@ K
.WWK L
IdStatutTacheWWL Y
}WWZ [
,WW[ \
statutTacheWW] h
)WWh i
;WWi j
}XX 	
[[[ 
HttpPost[[ 
([[ 
$str[[ 
)[[ 
][[  
public\\ 
async\\ 
Task\\ 
<\\ 
ActionResult\\ &
<\\& '
StatutTache\\' 2
>\\2 3
>\\3 4
DeleteStatutTache\\5 F
(\\F G
string\\G M
id\\N P
)\\P Q
{]] 	
var^^ 
statutTache^^ 
=^^ 
await^^ #
_context^^$ ,
.^^, -
StatutTaches^^- 9
.^^9 :
	FindAsync^^: C
(^^C D
id^^D F
)^^F G
;^^G H
if__ 
(__ 
statutTache__ 
==__ 
null__ #
)__# $
{`` 
returnaa 
NotFoundaa 
(aa  
)aa  !
;aa! "
}bb 
_contextdd 
.dd 
StatutTachesdd !
.dd! "
Removedd" (
(dd( )
statutTachedd) 4
)dd4 5
;dd5 6
awaitee 
_contextee 
.ee 
SaveChangesAsyncee +
(ee+ ,
)ee, -
;ee- .
returngg 
statutTachegg 
;gg 
}hh 	
[ii 	
	NonActionii	 
]ii 
privatejj 
booljj 
StatutTacheExistsjj &
(jj& '
stringjj' -
idjj. 0
)jj0 1
{kk 	
returnll 
_contextll 
.ll 
StatutTachesll (
.ll( )
Anyll) ,
(ll, -
ell- .
=>ll/ 1
ell2 3
.ll3 4
IdStatutTachell4 A
==llB D
idllE G
)llG H
;llH I
}mm 	
}nn 
}oo Ù
QC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\TachesController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class 
TachesController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public 
TachesController 
(  
PilotageDBContext  1
context2 9
)9 :
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
( 
$str '
)' (
]( )
public 
ActionResult 
GetByIdUser '
(' (
string( .
idUser/ 5
)5 6
{ 	
var 
result 
= 
_context !
.! "
Taches" (
.( )
Where) .
(. /
x/ 0
=>1 3
(4 5
x5 6
.6 7
UserId7 =
==> @
idUserA G
||H J
xK L
.L M
publiqueM U
==U W
trueW [
)[ \
&&] _
x` a
.a b
statusb h
!=h j
$strj m
)m n
.n o
ToListo u
(u v
)v w
;w x
if"" 
("" 
result"" 
=="" 
null"" 
)"" 
{## 
return$$ 
NotFound$$ 
($$  
)$$  !
;$$! "
}%% 
return'' 
Ok'' 
('' 
result'' 
)'' 
;'' 
}(( 	
[)) 	
HttpGet))	 
()) 
$str)) *
)))* +
]))+ ,
public** 
ActionResult** 
GetAllByIdUser** *
(*** +
string**+ 1
idUser**2 8
)**8 9
{++ 	
var.. 
result.. 
=.. 
_context.. !
...! "
Taches.." (
...( )
Where..) .
(... /
x../ 0
=>..1 3
x..4 5
...5 6
UserId..6 <
==..= ?
idUser..@ F
)..G H
...H I
ToList..I O
(..O P
)..P Q
;..Q R
if11 
(11 
result11 
==11 
null11 
)11 
{22 
return33 
NotFound33 
(33  
)33  !
;33! "
}44 
return66 
Ok66 
(66 
result66 
)66 
;66 
}77 	
[:: 	
HttpGet::	 
]:: 
public;; 
async;; 
Task;; 
<;; 
ActionResult;; &
>;;& '
	GetTaches;;( 1
(;;1 2
);;2 3
{<< 	
var>> 
	resultat1>> 
=>> 
(>> 
from>> !
taches>>" (
in>>) +
_context>>, 4
.>>4 5
Taches>>5 ;
join@@ !
users@@" '
in@@( *
_context@@+ 3
.@@3 4
Users@@4 9
on@@: <
taches@@= C
.@@C D
UserId@@D J
equals@@K Q
users@@R W
.@@W X
IdUser@@X ^
selectAA #
newAA$ '
{BB 
IdDD! #
=DD$ %
tachesDD& ,
.DD, -
IdDD- /
,DD/ 0
DescriptionEE! ,
=EE- .
tachesEE/ 5
.EE5 6
DescriptionEE6 A
,EEA B
ChargeFF! '
=FF( )
tachesFF* 0
.FF0 1
ChargeFF1 7
,FF7 8
CreateurGG! )
=GG* +
tachesGG, 2
.GG2 3
CreateurGG3 ;
,GG; <
UserIdHH! '
=HH( )
tachesHH* 0
.HH0 1
UserIdHH1 7
,HH7 8
StatutTacheIdII! .
=II/ 0
tachesII1 7
.II7 8
StatutTacheIdII8 E
,IIE F
UserKK! %
=KK& '
usersKK( -
.KK- .
FullNameKK. 6
,KK6 7
countTacheInImpMM! 0
=MM1 2
tachesMM3 9
.MM9 :
DetailImputationsMM: K
.MMK L
CountMML Q
(MMQ R
)MMR S
}NN 
)NN 
.NN  
ToListNN  &
(NN& '
)NN' (
;NN( )
returnPP 
OkPP 
(PP 
	resultat1PP 
)PP  
;PP  !
}SS 	
[TT 	
HttpGetTT	 
(TT 
$strTT +
)TT+ ,
]TT, -
publicUU 
asyncUU 
TaskUU 
<UU 
ActionResultUU &
>UU& '
GetTacheByUserUU( 6
(UU6 7
stringUU7 =
IdUserUU> D
)UUD E
{VV 	
varXX 
	resultat1XX 
=XX 
(XX 
fromXX !
tachesXX" (
inXX) +
_contextXX, 4
.XX4 5
TachesXX5 ;
select\\ #
new\\$ '
{]] 
Id__! #
=__$ %
taches__& ,
.__, -
Id__- /
,__/ 0
Description``! ,
=``- .
taches``/ 5
.``5 6
Description``6 A
,``A B
Chargeaa! '
=aa( )
tachesaa* 0
.aa0 1
Chargeaa1 7
,aa7 8
Createurbb! )
=bb* +
tachesbb, 2
.bb2 3
Createurbb3 ;
,bb; <
UserIdcc! '
=cc( )
tachescc* 0
.cc0 1
UserIdcc1 7
,cc7 8
StatutTacheIddd! .
=dd/ 0
tachesdd1 7
.dd7 8
StatutTacheIddd8 E
,ddE F
countTacheInImphh! 0
=hh1 2
tacheshh3 9
.hh9 :
DetailImputationshh: K
.hhK L
CounthhL Q
(hhQ R
)hhR S
}ii 
)ii 
.ii  
ToListii  &
(ii& '
)ii' (
;ii( )
returnkk 
Okkk 
(kk 
	resultat1kk 
)kk  
;kk  !
}nn 	
[oo 	
HttpGetoo	 
(oo 
$stroo 3
)oo3 4
]oo4 5
publicqq 
asyncqq 
Taskqq 
<qq 
ActionResultqq &
>qq& '
GetTachesByManagersqq( ;
(qq; <
stringqq< B

IdManagersqqC M
)qqM N
{rr 	
varss 
	resultat1ss 
=ss 
(ss 
fromss !
tachesss" (
inss) +
_contextss, 4
.ss4 5
Tachesss5 ;
joinvv !
usersvv" '
invv( *
_contextvv+ 3
.vv3 4
Usersvv4 9
onvv: <
tachesvv= C
.vvC D
UserIdvvD J
equalsvvK Q
usersvvR W
.vvW X
IdUservvX ^
selectxx #
newxx$ '
{yy 
Idzz! #
=zz$ %
tacheszz& ,
.zz, -
Idzz- /
,zz/ 0
Description{{! ,
={{- .
taches{{/ 5
.{{5 6
Description{{6 A
,{{A B
Charge||! '
=||( )
taches||* 0
.||0 1
Charge||1 7
,||7 8
Createur}}! )
=}}* +
taches}}, 2
.}}2 3
Createur}}3 ;
,}}; <
UserId~~! '
=~~( )
taches~~* 0
.~~0 1
UserId~~1 7
,~~7 8
StatutTacheId! .
=/ 0
taches1 7
.7 8
StatutTacheId8 E
,E F
User
! %
=
& '
users
( -
.
- .
FullName
. 6
,
6 7
countTacheInImp
! 0
=
1 2
taches
3 9
.
9 :
DetailImputations
: K
.
K L
Count
L Q
(
Q R
)
R S
}
 
)
 
.
  
Distinct
  (
(
( )
)
) *
.
* +
ToList
+ 1
(
1 2
)
2 3
;
3 4
return
 
Ok
 
(
 
	resultat1
 
)
  
;
  !
}
 	
[
 	
HttpGet
	 
(
 
$str
 
)
 
]
 
public
 
IActionResult
 
GetTache
 %
(
% &
string
& ,
id
- /
)
/ 0
{
 	
var
 
tache
 
=
 
(
 
from
 
t
 
in
  "
_context
# +
.
+ ,
Taches
, 2
join
 
d
  
in
! #
_context
$ ,
.
, -
DetailLivraisons
- =
on
> @
t
A B
.
B C
detailLivraisonId
C T
equals
U [
d
\ ]
.
] ^
Id
^ `
join
 
p
  
in
! #
_context
$ ,
.
, -
Projets
- 4
on
5 7
d
8 9
.
9 :
ProjetId
: B
equals
C I
p
J K
.
K L
Id
L N
join
 
pl
 !
in
" $
_context
% -
.
- .
ProjetLivraisons
. >
on
? A
d
B C
.
C D
ProjetLivraisonId
D U
equals
V \
pl
] _
.
_ `
Id
` b
join
 
u
  
in
! #
_context
$ ,
.
, -
Users
- 2
on
3 5
t
6 7
.
7 8
UserId
8 >
equals
? E
u
F G
.
G H
IdUser
H N
where
 
t
  !
.
! "
Id
" $
==
$ &
id
& (
select
  
new
! $
{
 
Id
  
=
! "
t
# $
.
$ %
Id
% '
,
' (
premierImputation
 /
=
0 1
t
2 3
.
3 4
premierImputation
4 E
,
E F
status
 $
=
% &
t
' (
.
( )
status
) /
,
/ 0
Description
 )
=
* +
t
, -
.
- .
Description
. 9
,
9 :
Createur
 &
=
' (
t
) *
.
* +
Createur
+ 3
,
3 4
Charge
 $
=
% &
t
' (
.
( )
Charge
) /
,
/ 0
chargeConsomme
 ,
=
- .
t
/ 0
.
0 1
chargeConsomme
1 ?
,
? @
DateCreation
 *
=
+ ,
t
- .
.
. /
DateCreation
/ ;
,
; <
detailLivraisonId
 /
=
0 1
t
2 3
.
3 4
detailLivraisonId
4 E
,
E F
t
¡¡ 
.
¡¡ 
	lienAzure
¡¡ '
,
¡¡' (
t
¢¢ 
.
¢¢ 
publique
¢¢ &
,
¢¢& '
projetLivraisonId
££ /
=
££0 1
new
££2 5
{
¤¤ 

projetName
¥¥" ,
=
¥¥- .
pl
¥¥/ 1
.
¥¥1 2

ProjetName
¥¥2 <
+
¥¥= >
$str
¥¥? D
+
¥¥E F
pl
¥¥G I
.
¥¥I J
Delivery
¥¥J R
,
¥¥R S
id
§§" $
=
§§% &
pl
§§( *
.
§§* +
Id
§§+ -
,
§§- .
}
¨¨ 
,
¨¨  
userName
©© &
=
©©' (
u
©©) *
.
©©* +
FullName
©©+ 3
,
©©3 4
userId
ªª $
=
ªª$ %
t
ªª% &
.
ªª& '
UserId
ªª' -
,
ªª- .

projetName
«« (
=
««) *
p
««+ ,
.
««, -
Nommenclature
««- :
+
««; <
$str
««= A
+
««B C
d
««D E
.
««E F
Delivery
««F N
,
««N O!
ProjetLivraisonName
¬¬ 1
=
¬¬2 3
pl
¬¬4 6
.
¬¬6 7

ProjetName
¬¬7 A
+
¬¬B C
$str
¬¬D H
+
¬¬I J
pl
¬¬K M
.
¬¬M N
Delivery
¬¬N V
,
¬¬V W
countValidated
­­ ,
=
­­- .
t
­­/ 0
.
­­0 1
DetailImputations
­­1 B
.
­­B C
Count
­­C H
(
­­H I
)
­­I J
}
¯¯ 
)
¯¯ 
.
¯¯ 
FirstOrDefault
¯¯ +
(
¯¯+ ,
)
¯¯, -
;
¯¯- .
if
±± 
(
±± 
tache
±± 
==
±± 
null
±± 
)
±± 
{
²² 
return
³³ 
NotFound
³³ 
(
³³  
)
³³  !
;
³³! "
}
´´ 
return
¶¶ 
Ok
¶¶ 
(
¶¶ 
tache
¶¶ 
)
¶¶ 
;
¶¶ 
}
·· 	
[
ÈÈ 	
HttpPost
ÈÈ	 
(
ÈÈ 
$str
ÈÈ  
)
ÈÈ  !
]
ÈÈ! "
public
ÉÉ 
async
ÉÉ 
Task
ÉÉ 
<
ÉÉ 
IActionResult
ÉÉ '
>
ÉÉ' (
GetTacheUserAsync
ÉÉ) :
(
ÉÉ: ;
Search
ÉÉ; A
Search
ÉÉB H
)
ÉÉH I
{
ÊÊ 	
int
ËË 
offset
ËË 
=
ËË 
(
ËË 
Search
ËË  
.
ËË  !
page
ËË! %
*
ËË& '
Search
ËË( .
.
ËË. /
size
ËË/ 3
)
ËË3 4
;
ËË4 5
var
ÍÍ 
result
ÍÍ 
=
ÍÍ 
(
ÍÍ 
from
ÍÍ 
t
ÍÍ  
in
ÍÍ! #
_context
ÍÍ$ ,
.
ÍÍ, -
Taches
ÍÍ- 3
where
ÎÎ! &
(
ÎÎ' (
Search
ÎÎ( .
.
ÎÎ. /
detailLivraisonId
ÎÎ/ @
==
ÎÎA C
$str
ÎÎD G
||
ÎÎH J
t
ÎÎL M
.
ÎÎM N
detailLivraisonId
ÎÎN _
==
ÎÎ` b
Search
ÎÎc i
.
ÎÎi j
detailLivraisonId
ÎÎj {
)
ÎÎ{ |
&&
ÎÎ} 
(
ÐÐ 
Search
ÐÐ %
.
ÐÐ% &
status
ÐÐ& ,
==
ÐÐ- /
$str
ÐÐ0 3
||
ÐÐ4 6
t
ÐÐ7 8
.
ÐÐ8 9
status
ÐÐ9 ?
==
ÐÐ@ B
Search
ÐÐC I
.
ÐÐI J
status
ÐÐJ P
)
ÐÐP Q
&&
ÐÐR T
(
ÑÑ 
Search
ÑÑ %
.
ÑÑ% &
type
ÑÑ& *
==
ÑÑ+ -
$str
ÑÑ. 1
||
ÑÑ2 4
t
ÑÑ5 6
.
ÑÑ6 7
publique
ÑÑ7 ?
==
ÑÑ@ B
bool
ÑÑC G
.
ÑÑG H
Parse
ÑÑH M
(
ÑÑM N
Search
ÑÑN T
.
ÑÑT U
type
ÑÑU Y
)
ÑÑY Z
)
ÑÑZ [
&&
ÑÑ\ ^
(
ÒÒ 
Search
ÒÒ %
.
ÒÒ% &
idUser
ÒÒ& ,
==
ÒÒ- /
$str
ÒÒ0 2
||
ÒÒ3 5
t
ÒÒ6 7
.
ÒÒ7 8
UserId
ÒÒ8 >
==
ÒÒ? A
Search
ÒÒB H
.
ÒÒH I
idUser
ÒÒI O
)
ÒÒO P
join
ÓÓ #
d
ÓÓ$ %
in
ÓÓ& (
_context
ÓÓ) 1
.
ÓÓ1 2
DetailLivraisons
ÓÓ2 B
on
ÓÓC E
t
ÓÓF G
.
ÓÓG H
detailLivraisonId
ÓÓH Y
equals
ÓÓZ `
d
ÓÓa b
.
ÓÓb c
Id
ÓÓc e
where
ÔÔ #
(
ÔÔ$ %
Search
ÔÔ% +
.
ÔÔ+ ,
projetLivraisonId
ÔÔ, =
==
ÔÔ> @
$str
ÔÔA C
||
ÔÔD F
d
ÔÔG H
.
ÔÔH I
ProjetLivraisonId
ÔÔI Z
==
ÔÔ[ ]
Search
ÔÔ^ d
.
ÔÔd e
projetLivraisonId
ÔÔe v
)
ÔÔv w
join
ÕÕ "
p
ÕÕ# $
in
ÕÕ% '
_context
ÕÕ( 0
.
ÕÕ0 1
Projets
ÕÕ1 8
on
ÕÕ9 ;
d
ÕÕ< =
.
ÕÕ= >
ProjetId
ÕÕ> F
equals
ÕÕG M
p
ÕÕN O
.
ÕÕO P
Id
ÕÕP R
join
ÖÖ !
pl
ÖÖ" $
in
ÖÖ% '
_context
ÖÖ( 0
.
ÖÖ0 1
ProjetLivraisons
ÖÖ1 A
on
ÖÖB D
d
ÖÖE F
.
ÖÖF G
ProjetLivraisonId
ÖÖG X
equals
ÖÖY _
pl
ÖÖ` b
.
ÖÖb c
Id
ÖÖc e
join
×× !
u
××" #
in
××$ &
_context
××' /
.
××/ 0
Users
××0 5
on
××6 8
t
××9 :
.
××: ;
UserId
××; A
equals
××B H
u
××I J
.
××J K
IdUser
××K Q
into
××R V
joinedT
××W ^
from
ØØ !
us
ØØ" $
in
ØØ% '
joinedT
ØØ( /
.
ØØ/ 0
DefaultIfEmpty
ØØ0 >
(
ØØ> ?
)
ØØ? @
select
ÚÚ $
new
ÚÚ% (
{
ÛÛ 
t
ÜÜ" #
.
ÜÜ# $
publique
ÜÜ$ ,
,
ÜÜ, -
Id
ÝÝ" $
=
ÝÝ% &
t
ÝÝ' (
.
ÝÝ( )
Id
ÝÝ) +
,
ÝÝ+ ,
premierImputation
ÞÞ" 3
=
ÞÞ4 5
t
ÞÞ6 7
.
ÞÞ7 8
premierImputation
ÞÞ8 I
,
ÞÞI J
status
ßß" (
=
ßß) *
t
ßß+ ,
.
ßß, -
status
ßß- 3
,
ßß3 4
Description
àà" -
=
àà. /
t
àà0 1
.
àà1 2
Description
àà2 =
,
àà= >
Createur
áá" *
=
áá+ ,
t
áá- .
.
áá. /
Createur
áá/ 7
,
áá7 8
Charge
ââ" (
=
ââ) *
t
ââ+ ,
.
ââ, -
Charge
ââ- 3
,
ââ3 4
chargeConsomme
ãã" 0
=
ãã1 2
t
ãã3 4
.
ãã4 5
chargeConsomme
ãã5 C
,
ããC D
DateCreation
ää" .
=
ää/ 0
t
ää1 2
.
ää2 3
DateCreation
ää3 ?
,
ää? @
userName
åå" *
=
åå+ ,
us
åå- /
==
åå0 2
null
åå3 7
?
åå8 9
String
åå: @
.
åå@ A
Empty
ååA F
:
ååG H
us
ååI K
.
ååK L
FullName
ååL T
,
ååT U

projetName
ææ" ,
=
ææ- .
p
ææ/ 0
.
ææ0 1
Nommenclature
ææ1 >
+
ææ? @
$str
ææ@ D
+
ææD E
d
ææE F
.
ææF G
Delivery
ææG O
,
ææO P!
ProjetLivraisonName
çç" 5
=
çç6 7
pl
çç8 :
.
çç: ;

ProjetName
çç; E
+
ççF G
$str
ççG K
+
ççK L
pl
ççM O
.
ççO P
Delivery
ççP X
,
ççX Y
countTacheInImp
èè" 1
=
èè2 3
t
èè4 5
.
èè5 6
DetailImputations
èè6 G
.
èèG H
Count
èèH M
(
èèM N
)
èèN O
,
èèO P$
counttacheNotvalidated
êê" 8
=
êê9 :
t
êê; <
.
êê< =
DetailImputations
êê= N
.
êêN O
Where
êêO T
(
êêT U
x
êêU V
=>
êêV X
x
êêX Y
.
êêY Z

Imputation
êêZ d
.
êêd e
StatusImputation
êêe u
==
êêv x
$num
êêy z
)
êêz {
.
êê{ |
Countêê| 
(êê 
)êê 
}
ëë 
)
ëë  
.
ëë  !
ToList
ëë! '
(
ëë' (
)
ëë( )
;
ëë) *
var
íí 
nbTotalResults
íí 
=
íí  
result
íí! '
.
íí' (
Count
íí( -
(
íí- .
)
íí. /
;
íí/ 0
var
îî 
data
îî 
=
îî 
result
îî 
.
îî 
OrderByDescending
îî /
(
îî/ 0
x
îî0 1
=>
îî2 4
x
îî5 6
.
îî6 7
DateCreation
îî7 C
)
îîC D
.
îîD E
Skip
îîE I
(
îîI J
offset
îîJ P
)
îîP Q
.
îîQ R
Take
îîR V
(
îîV W
Search
îîW ]
.
îî] ^
size
îî^ b
)
îîb c
.
îîc d
ToList
îîd j
(
îîj k
)
îîk l
;
îîl m
return
ðð 
Ok
ðð 
(
ðð 
new
ðð 
{
ðð 
nbTotalResults
ðð *
,
ðð* +
data
ðð, 0
}
ðð1 2
)
ðð2 3
;
ðð3 4
}
ññ 	
[
ôô 	
HttpPost
ôô	 
(
ôô 
$str
ôô &
)
ôô& '
]
ôô' (
public
õõ 
async
õõ 
Task
õõ 
<
õõ 
IActionResult
õõ '
>
õõ' ( 
GetTachesByManager
õõ) ;
(
õõ; <
Search
õõ< B
Search
õõC I
)
õõI J
{
öö 	
int
ùù 
offset
ùù 
=
ùù 
(
ùù 
Search
ùù  
.
ùù  !
page
ùù! %
*
ùù& '
Search
ùù( .
.
ùù. /
size
ùù/ 3
)
ùù3 4
;
ùù4 5
var
ûû 
result
ûû 
=
ûû 
(
ûû 
from
ûû 
t
ûû  
in
ûû! #
_context
ûû$ ,
.
ûû, -
Taches
ûû- 3
where
üü 
(
üü  !
Search
üü! '
.
üü' (
detailLivraisonId
üü( 9
==
üü: <
$str
üü= @
||
üüA C
t
üüD E
.
üüE F
detailLivraisonId
üüF W
==
üüX Z
Search
üü[ a
.
üüa b
detailLivraisonId
üüb s
)
üüs t
&&
üüu w
(
þþ 
Search
þþ 
.
þþ 
status
þþ %
==
þþ& (
$str
þþ) ,
||
þþ- /
t
þþ0 1
.
þþ1 2
status
þþ2 8
==
þþ9 ;
Search
þþ< B
.
þþB C
status
þþC I
)
þþI J
&&
þþK M
(
ÿÿ 
Search
ÿÿ 
.
ÿÿ 
type
ÿÿ #
==
ÿÿ$ &
$str
ÿÿ' *
||
ÿÿ+ -
t
ÿÿ. /
.
ÿÿ/ 0
publique
ÿÿ0 8
==
ÿÿ9 ;
bool
ÿÿ< @
.
ÿÿ@ A
Parse
ÿÿA F
(
ÿÿF G
Search
ÿÿG M
.
ÿÿM N
type
ÿÿN R
)
ÿÿR S
)
ÿÿS T
&&
ÿÿU W
(
 
Search
 
.
 
idUser
 %
==
& (
$str
) +
||
, .
t
/ 0
.
0 1
UserId
1 7
==
8 :
Search
; A
.
A B
idUser
B H
)
H I
join
 
d
  
in
! #
_context
$ ,
.
, -
DetailLivraisons
- =
on
> @
t
A B
.
B C
detailLivraisonId
C T
equals
U [
d
\ ]
.
] ^
Id
^ `
where
 
(
  !
Search
! '
.
' (
projetLivraisonId
( 9
==
: <
$str
= ?
||
@ B
d
C D
.
D E
ProjetLivraisonId
E V
==
W Y
Search
Z `
.
` a
projetLivraisonId
a r
)
r s
join
 
p
  
in
! #
_context
$ ,
.
, -
Projets
- 4
on
5 7
d
8 9
.
9 :
ProjetId
: B
equals
C I
p
J K
.
K L
Id
L N
join
 
pl
 !
in
" $
_context
% -
.
- .
ProjetLivraisons
. >
on
? A
d
B C
.
C D
ProjetLivraisonId
D U
equals
V \
pl
] _
.
_ `
Id
` b
join
 
pt
 !
in
" $
_context
% -
.
- .
ProjetEquipes
. ;
on
< >
p
? @
.
@ A
Id
A C
equals
D J
pt
K M
.
M N
ProjetId
N V
where
 
(
  !
Search
! '
.
' (
	ManagerId
( 1
==
2 4
$str
5 7
||
8 :
pt
; =
.
= >
Equipe
> D
.
D E
	ManagerId
E N
==
O Q
Search
R X
.
X Y
	ManagerId
Y b
||
c e
t
f g
.
g h
UserId
h n
==
o q
Search
r x
.
x y
	ManagerIdy 
) 
select
  
new
! $
{
 
t
 
.
  
publique
  (
,
( )
Id
  
=
! "
t
# $
.
$ %
Id
% '
,
' (
premierImputation
 /
=
0 1
t
2 3
.
3 4
premierImputation
4 E
,
E F
status
 $
=
% &
t
' (
.
( )
status
) /
,
/ 0
Description
 )
=
* +
t
, -
.
- .
Description
. 9
,
9 :
Createur
 &
=
' (
t
) *
.
* +
Createur
+ 3
,
3 4
Charge
 $
=
% &
t
' (
.
( )
Charge
) /
,
/ 0
chargeConsomme
 ,
=
- .
t
/ 0
.
0 1
chargeConsomme
1 ?
,
? @
DateCreation
 *
=
+ ,
t
- .
.
. /
DateCreation
/ ;
,
; <
userName
 &
=
' (
t
) *
.
* +
User
+ /
==
0 2
null
3 7
?
8 9
String
: @
.
@ A
Empty
A F
:
G H
t
I J
.
J K
User
K O
.
O P
FullName
P X
,
X Y

projetName
 (
=
) *
p
+ ,
.
, -
Nommenclature
- :
+
; <
$str
= A
+
B C
d
D E
.
E F
Delivery
F N
,
N O!
ProjetLivraisonName
 1
=
2 3
pl
4 6
.
6 7

ProjetName
7 A
+
B C
$str
D H
+
I J
pl
K M
.
M N
Delivery
N V
,
V W
countTacheInImp
 -
=
. /
t
0 1
.
1 2
DetailImputations
2 C
.
C D
Count
D I
(
I J
)
J K
,
K L$
counttacheNotvalidated
 4
=
5 6
t
7 8
.
8 9
DetailImputations
9 J
.
J K
Where
K P
(
P Q
x
Q R
=>
S U
x
V W
.
W X

Imputation
X b
.
b c
StatusImputation
c s
==
t v
$num
w x
)
x y
.
y z
Count
z 
( 
) 
}
 
)
 
.
 
ToList
 #
(
# $
)
$ %
;
% &
var
 
nbTotalResults
 
=
  
result
! '
.
' (
Count
( -
(
- .
)
. /
;
/ 0
var
 
data
 
=
 
result
 
.
 
OrderByDescending
 /
(
/ 0
x
0 1
=>
2 4
x
5 6
.
6 7
DateCreation
7 C
)
C D
.
D E
Skip
E I
(
I J
offset
J P
)
P Q
.
Q R
Take
R V
(
V W
Search
W ]
.
] ^
size
^ b
)
b c
.
c d
ToList
d j
(
j k
)
k l
;
l m
return
 
Ok
 
(
 
new
 
{
 
nbTotalResults
 *
,
* +
data
, 0
}
1 2
)
2 3
;
3 4
}
ÇÇ 	
[
ÊÊ 	
HttpGet
ÊÊ	 
(
ÊÊ 
$str
ÊÊ 
)
ÊÊ 
]
ÊÊ 
public
ËË 
async
ËË 
Task
ËË 
<
ËË 
ActionResult
ËË &
<
ËË& '
Tache
ËË' ,
>
ËË, -
>
ËË- .
	GetTaches
ËË/ 8
(
ËË8 9
string
ËË9 ?
id
ËË@ B
)
ËËB C
{
ÌÌ 	
var
ÍÍ 
result
ÍÍ 
=
ÍÍ 
await
ÍÍ 
_context
ÍÍ '
.
ÍÍ' (
Taches
ÍÍ( .
.
ÍÍ. /
Where
ÍÍ/ 4
(
ÍÍ4 5
x
ÍÍ5 6
=>
ÍÍ7 9
x
ÍÍ: ;
.
ÍÍ; <
User
ÍÍ< @
.
ÍÍ@ A
IdUser
ÍÍA G
==
ÍÍH J
id
ÍÍK M
)
ÍÍM N
.
ÍÍN O
ToListAsync
ÍÍO Z
(
ÍÍZ [
)
ÍÍ[ \
;
ÍÍ\ ]
return
ÎÎ 
Ok
ÎÎ 
(
ÎÎ 
result
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
[
öö 	
HttpPost
öö	 
]
öö 
public
÷÷ 
async
÷÷ 
Task
÷÷ 
<
÷÷ 
ActionResult
÷÷ &
<
÷÷& '
Tache
÷÷' ,
>
÷÷, -
>
÷÷- .
	PostTache
÷÷/ 8
(
÷÷8 9
Tache
÷÷9 >
tache
÷÷? D
)
÷÷D E
{
øø 	
if
ùù 
(
ùù 
string
ùù 
.
ùù 
IsNullOrEmpty
ùù $
(
ùù$ %
tache
ùù% *
.
ùù* +
Id
ùù+ -
)
ùù- .
)
ùù. /
{
úú 
if
ûû 
(
ûû 
tache
ûû 
.
ûû 
UserId
ûû  
==
ûû! #
$str
ûû$ .
)
ûû. /
tache
üü 
.
üü 
UserId
üü  
=
üü! "
null
üü# '
;
üü' (
tache
ýý 
.
ýý 
Id
ýý 
=
ýý 
null
ýý 
;
ýý  
tache
þþ 
.
þþ 
DateCreation
þþ "
=
þþ# $
DateTime
þþ% -
.
þþ- .
Now
þþ. 1
.
þþ1 2
ToString
þþ2 :
(
þþ: ;
)
þþ; <
;
þþ< =
_context
ÿÿ 
.
ÿÿ 
Taches
ÿÿ 
.
ÿÿ  
Add
ÿÿ  #
(
ÿÿ# $
tache
ÿÿ$ )
)
ÿÿ) *
;
ÿÿ* +
}
 
else
 
{
 
_context
 
.
 
Entry
 
(
 
tache
 $
)
$ %
.
% &
State
& +
=
, -
EntityState
. 9
.
9 :
Modified
: B
;
B C
}
 
await
 
_context
 
.
 
SaveChangesAsync
 +
(
+ ,
)
, -
;
- .
return
 
CreatedAtAction
 "
(
" #
$str
# -
,
- .
new
/ 2
{
3 4
id
5 7
=
8 9
tache
: ?
.
? @
Id
@ B
}
C D
,
D E
tache
F K
)
K L
;
L M
}
 	
[
 
HttpPost
 
(
 
$str
 
)
 
]
  
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
Tache
' ,
>
, -
>
- .
DeleteTache
/ :
(
: ;
string
; A
id
B D
)
D E
{
 	
var
 
tache
 
=
 
await
 
_context
 &
.
& '
Taches
' -
.
- .
	FindAsync
. 7
(
7 8
id
8 :
)
: ;
;
; <
if
 
(
 
tache
 
==
 
null
 
)
 
{
 
return
 
NotFound
 
(
  
)
  !
;
! "
}
 
_context
 
.
 
Taches
 
.
 
Remove
 "
(
" #
tache
# (
)
( )
;
) *
await
 
_context
 
.
 
SaveChangesAsync
 +
(
+ ,
)
, -
;
- .
return
 
tache
 
;
 
}
 	
[
 	
HttpPost
	 
(
 
$str
 !
)
! "
]
" #
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
Tache
' ,
>
, -
>
- .
completeTache
/ <
(
< =
string
= C
id
D F
)
F G
{
 	
var
 
tache
 
=
 
await
 
_context
 &
.
& '
Taches
' -
.
- .
	FindAsync
. 7
(
7 8
id
8 :
)
: ;
;
; <
if
 
(
 
tache
 
==
 
null
 
)
 
{
   
return
¡¡ 
NotFound
¡¡ 
(
¡¡  
)
¡¡  !
;
¡¡! "
}
¢¢ 
tache
££ 
.
££ 
status
££ 
=
££ 
$str
££ 
;
££ 
_context
¤¤ 
.
¤¤ 
Entry
¤¤ 
(
¤¤ 
tache
¤¤  
)
¤¤  !
.
¤¤! "
State
¤¤" '
=
¤¤( )
EntityState
¤¤* 5
.
¤¤5 6
Modified
¤¤6 >
;
¤¤> ?
await
¥¥ 
_context
¥¥ 
.
¥¥ 
SaveChangesAsync
¥¥ +
(
¥¥+ ,
)
¥¥, -
;
¥¥- .
return
§§ 
tache
§§ 
;
§§ 
}
¨¨ 	
private
ªª 
bool
ªª 
TacheExists
ªª  
(
ªª  !
string
ªª! '
id
ªª( *
)
ªª* +
{
«« 	
return
¬¬ 
_context
¬¬ 
.
¬¬ 
Taches
¬¬ "
.
¬¬" #
Any
¬¬# &
(
¬¬& '
e
¬¬' (
=>
¬¬) +
e
¬¬, -
.
¬¬- .
Id
¬¬. 0
==
¬¬1 3
id
¬¬4 6
)
¬¬6 7
;
¬¬7 8
}
­­ 	
}
®® 
}¯¯ ¤
OC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\TTMsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class 
TTMsController 
:  !
ControllerBase" 0
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public 
TTMsController 
( 
PilotageDBContext /
context0 7
)7 8
{ 	
_context 
= 
context 
; 
} 	
}nn 
}oo ¹
VC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\TypeClientsController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public 

class !
TypeClientsController &
:' (
ControllerBase) 7
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
public !
TypeClientsController $
($ %
PilotageDBContext% 6
context7 >
)> ?
{ 	
_context 
= 
context 
; 
} 	
}nn 
}oo ¢¬
PC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\UsersController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 

EnableCors 
( 
$str 
) 
] 
public   

class   
UsersController    
:  ! "
ControllerBase  # 1
{!! 
private"" 
readonly"" 
IConfiguration"" '
_config""( /
;""/ 0
private## 
readonly## 
PilotageDBContext## *
_context##+ 3
;##3 4
private$$ 
readonly$$ 

RSAEncrypt$$ #

rSAEncrypt$$$ .
;$$. /
private%% 
readonly%% 
AppSettings%% $
_appSettings%%% 1
;%%1 2
public&& 
UsersController&& 
(&& 
IConfiguration&& -
	configure&&. 7
,&&7 8
PilotageDBContext&&9 J
context&&K R
,&&R S
IOptions&&T \
<&&\ ]
AppSettings&&] h
>&&h i
appSettings&&j u
,&&u v

RSAEncrypt	&&w 

rSAEncrypt
&& 
)
&& 
{'' 	
_appSettings(( 
=(( 
appSettings(( &
?((& '
.((' (
Value((( -
;((- .
this)) 
.)) 
_config)) 
=)) 
	configure)) $
;))$ %
_context** 
=** 
context** 
;** 
this++ 
.++ 

rSAEncrypt++ 
=++ 

rSAEncrypt++ (
;++( )
},, 	
[.. 	
AllowAnonymous..	 
].. 
[// 	
HttpPost//	 
(// 
$str// 
)// 
]// 
public00 
async00 
Task00 
<00 
IActionResult00 '
>00' (

LoginAsync00) 3
(003 4
[004 5
FromBody005 =
]00= >

LoginModel00> H
login00I N
)00N O
{11 	
try22 
{33 
string77 
pass77 
=77 
await77 #
DecryptPassword77$ 3
(773 4
login774 9
.779 :
AdresseEmail77: F
)77F G
;77G H
login88 
.88 
AdresseEmail88 "
=88# $
login88% *
.88* +
AdresseEmail88+ 7
.887 8
ToLower888 ?
(88? @
)88@ A
.88A B
Trim88B F
(88F G
)88G H
;88H I
var99 
user99 
=99 
await99  
_context99! )
.99) *
Users99* /
.99/ 0
Include990 7
(997 8
x998 9
=>99: <
x99= >
.99> ?
equipeUsers99? J
)99J K
.99K L
Include99L S
(99S T
x99T U
=>99V X
x99Y Z
.99Z [
UserPermissions99[ j
)99j k
.99k l
ThenInclude99l w
(99w x
x99x y
=>99z |
x99} ~
.99~ 

Permission	99 
)
99 
.::/ 0
FirstOrDefaultAsync::0 C
(::C D
u::D E
=>::F H
u::I J
.::J K
AdresseEmail::K W
.::W X
ToLower::X _
(::_ `
)::` a
==::b d
login::e j
.::j k
AdresseEmail::k w
&&::x z
pass::{ 
==
:: 
login
:: 
.
:: 

MotDePasse
:: 
)
:: 
;
:: 
if<< 
(<< 
user<< 
==<< 
null<<  
)<<  !
{== 
return>> 
Ok>> 
(>> 
new>> !
{>>" #

codeRetour>>$ .
=>>/ 0
$num>>1 4
}>>5 6
)>>6 7
;>>7 8
}?? 
else@@ 
if@@ 
(@@ 
!@@ 
user@@ 
.@@ 
lockoutEnabled@@ -
)@@- .
{AA 
returnBB 
OkBB 
(BB 
newBB !
{BB" #

codeRetourBB$ .
=BB/ 0
$numBB1 4
}BB5 6
)BB6 7
;BB7 8
}DD 
elseFF 
{GG 
userII 
.II 
lastConnexionII &
=II' (
DateTimeII) 1
.II1 2
NowII2 5
;II5 6
userJJ 
.JJ 
	confirmedJJ "
=JJ# $
trueJJ% )
;JJ) *
_contextLL 
.LL 
EntryLL "
(LL" #
userLL# '
)LL' (
.LL( )
StateLL) .
=LL/ 0
EntityStateLL1 <
.LL< =
ModifiedLL= E
;LLE F
awaitMM 
_contextMM "
.MM" #
SaveChangesAsyncMM# 3
(MM3 4
)MM4 5
;MM5 6
}NN 
varOO 
tokenStringOO 
=OO  ! 
GenerateJSONWebTokenOO" 6
(OO6 7
userOO7 ;
)OO; <
;OO< =
returnQQ 
OkQQ 
(QQ 
newQQ 
{RR 
idTT 
=TT 
userTT 
.TT 
IdUserTT $
,TT$ %
nameUU 
=UU 
userUU 
.UU  
FullNameUU  (
,UU( )
emailVV 
=VV 
userVV  
.VV  !
AdresseEmailVV! -
,VV- .
profileWW 
=WW 
userWW "
.WW" #
ProfilIdWW# +
,WW+ ,
FirstImputationXX #
=XX$ %
userXX& *
.XX* +
FirstImputationXX+ :
,XX: ;
LastImputationYY "
=YY# $
userYY% )
.YY) *
LastImputationYY* 8
,YY8 9
role\\ 
=\\ 
RoleType\\ #
.\\# $
GetRole\\$ +
(\\+ ,
user\\, 0
.\\0 1
Type\\1 5
)\\5 6
,\\6 7
permissions]] 
=]]  !
user]]" &
.]]& '
UserPermissions]]' 6
.]]6 7
Select]]7 =
(]]= >
x]]> ?
=>]]@ B
x]]C D
.]]D E

Permission]]E O
.]]O P
Name]]P T
)]]T U
.]]U V
ToList]]V \
(]]\ ]
)]]] ^
,]]^ _
token^^ 
=^^ 
tokenString^^ '
}__ 
)__ 
;__ 
}`` 
catchaa 
(aa 
	Exceptionaa 
exaa 
)aa  
{bb 
returncc 

BadRequestcc !
(cc! "
excc" $
)cc$ %
;cc% &
}dd 
}ee 
privatevv 
stringvv  
GenerateJSONWebTokenvv +
(vv+ ,
Uservv, 0
userInfovv1 9
)vv9 :
{ww 	
varxx 
securityKeyxx 
=xx 
newxx ! 
SymmetricSecurityKeyxx" 6
(xx6 7
Encodingxx7 ?
.xx? @
UTF8xx@ D
.xxD E
GetBytesxxE M
(xxM N
_configxxN U
[xxU V
$strxxV _
]xx_ `
)xx` a
)xxa b
;xxb c
varyy 
credentialsyy 
=yy 
newyy !
SigningCredentialsyy" 4
(yy4 5
securityKeyyy5 @
,yy@ A
SecurityAlgorithmsyyB T
.yyT U

HmacSha256yyU _
)yy_ `
;yy` a
var{{ 
token{{ 
={{ 
new{{ 
JwtSecurityToken{{ ,
({{, -
_config{{- 4
[{{4 5
$str{{5 A
]{{A B
,{{B C
_config|| 
[|| 
$str|| "
]||" #
,||# $
claims}} 
:}} 
new}} 
Claim}} 
[}}  
]}}  !
{}}" #
new~~ 
Claim~~ 
(~~ 

ClaimTypes~~ &
.~~& '
Name~~' +
,~~+ ,
userInfo~~. 6
.~~6 7
FullName~~7 ?
)~~@ A
,~~A B
new 
Claim 
( 

ClaimTypes &
.& '
NameIdentifier' 5
,5 6
userInfo7 ?
.? @
IdUser@ F
.F G
ToStringG O
(O P
)P Q
)Q R
,R S
new
 
Claim
 
(
 

ClaimTypes
 &
.
& '
Email
' ,
,
, -
userInfo
. 6
.
6 7
AdresseEmail
7 C
)
C D
,
D E
new
 
Claim
 
(
 
$str
 %
,
% &
userInfo
' /
.
/ 0
ProfilId
0 8
??
8 :
$str
: <
)
< =
,
= >
new
 
Claim
 
(
 

ClaimTypes
 &
.
& '
Role
' +
,
+ ,
RoleType
- 5
.
5 6
GetRole
6 =
(
= >
userInfo
> F
.
F G
Type
G K
)
K L
)
L M
}
 
,
 
null
 
,
 
expires
 
:
 
DateTime
 
.
  
Now
  #
.
# $
	AddMonths
$ -
(
- .
$num
. /
)
/ 0
,
0 1 
signingCredentials
  
:
  !
credentials
" -
)
- .
;
. /
return
 
new
 %
JwtSecurityTokenHandler
 .
(
. /
)
/ 0
.
0 1

WriteToken
1 ;
(
; <
token
< A
)
A B
;
B C
}
 	
[
 	
HttpGet
	 
(
 
$str
 #
)
# $
]
$ %
public
 
IActionResult
 
GetUsersFullName
 -
(
- .
)
. /
{
 	
var
 
resultat
 
=
 
_context
 #
.
# $
Users
$ )
.
) *
Select
* 0
(
0 1
x
1 2
=>
3 5
new
6 9
{
 
IdUser
 
=
 
x
 
.
 
IdUser
 !
,
! "
x
 
.
 
FullName
 
,
 
}
 
)
 
.
 
ToList
 
(
 
)
 
;
 
return
 
Ok
 
(
 
resultat
 
)
 
;
  
}
 	
[
¡¡ 	
HttpGet
¡¡	 
(
¡¡ 
$str
¡¡ @
)
¡¡@ A
]
¡¡A B
public
¢¢ 
IActionResult
¢¢ '
GetUsersByDetailLivraison
¢¢ 6
(
¢¢6 7
string
¢¢7 =
idDetailLivraison
¢¢> O
)
¢¢O P
{
££ 	
var
¥¥ 
resultat
¥¥ 
=
¥¥ 
(
¥¥ 
from
¥¥  
u
¥¥! "
in
¥¥# %
_context
¥¥& .
.
¥¥. /
Users
¥¥/ 4
join
©©  
e
©©! "
in
©©# %
_context
©©& .
.
©©. /

EquipeUser
©©/ 9
on
©©: <
u
©©= >
.
©©> ?
IdUser
©©? E
equals
©©F L
e
©©M N
.
©©N O
UserId
©©O U
join
««  
p
««! "
in
««# %
_context
««& .
.
««. /
ProjetEquipes
««/ <
on
««= ?
e
««@ A
.
««A B
EquipeId
««B J
equals
««K Q
p
««R S
.
««S T
EquipeId
««T \
join
¬¬  
d
¬¬! "
in
¬¬# %
_context
¬¬& .
.
¬¬. /
DetailLivraisons
¬¬/ ?
on
¬¬@ B
p
¬¬C D
.
¬¬D E
ProjetId
¬¬E M
equals
¬¬N T
d
¬¬U V
.
¬¬V W
ProjetId
¬¬W _
where
­­  
d
­­% &
.
­­& '
Id
­­' )
==
­­) +
idDetailLivraison
­­+ <
select
¯¯ "
new
¯¯# &
{
¯¯' (
IdUser
±±# )
=
±±* +
u
±±, -
.
±±- .
IdUser
±±. 4
,
±±4 5
u
²²# $
.
²²$ %
FullName
²²% -
,
²²- .
}
´´ 
)
´´ 
.
´´ 
ToList
´´ $
(
´´$ %
)
´´% &
;
´´& '
return
¶¶ 
Ok
¶¶ 
(
¶¶ 
resultat
¶¶ 
)
¶¶ 
;
¶¶  
}
¸¸ 	
[
¿¿ 	
HttpGet
¿¿	 
(
¿¿ 
$str
¿¿ &
)
¿¿& '
]
¿¿' (
public
ÀÀ 
async
ÀÀ 
Task
ÀÀ 
<
ÀÀ 
ActionResult
ÀÀ &
>
ÀÀ& '!
GetUsersWithEquipes
ÀÀ( ;
(
ÀÀ; <
)
ÀÀ< =
{
ÁÁ 	
var
ÄÄ 
	resultat1
ÄÄ 
=
ÄÄ 
await
ÄÄ !
(
ÄÄ" #
from
ÄÄ# '
user
ÄÄ( ,
in
ÄÄ- /
_context
ÄÄ0 8
.
ÄÄ8 9
Users
ÄÄ9 >
select
ÉÉ# )
new
ÉÉ* -
{
ÊÊ# $
user
ËË' +
.
ËË+ ,
IdUser
ËË, 2
,
ËË2 3
user
ÌÌ' +
.
ÌÌ+ ,
FullName
ÌÌ, 4
,
ÌÌ4 5
equips
ÍÍ' -
=
ÍÍ. /
user
ÍÍ0 4
.
ÍÍ4 5
equips
ÍÍ5 ;
.
ÍÍ; <
Select
ÍÍ< B
(
ÍÍB C
x
ÍÍC D
=>
ÍÍE G
new
ÍÍH K
{
ÍÍL M
x
ÍÍN O
.
ÍÍO P
Id
ÍÍP R
}
ÍÍS T
)
ÍÍT U
.
ÍÍU V
ToList
ÍÍV \
(
ÍÍ\ ]
)
ÍÍ] ^
,
ÍÍ^ _
equipeUsers
ÎÎ' 2
=
ÎÎ3 4
user
ÎÎ5 9
.
ÎÎ9 :
equipeUsers
ÎÎ: E
.
ÎÎE F
Select
ÎÎF L
(
ÎÎL M
x
ÎÎM N
=>
ÎÎO Q
new
ÎÎR U
{
ÎÎV W
EquipeId
ÐÐ+ 3
=
ÐÐ4 5
x
ÐÐ6 7
.
ÐÐ7 8
EquipeId
ÐÐ8 @
,
ÐÐ@ A
UserId
ÑÑ+ 1
=
ÑÑ2 3
x
ÑÑ4 5
.
ÑÑ5 6
UserId
ÑÑ6 <
}
ÒÒ' (
)
ÒÒ( )
.
ÒÒ) *
ToList
ÒÒ* 0
(
ÒÒ0 1
)
ÒÒ1 2
,
ÒÒ2 3
}
ØØ# $
)
ØØ$ %
.
ØØ% &
ToListAsync
ØØ& 1
(
ØØ1 2
)
ØØ2 3
;
ØØ3 4
return
ÝÝ 
Ok
ÝÝ 
(
ÝÝ 
	resultat1
ÝÝ 
)
ÝÝ  
;
ÝÝ  !
}
ßß 	
[
ãã 	
HttpGet
ãã	 
(
ãã 
$str
ãã %
)
ãã% &
]
ãã& '
public
ää 
async
ää 
Task
ää 
<
ää 
ActionResult
ää &
>
ää& ' 
GetUsersbyProjects
ää( :
(
ää: ;
string
ää; A
	projectId
ääB K
)
ääK L
{
åå 	
var
èè 
	resultat1
èè 
=
èè 
await
èè !
(
èè" #
from
èè# '
user
èè( ,
in
èè- /
_context
èè0 8
.
èè8 9
Users
èè9 >
select
íí# )
new
íí* -
{
îî# $
user
ïï' +
.
ïï+ ,
IdUser
ïï, 2
,
ïï2 3
user
ðð' +
.
ðð+ ,
FullName
ðð, 4
,
ðð4 5
equips
ññ' -
=
ññ. /
user
ññ2 6
.
ññ6 7
equips
ññ7 =
.
ññ= >
Select
ññ> D
(
ññD E
x
ññE F
=>
ññF H
new
ññH K
{
ññL M
x
ññN O
.
ññO P
Id
ññP R
}
ññS T
)
ññT U
.
ññU V
ToList
ññV \
(
ññ\ ]
)
ññ] ^
,
ññ^ _
equipeUsers
òò' 2
=
òò3 4
user
òò5 9
.
òò9 :
equipeUsers
òò: E
.
òòE F
Select
òòF L
(
òòL M
x
òòM N
=>
òòO Q
new
òòR U
{
òòV W
EquipeId
ôô+ 3
=
ôô3 4
x
ôô6 7
.
ôô7 8
EquipeId
ôô8 @
,
ôô@ A
UserId
õõ+ 1
=
õõ1 2
x
õõ3 4
.
õõ4 5
UserId
õõ5 ;
}
õõ< =
)
õõ= >
.
õõ> ?
ToList
õõ? E
(
õõE F
)
õõF G
,
õõG H
}
ûû# $
)
ûû$ %
.
ûû% &
ToListAsync
ûû& 1
(
ûû1 2
)
ûû2 3
;
ûû3 4
return
 
Ok
 
(
 
	resultat1
 
)
  
;
  !
}
 	
[
 	
HttpGet
	 
(
 
$str
 ;
)
; <
]
< =
public
 
IActionResult
 *
GetUsersByManagerWithEquipes
 9
(
9 :
string
: @
	idManager
A J
)
J K
{
 	
var
 
resultat
 
=
 
(
 
from
  
users
! &
in
' )
_context
* 2
.
2 3
Users
3 8
join
  

equipeUser
! +
in
, .
_context
/ 7
.
7 8

EquipeUser
8 B
on
C E
users
F K
.
K L
IdUser
L R
equals
S Y

equipeUser
Z d
.
d e
UserId
e k
join
  
equips
! '
in
( *
_context
+ 3
.
3 4
Equips
4 :
on
; =

equipeUser
> H
.
H I
EquipeId
I Q
equals
R X
equips
Y _
.
_ `
Id
` b
where
 !
users
" '
.
' (
lockoutEnabled
( 6
==
7 9
true
: >
&&
? A
(
B C
equips
C I
.
I J
	ManagerId
J S
==
T V
	idManager
W `
||
a c
users
d i
.
i j
IdUser
j p
==
p r
	idManager
r {
)
{ |
select
 "
new
# &
{
 
users
  %
.
% &
equips
& ,
,
, -
IdUser
  &
=
' (
users
) .
.
. /
IdUser
/ 5
,
5 6
FullName
  (
=
) *
users
+ 0
.
0 1
FullName
1 9
,
9 :
equipeUsers
  +
=
, -
users
. 3
.
3 4
equipeUsers
4 ?
.
? @
Where
@ E
(
E F
x
F G
=>
H J
x
K L
.
L M
Equipe
M S
.
S T
	ManagerId
T ]
==
^ `
	idManager
a j
||
k m
x
n o
.
o p
UserId
p v
==
w y
	idManagerz 
) 
. 
Select 
( 
x 
=> 
new 
{ 
EquipeId
$ ,
=
- .
x
/ 0
.
0 1
EquipeId
1 9
,
9 :
UserId
$ *
=
+ ,
x
- .
.
. /
UserId
/ 5
}
  !
)
! "
.
" #
Distinct
# +
(
+ ,
)
, -
}
 
)
 
.
 
Distinct
 '
(
' (
)
( )
.
) *
ToList
* 0
(
0 1
)
1 2
;
2 3
return
 
Ok
 
(
 
resultat
 
)
 
;
  
}
¡¡ 	
[
¥¥ 	
HttpGet
¥¥	 
(
¥¥ 
$str
¥¥ 0
)
¥¥0 1
]
¥¥1 2
public
§§ 
IActionResult
§§ 
GetUsersByManager
§§ .
(
§§. /
string
§§/ 5
	idManager
§§6 ?
)
§§? @
{
¨¨ 	
var
ªª 
resultat
ªª 
=
ªª 
(
ªª 
from
ªª !
users
ªª" '
in
ªª( *
_context
ªª+ 3
.
ªª3 4
Users
ªª4 9
where
ªª; @
users
ªªC H
.
ªªH I
Type
ªªI M
==
ªªM O
UserType
ªªP X
.
ªªX Y
User
ªªY ]
join
«« !

equipeUser
««" ,
in
««- /
_context
««0 8
.
««8 9

EquipeUser
««9 C
on
««D F
users
««G L
.
««L M
IdUser
««M S
equals
««T Z

equipeUser
««[ e
.
««e f
UserId
««f l
join
¬¬ !
equips
¬¬" (
in
¬¬) +
_context
¬¬, 4
.
¬¬4 5
Equips
¬¬5 ;
on
¬¬< >

equipeUser
¬¬? I
.
¬¬I J
EquipeId
¬¬J R
equals
¬¬S Y
equips
¬¬Z `
.
¬¬` a
Id
¬¬a c
where
®® "
(
®®# $
equips
®®$ *
.
®®* +
	ManagerId
®®+ 4
==
®®5 7
	idManager
®®8 A
||
®®B D
users
®®E J
.
®®J K
IdUser
®®K Q
==
®®R T
	idManager
®®U ^
)
®®^ _
select
°° #
new
°°$ '
{
±± 
IdUser
²²  &
=
²²' (
users
²²) .
.
²². /
IdUser
²²/ 5
,
²²5 6
Nom
³³  #
=
³³$ %
users
³³& +
.
³³+ ,
Nom
³³, /
,
³³/ 0
Prenom
´´  &
=
´´' (
users
´´) .
.
´´. /
Prenom
´´/ 5
,
´´5 6
users
µµ  %
.
µµ% &
FullName
µµ& .
,
µµ. /
AdresseEmail
¶¶  ,
=
¶¶- .
users
¶¶/ 4
.
¶¶4 5
AdresseEmail
¶¶5 A
,
¶¶A B
ProfilId
··  (
=
··) *
users
··+ 0
.
··0 1
ProfilId
··1 9
,
··9 :
	confirmed
¸¸  )
=
¸¸* +
users
¸¸, 1
.
¸¸1 2
	confirmed
¸¸2 ;
,
¸¸; <
type
¹¹  $
=
¹¹% &
users
¹¹' ,
.
¹¹, -
Type
¹¹- 1
,
¹¹1 2
lastConnexion
ºº  -
=
ºº. /
users
ºº0 5
.
ºº5 6
lastConnexion
ºº6 C
,
ººC D
lockoutEnabled
»»  .
=
»»/ 0
users
»»1 6
.
»»6 7
lockoutEnabled
»»7 E
,
»»E F
managerofgroup
¼¼  .
=
¼¼/ 0
users
¼¼1 6
.
¼¼6 7
equips
¼¼7 =
.
¼¼= >
Count
¼¼> C
,
¼¼C D
	expertise
½½  )
=
½½* +
users
½½, 1
.
½½1 2
	expertise
½½2 ;
,
½½; <
}
ÀÀ 
)
ÀÀ 
.
ÀÀ 
Distinct
ÀÀ '
(
ÀÀ' (
)
ÀÀ( )
.
ÀÀ) *
ToList
ÀÀ* 0
(
ÀÀ0 1
)
ÀÀ1 2
;
ÀÀ2 3
return
ÃÃ 
Ok
ÃÃ 
(
ÃÃ 
resultat
ÃÃ 
)
ÃÃ 
;
ÃÃ  
}
ÅÅ 	
[
ÇÇ 	
HttpGet
ÇÇ	 
(
ÇÇ 
$str
ÇÇ 
)
ÇÇ 
]
ÇÇ 
public
ÉÉ 
IActionResult
ÉÉ 

GetManager
ÉÉ (
(
ÉÉ( )
)
ÉÉ) *
{
ÊÊ 	
return
ËË 
Ok
ËË 
(
ËË 
_context
ËË 
.
ËË  
Users
ËË  %
.
ËË% &
Where
ËË& +
(
ËË+ ,
x
ËË, -
=>
ËË- /
x
ËË/ 0
.
ËË0 1
Type
ËË1 5
!=
ËË5 7
UserType
ËË8 @
.
ËË@ A
User
ËËA E
)
ËËE F
.
ËËF G
ToList
ËËG M
(
ËËM N
)
ËËN O
)
ËËO P
;
ËËP Q
}
ÌÌ 	
[
ÎÎ 	
HttpGet
ÎÎ	 
(
ÎÎ 
$str
ÎÎ !
)
ÎÎ! "
]
ÎÎ" #
public
ÐÐ 
IActionResult
ÐÐ 
GetCommercials
ÐÐ +
(
ÐÐ+ ,
)
ÐÐ, -
{
ÑÑ 	
return
ÒÒ 
Ok
ÒÒ 
(
ÒÒ 
_context
ÒÒ 
.
ÒÒ 
Users
ÒÒ $
.
ÒÒ$ %
Where
ÒÒ% *
(
ÒÒ* +
x
ÒÒ+ ,
=>
ÒÒ- /
x
ÒÒ0 1
.
ÒÒ1 2
Type
ÒÒ2 6
==
ÒÒ7 9
UserType
ÒÒ: B
.
ÒÒB C

Commercial
ÒÒC M
||
ÒÒN P
x
ÒÒQ R
.
ÒÒR S
IdUser
ÒÒS Y
==
ÒÒY [
$strÒÒ\ 
)ÒÒ 
.ÒÒ 
SelectÒÒ 
(ÒÒ 
xÒÒ 
=>ÒÒ 
newÒÒ 
{ÒÒ 
xÒÒ 
.ÒÒ 
FullNameÒÒ 
,ÒÒ  ¡
xÒÒ¢ £
.ÒÒ£ ¤
IdUserÒÒ¤ ª
}ÒÒª «
)ÒÒ« ¬
.ÒÒ¬ ­
ToListÒÒ­ ³
(ÒÒ³ ´
)ÒÒ´ µ
)ÒÒµ ¶
;ÒÒ¶ ·
}
ÓÓ 	
[
×× 	
HttpGet
××	 
(
×× 
$str
×× #
)
××# $
]
××$ %
public
ÙÙ 
IActionResult
ÙÙ 
getUserInfo
ÙÙ (
(
ÙÙ( )
string
ÙÙ) /
id
ÙÙ0 2
)
ÙÙ2 3
{
ÚÚ 	
return
ÛÛ 
Ok
ÛÛ 
(
ÛÛ 
_context
ÛÛ 
.
ÛÛ 
Users
ÛÛ $
.
ÛÛ$ %
Where
ÛÛ% *
(
ÛÛ* +
x
ÛÛ+ ,
=>
ÛÛ- /
x
ÛÛ0 1
.
ÛÛ1 2
IdUser
ÛÛ2 8
==
ÛÛ9 ;
id
ÛÛ< >
)
ÛÛ> ?
.
ÛÛ? @
Select
ÛÛ@ F
(
ÛÛF G
x
ÛÛG H
=>
ÛÛH J
new
ÛÛJ M
{
ÛÛN O
x
ÝÝ 
.
ÝÝ 
FullName
ÝÝ 
,
ÝÝ 
x
ÞÞ 
.
ÞÞ 
	expertise
ÞÞ 
,
ÞÞ 
equipesName
ßß 
=
ßß 
x
ßß 
.
ßß 
equips
ßß  
.
ßß  !
Select
ßß! '
(
ßß' (
y
ßß( )
=>
ßß) +
y
ßß+ ,
.
ßß, -
Nom
ßß- 0
)
ßß0 1
.
ßß1 2
ToList
ßß2 8
(
ßß8 9
)
ßß9 :
,
ßß: ;
x
àà	 

.
àà
 
ProfilId
àà 
,
àà 
x
áá 
.
áá 
DateCreation
áá 
,
áá 
x
ââ 
.
ââ &
DateDerniereModification
ââ &
,
ââ& '
x
ãã 
.
ãã 
	Telephone
ãã 
,
ãã 
equipeNames
ää 
=
ää 
x
ää 
.
ää 
equipeUsers
ää &
.
ää& '
Select
ää' -
(
ää- .
y
ää. /
=>
ää/ 1
y
ää1 2
.
ää2 3
Equipe
ää3 9
.
ää9 :
Nom
ää: =
)
ää= >
.
ää> ?
ToList
ää? E
(
ääE F
)
ääF G
}
çç 
)
çç 
.
çç 
FirstOrDefault
çç 
(
çç 
)
çç 
)
çç  
;
çç  !
}
èè 	
[
êê 	
HttpGet
êê	 
(
êê 
$str
êê 2
)
êê2 3
]
êê3 4
public
ìì 
IActionResult
ìì (
getLivraisonRunningForUser
ìì 7
(
ìì7 8
string
ìì8 >
id
ìì? A
)
ììA B
{
íí 	
var
îî 
result
îî 
=
îî 
_context
îî !
.
îî! "
Taches
îî" (
.
îî( )
Where
îî) .
(
îî. /
x
îî/ 0
=>
îî1 3
x
îî4 5
.
îî5 6
UserId
îî6 <
==
îî= ?
id
îî@ B
)
îîB C
.
îîC D
Select
îîD J
(
îîJ K
x
îîK L
=>
îîM O
x
îîP Q
.
îîQ R
detailLivraison
îîR a
)
îîa b
.
îîb c
Select
îîc i
(
îîi j
x
îîj k
=>
îîl n
x
îîo p
.
îîp q
ProjetLivraisonîîq 
)îî 
.îî 
Distinctîî 
(îî 
)îî 
.îî 
Whereîî 
(îî 
xîî 
=>îî 
xîî 
.îî 
StatusIdîî ¢
==îî£ ¥
$strîî¦ ¯
)îî¯ °
.îî° ±
Selectîî± ·
(îî· ¸
xîî¸ ¹
=>îîº ¼
newîî¼ ¿
{îîÀ Á

projetNameîîÂ Ì
=îîÌ Í
xîîÎ Ï
.îîÏ Ð

ProjetNameîîÐ Ú
+îîÚ Û
$strîîÛ ß
+îîß à
xîîà á
.îîá â
Deliveryîîâ ê
,îîë ì
xîîì í
.îîí î
PlannedDateîîî ù
}îîù ú
)îîú û
.îîû ü
OrderByîîü 
(îî 
xîî 
=>îî 
xîî 
.îî 
PlannedDateîî 
)îî 
.îî 
ToListîî 
(îî 
)îî 
;îî 
return
ññ 
Ok
ññ 
(
ññ 
result
ññ 
)
ññ 
;
ññ  
}
òò 	
[
ôô 	
HttpGet
ôô	 
(
ôô 
$str
ôô /
)
ôô/ 0
]
ôô0 1
public
öö 
IActionResult
öö %
getUserStatProjectsInfo
öö 4
(
öö4 5
string
öö5 ;
id
öö< >
)
öö> ?
{
÷÷ 	
var
úú 
result
úú 
=
úú 
(
úú 
from
úú 
projet
úú %
in
úú& (
_context
úú) 1
.
úú1 2
Projets
úú2 9
join
ûû 
equips
ûû %
in
ûû& (
_context
ûû) 1
.
ûû1 2
ProjetEquipes
ûû2 ?
on
ûû@ B
projet
ûûC I
.
ûûI J
Id
ûûJ L
equals
ûûM S
equips
ûûT Z
.
ûûZ [
ProjetId
ûû[ c
join
üü 

equipsuser
üü )
in
üü* ,
_context
üü- 5
.
üü5 6

EquipeUser
üü6 @
on
üüA C
equips
üüD J
.
üüJ K
EquipeId
üüK S
equals
üüT Z

equipsuser
üü[ e
.
üüe f
EquipeId
üüf n
where
ýý 

equipsuser
ýý  *
.
ýý* +
UserId
ýý+ 1
==
ýý2 4
id
ýý5 7
||
ýý8 :

equipsuser
ýý; E
.
ýýE F
Equipe
ýýF L
.
ýýL M
	ManagerId
ýýM V
==
ýýV X
id
ýýX Z
select
þþ  
new
þþ! $
{
ÿÿ 
projet
 $
.
$ %
Id
% '
,
' (
projet
 $
.
$ %
Type
% )
,
) *
projet
 $
.
$ %
Nommenclature
% 2
,
2 3
projet
 $
.
$ %
Publique
% -
,
- .
taches
 $
=
% &
projet
' -
.
- .
DetailLivraisons
. >
.
> ?

SelectMany
? I
(
I J
s
J K
=>
L N
s
O P
.
P Q
taches
Q W
)
W X
.
X Y
Where
Y ^
(
^ _
f
_ `
=>
a c
f
d e
.
e f
UserId
f l
==
m o
id
p r
)
r s
,
s t
chargeTotale
 *
=
+ ,
projet
- 3
.
3 4
DetailLivraisons
4 D
.
D E

SelectMany
E O
(
O P
s
P Q
=>
R T
s
U V
.
V W
taches
W ]
)
] ^
.
^ _
Sum
_ b
(
b c
z
c d
=>
e g
Convert
h o
.
o p
ToDouble
p x
(
x y
z
y z
.
z {
chargeConsomme{ 
) 
) 
, 
}
 
)
 
;
 
var
 
projets
 
=
 
result
  
.
  !
Where
! &
(
& '
x
' (
=>
( *
x
* +
.
+ ,
taches
, 2
.
2 3
Count
3 8
(
8 9
)
9 :
>
: ;
$num
; <
)
< =
.
= >
Select
> D
(
D E
x
E F
=>
G I
new
J M
{
 
x
 
.
 
Id
 
,
 
x
 
.
 
Type
 
,
 
x
 
.
 
Nommenclature
 
,
  
x
 
.
 
Publique
 
,
 
chargeConsome
 
=
 
x
  !
.
! "
taches
" (
.
( )
Sum
) ,
(
, -
z
- .
=>
/ 1
Convert
2 9
.
9 :
ToDouble
: B
(
B C
z
C D
.
D E
chargeConsomme
E S
)
S T
)
T U
,
U V
chargeEstime
 
=
 
x
  
.
  !
taches
! '
.
' (
Sum
( +
(
+ ,
z
, -
=>
. 0
Convert
1 8
.
8 9
ToDouble
9 A
(
A B
z
B C
.
C D
Charge
D J
)
J K
)
K L
,
L M
chargeTotale
 
=
 
x
  
.
  !
chargeTotale
! -
,
- .
premierImputation
 !
=
" #
x
$ %
.
% &
taches
& ,
.
, -
Where
- 2
(
2 3
y
3 4
=>
5 7
y
8 9
.
9 :
premierImputation
: K
!=
K M
null
M Q
)
Q R
.
R S
OrderBy
S Z
(
Z [
y
[ \
=>
] _
y
` a
.
a b
premierImputation
b s
)
s t
.
t u
Select
u {
(
{ |
x
| }
=>~ 
x 
. !
premierImputation 
) 
. 
First 
( 
) 
}
 
)
 
;
 
var
 
projetss
 
=
 
projets
 "
.
" #
OrderBy
# *
(
* +
y
+ ,
=>
- /
y
0 1
.
1 2
premierImputation
2 C
)
C D
.
D E
Distinct
E M
(
M N
)
N O
.
O P
ToList
P V
(
V W
)
W X
;
X Y
return
 
Ok
 
(
 
new
 
{
 
projets
 
=
 
projetss
 !
,
! "
nbProjetTotale
 
=
  
projetss
! )
.
) *
Count
* /
(
/ 0
)
0 1
,
1 2#
chrgeFormationExterne
 %
=
& '
projetss
( 0
.
0 1
Where
1 6
(
6 7
x
7 8
=>
9 ;
x
< =
.
= >
Type
> B
==
C E
$str
F Y
)
Y Z
.
Z [
ToList
[ a
(
a b
)
b c
.
c d
Sum
d g
(
g h
x
h i
=>
j l
x
m n
.
n o
chargeConsome
o |
)
| }
,
} ~
chargeTechnique
 
=
  !
projetss
" *
.
* +
Where
+ 0
(
0 1
x
1 2
=>
3 5
x
6 7
.
7 8
Type
8 <
==
= ?
$str
@ K
)
K L
.
L M
ToList
M S
(
S T
)
T U
.
U V
Sum
V Y
(
Y Z
x
Z [
=>
\ ^
x
_ `
.
` a
chargeConsome
a n
)
n o
,
o p
chargeTotale
 
=
 
projetss
 &
.
& '
Sum
' *
(
* +
x
+ ,
=>
- /
x
0 1
.
1 2
chargeConsome
2 ?
)
? @
,
@ A#
ChrgeFormationInterne
 %
=
& '
projetss
( 0
.
0 1
Where
1 6
(
6 7
x
7 8
=>
9 ;
x
< =
.
= >
Type
> B
==
C E
$str
F Y
)
Y Z
.
Z [
ToList
[ a
(
a b
)
b c
.
c d
Sum
d g
(
g h
x
h i
=>
j l
x
m n
.
n o
chargeConsome
o |
)
| }
,
} ~
ChrgeMangement
   
=
    
projetss
  ! )
.
  ) *
Where
  * /
(
  / 0
x
  0 1
=>
  2 4
x
  5 6
.
  6 7
Type
  7 ;
==
  < >
$str
  ? J
)
  J K
.
  K L
ToList
  L R
(
  R S
)
  S T
.
  T U
Sum
  U X
(
  X Y
x
  Y Z
=>
  [ ]
x
  ^ _
.
  _ `
chargeConsome
  ` m
)
  m n
,
  n o
ChrgeExploitation
¡¡ !
=
¡¡" #
projetss
¡¡$ ,
.
¡¡, -
Where
¡¡- 2
(
¡¡2 3
x
¡¡3 4
=>
¡¡5 7
x
¡¡8 9
.
¡¡9 :
Type
¡¡: >
==
¡¡? A
$str
¡¡B P
)
¡¡P Q
.
¡¡Q R
ToList
¡¡R X
(
¡¡X Y
)
¡¡Y Z
.
¡¡Z [
Sum
¡¡[ ^
(
¡¡^ _
x
¡¡_ `
=>
¡¡a c
x
¡¡d e
.
¡¡e f
chargeConsome
¡¡f s
)
¡¡s t
,
¡¡t u
chargeAbcence
¢¢ 
=
¢¢ 
projetss
¢¢  (
.
¢¢( )
Where
¢¢) .
(
¢¢. /
x
¢¢/ 0
=>
¢¢1 3
x
¢¢4 5
.
¢¢5 6
Type
¢¢6 :
==
¢¢; =
$str
¢¢> G
)
¢¢G H
.
¢¢H I
ToList
¢¢I O
(
¢¢O P
)
¢¢P Q
.
¢¢Q R
Sum
¢¢R U
(
¢¢U V
x
¢¢V W
=>
¢¢X Z
x
¢¢[ \
.
¢¢\ ]
chargeConsome
¢¢] j
)
¢¢j k
,
¢¢k l 
nbFormationExterne
££ "
=
££# $
projetss
££% -
.
££- .
Where
££. 3
(
££3 4
x
££4 5
=>
££6 8
x
££9 :
.
££: ;
Type
££; ?
==
££@ B
$str
££C V
)
££V W
.
££W X
Count
££X ]
(
££] ^
)
££^ _
,
££_ `
nbTechnique
¤¤ 
=
¤¤ 
projetss
¤¤ &
.
¤¤& '
Where
¤¤' ,
(
¤¤, -
x
¤¤- .
=>
¤¤/ 1
x
¤¤2 3
.
¤¤3 4
Type
¤¤4 8
==
¤¤9 ;
$str
¤¤< G
)
¤¤G H
.
¤¤H I
Count
¤¤I N
(
¤¤N O
)
¤¤O P
,
¤¤P Q 
nbFormationInterne
¥¥ "
=
¥¥# $
projetss
¥¥% -
.
¥¥- .
Where
¥¥. 3
(
¥¥3 4
x
¥¥4 5
=>
¥¥6 8
x
¥¥9 :
.
¥¥: ;
Type
¥¥; ?
==
¥¥@ B
$str
¥¥C V
)
¥¥V W
.
¥¥W X
Count
¥¥X ]
(
¥¥] ^
)
¥¥^ _
,
¥¥_ `
nbExploitation
¦¦ 
=
¦¦  
projetss
¦¦! )
.
¦¦) *
Where
¦¦* /
(
¦¦/ 0
x
¦¦0 1
=>
¦¦2 4
x
¦¦5 6
.
¦¦6 7
Type
¦¦7 ;
==
¦¦< >
$str
¦¦? M
)
¦¦M N
.
¦¦N O
Count
¦¦O T
(
¦¦T U
)
¦¦U V
,
¦¦V W
nbManagment
§§ 
=
§§ 
projetss
§§ &
.
§§& '
Where
§§' ,
(
§§, -
x
§§- .
=>
§§/ 1
x
§§2 3
.
§§3 4
Type
§§4 8
==
§§9 ;
$str
§§< G
)
§§G H
.
§§H I
Count
§§I N
(
§§N O
)
§§O P
,
§§P Q
	nbAbcence
¨¨ 
=
¨¨ 
projetss
¨¨ $
.
¨¨$ %
Where
¨¨% *
(
¨¨* +
x
¨¨+ ,
=>
¨¨- /
x
¨¨0 1
.
¨¨1 2
Type
¨¨2 6
==
¨¨7 9
$str
¨¨: C
)
¨¨C D
.
¨¨D E
Count
¨¨E J
(
¨¨J K
)
¨¨K L
}
©© 
)
ªª 
;
ªª 
}
«« 	
[
­­ 	
HttpGet
­­	 
(
­­ 
$str
­­ 
)
­­ 
]
­­ 
public
®® 
async
®® 
Task
®® 
<
®® 
ActionResult
®® &
<
®®& '
User
®®' +
>
®®+ ,
>
®®, -
GetUser
®®. 5
(
®®5 6
string
®®6 <
id
®®= ?
)
®®? @
{
¯¯ 	
var
°° 
user
°° 
=
°° 
await
°° 
_context
°° %
.
°°% &
Users
°°& +
.
°°+ ,
	FindAsync
°°, 5
(
°°5 6
id
°°6 8
)
°°8 9
;
°°9 :
if
²² 
(
²² 
user
²² 
==
²² 
null
²² 
)
²² 
{
³³ 
return
´´ 
NotFound
´´ 
(
´´  
)
´´  !
;
´´! "
}
µµ 
user
¶¶ 
.
¶¶ 

MotDePasse
¶¶ 
=
¶¶ 

rSAEncrypt
¶¶ (
.
¶¶( )
Decrypt
¶¶) 0
(
¶¶0 1
user
¶¶1 5
.
¶¶5 6

MotDePasse
¶¶6 @
)
¶¶@ A
;
¶¶A B
return
¸¸ 
user
¸¸ 
;
¸¸ 
}
¹¹ 	
[
ºº 	
HttpGet
ºº	 
(
ºº 
$str
ºº !
)
ºº! "
]
ºº" #
public
»» 
async
»» 
Task
»» 
<
»» 
ActionResult
»» &
<
»»& '
List
»»' +
<
»»+ ,
User
»», 0
>
»»0 1
>
»»1 2
>
»»2 3
GetSimpleUser
»»4 A
(
»»A B
)
»»B C
{
¼¼ 	
var
½½ 
user
½½ 
=
½½ 
await
½½ 
_context
½½ %
.
½½% &
Users
½½& +
.
½½+ ,
Where
½½, 1
(
½½1 2
x
½½2 3
=>
½½3 5
x
½½5 6
.
½½6 7
Type
½½7 ;
==
½½; =
UserType
½½> F
.
½½F G
User
½½G K
)
½½K L
.
½½L M
ToListAsync
½½M X
(
½½X Y
)
½½Y Z
;
½½Z [
if
¿¿ 
(
¿¿ 
user
¿¿ 
==
¿¿ 
null
¿¿ 
)
¿¿ 
{
ÀÀ 
return
ÁÁ 
NotFound
ÁÁ 
(
ÁÁ  
)
ÁÁ  !
;
ÁÁ! "
}
ÂÂ 
return
ÄÄ 
user
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
[
ÇÇ 	
HttpGet
ÇÇ	 
(
ÇÇ 
$str
ÇÇ &
)
ÇÇ& '
]
ÇÇ' (
public
ÈÈ 
async
ÈÈ 
Task
ÈÈ 
<
ÈÈ 
ActionResult
ÈÈ &
<
ÈÈ& '
List
ÈÈ' +
<
ÈÈ+ ,
User
ÈÈ, 0
>
ÈÈ0 1
>
ÈÈ1 2
>
ÈÈ2 3!
GetUsersAndManagers
ÈÈ4 G
(
ÈÈG H
)
ÈÈH I
{
ÉÉ 	
var
ÊÊ 
user
ÊÊ 
=
ÊÊ 
await
ÊÊ 
_context
ÊÊ %
.
ÊÊ% &
Users
ÊÊ& +
.
ÊÊ+ ,
Where
ÊÊ, 1
(
ÊÊ1 2
x
ÊÊ2 3
=>
ÊÊ4 6
x
ÊÊ7 8
.
ÊÊ8 9
Type
ÊÊ9 =
==
ÊÊ> @
UserType
ÊÊA I
.
ÊÊI J
User
ÊÊJ N
||
ÊÊO Q
x
ÊÊR S
.
ÊÊS T
Type
ÊÊT X
==
ÊÊY [
UserType
ÊÊ\ d
.
ÊÊd e
Manager
ÊÊe l
)
ÊÊl m
.
ÊÊm n
ToListAsync
ÊÊn y
(
ÊÊy z
)
ÊÊz {
;
ÊÊ{ |
if
ÌÌ 
(
ÌÌ 
user
ÌÌ 
==
ÌÌ 
null
ÌÌ 
)
ÌÌ 
{
ÍÍ 
return
ÎÎ 
NotFound
ÎÎ 
(
ÎÎ  
)
ÎÎ  !
;
ÎÎ! "
}
ÏÏ 
return
ÑÑ 
user
ÑÑ 
;
ÑÑ 
}
ÒÒ 	
[
÷÷ 	
HttpPost
÷÷	 
]
÷÷ 
public
øø 
async
øø 
Task
øø 
<
øø 
ActionResult
øø &
<
øø& '
User
øø' +
>
øø+ ,
>
øø, -
PostUser
øø. 6
(
øø6 7
User
øø7 ;
user
øø< @
)
øø@ A
{
ùù 	
user
üü 
.
üü 

MotDePasse
üü 
=
üü 

rSAEncrypt
üü (
.
üü( )
Encrypt
üü) 0
(
üü0 1
user
üü1 5
.
üü5 6

MotDePasse
üü6 @
)
üü@ A
;
üüA B
var
ýý 
users
ýý 
=
ýý 
_context
ýý  
.
ýý  !
Users
ýý! &
.
ýý& '
Where
ýý' ,
(
ýý, -
x
ýý- .
=>
ýý/ 1
x
ýý2 3
.
ýý3 4
AdresseEmail
ýý4 @
==
ýýA C
user
ýýD H
.
ýýH I
AdresseEmail
ýýI U
)
ýýU V
.
ýýV W
FirstOrDefault
ýýW e
(
ýýe f
)
ýýf g
;
ýýg h
if
þþ 
(
þþ 
users
þþ 
!=
þþ 
null
þþ 
)
þþ 
{
ÿÿ 
return
 
Ok
 
(
 
new
 
{
 

codeRetour
  *
=
+ ,
$num
- 0
}
1 2
)
2 3
;
3 4
}
 
if
 
(
 
string
 
.
 
IsNullOrEmpty
 $
(
$ %
user
% )
.
) *
IdUser
* 0
)
0 1
)
1 2
{
 
user
 
.
 
DateCreation
 !
=
" #
DateTime
$ ,
.
, -
Now
- 0
.
0 1
ToString
1 9
(
9 :
)
: ;
;
; <
_context
 
.
 
Users
 
.
 
Add
 "
(
" #
user
# '
)
' (
;
( )
}
 
else
 
{
 
_context
 
.
 
Entry
 
(
 
user
 #
)
# $
.
$ %
State
% *
=
+ ,
EntityState
- 8
.
8 9
Modified
9 A
;
A B
}
 
await
 
_context
 
.
 
SaveChangesAsync
 +
(
+ ,
)
, -
;
- .
return
 
CreatedAtAction
 "
(
" #
$str
# ,
,
, -
new
. 1
{
2 3
id
4 6
=
7 8
user
9 =
.
= >
IdUser
> D
}
E F
,
F G
user
H L
)
L M
;
M N
}
 	
[
 	
HttpPost
	 
(
 
$str
 
)
  
]
  !
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (
	PutClient
) 2
(
2 3
string
3 9
id
: <
,
< =
User
> B
user
C G
)
G H
{
 	
if
 
(
 
id
 
!=
 
user
 
.
 
IdUser
 !
)
! "
{
 
return
 

BadRequest
 !
(
! "
)
" #
;
# $
}
 
user
 
.
 

MotDePasse
 
=
 
EncryptPassword
 ,
(
, -
user
- 1
.
1 2

MotDePasse
2 <
)
< =
;
= >
_context
 
.
 
Entry
 
(
 
user
 
)
  
.
  !
State
! &
=
' (
EntityState
) 4
.
4 5
Modified
5 =
;
= >
try
   
{
¡¡ 
await
¢¢ 
_context
¢¢ 
.
¢¢ 
SaveChangesAsync
¢¢ /
(
¢¢/ 0
)
¢¢0 1
;
¢¢1 2
return
££ 
Ok
££ 
(
££ 
)
££ 
;
££ 
}
¤¤ 
catch
¥¥ 
(
¥¥ *
DbUpdateConcurrencyException
¥¥ /
)
¥¥/ 0
{
¦¦ 
throw
¨¨ 
;
¨¨ 
}
ªª 
}
­­ 	
[
¯¯ 	
HttpPost
¯¯	 
(
¯¯ 
$str
¯¯  
)
¯¯  !
]
¯¯! "
public
°° 
async
°° 
Task
°° 
<
°° 
IActionResult
°° '
>
°°' (
disableUser
°°) 4
(
°°4 5
string
°°5 ;
id
°°< >
)
°°> ?
{
±± 	
var
²² 
user
²² 
=
²² 
_context
²² 
.
²²  
Users
²²  %
.
²²% &
Find
²²& *
(
²²* +
id
²²+ -
)
²²- .
;
²². /
if
³³ 
(
³³ 
user
³³ 
!=
³³ 
null
³³ 
)
³³ 
{
´´ 
user
¶¶ 
.
¶¶ 
lockoutEnabled
¶¶ #
=
¶¶$ %
false
¶¶& +
;
¶¶+ ,
if
·· 
(
·· 
user
·· 
.
·· 
LastImputation
·· '
==
··( *
null
··+ /
)
··/ 0
{
¸¸ 
user
¹¹ 
.
¹¹ 
LastImputation
¹¹ '
=
¹¹( )
DateTime
¹¹* 2
.
¹¹2 3
Now
¹¹3 6
;
¹¹6 7
}
ºº 
_context
»» 
.
»» 
Entry
»» 
(
»» 
user
»» #
)
»»# $
.
»»$ %
State
»»% *
=
»»+ ,
EntityState
»»- 8
.
»»8 9
Modified
»»9 A
;
»»A B
try
¼¼ 
{
½½ 
await
¾¾ 
_context
¾¾ "
.
¾¾" #
SaveChangesAsync
¾¾# 3
(
¾¾3 4
)
¾¾4 5
;
¾¾5 6
return
¿¿ 
Ok
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿  
}
ÀÀ 
catch
ÁÁ 
(
ÁÁ *
DbUpdateConcurrencyException
ÁÁ 3
)
ÁÁ3 4
{
ÂÂ 
throw
ÄÄ 
;
ÄÄ 
}
ÆÆ 
}
ÇÇ 
else
ÈÈ 
return
ÈÈ 

BadRequest
ÈÈ "
(
ÈÈ" #
)
ÈÈ# $
;
ÈÈ$ %
}
ÍÍ 	
[
îî 	
HttpPost
îî	 
(
îî 
$str
îî 
)
îî  
]
îî  !
public
ïï 
async
ïï 
Task
ïï 
<
ïï 
ActionResult
ïï &
<
ïï& '
User
ïï' +
>
ïï+ ,
>
ïï, -

DeleteUser
ïï. 8
(
ïï8 9
string
ïï9 ?
id
ïï@ B
)
ïïB C
{
ðð 	
var
ññ 
user
ññ 
=
ññ 
await
ññ 
_context
ññ %
.
ññ% &
Users
ññ& +
.
ññ+ ,
	FindAsync
ññ, 5
(
ññ5 6
id
ññ6 8
)
ññ8 9
;
ññ9 :
if
òò 
(
òò 
user
òò 
==
òò 
null
òò 
)
òò 
{
óó 
return
ôô 
NotFound
ôô 
(
ôô  
)
ôô  !
;
ôô! "
}
õõ 
_context
÷÷ 
.
÷÷ 
Users
÷÷ 
.
÷÷ 
Remove
÷÷ !
(
÷÷! "
user
÷÷" &
)
÷÷& '
;
÷÷' (
await
øø 
_context
øø 
.
øø 
SaveChangesAsync
øø +
(
øø+ ,
)
øø, -
;
øø- .
return
úú 
user
úú 
;
úú 
}
ûû 	
private
ýý 
bool
ýý 

UserExists
ýý 
(
ýý  
string
ýý  &
id
ýý' )
)
ýý) *
{
þþ 	
return
ÿÿ 
_context
ÿÿ 
.
ÿÿ 
Users
ÿÿ !
.
ÿÿ! "
Any
ÿÿ" %
(
ÿÿ% &
e
ÿÿ& '
=>
ÿÿ( *
e
ÿÿ+ ,
.
ÿÿ, -
IdUser
ÿÿ- 3
==
ÿÿ4 6
id
ÿÿ7 9
)
ÿÿ9 :
;
ÿÿ: ;
}
 	
[
 	
HttpGet
	 
]
 
public
 
IActionResult
 
GetUsers
 %
(
% &
)
& '
{
 	
var
 
resultat
 
=
 
_context
 #
.
# $
Users
$ )
.
) *
Include
* 1
(
1 2
x
2 3
=>
4 6
x
7 8
.
8 9
equipeUsers
9 D
)
D E
.
E F
Select
F L
(
L M
x
M N
=>
O Q
new
R U
{
 
IdUser
 
=
 
x
 
.
 
IdUser
 !
,
! "
Nom
 
=
 
x
 
.
 
Nom
 
,
 
Prenom
 
=
 
x
 
.
 
Prenom
 !
,
! "
x
 
.
 
FirstImputation
 !
,
! "
x
 
.
 
FullName
 
,
 
AdresseEmail
 
=
 
x
  
.
  !
AdresseEmail
! -
,
- .
ProfilId
 
=
 
x
 
.
 
ProfilId
 %
,
% &
	confirmed
 
=
 
x
 
.
 
	confirmed
 '
,
' (
type
 
=
 
x
 
.
 
Type
 
,
 
lastConnexion
 
=
 
x
  !
.
! "
lastConnexion
" /
,
/ 0
	expertise
 
=
 
x
 
.
 
	expertise
 '
,
' (
lockoutEnabled
 
=
  
x
! "
.
" #
lockoutEnabled
# 1
,
1 2
managerofgroup
 
=
  
x
! "
.
" #
equipeUsers
# .
.
. /
Where
/ 4
(
4 5
y
5 6
=>
7 9
y
: ;
.
; <
role
< @
==
A C
$str
D M
&&
N P
y
Q R
.
R S
UserId
S Y
==
Z \
x
] ^
.
^ _
IdUser
_ e
)
e f
.
f g
Count
g l
(
l m
)
m n
}
 
)
 
.
 
ToList
 
(
 
)
 
;
 
return
 
Ok
 
(
 
resultat
 
)
 
;
  
}
 	
[
¤¤ 	
HttpGet
¤¤	 
(
¤¤ 
$str
¤¤ +
)
¤¤+ ,
]
¤¤, -
public
¥¥ 
async
¥¥ 
Task
¥¥ 
<
¥¥ 
ActionResult
¥¥ &
<
¥¥& '
User
¥¥' +
>
¥¥+ ,
>
¥¥, -#
GetUserTasksByProject
¥¥. C
(
¥¥C D
string
¥¥D J
id
¥¥K M
,
¥¥M N
[
¥¥N O 
FromQueryAttribute
¥¥O a
]
¥¥a b
string
¥¥c i
userId
¥¥j p
)
¥¥p q
{
¦¦ 	
var
°° 
dbResult
°° 
=
°° 
await
°°  
_context
°°! )
.
°°) *
Taches
°°* 0
.
°°0 1
	GroupJoin
°°1 :
(
°°: ;
_context
°°; C
.
°°C D
DetailImputations
°°D U
,
°°U V
t
°°W X
=>
°°Y [
t
°°\ ]
.
°°] ^
Id
°°^ `
,
°°` a
i
°°b c
=>
°°d f
i
°°g h
.
°°h i
TacheId
°°i p
,
°°p q
(
±±: ;
task
±±; ?
,
±±? @
details
±±A H
)
±±H I
=>
±±J L
new
±±M P
{
±±Q R
task
±±S W
,
±±W X
details
±±Y `
}
±±a b
)
±±b c
.
²²8 9

SelectMany
²²9 C
(
²²C D
x
²²D E
=>
²²F H
x
²²I J
.
²²J K
details
²²K R
.
²²R S
DefaultIfEmpty
²²S a
(
²²a b
)
²²b c
,
²²c d
(
³³8 9
task
³³9 =
,
³³= >
detail
³³? E
)
³³E F
=>
³³G I
new
³³J M
{
³³N O
Task
³³P T
=
³³U V
task
³³W [
.
³³[ \
task
³³\ `
,
³³` a
Detail
³³b h
=
³³i j
detail
³³k q
}
³³r s
)
³³s t
.
´´8 9
	GroupJoin
´´9 B
(
´´B C
_context
´´C K
.
´´K L
Users
´´L Q
,
´´Q R
td
´´S U
=>
´´V X
td
´´Y [
.
´´[ \
Detail
´´\ b
.
´´b c

Imputation
´´c m
.
´´m n
UserId
´´n t
,
´´t u
u
´´v w
=>
´´x z
u
´´{ |
.
´´| }
IdUser´´} 
,´´ 
(
µµ8 9

taskDetail
µµ9 C
,
µµC D
users
µµE J
)
µµJ K
=>
µµL N
new
µµO R
{
µµS T

taskDetail
µµU _
,
µµ_ `
users
µµa f
}
µµg h
)
µµh i
.
¶¶8 9

SelectMany
¶¶9 C
(
¶¶C D
x
¶¶D E
=>
¶¶F H
x
¶¶I J
.
¶¶J K
users
¶¶K P
.
¶¶P Q
DefaultIfEmpty
¶¶Q _
(
¶¶_ `
)
¶¶` a
,
¶¶a b
(
··9 :
td
··: <
,
··< =
User
··> B
)
··B C
=>
··D F
new
··G J
{
··K L
td
··M O
.
··O P

taskDetail
··P Z
.
··Z [
Task
··[ _
,
··_ `
td
··a c
.
··c d

taskDetail
··d n
.
··n o
Detail
··o u
,
··u v
User
··w {
}
··| }
)
··} ~
.
¹¹8 9
ToListAsync
¹¹9 D
(
¹¹D E
)
¹¹E F
;
¹¹F G
var
»» 
Result
»» 
=
»» 
dbResult
»» !
.
»»! "
GroupBy
»»" )
(
»») *
x
»»* +
=>
»», .
x
»»/ 0
.
»»0 1
Task
»»1 5
)
»»5 6
.
¼¼5 6
Select
¼¼6 <
(
¼¼< =
x
¼¼= >
=>
¼¼? A
new
¼¼B E
{
½½5 6
Task
¾¾9 =
=
¾¾> ?
new
¾¾@ C
{
¾¾D E
x
¾¾F G
.
¾¾G H
Key
¾¾H K
.
¾¾K L
Id
¾¾L N
,
¾¾N O
x
¾¾P Q
.
¾¾Q R
Key
¾¾R U
.
¾¾U V
Description
¾¾V a
,
¾¾a b
x
¾¾c d
.
¾¾d e
Key
¾¾e h
.
¾¾h i
Charge
¾¾i o
,
¾¾o p
	TotalTime
¾¾q z
=
¾¾{ |
x
¾¾} ~
.
¾¾~ 
Sum¾¾ 
(¾¾ 
y¾¾ 
=>¾¾ 
GetTimeInHours¾¾ 
(¾¾ 
y¾¾ 
.¾¾ 
Detail¾¾ 
)¾¾  
)¾¾  ¡
}¾¾¢ £
,¾¾£ ¤
Details
¿¿9 @
=
¿¿A B
x
¿¿C D
.
¿¿D E
GroupBy
¿¿E L
(
¿¿L M
y
¿¿M N
=>
¿¿O Q
new
¿¿R U
{
¿¿V W
y
¿¿X Y
.
¿¿Y Z
User
¿¿Z ^
?
¿¿^ _
.
¿¿_ `
IdUser
¿¿` f
,
¿¿f g
y
¿¿h i
.
¿¿i j
User
¿¿j n
?
¿¿n o
.
¿¿o p
FullName
¿¿p x
}
¿¿y z
)
¿¿z {
.
¿¿{ |
Select¿¿| 
(¿¿ 
y¿¿ 
=>¿¿ 
new¿¿ 
{¿¿ 
User¿¿ 
=¿¿ 
y¿¿ 
.¿¿ 
Key¿¿ 
,¿¿ 
	TotalTime¿¿ ¥
=¿¿¦ §
y¿¿¨ ©
.¿¿© ª
Sum¿¿ª ­
(¿¿­ ®
z¿¿® ¯
=>¿¿° ²
GetTimeInHours¿¿³ Á
(¿¿Á Â
z¿¿Â Ã
.¿¿Ã Ä
Detail¿¿Ä Ê
)¿¿Ê Ë
)¿¿Ë Ì
}¿¿Í Î
)¿¿Î Ï
,¿¿Ï Ð
}
ÁÁ5 6
)
ÁÁ6 7
.
ÁÁ7 8
ToList
ÁÁ8 >
(
ÁÁ> ?
)
ÁÁ? @
;
ÁÁ@ A
double
ÃÃ 
GetTimeInHours
ÃÃ !
(
ÃÃ! "
DetailImputation
ÃÃ" 2
detail
ÃÃ3 9
)
ÃÃ9 :
{
ÄÄ 
TimeSpan
ÅÅ 
ConvertToTimeSpan
ÅÅ *
(
ÅÅ* +
string
ÅÅ+ 1
time
ÅÅ2 6
)
ÅÅ6 7
{
ÆÆ 
if
ÇÇ 
(
ÇÇ 
string
ÇÇ 
.
ÇÇ  
IsNullOrWhiteSpace
ÇÇ 1
(
ÇÇ1 2
time
ÇÇ2 6
)
ÇÇ6 7
)
ÇÇ7 8
return
ÈÈ 
new
ÈÈ "
TimeSpan
ÈÈ# +
(
ÈÈ+ ,
$num
ÈÈ, -
,
ÈÈ- .
$num
ÈÈ/ 0
,
ÈÈ0 1
$num
ÈÈ2 3
)
ÈÈ3 4
;
ÈÈ4 5
var
ÉÉ 
timecomponents
ÉÉ &
=
ÉÉ' (
time
ÉÉ) -
.
ÉÉ- .
Split
ÉÉ. 3
(
ÉÉ3 4
$char
ÉÉ4 7
,
ÉÉ7 8 
StringSplitOptions
ÉÉ9 K
.
ÉÉK L 
RemoveEmptyEntries
ÉÉL ^
)
ÉÉ^ _
;
ÉÉ_ `
int
ÊÊ 
.
ÊÊ 
TryParse
ÊÊ  
(
ÊÊ  !
timecomponents
ÊÊ! /
[
ÊÊ/ 0
$num
ÊÊ0 1
]
ÊÊ1 2
,
ÊÊ2 3
out
ÊÊ4 7
int
ÊÊ8 ;
hours
ÊÊ< A
)
ÊÊA B
;
ÊÊB C
int
ËË 
.
ËË 
TryParse
ËË  
(
ËË  !
timecomponents
ËË! /
[
ËË/ 0
$num
ËË0 1
]
ËË1 2
,
ËË2 3
out
ËË4 7
int
ËË8 ;
minutes
ËË< C
)
ËËC D
;
ËËD E
return
ÍÍ 
new
ÍÍ 
TimeSpan
ÍÍ '
(
ÍÍ' (
hours
ÍÍ( -
,
ÍÍ- .
minutes
ÍÍ/ 6
,
ÍÍ6 7
$num
ÍÍ8 9
)
ÍÍ9 :
;
ÍÍ: ;
}
ÎÎ 
if
ÏÏ 
(
ÏÏ 
detail
ÏÏ 
==
ÏÏ 
null
ÏÏ "
)
ÏÏ" #
detail
ÏÏ$ *
=
ÏÏ+ ,
new
ÏÏ- 0
DetailImputation
ÏÏ1 A
(
ÏÏA B
)
ÏÏB C
;
ÏÏC D
return
ÑÑ 
ConvertToTimeSpan
ÑÑ (
(
ÑÑ( )
detail
ÑÑ) /
.
ÑÑ/ 0
Monday
ÑÑ0 6
)
ÑÑ6 7
.
ÑÑ7 8
Add
ÑÑ8 ;
(
ÑÑ; <
ConvertToTimeSpan
ÑÑ< M
(
ÑÑM N
detail
ÑÑN T
.
ÑÑT U
Tuesday
ÑÑU \
)
ÑÑ\ ]
)
ÑÑ] ^
.
ÒÒ 
Add
ÒÒ 
(
ÒÒ 
ConvertToTimeSpan
ÒÒ 0
(
ÒÒ0 1
detail
ÒÒ1 7
.
ÒÒ7 8
	Wednesday
ÒÒ8 A
)
ÒÒA B
)
ÒÒB C
.
ÒÒC D
Add
ÒÒD G
(
ÒÒG H
ConvertToTimeSpan
ÒÒH Y
(
ÒÒY Z
detail
ÒÒZ `
.
ÒÒ` a
Thursday
ÒÒa i
)
ÒÒi j
)
ÒÒj k
.
ÓÓ 
Add
ÓÓ 
(
ÓÓ 
ConvertToTimeSpan
ÓÓ 0
(
ÓÓ0 1
detail
ÓÓ1 7
.
ÓÓ7 8
Friday
ÓÓ8 >
)
ÓÓ> ?
)
ÓÓ? @
.
ÔÔ 

TotalHours
ÔÔ %
;
ÔÔ% &
}
ÖÖ 
return
×× 
Ok
×× 
(
×× 
Result
×× 
)
×× 
;
×× 
}
ØØ 	
[
ÝÝ 	
HttpPost
ÝÝ	 
(
ÝÝ 
$str
ÝÝ (
)
ÝÝ( )
]
ÝÝ) *
public
ÞÞ 
async
ÞÞ 
Task
ÞÞ 
<
ÞÞ 
ActionResult
ÞÞ &
<
ÞÞ& '
User
ÞÞ' +
>
ÞÞ+ ,
>
ÞÞ, -%
GetUsersClientComercant
ÞÞ. E
(
ÞÞE F
Search
ÞÞF L
searsh
ÞÞM S
)
ÞÞS T
{
ßß 	
var
àà 
resultat
àà 
=
àà 
(
àà 
from
áá  
detail
áá! '
in
áá( *
_context
áá+ 3
.
áá3 4
DetailImputations
áá4 E
from
ãã  

imputation
ãã! +
in
ãã, .
_context
ãã/ 7
.
ãã7 8
Imputations
ãã8 C
.
ããC D
Where
ããD I
(
ããI J
x
ããJ K
=>
ããL N
x
ããO P
.
ããP Q
Id
ããQ S
==
ããT V
detail
ããW ]
.
ãã] ^
ImputationId
ãã^ j
&&
ããk m
x
ããn o
.
ãão p
UserId
ããp v
==
ããw y
searshããz 
.ãã 
idUserãã 
&&ãã 
(ãã 
searshãã 
.ãã 
	startDateãã 
==ãã 
nullãã ¢
||ãã£ ¥
xãã¦ §
.ãã§ ¨
	DateDebutãã¨ ±
>=ãã² ´
searshããµ »
.ãã» ¼
	startDateãã¼ Å
)ããÅ Æ
&&ããÇ É
(ããÊ Ë
searshããË Ñ
.ããÑ Ò
endDateããÒ Ù
==ããÚ Ü
nullããÝ á
||ããâ ä
xããå æ
.ããæ ç
DateFinããç î
<=ããï ñ
searshããò ø
.ããø ù
endDateããù 
)ãã 
)ãã 
from
ää  
tache
ää! &
in
ää' )
_context
ää* 2
.
ää2 3
Taches
ää3 9
.
ää9 :
Where
ää: ?
(
ää? @
x
ää@ A
=>
ääB D
detail
ääE K
.
ääK L
TacheId
ääL S
==
ääT V
x
ääW X
.
ääX Y
Id
ääY [
)
ää[ \
.
ää\ ]
DefaultIfEmpty
ää] k
(
ääk l
)
ääl m
from
åå  
detailL
åå! (
in
åå) +
_context
åå, 4
.
åå4 5
DetailLivraisons
åå5 E
.
ååE F
Where
ååF K
(
ååK L
x
ååL M
=>
ååN P
tache
ååQ V
.
ååV W
detailLivraisonId
ååW h
==
ååi k
x
åål m
.
ååm n
Id
åån p
)
ååp q
.
ååq r
DefaultIfEmptyåår 
(åå 
)åå 
from
ææ  
projet
ææ! '
in
ææ( *
_context
ææ+ 3
.
ææ3 4
Projets
ææ4 ;
.
ææ; <
Where
ææ< A
(
ææA B
x
ææB C
=>
ææD F
detailL
ææG N
.
ææN O
ProjetId
ææO W
==
ææX Z
x
ææ[ \
.
ææ\ ]
Id
ææ] _
)
ææ_ `
.
ææ` a
DefaultIfEmpty
ææa o
(
ææo p
)
ææp q
from
çç  
	livraison
çç! *
in
çç+ -
_context
çç. 6
.
çç6 7
ProjetLivraisons
çç7 G
.
ççG H
Where
ççH M
(
ççM N
x
ççN O
=>
ççP R
detailL
ççS Z
.
ççZ [
ProjetLivraisonId
çç[ l
==
ççm o
x
ççp q
.
ççq r
Id
ççr t
)
ççt u
.
ççu v
DefaultIfEmptyççv 
(çç 
)çç 
from
èè  
client
èè! '
in
èè( *
_context
èè+ 3
.
èè3 4
Clients
èè4 ;
.
èè; <
Where
èè< A
(
èèA B
x
èèB C
=>
èèD F
	livraison
èèG P
.
èèP Q
ClientId
èèQ Y
==
èèZ \
x
èè] ^
.
èè^ _
Id
èè_ a
)
èèa b
.
èèb c
DefaultIfEmpty
èèc q
(
èèq r
)
èèr s
select
ëë "
new
ëë# &
{
ìì 
detail
íí  &
,
íí& '

projetName
îî  *
=
îî+ ,
projet
îî- 3
.
îî3 4
Nommenclature
îî4 A
,
îîA B
projetId
ïï  (
=
ïï) *
projet
ïï+ 1
.
ïï1 2
Id
ïï2 4
,
ïï4 5

clientName
ðð  *
=
ðð+ ,
client
ðð- 3
.
ðð3 4
Nom
ðð4 7
,
ðð7 8
clientId
ññ  (
=
ññ) *
client
ññ+ 1
.
ññ1 2
Id
ññ2 4
,
ññ4 5
}
òò 
)
ôô  
.
ôô  !
ToList
ôô! '
(
ôô' (
)
ôô( )
;
ôô) *
var
ùù 
group
ùù 
=
ùù 
(
ùù 
from
ùù 
r
ùù 
in
ùù  "
resultat
ùù# +
group
úú 
r
úú  
by
úú! #
(
úú$ %
r
úú% &
.
úú& '
clientId
úú' /
,
úú/ 0
r
úú1 2
.
úú2 3

clientName
úú3 =
)
úú= >
into
úú? C
g
úúD E
select
ûû 
new
ûû  #
{
üü 
g
ýý 
.
ýý 
Key
ýý "
.
ýý" #

clientName
ýý# -
,
ýý- .
chargeParClient
þþ ,
=
þþ- .
g
þþ/ 0
.
þþ0 1
Select
þþ1 7
(
þþ7 8
x
þþ8 9
=>
þþ9 ;
x
þþ; <
.
þþ< =
detail
þþ= C
)
þþC D
.
þþD E
Sum
þþE H
(
þþH I
y
þþI J
=>
þþK M
GetTimeInHours
þþN \
(
þþ\ ]
y
þþ] ^
)
þþ^ _
)
þþ_ `
,
þþ` a
projets
 $
=
% &
(
' (
from
( ,
i
- .
in
/ 1
g
2 3
group
( -
i
. /
by
0 2
(
4 5
i
5 6
.
6 7
projetId
7 ?
,
? @
i
@ A
.
A B

projetName
B L
)
L M
into
N R
g2
S U
select
( .
new
/ 2
{
3 4
g2
, .
.
. /
Key
/ 2
.
2 3

projetName
3 =
,
= >
chargeParProjet
, ;
=
; <
g2
= ?
.
? @
Select
@ F
(
F G
x
G H
=>
I K
x
L M
.
M N
detail
N T
)
T U
.
U V
Sum
V Y
(
Y Z
y
Z [
=>
\ ^
GetTimeInHours
_ m
(
m n
y
n o
)
o p
)
p q
,
q r
}
, -
)
( )
}
 
)
 
.
 
ToList
 "
(
" #
)
# $
;
$ %
return
ÍÍ 
Ok
ÍÍ 
(
ÍÍ 
group
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÐÐ 	
[
ÕÕ 	
	NonAction
ÕÕ	 
]
ÕÕ 
public
×× 
double
×× 
GetTimeInHours
×× %
(
××% &
DetailImputation
××& 6
detail
××7 =
)
××= >
{
ØØ 	
TimeSpan
ÙÙ 
ConvertToTimeSpan
ÙÙ &
(
ÙÙ& '
string
ÙÙ' -
time
ÙÙ. 2
)
ÙÙ2 3
{
ÚÚ 
if
ÛÛ 
(
ÛÛ 
string
ÛÛ 
.
ÛÛ  
IsNullOrWhiteSpace
ÛÛ -
(
ÛÛ- .
time
ÛÛ. 2
)
ÛÛ2 3
)
ÛÛ3 4
return
ÜÜ 
new
ÜÜ 
TimeSpan
ÜÜ '
(
ÜÜ' (
$num
ÜÜ( )
,
ÜÜ) *
$num
ÜÜ+ ,
,
ÜÜ, -
$num
ÜÜ. /
)
ÜÜ/ 0
;
ÜÜ0 1
var
ÝÝ 
timecomponents
ÝÝ "
=
ÝÝ# $
time
ÝÝ% )
.
ÝÝ) *
Split
ÝÝ* /
(
ÝÝ/ 0
$char
ÝÝ0 3
,
ÝÝ3 4 
StringSplitOptions
ÝÝ5 G
.
ÝÝG H 
RemoveEmptyEntries
ÝÝH Z
)
ÝÝZ [
;
ÝÝ[ \
int
ÞÞ 
.
ÞÞ 
TryParse
ÞÞ 
(
ÞÞ 
timecomponents
ÞÞ +
[
ÞÞ+ ,
$num
ÞÞ, -
]
ÞÞ- .
,
ÞÞ. /
out
ÞÞ0 3
int
ÞÞ4 7
hours
ÞÞ8 =
)
ÞÞ= >
;
ÞÞ> ?
int
ßß 
.
ßß 
TryParse
ßß 
(
ßß 
timecomponents
ßß +
[
ßß+ ,
$num
ßß, -
]
ßß- .
,
ßß. /
out
ßß0 3
int
ßß4 7
minutes
ßß8 ?
)
ßß? @
;
ßß@ A
return
áá 
new
áá 
TimeSpan
áá #
(
áá# $
hours
áá$ )
,
áá) *
minutes
áá+ 2
,
áá2 3
$num
áá4 5
)
áá5 6
/
áá7 8
$num
áá9 :
;
áá: ;
}
ââ 
if
ãã 
(
ãã 
detail
ãã 
==
ãã 
null
ãã 
)
ãã 
detail
ãã  &
=
ãã' (
new
ãã) ,
DetailImputation
ãã- =
(
ãã= >
)
ãã> ?
;
ãã? @
return
åå 
ConvertToTimeSpan
åå $
(
åå$ %
detail
åå% +
.
åå+ ,
Monday
åå, 2
)
åå2 3
.
åå3 4
Add
åå4 7
(
åå7 8
ConvertToTimeSpan
åå8 I
(
ååI J
detail
ååJ P
.
ååP Q
Tuesday
ååQ X
)
ååX Y
)
ååY Z
.
ææ 
Add
ææ 
(
ææ 
ConvertToTimeSpan
ææ ,
(
ææ, -
detail
ææ- 3
.
ææ3 4
	Wednesday
ææ4 =
)
ææ= >
)
ææ> ?
.
ææ? @
Add
ææ@ C
(
ææC D
ConvertToTimeSpan
ææD U
(
ææU V
detail
ææV \
.
ææ\ ]
Thursday
ææ] e
)
ææe f
)
ææf g
.
çç 
Add
çç 
(
çç 
ConvertToTimeSpan
çç ,
(
çç, -
detail
çç- 3
.
çç3 4
Friday
çç4 :
)
çç: ;
)
çç; <
.
èè 

TotalHours
èè !
;
èè! "
}
êê 	
[
íí 	
HttpPost
íí	 
(
íí 
$str
íí  
)
íí  !
]
íí! "
public
îî 
async
îî 
Task
îî 
<
îî 
ActionResult
îî &
<
îî& '
User
îî' +
>
îî+ ,
>
îî, -
GetUsersStat
îî. :
(
îî: ;
Search
îî; A
searsh
îîB H
)
îîH I
{
ïï 	
var
ññ 
resultdb
ññ 
=
ññ 
_context
ññ #
.
ññ# $
Projets
ññ$ +
.
ññ+ ,
Select
ññ, 2
(
ññ2 3
x
ññ3 4
=>
ññ5 7
new
ññ8 ;
{
òò 
x
óó 
.
óó 
Id
óó 
,
óó 
x
ôô 
.
ôô 
Nommenclature
ôô 
,
ôô  
x
õõ 
.
õõ 
Type
õõ 
,
õõ 
x
öö 
.
öö 
Publique
öö 
,
öö 
listDetails
øø 
=
øø 
x
øø 
.
øø  
DetailLivraisons
øø  0
.
øø0 1

SelectMany
øø1 ;
(
øø; <
y
øø< =
=>
øø> @
y
øøA B
.
øøB C
taches
øøC I
)
øøI J
.
øøJ K

SelectMany
øøK U
(
øøU V
x
øøV W
=>
øøX Z
x
øø[ \
.
øø\ ]
DetailImputations
øø] n
)
øøn o
.
øøo p
Select
øøp v
(
øøv w
f
ùù 
=>
ùù 
new
ùù 
{
úú 
f
ûû 
,
ûû 
Charge
üü 
=
üü  
Convert
üü! (
.
üü( )
ToDouble
üü) 1
(
üü1 2
f
üü2 3
.
üü3 4
tache
üü4 9
.
üü9 :
Charge
üü: @
)
üü@ A
,
üüA B
f
þþ 
.
þþ 
tache
þþ 
.
þþ  
premierImputation
þþ  1
,
þþ1 2
f
ÿÿ 
.
ÿÿ 

Imputation
ÿÿ $
.
ÿÿ$ %
	DateDebut
ÿÿ% .
,
ÿÿ. /
f
 
.
 

Imputation
 $
.
$ %
DateFin
% ,
,
, -
f
 
.
 

Imputation
 $
.
$ %
UserId
% +
,
+ ,
}
 
)
 
.
 
Where
 
(
 
x
 
=>
 !
x
" #
.
# $
UserId
$ *
==
+ -
searsh
. 4
.
4 5
idUser
5 ;
&&
< >
(
? @
searsh
@ F
.
F G
	startDate
G P
==
Q S
null
T X
||
Y [
x
\ ]
.
] ^
	DateDebut
^ g
>=
h j
searsh
k q
.
q r
	startDate
r {
)
{ |
&&
} 
( 
searsh 
. 
endDate 
== 
null 
|| 
x 
. 
DateFin ¤
<=¥ §
searsh¨ ®
.® ¯
endDate¯ ¶
)¶ ·
)· ¸
.¸ ¹
Select¹ ¿
(¿ À
xÀ Á
=>Â Ä
newÅ È
{É Ê
x
 
.
 
f
 
,
 
x
 
.
 
Charge
  
,
  !
x
 
.
 
premierImputation
 +
,
+ ,
}
 
)
 
}
 
)
 
;
 
var
 
result
 
=
 
resultdb
 !
.
! "
Where
" '
(
' (
x
( )
=>
* ,
x
- .
.
. /
listDetails
/ :
.
: ;
Count
; @
(
@ A
)
A B
>
C D
$num
E F
)
F G
.
G H
ToList
H N
(
N O
)
O P
;
P Q
var
 

sommeTyppe
 
=
 
result
 #
.
# $
GroupBy
$ +
(
+ ,
x
 
=>
 
x
 
.
 
Type
 
,
 
x
 
=>
 
x
 
.
 
listDetails
 $
,
$ %
(
 
Type
 
,
 
imp
 
)
 
=>
  
new
! $
{
 
Type
 
,
 

chargeType
  
=
! "
imp
# &
.
& '
Sum
' *
(
* +
x
+ ,
=>
- /
x
0 1
.
1 2
Sum
2 5
(
5 6
z
6 7
=>
8 :
GetTimeInHours
; I
(
I J
z
J K
.
K L
f
L M
)
M N
)
N O
)
O P
,
P Q
chargeTotale
 "
=
# $
result
% +
.
+ ,
Select
, 2
(
2 3
x
3 4
=>
5 7
x
8 9
.
9 :
listDetails
: E
)
E F
.
F G
Sum
G J
(
J K
x
K L
=>
M O
x
P Q
.
Q R
Sum
R U
(
U V
z
V W
=>
X Z
GetTimeInHours
[ i
(
i j
z
j k
.
k l
f
l m
)
m n
)
n o
)
o p
,
p q 
chargeEstimeTotale
 (
=
) *
result
+ 1
.
1 2
Select
2 8
(
8 9
x
9 :
=>
; =
x
> ?
.
? @
listDetails
@ K
)
K L
.
L M
Sum
M P
(
P Q
x
Q R
=>
S U
x
V W
.
W X
Sum
X [
(
[ \
z
\ ]
=>
^ `
z
a b
.
b c
Charge
c i
)
i j
)
j k
,
k l
nbType
 
=
 
result
 %
.
% &
Where
& +
(
+ ,
x
, -
=>
. 0
x
1 2
.
2 3
Type
3 7
==
8 :
Type
; ?
)
? @
.
@ A
Count
A F
(
F G
)
G H
}
 
)
 
;
 
var
 
sommeProjet
 
=
 
result
 $
.
$ %
GroupBy
% ,
(
, -
x
 
=>
 
x
 
.
 
Id
 
,
 
x
   
=>
   
x
   
.
   
listDetails
   
,
   
(
¡¡ 
projetId
¡¡ 
,
¡¡ 
listDetails
¡¡ "
)
¡¡" #
=>
¡¡$ &
new
¡¡' *
{
¢¢ 
nommenclature
££ 
=
££ 
result
££  &
.
££& '
Where
££' ,
(
££, -
x
££- .
=>
££/ 1
x
££2 3
.
££3 4
Id
££4 6
==
££7 9
projetId
££: B
)
££B C
.
££C D
Select
££D J
(
££J K
x
££K L
=>
££M O
x
££P Q
.
££Q R
Nommenclature
££R _
)
££_ `
,
££` a
type
¤¤ 
=
¤¤ 
result
¤¤ 
.
¤¤ 
Where
¤¤ #
(
¤¤# $
x
¤¤$ %
=>
¤¤& (
x
¤¤) *
.
¤¤* +
Id
¤¤+ -
==
¤¤. 0
projetId
¤¤1 9
)
¤¤9 :
.
¤¤: ;
Select
¤¤; A
(
¤¤A B
x
¤¤B C
=>
¤¤D F
x
¤¤G H
.
¤¤H I
Type
¤¤I M
)
¤¤M N
,
¤¤N O
publique
¥¥ 
=
¥¥ 
result
¥¥  
.
¥¥  !
Where
¥¥! &
(
¥¥& '
x
¥¥' (
=>
¥¥) +
x
¥¥, -
.
¥¥- .
Id
¥¥. 0
==
¥¥1 3
projetId
¥¥4 <
)
¥¥< =
.
¥¥= >
Select
¥¥> D
(
¥¥D E
x
¥¥E F
=>
¥¥G I
x
¥¥J K
.
¥¥K L
Publique
¥¥L T
)
¥¥T U
,
¥¥U V
chargeConsome
§§ 
=
§§ 
listDetails
§§  +
.
§§+ ,
Sum
§§, /
(
§§/ 0
x
§§0 1
=>
§§2 4
x
§§5 6
.
§§6 7
Sum
§§7 :
(
§§: ;
z
§§; <
=>
§§= ?
GetTimeInHours
§§@ N
(
§§N O
z
§§O P
.
§§P Q
f
§§Q R
)
§§R S
)
§§S T
)
§§T U
,
§§U V
chargeEstime
¨¨ 
=
¨¨ 
listDetails
¨¨ *
.
¨¨* +
Sum
¨¨+ .
(
¨¨. /
x
¨¨/ 0
=>
¨¨1 3
x
¨¨4 5
.
¨¨5 6
Sum
¨¨6 9
(
¨¨9 :
z
¨¨: ;
=>
¨¨< >
z
¨¨? @
.
¨¨@ A
Charge
¨¨A G
)
¨¨G H
)
¨¨H I
,
¨¨I J
premierImputation
¬¬ 
=
¬¬ 
listDetails
¬¬ #
.
¬¬# $
OrderByDescending
¬¬$ 5
(
¬¬5 6
x
¬¬6 7
=>
¬¬8 :
x
¬¬; <
.
¬¬< =
Select
¬¬= C
(
¬¬C D
z
¬¬D E
=>
¬¬F H
z
¬¬I J
.
¬¬J K
premierImputation
¬¬K \
)
¬¬\ ]
)
¬¬] ^
.
¬¬^ _
FirstOrDefault
¬¬_ m
(
¬¬m n
)
¬¬n o
.
¬¬o p
Select
¬¬p v
(
¬¬v w
x
¬¬w x
=>
¬¬y {
x
¬¬| }
.
¬¬} ~ 
premierImputation¬¬~ 
)¬¬ 
.¬¬ 
FirstOrDefault¬¬ 
(¬¬  
)¬¬  ¡
}
­­ 
)
­­ 
;
­­ 
double
±± 
GetTimeInHours
±± !
(
±±! "
DetailImputation
±±" 2
detail
±±3 9
)
±±9 :
{
²² 
TimeSpan
³³ 
ConvertToTimeSpan
³³ *
(
³³* +
string
³³+ 1
time
³³2 6
)
³³6 7
{
´´ 
if
µµ 
(
µµ 
string
µµ 
.
µµ  
IsNullOrWhiteSpace
µµ 1
(
µµ1 2
time
µµ2 6
)
µµ6 7
)
µµ7 8
return
¶¶ 
new
¶¶ "
TimeSpan
¶¶# +
(
¶¶+ ,
$num
¶¶, -
,
¶¶- .
$num
¶¶/ 0
,
¶¶0 1
$num
¶¶2 3
)
¶¶3 4
;
¶¶4 5
var
·· 
timecomponents
·· &
=
··' (
time
··) -
.
··- .
Split
··. 3
(
··3 4
$char
··4 7
,
··7 8 
StringSplitOptions
··9 K
.
··K L 
RemoveEmptyEntries
··L ^
)
··^ _
;
··_ `
int
¸¸ 
.
¸¸ 
TryParse
¸¸  
(
¸¸  !
timecomponents
¸¸! /
[
¸¸/ 0
$num
¸¸0 1
]
¸¸1 2
,
¸¸2 3
out
¸¸4 7
int
¸¸8 ;
hours
¸¸< A
)
¸¸A B
;
¸¸B C
int
¹¹ 
.
¹¹ 
TryParse
¹¹  
(
¹¹  !
timecomponents
¹¹! /
[
¹¹/ 0
$num
¹¹0 1
]
¹¹1 2
,
¹¹2 3
out
¹¹4 7
int
¹¹8 ;
minutes
¹¹< C
)
¹¹C D
;
¹¹D E
return
»» 
new
»» 
TimeSpan
»» '
(
»»' (
hours
»»( -
,
»»- .
minutes
»»/ 6
,
»»6 7
$num
»»8 9
)
»»9 :
/
»»; <
$num
»»= >
;
»»> ?
}
¼¼ 
if
½½ 
(
½½ 
detail
½½ 
==
½½ 
null
½½ "
)
½½" #
detail
½½$ *
=
½½+ ,
new
½½- 0
DetailImputation
½½1 A
(
½½A B
)
½½B C
;
½½C D
return
¿¿ 
ConvertToTimeSpan
¿¿ (
(
¿¿( )
detail
¿¿) /
.
¿¿/ 0
Monday
¿¿0 6
)
¿¿6 7
.
¿¿7 8
Add
¿¿8 ;
(
¿¿; <
ConvertToTimeSpan
¿¿< M
(
¿¿M N
detail
¿¿N T
.
¿¿T U
Tuesday
¿¿U \
)
¿¿\ ]
)
¿¿] ^
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ 
ConvertToTimeSpan
ÀÀ 0
(
ÀÀ0 1
detail
ÀÀ1 7
.
ÀÀ7 8
	Wednesday
ÀÀ8 A
)
ÀÀA B
)
ÀÀB C
.
ÀÀC D
Add
ÀÀD G
(
ÀÀG H
ConvertToTimeSpan
ÀÀH Y
(
ÀÀY Z
detail
ÀÀZ `
.
ÀÀ` a
Thursday
ÀÀa i
)
ÀÀi j
)
ÀÀj k
.
ÁÁ 
Add
ÁÁ 
(
ÁÁ 
ConvertToTimeSpan
ÁÁ 0
(
ÁÁ0 1
detail
ÁÁ1 7
.
ÁÁ7 8
Friday
ÁÁ8 >
)
ÁÁ> ?
)
ÁÁ? @
.
ÂÂ 

TotalHours
ÂÂ %
;
ÂÂ% &
}
ÄÄ 
return
ÅÅ 
Ok
ÅÅ 
(
ÅÅ 
new
ÅÅ 
{
ÆÆ 
sommeProjet
ÇÇ 
=
ÇÇ 
sommeProjet
ÇÇ )
,
ÇÇ) *

sommeTyppe
ÈÈ 
=
ÈÈ 

sommeTyppe
ÈÈ '
}
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 	
[
ÍÍ 	
HttpPost
ÍÍ	 
(
ÍÍ 
$str
ÍÍ "
)
ÍÍ" #
]
ÍÍ# $
public
ÎÎ 
async
ÎÎ 
Task
ÎÎ 
<
ÎÎ 
IActionResult
ÎÎ '
>
ÎÎ' (
ChangePassword
ÎÎ) 7
(
ÎÎ7 8
ChangePasswordDto
ÎÎ8 I
model
ÎÎJ O
)
ÎÎO P
{
ÏÏ 	
List
ÐÐ 
<
ÐÐ 
string
ÐÐ 
>
ÐÐ 
errors
ÐÐ 
=
ÐÐ  !
new
ÐÐ" %
List
ÐÐ& *
<
ÐÐ* +
string
ÐÐ+ 1
>
ÐÐ1 2
(
ÐÐ2 3
)
ÐÐ3 4
;
ÐÐ4 5
string
ÑÑ 
pass
ÑÑ 
;
ÑÑ 
try
ÓÓ 
{
ÔÔ 
var
ÕÕ 
user
ÕÕ 
=
ÕÕ 
_context
ÕÕ #
.
ÕÕ# $
Users
ÕÕ$ )
.
ÕÕ) *
Where
ÕÕ* /
(
ÕÕ/ 0
x
ÕÕ0 1
=>
ÕÕ2 4
x
ÕÕ5 6
.
ÕÕ6 7
IdUser
ÕÕ7 =
==
ÕÕ> @
model
ÕÕA F
.
ÕÕF G
id
ÕÕG I
)
ÕÕI J
.
ÕÕJ K
FirstOrDefault
ÕÕK Y
(
ÕÕY Z
)
ÕÕZ [
;
ÕÕ[ \
pass
ÖÖ 
=
ÖÖ 
await
ÖÖ 
DecryptPassword
ÖÖ ,
(
ÖÖ, -
user
ÖÖ- 1
.
ÖÖ1 2
AdresseEmail
ÖÖ2 >
)
ÖÖ> ?
;
ÖÖ? @
if
×× 
(
×× 
user
×× 
==
×× 
null
××  
)
××  !
{
ØØ 
return
ÚÚ 
Ok
ÚÚ 
(
ÚÚ 
new
ÚÚ !
{
ÚÚ" #
error
ÚÚ$ )
=
ÚÚ* +
$str
ÚÚ, F
}
ÚÚG H
)
ÚÚH I
;
ÚÚI J
}
ÛÛ 
if
ÝÝ 
(
ÝÝ 
pass
ÝÝ 
==
ÝÝ 
model
ÝÝ !
.
ÝÝ! "
OldPassword
ÝÝ" -
)
ÝÝ- .
{
ÞÞ 
user
àà 
.
àà 

MotDePasse
àà #
=
àà$ %
EncryptPassword
àà& 5
(
àà5 6
model
àà6 ;
.
àà; <
NewPassword
àà< G
)
ààG H
;
ààH I
var
áá 
res
áá 
=
áá 
_context
áá &
.
áá& '
Entry
áá' ,
(
áá, -
user
áá- 1
)
áá1 2
.
áá2 3
State
áá3 8
=
áá9 :
EntityState
áá; F
.
ááF G
Modified
ááG O
;
ááO P
_context
ââ 
.
ââ 
SaveChanges
ââ (
(
ââ( )
)
ââ) *
;
ââ* +
return
ãã 
Ok
ãã 
(
ãã 
new
ãã !
{
ãã" #
error
ãã$ )
=
ãã* +
false
ãã, 1
,
ãã1 2
res
ãã3 6
=
ãã6 7
res
ãã7 :
}
ãã; <
)
ãã< =
;
ãã= >
}
åå 
return
çç 
Ok
çç 
(
çç 
new
çç 
{
çç  
error
çç! &
=
çç' (
$str
çç) H
}
ççI J
)
ççJ K
;
ççK L
}
éé 
catch
êê 
(
êê 
	Exception
êê 
ex
êê 
)
êê  
{
ëë 
return
ìì 
Ok
ìì 
(
ìì 
new
ìì 
{
ìì 
error
ìì  %
=
ìì& '
$str
ìì( ?
}
ìì@ A
)
ììA B
;
ììB C
}
ðð 
}
óó 	
[
õõ 	
HttpPost
õõ	 
(
õõ 
$str
õõ #
)
õõ# $
]
õõ$ %
public
öö 
async
öö 
Task
öö 
<
öö 
IActionResult
öö '
>
öö' (
RecoverPassword
öö) 8
(
öö8 9
string
öö9 ?
userName
öö@ H
)
ööH I
{
÷÷ 	
try
øø 
{
ùù 
if
ûû 
(
ûû 
userName
ûû 
==
ûû 
null
ûû  $
)
ûû$ %
return
üü 

BadRequest
üü %
(
üü% &
$str
üü& D
)
üüD E
;
üüE F
User
ýý 
user
ýý 
=
ýý 
null
ýý  
;
ýý  !
user
 
=
 
_context
 
.
 
Users
 !
.
! "
Where
" '
(
' (
x
( )
=>
* ,
x
- .
.
. /
AdresseEmail
/ ;
.
; <
ToLower
< C
(
C D
)
D E
==
F H
userName
I Q
)
Q R
.
R S
FirstOrDefault
S a
(
a b
)
b c
;
c d
;
e f
if
 
(
 
user
 
==
 
null
  
)
  !
return
 

BadRequest
 %
(
% &
$str
& @
)
@ A
;
A B
var
 
newPassword
 
=
  !$
GenerateRandomPassword
" 8
(
8 9
)
9 :
;
: ;
string
 
Password
 
=
  

rSAEncrypt
! +
.
+ ,
Encrypt
, 3
(
3 4
newPassword
4 ?
)
? @
;
@ A
user
 
.
 

MotDePasse
 
=
  !
Password
" *
;
* +
var
 
currentTime
 
=
  !
DateTime
" *
.
* +
Now
+ .
;
. /
var
 
message
 
=
 
$str
 >
+
? @
user
A E
.
E F
Nom
F I
+
J K
$str
L O
+
P Q
user
R V
.
V W
Prenom
W ]
+
^ _
$str
` l
+
m n
$stro ó
+ô õ
newPasswordö 
+ 
$str 
+ 
$str ù
;ù ú
var
 
subject
 
=
 
$str
 9
;
9 :
	SendEmail
 
(
 
user
 
.
 
AdresseEmail
 +
,
+ ,
message
- 4
,
4 5
subject
6 =
)
= >
;
> ?
user
 
.
 
ResetPassword
 "
=
# $
currentTime
% 0
;
0 1
user
 
.
 

MotDePasse
 
=
  !
Password
" *
;
* +
var
 
res
 
=
 
_context
 "
.
" #
Entry
# (
(
( )
user
) -
)
- .
.
. /
State
/ 4
=
5 6
EntityState
7 B
.
B C
Modified
C K
;
K L
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
return
 
Ok
 
(
 
res
 
)
 
;
 
}
 
catch
 
(
 
	Exception
 
ex
 
)
  
{
   
return
¡¡ 

BadRequest
¡¡ !
(
¡¡! "
$str
¡¡" :
+
¡¡: ;
ex
¡¡< >
)
¡¡> ?
;
¡¡? @
}
¢¢ 
}
¤¤ 	
[
¥¥ 	
	NonAction
¥¥	 
]
¥¥ 
public
¦¦ 
string
¦¦ 
RandomString
¦¦ "
(
¦¦" #
int
¦¦# &
size
¦¦' +
,
¦¦+ ,
bool
¦¦- 1
	lowerCase
¦¦2 ;
)
¦¦; <
{
§§ 	
StringBuilder
¨¨ 
builder
¨¨ !
=
¨¨" #
new
¨¨$ '
StringBuilder
¨¨( 5
(
¨¨5 6
)
¨¨6 7
;
¨¨7 8
Random
©© 
random
©© 
=
©© 
new
©© 
Random
©©  &
(
©©& '
)
©©' (
;
©©( )
char
ªª 
ch
ªª 
;
ªª 
for
«« 
(
«« 
int
«« 
i
«« 
=
«« 
$num
«« 
;
«« 
i
«« 
<
«« 
size
««  $
;
««$ %
i
««& '
++
««' )
)
««) *
{
¬¬ 
ch
­­ 
=
­­ 
Convert
­­ 
.
­­ 
ToChar
­­ #
(
­­# $
Convert
­­$ +
.
­­+ ,
ToInt32
­­, 3
(
­­3 4
Math
­­4 8
.
­­8 9
Floor
­­9 >
(
­­> ?
$num
­­? A
*
­­B C
random
­­D J
.
­­J K

NextDouble
­­K U
(
­­U V
)
­­V W
+
­­X Y
$num
­­Z \
)
­­\ ]
)
­­] ^
)
­­^ _
;
­­_ `
builder
®® 
.
®® 
Append
®® 
(
®® 
ch
®® !
)
®®! "
;
®®" #
}
¯¯ 
if
°° 
(
°° 
	lowerCase
°° 
)
°° 
return
±± 
builder
±± 
.
±± 
ToString
±± '
(
±±' (
)
±±( )
.
±±) *
ToLower
±±* 1
(
±±1 2
)
±±2 3
;
±±3 4
return
²² 
builder
²² 
.
²² 
ToString
²² #
(
²²# $
)
²²$ %
;
²²% &
}
³³ 	
[
¼¼ 	
	NonAction
¼¼	 
]
¼¼ 
public
½½ 
string
½½ $
GenerateRandomPassword
½½ ,
(
½½, -
PasswordOptions
½½- <
opts
½½= A
=
½½B C
null
½½D H
)
½½H I
{
¾¾ 	
if
¿¿ 
(
¿¿ 
opts
¿¿ 
==
¿¿ 
null
¿¿ 
)
¿¿ 
opts
¿¿ "
=
¿¿# $
new
¿¿% (
PasswordOptions
¿¿) 8
(
¿¿8 9
)
¿¿9 :
{
ÀÀ 
RequiredLength
ÁÁ 
=
ÁÁ  
$num
ÁÁ! #
,
ÁÁ# $!
RequiredUniqueChars
ÂÂ #
=
ÂÂ$ %
$num
ÂÂ& '
,
ÂÂ' (
RequireDigit
ÃÃ 
=
ÃÃ 
true
ÃÃ #
,
ÃÃ# $
RequireLowercase
ÄÄ  
=
ÄÄ! "
true
ÄÄ# '
,
ÄÄ' ($
RequireNonAlphanumeric
ÅÅ &
=
ÅÅ' (
false
ÅÅ) .
,
ÅÅ. /
RequireUppercase
ÆÆ  
=
ÆÆ! "
true
ÆÆ# '
}
ÇÇ 
;
ÇÇ 
string
ÉÉ 
[
ÉÉ 
]
ÉÉ 
randomChars
ÉÉ  
=
ÉÉ! "
new
ÉÉ# &
[
ÉÉ& '
]
ÉÉ' (
{
ÉÉ) *
$str
ÊÊ #
,
ÊÊ# $
$str
ËË #
,
ËË# $
$str
ÌÌ 
,
ÌÌ 
$str
ÍÍ 
}
ÎÎ
 
;
ÎÎ 
Random
ÏÏ 
rand
ÏÏ 
=
ÏÏ 
new
ÏÏ 
Random
ÏÏ $
(
ÏÏ$ %
Environment
ÏÏ% 0
.
ÏÏ0 1
	TickCount
ÏÏ1 :
)
ÏÏ: ;
;
ÏÏ; <
List
ÐÐ 
<
ÐÐ 
char
ÐÐ 
>
ÐÐ 
chars
ÐÐ 
=
ÐÐ 
new
ÐÐ "
List
ÐÐ# '
<
ÐÐ' (
char
ÐÐ( ,
>
ÐÐ, -
(
ÐÐ- .
)
ÐÐ. /
;
ÐÐ/ 0
if
ÒÒ 
(
ÒÒ 
opts
ÒÒ 
.
ÒÒ 
RequireUppercase
ÒÒ %
)
ÒÒ% &
chars
ÓÓ 
.
ÓÓ 
Insert
ÓÓ 
(
ÓÓ 
rand
ÓÓ !
.
ÓÓ! "
Next
ÓÓ" &
(
ÓÓ& '
$num
ÓÓ' (
,
ÓÓ( )
chars
ÓÓ* /
.
ÓÓ/ 0
Count
ÓÓ0 5
)
ÓÓ5 6
,
ÓÓ6 7
randomChars
ÔÔ 
[
ÔÔ  
$num
ÔÔ  !
]
ÔÔ! "
[
ÔÔ" #
rand
ÔÔ# '
.
ÔÔ' (
Next
ÔÔ( ,
(
ÔÔ, -
$num
ÔÔ- .
,
ÔÔ. /
randomChars
ÔÔ0 ;
[
ÔÔ; <
$num
ÔÔ< =
]
ÔÔ= >
.
ÔÔ> ?
Length
ÔÔ? E
)
ÔÔE F
]
ÔÔF G
)
ÔÔG H
;
ÔÔH I
if
ÖÖ 
(
ÖÖ 
opts
ÖÖ 
.
ÖÖ 
RequireLowercase
ÖÖ %
)
ÖÖ% &
chars
×× 
.
×× 
Insert
×× 
(
×× 
rand
×× !
.
××! "
Next
××" &
(
××& '
$num
××' (
,
××( )
chars
××* /
.
××/ 0
Count
××0 5
)
××5 6
,
××6 7
randomChars
ØØ 
[
ØØ  
$num
ØØ  !
]
ØØ! "
[
ØØ" #
rand
ØØ# '
.
ØØ' (
Next
ØØ( ,
(
ØØ, -
$num
ØØ- .
,
ØØ. /
randomChars
ØØ0 ;
[
ØØ; <
$num
ØØ< =
]
ØØ= >
.
ØØ> ?
Length
ØØ? E
)
ØØE F
]
ØØF G
)
ØØG H
;
ØØH I
if
ÚÚ 
(
ÚÚ 
opts
ÚÚ 
.
ÚÚ 
RequireDigit
ÚÚ !
)
ÚÚ! "
chars
ÛÛ 
.
ÛÛ 
Insert
ÛÛ 
(
ÛÛ 
rand
ÛÛ !
.
ÛÛ! "
Next
ÛÛ" &
(
ÛÛ& '
$num
ÛÛ' (
,
ÛÛ( )
chars
ÛÛ* /
.
ÛÛ/ 0
Count
ÛÛ0 5
)
ÛÛ5 6
,
ÛÛ6 7
randomChars
ÜÜ 
[
ÜÜ  
$num
ÜÜ  !
]
ÜÜ! "
[
ÜÜ" #
rand
ÜÜ# '
.
ÜÜ' (
Next
ÜÜ( ,
(
ÜÜ, -
$num
ÜÜ- .
,
ÜÜ. /
randomChars
ÜÜ0 ;
[
ÜÜ; <
$num
ÜÜ< =
]
ÜÜ= >
.
ÜÜ> ?
Length
ÜÜ? E
)
ÜÜE F
]
ÜÜF G
)
ÜÜG H
;
ÜÜH I
if
ÞÞ 
(
ÞÞ 
opts
ÞÞ 
.
ÞÞ $
RequireNonAlphanumeric
ÞÞ +
)
ÞÞ+ ,
chars
ßß 
.
ßß 
Insert
ßß 
(
ßß 
rand
ßß !
.
ßß! "
Next
ßß" &
(
ßß& '
$num
ßß' (
,
ßß( )
chars
ßß* /
.
ßß/ 0
Count
ßß0 5
)
ßß5 6
,
ßß6 7
randomChars
àà 
[
àà  
$num
àà  !
]
àà! "
[
àà" #
rand
àà# '
.
àà' (
Next
àà( ,
(
àà, -
$num
àà- .
,
àà. /
randomChars
àà0 ;
[
àà; <
$num
àà< =
]
àà= >
.
àà> ?
Length
àà? E
)
ààE F
]
ààF G
)
ààG H
;
ààH I
for
ââ 
(
ââ 
int
ââ 
i
ââ 
=
ââ 
chars
ââ 
.
ââ 
Count
ââ $
;
ââ$ %
i
ââ& '
<
ââ( )
opts
ââ* .
.
ââ. /
RequiredLength
ââ/ =
||
ãã 
chars
ãã 
.
ãã 
Distinct
ãã !
(
ãã! "
)
ãã" #
.
ãã# $
Count
ãã$ )
(
ãã) *
)
ãã* +
<
ãã, -
opts
ãã. 2
.
ãã2 3!
RequiredUniqueChars
ãã3 F
;
ããF G
i
ããH I
++
ããI K
)
ããK L
{
ää 
string
åå 
rcs
åå 
=
åå 
randomChars
åå (
[
åå( )
rand
åå) -
.
åå- .
Next
åå. 2
(
åå2 3
$num
åå3 4
,
åå4 5
randomChars
åå6 A
.
ååA B
Length
ååB H
)
ååH I
]
ååI J
;
ååJ K
chars
ææ 
.
ææ 
Insert
ææ 
(
ææ 
rand
ææ !
.
ææ! "
Next
ææ" &
(
ææ& '
$num
ææ' (
,
ææ( )
chars
ææ* /
.
ææ/ 0
Count
ææ0 5
)
ææ5 6
,
ææ6 7
rcs
çç 
[
çç 
rand
çç 
.
çç 
Next
çç !
(
çç! "
$num
çç" #
,
çç# $
rcs
çç% (
.
çç( )
Length
çç) /
)
çç/ 0
]
çç0 1
)
çç1 2
;
çç2 3
}
èè 
return
êê 
new
êê 
string
êê 
(
êê 
chars
êê #
.
êê# $
ToArray
êê$ +
(
êê+ ,
)
êê, -
)
êê- .
;
êê. /
}
ëë 	
[
ìì 	
	NonAction
ìì	 
]
ìì 
private
íí 
void
íí 
	SendEmail
íí 
(
íí 
string
íí %
email
íí& +
,
íí+ ,
string
íí- 3
messageBody
íí4 ?
,
íí? @
string
ííA G
subject
ííH O
)
ííO P
{
îî 	

SmtpClient
ïï 
client
ïï 
=
ïï 
new
ïï  #

SmtpClient
ïï$ .
(
ïï. /
_appSettings
ïï/ ;
.
ïï; <
Host
ïï< @
,
ïï@ A
_appSettings
ïïB N
.
ïïN O
	EmailPort
ïïO X
)
ïïX Y
;
ïïY Z
client
ññ 
.
ññ 
	EnableSsl
ññ 
=
ññ 
_appSettings
ññ +
.
ññ+ ,
	EnableSsl
ññ, 5
;
ññ5 6
client
òò 
.
òò 
DeliveryMethod
òò !
=
òò" # 
SmtpDeliveryMethod
òò$ 6
.
òò6 7
Network
òò7 >
;
òò> ?
client
óó 
.
óó #
UseDefaultCredentials
óó (
=
óó) *
false
óó+ 0
;
óó0 1
client
ôô 
.
ôô 
Credentials
ôô 
=
ôô  
new
ôô! $
NetworkCredential
ôô% 6
(
ôô6 7
_appSettings
ôô7 C
.
ôôC D
EmailSender
ôôD O
,
ôôO P
_appSettings
ôôQ ]
.
ôô] ^
Password
ôô^ f
)
ôôf g
;
ôôg h
MailMessage
õõ 
mailMessage
õõ #
=
õõ$ %
new
õõ& )
MailMessage
õõ* 5
(
õõ5 6
)
õõ6 7
;
õõ7 8
mailMessage
öö 
.
öö 
To
öö 
.
öö 
Add
öö 
(
öö 
email
öö $
)
öö$ %
;
öö% &
mailMessage
÷÷ 
.
÷÷ 
From
÷÷ 
=
÷÷ 
new
÷÷ "
MailAddress
÷÷# .
(
÷÷. /
_appSettings
÷÷/ ;
.
÷÷; <
EmailSender
÷÷< G
)
÷÷G H
;
÷÷H I
mailMessage
øø 
.
øø 
Subject
øø 
=
øø  !
subject
øø" )
;
øø) *
mailMessage
ùù 
.
ùù 

IsBodyHtml
ùù "
=
ùù# $
true
ùù% )
;
ùù) *
mailMessage
úú 
.
úú 
Body
úú 
=
úú 
messageBody
úú *
;
úú* +
client
ûû 
.
ûû 
Send
ûû 
(
ûû 
mailMessage
ûû #
)
ûû# $
;
ûû$ %
}
ýý 	
[
		 	
HttpPost
			 
(
		 
$str
		 
)
		 
]
		 
public
		 
void
		 

SendEmails
		 
(
		 
string
		 %
email
		& +
,
		+ ,
string
		- 3
messageBody
		4 ?
,
		? @
string
		A G
subject
		H O
)
		O P
{
		 	

SmtpClient
		 
client
		 
=
		 
new
		  #

SmtpClient
		$ .
(
		. /
_appSettings
		/ ;
.
		; <
Host
		< @
,
		@ A
_appSettings
		B N
.
		N O
	EmailPort
		O X
)
		X Y
;
		Y Z
client
		 
.
		 
	EnableSsl
		 
=
		 
_appSettings
		 +
.
		+ ,
	EnableSsl
		, 5
;
		5 6
client
		 
.
		 
DeliveryMethod
		 !
=
		" # 
SmtpDeliveryMethod
		$ 6
.
		6 7
Network
		7 >
;
		> ?
client
		 
.
		 #
UseDefaultCredentials
		 (
=
		) *
false
		+ 0
;
		0 1
client
		 
.
		 
Credentials
		 
=
		  
new
		! $
NetworkCredential
		% 6
(
		6 7
_appSettings
		7 C
.
		C D
EmailSender
		D O
,
		O P
_appSettings
		Q ]
.
		] ^
Password
		^ f
)
		f g
;
		g h
MailMessage
		 
mailMessage
		 #
=
		$ %
new
		& )
MailMessage
		* 5
(
		5 6
)
		6 7
;
		7 8
mailMessage
		 
.
		 
To
		 
.
		 
Add
		 
(
		 
$str
		 7
)
		7 8
;
		8 9
mailMessage
		 
.
		 
From
		 
=
		 
new
		 "
MailAddress
		# .
(
		. /
_appSettings
		/ ;
.
		; <
EmailSender
		< G
)
		G H
;
		H I
mailMessage
		 
.
		 
Subject
		 
=
		  !
subject
		" )
;
		) *
mailMessage
		 
.
		 

IsBodyHtml
		 "
=
		# $
true
		% )
;
		) *
mailMessage
		 
.
		 
Body
		 
=
		 
messageBody
		 *
;
		* +
client
		 
.
		 
Send
		 
(
		 
mailMessage
		 #
)
		# $
;
		$ %
}
		 	
[
		 	
	NonAction
			 
]
		 
public
		 
Task
		 
	SendAsync
		 
(
		 
string
		 $
email
		% *
,
		* +
string
		, 2
messageBody
		3 >
,
		> ?
string
		@ F
subject
		G N
)
		N O
{
		 	
var
		 
_sender
		 
=
		 
_appSettings
		 &
.
		& '
EmailSender
		' 2
;
		2 3
var
		 
_user
		 
=
		 
_appSettings
		 $
.
		$ %
	EmailUser
		% .
;
		. /
var
		 
	_password
		 
=
		 
_appSettings
		 (
.
		( )
Password
		) 1
;
		1 2
var
		 
_smtpClient
		 
=
		 
_appSettings
		 *
.
		* +
Host
		+ /
;
		/ 0
int
		 
_port
		 
=
		 
_appSettings
		 $
.
		$ %
	EmailPort
		% .
;
		. /
MailMessage
		 
mail
		 
=
		 
new
		 "
MailMessage
		# .
(
		. /
)
		/ 0
;
		0 1

SmtpClient
 	 	 

SmtpServer
 	 	 !
=
 	 	" #
new
 	 	$ '

SmtpClient
 	 	( 2
(
 	 	2 3
_smtpClient
 	 	3 >
)
 	 	> ?
;
 	 	? @
mail
¡	¡	 
.
¡	¡	 
From
¡	¡	 
=
¡	¡	 
new
¡	¡	 
MailAddress
¡	¡	 '
(
¡	¡	' (
_sender
¡	¡	( /
)
¡	¡	/ 0
;
¡	¡	0 1
mail
£	£	 
.
£	£	 
To
£	£	 
.
£	£	 
Add
£	£	 
(
£	£	 
email
£	£	 
)
£	£	 
;
£	£	 
mail
¥	¥	 
.
¥	¥	 
Subject
¥	¥	 
=
¥	¥	 
subject
¥	¥	 "
;
¥	¥	" #
mail
¦	¦	 
.
¦	¦	 
Body
¦	¦	 
=
¦	¦	 
messageBody
¦	¦	 #
;
¦	¦	# $

SmtpServer
¨	¨	 
.
¨	¨	 
Port
¨	¨	 
=
¨	¨	 
_port
¨	¨	 #
;
¨	¨	# $

SmtpServer
©	©	 
.
©	©	 
Credentials
©	©	 "
=
©	©	# $
new
©	©	% (
System
©	©	) /
.
©	©	/ 0
Net
©	©	0 3
.
©	©	3 4
NetworkCredential
©	©	4 E
(
©	©	E F
_user
©	©	F K
,
©	©	K L
	_password
©	©	M V
)
©	©	V W
;
©	©	W X

SmtpServer
ª	ª	 
.
ª	ª	 
	EnableSsl
ª	ª	  
=
ª	ª	! "
true
ª	ª	# '
;
ª	ª	' (
try
«	«	 
{
¬	¬	 

SmtpServer
­	­	 
.
­	­	 
Send
­	­	 
(
­	­	  
mail
­	­	  $
)
­	­	$ %
;
­	­	% &
}
®	®	 
catch
¯	¯	 
{
¯	¯	 
}
¯	¯	 
return
°	°	 
Task
°	°	 
.
°	°	 

FromResult
°	°	 "
(
°	°	" #
$num
°	°	# $
)
°	°	$ %
;
°	°	% &
}
±	±	 	
[
»	»	 	
HttpPost
»	»		 
(
»	»	 
$str
»	»	 
)
»	»	 
]
»	»	 
public
¼	¼	 
async
¼	¼	 
Task
¼	¼	 
<
¼	¼	 
IActionResult
¼	¼	 '
>
¼	¼	' (
EncryptPasswords
¼	¼	) 9
(
¼	¼	9 :
)
¼	¼	: ;
{
½	½	 	
string
À	À	 
password
À	À	 
;
À	À	 
var
Â	Â	 
result
Â	Â	 
=
Â	Â	 
await
Â	Â	 
_context
Â	Â	 '
.
Â	Â	' (
Users
Â	Â	( -
.
Â	Â	- .
ToListAsync
Â	Â	. 9
(
Â	Â	9 :
)
Â	Â	: ;
;
Â	Â	; <
foreach
Ã	Ã	 
(
Ã	Ã	 
var
Ã	Ã	 
a
Ã	Ã	 
in
Ã	Ã	 
result
Ã	Ã	 $
)
Ã	Ã	$ %
{
Ä	Ä	 
password
Æ	Æ	 
=
Æ	Æ	 

rSAEncrypt
Æ	Æ	 #
.
Æ	Æ	# $
Encrypt
Æ	Æ	$ +
(
Æ	Æ	+ ,
a
Æ	Æ	, -
.
Æ	Æ	- .

MotDePasse
Æ	Æ	. 8
)
Æ	Æ	8 9
;
Æ	Æ	9 :
var
Ç	Ç	 
user
Ç	Ç	 
=
Ç	Ç	 
await
Ç	Ç	  
_context
Ç	Ç	! )
.
Ç	Ç	) *
Users
Ç	Ç	* /
.
Ç	Ç	/ 0
	FindAsync
Ç	Ç	0 9
(
Ç	Ç	9 :
a
Ç	Ç	: ;
.
Ç	Ç	; <
IdUser
Ç	Ç	< B
)
Ç	Ç	B C
;
Ç	Ç	C D
user
È	È	 
.
È	È	 

MotDePasse
È	È	 
=
È	È	  !
password
È	È	" *
;
È	È	* +
_context
É	É	 
.
É	É	 
Entry
É	É	 
(
É	É	 
user
É	É	 #
)
É	É	# $
.
É	É	$ %
State
É	É	% *
=
É	É	+ ,
EntityState
É	É	- 8
.
É	É	8 9
Detached
É	É	9 A
;
É	É	A B
_context
Ê	Ê	 
.
Ê	Ê	 
Entry
Ê	Ê	 
(
Ê	Ê	 
user
Ê	Ê	 #
)
Ê	Ê	# $
.
Ê	Ê	$ %
State
Ê	Ê	% *
=
Ê	Ê	+ ,
EntityState
Ê	Ê	- 8
.
Ê	Ê	8 9
Modified
Ê	Ê	9 A
;
Ê	Ê	A B
try
Ë	Ë	 
{
Ì	Ì	 
await
Í	Í	 
_context
Í	Í	 "
.
Í	Í	" #
SaveChangesAsync
Í	Í	# 3
(
Í	Í	3 4
)
Í	Í	4 5
;
Í	Í	5 6
}
Î	Î	 
catch
Ï	Ï	 
(
Ï	Ï	 
	Exception
Ï	Ï	  
)
Ï	Ï	  !
{
Ð	Ð	 
throw
Ñ	Ñ	 
new
Ñ	Ñ	 %
NotImplementedException
Ñ	Ñ	 5
(
Ñ	Ñ	5 6
)
Ñ	Ñ	6 7
;
Ñ	Ñ	7 8
}
Ò	Ò	 
}
Ô	Ô	 
return
Ú	Ú	 
Ok
Ú	Ú	 
(
Ú	Ú	 
)
Ú	Ú	 
;
Ú	Ú	 
}
Ü	Ü	 	
[
Þ	Þ	 	
HttpPost
Þ	Þ		 
(
Þ	Þ	 
$str
Þ	Þ	 
)
Þ	Þ	 
]
Þ	Þ	 
public
ß	ß	 
string
ß	ß	 
EncryptPassword
ß	ß	 &
(
ß	ß	& '
string
ß	ß	' -
password
ß	ß	. 6
)
ß	ß	6 7
{
à	à	 	
password
å	å	 
=
å	å	 

rSAEncrypt
å	å	 %
.
å	å	% &
Encrypt
å	å	& -
(
å	å	- .
password
å	å	. 6
)
å	å	6 7
;
å	å	7 8
return
é	é	 
password
é	é	 
;
é	é	 
}
ë	ë	 	
[
ï	ï	 	
HttpPost
ï	ï		 
(
ï	ï	 
$str
ï	ï	 
)
ï	ï	 
]
ï	ï	 
public
ð	ð	 
async
ð	ð	 
Task
ð	ð	 
<
ð	ð	 
string
ð	ð	  
>
ð	ð	  !
DecryptPassword
ð	ð	" 1
(
ð	ð	1 2
string
ð	ð	2 8
mail
ð	ð	9 =
)
ð	ð	= >
{
ñ	ñ	 	
var
ó	ó	 
user
ó	ó	 
=
ó	ó	 
await
ó	ó	 
_context
ó	ó	 %
.
ó	ó	% &
Users
ó	ó	& +
.
ó	ó	+ ,
Where
ó	ó	, 1
(
ó	ó	1 2
e
ó	ó	2 3
=>
ó	ó	3 5
e
ó	ó	5 6
.
ó	ó	6 7
AdresseEmail
ó	ó	7 C
.
ó	ó	C D
Equals
ó	ó	D J
(
ó	ó	J K
mail
ó	ó	K O
)
ó	ó	O P
)
ó	ó	P Q
.
ó	ó	Q R!
FirstOrDefaultAsync
ó	ó	R e
(
ó	ó	e f
)
ó	ó	f g
;
ó	ó	g h
if
ô	ô	 
(
ô	ô	 
user
ô	ô	 
==
ô	ô	 
null
ô	ô	 
)
ô	ô	 
{
õ	õ	 
return
ö	ö	 
$str
ö	ö	 "
;
ö	ö	" #
}
÷	÷	 
try
ø	ø	 
{
ù	ù	 
string
ú	ú	 
pass
ú	ú	 
=
ú	ú	 

rSAEncrypt
ú	ú	 (
.
ú	ú	( )
Decrypt
ú	ú	) 0
(
ú	ú	0 1
user
ú	ú	1 5
.
ú	ú	5 6

MotDePasse
ú	ú	6 @
)
ú	ú	@ A
;
ú	ú	A B
return
ü	ü	 
pass
ü	ü	 
;
ü	ü	 
}
þ	þ	 
catch
ÿ	ÿ	 
(
ÿ	ÿ	 
	Exception
ÿ	ÿ	 
)
ÿ	ÿ	 
{


 
throw


 
new


 %
NotImplementedException


 1
(


1 2
)


2 3
;


3 4
}


 
}


 	
[


 	
HttpGet


	 
(


 
$str


 %
)


% &
]


& '
public


 
async


 
Task


 
<


 
List


 
<


 
string


 %
>


% &
>


& '
GetManagerByUser


( 8
(


8 9
string


9 ?
id


@ B
)


B C
{


 	
var
«
«
 
dbresult
«
«
 
=
«
«
 
await
«
«
  
_context
«
«
! )
.
«
«
) *

EquipeUser
«
«
* 4
.
«
«
4 5
Include
¬
¬
 
(
¬
¬
 
e
¬
¬
 
=>
¬
¬
 
e
¬
¬
 
.
¬
¬
 
User
¬
¬
 
)
¬
¬
 
.
¬
¬
  
Where
¬
¬
  %
(
¬
¬
% &
e
¬
¬
& '
=>
­
­
 
e
­
­
 
.
­
­
 
UserId
­
­
 
==
­
­
 
id
­
­
 
)
­
­
 
.
­
­
 
Select
­
­
 $
(
­
­
$ %
e
­
­
% &
=>
­
­
' )
e
­
­
* +
.
­
­
+ ,
EquipeId
­
­
, 4
)
­
­
4 5
.
­
­
5 6
ToListAsync
­
­
6 A
(
­
­
A B
)
­
­
B C
;
­
­
C D
var
®
®
 
result2
®
®
 
=
®
®
 
await
®
®
 
_context
®
®
  (
.
®
®
( )
Equips
®
®
) /
.
®
®
/ 0
Include
®
®
0 7
(
®
®
7 8
e
®
®
8 9
=>
®
®
: <
e
®
®
= >
.
®
®
> ?
Manager
®
®
? F
)
®
®
F G
.
®
®
G H
Where
®
®
H M
(
®
®
M N
e
®
®
N O
=>
®
®
P R
dbresult
®
®
S [
.
®
®
[ \
Contains
®
®
\ d
(
®
®
d e
e
®
®
e f
.
®
®
f g
Id
®
®
g i
)
®
®
i j
)
®
®
j k
.
®
®
k l
Select
®
®
l r
(
®
®
r s
e
®
®
s t
=>
®
®
u w
e
®
®
x y
.
®
®
y z
Manager®
®
z 
.®
®
 
AdresseEmail®
®
 
)®
®
 
.®
®
 
Distinct®
®
 
(®
®
 
)®
®
 
.®
®
 
ToListAsync®
®
 ¦
(®
®
¦ §
)®
®
§ ¨
;®
®
¨ ©
return
µ
µ
 
result2
µ
µ
 
;
µ
µ
 
}
¶
¶
 	
}
½
½
 
}¿
¿
 ò
ZC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Controllers\WeatherForecastController.cs
	namespace 	

ProjetBack
 
. 
Controllers  
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private 
static 
readonly 
string  &
[& '
]' (
	Summaries) 2
=3 4
new5 8
[8 9
]9 :
{ 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
var 
rng 
= 
new 
Random  
(  !
)! "
;" #
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
WeatherForecast> M
{ 
Date   
=   
DateTime   
.    
Now    #
.  # $
AddDays  $ +
(  + ,
index  , 1
)  1 2
,  2 3
TemperatureC!! 
=!! 
rng!! "
.!!" #
Next!!# '
(!!' (
-!!( )
$num!!) +
,!!+ ,
$num!!- /
)!!/ 0
,!!0 1
Summary"" 
="" 
	Summaries"" #
[""# $
rng""$ '
.""' (
Next""( ,
("", -
	Summaries""- 6
.""6 7
Length""7 =
)""= >
]""> ?
}## 
)## 
.$$ 
ToArray$$ 
($$ 
)$$ 
;$$ 
}%% 	
}&& 
}'' ¡
EC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Dtos\AppSettings.cs
	namespace 	
Gateway
 
. 
Dtos 
. 
Account 
{ 
public 

class 
AppSettings 
{		 
public 
string 
Site 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Audience 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 

ExpireTime  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
Secret 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
EmailSender !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
UrlLogin 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
UrlLoginMerchant &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
	EmailPort 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Host 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
	EmailUser 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
	EnableSsl 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
ResetPwdTentative $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} î
KC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Dtos\ChangePasswordDto.cs
	namespace 	

ProjetBack
 
. 
Dtos 
{ 
public		 

class		 
ChangePasswordDto		 "
{

 
[ 	
Required	 
] 
public 
string 
id 
{ 
get 
; 
set  #
;# $
}% &
[ 	
Required	 
] 
public 
string 
OldPassword !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
[ 	
	MinLength	 
( 
$num 
) 
] 
public 
string 
NewPassword !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} 
RC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Dtos\FiltreProjetComptableDto.cs
	namespace 	

ProjetBack
 
. 
Dtos 
{ 
public 

class $
FiltreProjetComptableDto )
{		 
public 
string 
statut 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
client 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
annees 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
commercialId "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} 
GC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Dtos\ImputationDto.cs
	namespace 	

ProjetBack
 
. 
Dtos 
{ 
public		 

class		 
ImputationDto		 
{

 
public 

Imputation 

imputation $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
List 
< 
string 
> 
deletedTask '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} í
NC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Dtos\ProjetLivraisonInDto.cs
	namespace 	

ProjetBack
 
. 
Dtos 
{ 
public 

class  
ProjetLivraisonInDto %
{		 
public

 
string

 
id

 
{

 
get

 
;

 
set

  #
;

# $
}

% &
public 
string 
	dateDebut 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
dateFin 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} ¹
@C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Dtos\Search.cs
	namespace 	

ProjetBack
 
. 
Dtos 
{ 
public 

class 
Search 
{		 
public

 
int

 
page

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
public 
int 
size 
{ 
get 
; 
set "
;" #
}$ %
public 
int %
AssocitionProjetCompatble ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
string 
projetLivraisonId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
idUser 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
detailLivraisonId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
status 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
client 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
type 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
? 
	startDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
endDate  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
clientId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
nature 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
	ManagerId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
commercialId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
annees 
{ 
get 
;  
set! $
;$ %
}& '
public 
List 
< 
string 
> 
	idClients %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
List 
< 
string 
> 
types !
{" #
get$ '
;' (
set) ,
;, -
}. /
public   
string   
	dateDebut   
{    !
get  " %
;  % &
set  ' *
;  * +
}  , -
public!! 
string!! 
dateFin!! 
{!! 
get!!  #
;!!# $
set!!% (
;!!( )
}!!* +
}"" 
}## è
FC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Dtos\SecondSearch.cs
	namespace 	

ProjetBack
 
. 
Dtos 
{ 
public 

class 
SecondSearch 
{		 
public

 
List

 
<

 
string

 
>

 
	idClients

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
public 
DateTime 
? 
	startDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
endDate  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
type 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
client 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ª

UC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Dtos\StatProjetComptableUsersDto.cs
	namespace 	

ProjetBack
 
. 
Dtos 
{ 
public 

class '
StatProjetComptableUsersDto ,
{		 
public

 
string

 
	DateDebut

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
String 
DateFin 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
List 
< 
String 
> 
	ListUsers %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
size 
{ 
get 
; 
set "
;" #
}$ %
public 
int 
page 
{ 
get 
; 
set "
;" #
}$ %
public 
List 
< 
String 
> 

ListClient &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} çã
}C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200515194648_EFCoreCodeFirstSample.Models.PilotageDBContext.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 8
,EFCoreCodeFirstSampleModelsPilotageDBContext E
:F G
	MigrationH Q
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
CreateTable		 (
(		( )
name

 
:

 
$str

 $
,

$ %
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 6
,6 7
x8 9
=>: <
x= >
.> ?
Id? A
)A B
;B C
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
IdProfil 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
nullable4 <
:< =
false> C
)C D
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 1
,1 2
x3 4
=>5 7
x8 9
.9 :
IdProfil: B
)B C
;C D
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name   
:   
$str   (
,  ( )
columns!! 
:!! 
table!! 
=>!! !
new!!" %
{"" 
Id## 
=## 
table## 
.## 
Column## %
<##% &
string##& ,
>##, -
(##- .
nullable##. 6
:##6 7
false##8 =
)##= >
,##> ?
Description$$ 
=$$  !
table$$" '
.$$' (
Column$$( .
<$$. /
string$$/ 5
>$$5 6
($$6 7
nullable$$7 ?
:$$? @
true$$A E
)$$E F
,$$F G
Delivery%% 
=%% 
table%% $
.%%$ %
Column%%% +
<%%+ ,
string%%, 2
>%%2 3
(%%3 4
nullable%%4 <
:%%< =
true%%> B
)%%B C
,%%C D
Planned&& 
=&& 
table&& #
.&&# $
Column&&$ *
<&&* +
bool&&+ /
>&&/ 0
(&&0 1
nullable&&1 9
:&&9 :
false&&; @
)&&@ A
,&&A B
EbRc'' 
='' 
table''  
.''  !
Column''! '
<''' (
string''( .
>''. /
(''/ 0
nullable''0 8
:''8 9
true'': >
)''> ?
,''? @
Type(( 
=(( 
table((  
.((  !
Column((! '
<((' (
string((( .
>((. /
(((/ 0
nullable((0 8
:((8 9
true((: >
)((> ?
,((? @
	StartDate)) 
=)) 
table))  %
.))% &
Column))& ,
<)), -
string))- 3
>))3 4
())4 5
nullable))5 =
:))= >
true))? C
)))C D
,))D E
InitialPlannedDate** &
=**' (
table**) .
.**. /
Column**/ 5
<**5 6
string**6 <
>**< =
(**= >
nullable**> F
:**F G
true**H L
)**L M
,**M N
PlannedDate++ 
=++  !
table++" '
.++' (
Column++( .
<++. /
string++/ 5
>++5 6
(++6 7
nullable++7 ?
:++? @
true++A E
)++E F
,++F G
DeliveryDate,,  
=,,! "
table,,# (
.,,( )
Column,,) /
<,,/ 0
string,,0 6
>,,6 7
(,,7 8
nullable,,8 @
:,,@ A
true,,B F
),,F G
,,,G H
DateCreation--  
=--! "
table--# (
.--( )
Column--) /
<--/ 0
string--0 6
>--6 7
(--7 8
nullable--8 @
:--@ A
true--B F
)--F G
,--G H
Createur.. 
=.. 
table.. $
...$ %
Column..% +
<..+ ,
string.., 2
>..2 3
(..3 4
nullable..4 <
:..< =
true..> B
)..B C
,..C D$
DateDerniereModification// ,
=//- .
table/// 4
.//4 5
Column//5 ;
<//; <
string//< B
>//B C
(//C D
nullable//D L
://L M
true//N R
)//R S
,//S T
Modificateur00  
=00! "
table00# (
.00( )
Column00) /
<00/ 0
string000 6
>006 7
(007 8
nullable008 @
:00@ A
true00B F
)00F G
}11 
,11 
constraints22 
:22 
table22 "
=>22# %
{33 
table44 
.44 

PrimaryKey44 $
(44$ %
$str44% :
,44: ;
x44< =
=>44> @
x44A B
.44B C
Id44C E
)44E F
;44F G
}55 
)55 
;55 
migrationBuilder77 
.77 
CreateTable77 (
(77( )
name88 
:88 
$str88 
,88 
columns99 
:99 
table99 
=>99 !
new99" %
{:: 
IdStatus;; 
=;; 
table;; $
.;;$ %
Column;;% +
<;;+ ,
string;;, 2
>;;2 3
(;;3 4
nullable;;4 <
:;;< =
false;;> C
);;C D
}<< 
,<< 
constraints== 
:== 
table== "
=>==# %
{>> 
table?? 
.?? 

PrimaryKey?? $
(??$ %
$str??% 0
,??0 1
x??2 3
=>??4 6
x??7 8
.??8 9
IdStatus??9 A
)??A B
;??B C
}@@ 
)@@ 
;@@ 
migrationBuilderBB 
.BB 
CreateTableBB (
(BB( )
nameCC 
:CC 
$strCC )
,CC) *
columnsDD 
:DD 
tableDD 
=>DD !
newDD" %
{EE 
IdStatusImputationsFF '
=FF( )
tableFF* /
.FF/ 0
ColumnFF0 6
<FF6 7
stringFF7 =
>FF= >
(FF> ?
nullableFF? G
:FFG H
falseFFI N
)FFN O
}GG 
,GG 
constraintsHH 
:HH 
tableHH "
=>HH# %
{II 
tableJJ 
.JJ 

PrimaryKeyJJ $
(JJ$ %
$strJJ% ;
,JJ; <
xJJ= >
=>JJ? A
xJJB C
.JJC D
IdStatusImputationsJJD W
)JJW X
;JJX Y
}KK 
)KK 
;KK 
migrationBuilderMM 
.MM 
CreateTableMM (
(MM( )
nameNN 
:NN 
$strNN $
,NN$ %
columnsOO 
:OO 
tableOO 
=>OO !
newOO" %
{PP 
IdStatutTacheQQ !
=QQ" #
tableQQ$ )
.QQ) *
ColumnQQ* 0
<QQ0 1
stringQQ1 7
>QQ7 8
(QQ8 9
nullableQQ9 A
:QQA B
falseQQC H
)QQH I
}RR 
,RR 
constraintsSS 
:SS 
tableSS "
=>SS# %
{TT 
tableUU 
.UU 

PrimaryKeyUU $
(UU$ %
$strUU% 6
,UU6 7
xUU8 9
=>UU: <
xUU= >
.UU> ?
IdStatutTacheUU? L
)UUL M
;UUM N
}VV 
)VV 
;VV 
migrationBuilderXX 
.XX 
CreateTableXX (
(XX( )
nameYY 
:YY 
$strYY 
,YY 
columnsZZ 
:ZZ 
tableZZ 
=>ZZ !
newZZ" %
{[[ 
IdTTM\\ 
=\\ 
table\\ !
.\\! "
Column\\" (
<\\( )
string\\) /
>\\/ 0
(\\0 1
nullable\\1 9
:\\9 :
false\\; @
)\\@ A
}]] 
,]] 
constraints^^ 
:^^ 
table^^ "
=>^^# %
{__ 
table`` 
.`` 

PrimaryKey`` $
(``$ %
$str``% -
,``- .
x``/ 0
=>``1 3
x``4 5
.``5 6
IdTTM``6 ;
)``; <
;``< =
}aa 
)aa 
;aa 
migrationBuildercc 
.cc 
CreateTablecc (
(cc( )
namedd 
:dd 
$strdd #
,dd# $
columnsee 
:ee 
tableee 
=>ee !
newee" %
{ff 
Idgg 
=gg 
tablegg 
.gg 
Columngg %
<gg% &
stringgg& ,
>gg, -
(gg- .
nullablegg. 6
:gg6 7
falsegg8 =
)gg= >
}hh 
,hh 
constraintsii 
:ii 
tableii "
=>ii# %
{jj 
tablekk 
.kk 

PrimaryKeykk $
(kk$ %
$strkk% 5
,kk5 6
xkk7 8
=>kk9 ;
xkk< =
.kk= >
Idkk> @
)kk@ A
;kkA B
}ll 
)ll 
;ll 
migrationBuildernn 
.nn 
CreateTablenn (
(nn( )
nameoo 
:oo 
$stroo 
,oo 
columnspp 
:pp 
tablepp 
=>pp !
newpp" %
{qq 
IdUserrr 
=rr 
tablerr "
.rr" #
Columnrr# )
<rr) *
stringrr* 0
>rr0 1
(rr1 2
nullablerr2 :
:rr: ;
falserr< A
)rrA B
,rrB C
Nomss 
=ss 
tabless 
.ss  
Columnss  &
<ss& '
stringss' -
>ss- .
(ss. /
nullabless/ 7
:ss7 8
truess9 =
)ss= >
,ss> ?
Prenomtt 
=tt 
tablett "
.tt" #
Columntt# )
<tt) *
stringtt* 0
>tt0 1
(tt1 2
nullablett2 :
:tt: ;
truett< @
)tt@ A
,ttA B
Adresseuu 
=uu 
tableuu #
.uu# $
Columnuu$ *
<uu* +
stringuu+ 1
>uu1 2
(uu2 3
nullableuu3 ;
:uu; <
trueuu= A
)uuA B
,uuB C
AdresseEmailvv  
=vv! "
tablevv# (
.vv( )
Columnvv) /
<vv/ 0
stringvv0 6
>vv6 7
(vv7 8
nullablevv8 @
:vv@ A
truevvB F
)vvF G
,vvG H

MotDePasseww 
=ww  
tableww! &
.ww& '
Columnww' -
<ww- .
stringww. 4
>ww4 5
(ww5 6
nullableww6 >
:ww> ?
trueww@ D
)wwD E
,wwE F
	Telephonexx 
=xx 
tablexx  %
.xx% &
Columnxx& ,
<xx, -
stringxx- 3
>xx3 4
(xx4 5
nullablexx5 =
:xx= >
truexx? C
)xxC D
,xxD E
	Valideur1yy 
=yy 
tableyy  %
.yy% &
Columnyy& ,
<yy, -
stringyy- 3
>yy3 4
(yy4 5
nullableyy5 =
:yy= >
trueyy? C
)yyC D
,yyD E
	Valideur2zz 
=zz 
tablezz  %
.zz% &
Columnzz& ,
<zz, -
stringzz- 3
>zz3 4
(zz4 5
nullablezz5 =
:zz= >
truezz? C
)zzC D
,zzD E
DateCreation{{  
={{! "
table{{# (
.{{( )
Column{{) /
<{{/ 0
string{{0 6
>{{6 7
({{7 8
nullable{{8 @
:{{@ A
true{{B F
){{F G
,{{G H
Createur|| 
=|| 
table|| $
.||$ %
Column||% +
<||+ ,
string||, 2
>||2 3
(||3 4
nullable||4 <
:||< =
true||> B
)||B C
,||C D$
DateDerniereModification}} ,
=}}- .
table}}/ 4
.}}4 5
Column}}5 ;
<}}; <
string}}< B
>}}B C
(}}C D
nullable}}D L
:}}L M
true}}N R
)}}R S
,}}S T
Modificateur~~  
=~~! "
table~~# (
.~~( )
Column~~) /
<~~/ 0
string~~0 6
>~~6 7
(~~7 8
nullable~~8 @
:~~@ A
true~~B F
)~~F G
,~~G H
IdProfil 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
nullable4 <
:< =
true> B
)B C
,C D
ProfilIdProfil
 "
=
# $
table
% *
.
* +
Column
+ 1
<
1 2
string
2 8
>
8 9
(
9 :
nullable
: B
:
B C
true
D H
)
H I
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% /
,
/ 0
x
1 2
=>
3 5
x
6 7
.
7 8
IdUser
8 >
)
> ?
;
? @
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 ?
,
? @
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
ProfilIdProfil
' 5
,
5 6
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) 3
,
3 4
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Restrict
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 (
,
( )
columns
 
:
 
table
 
=>
 !
new
" %
{
 
Id
 
=
 
table
 
.
 
Column
 %
<
% &
string
& ,
>
, -
(
- .
nullable
. 6
:
6 7
false
8 =
)
= >
,
> ?
Description
 
=
  !
table
" '
.
' (
Column
( .
<
. /
string
/ 5
>
5 6
(
6 7
nullable
7 ?
:
? @
true
A E
)
E F
,
F G
Delivery
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
string
, 2
>
2 3
(
3 4
nullable
4 <
:
< =
true
> B
)
B C
,
C D
Planned
 
=
 
table
 #
.
# $
Column
$ *
<
* +
bool
+ /
>
/ 0
(
0 1
nullable
1 9
:
9 :
false
; @
)
@ A
,
A B
EBRC
 
=
 
table
  
.
  !
Column
! '
<
' (
string
( .
>
. /
(
/ 0
nullable
0 8
:
8 9
true
: >
)
> ?
,
? @
Type
 
=
 
table
  
.
  !
Column
! '
<
' (
string
( .
>
. /
(
/ 0
nullable
0 8
:
8 9
true
: >
)
> ?
,
? @
	StartDate
 
=
 
table
  %
.
% &
Column
& ,
<
, -
string
- 3
>
3 4
(
4 5
nullable
5 =
:
= >
true
? C
)
C D
,
D E 
InitialPlannedDate
 &
=
' (
table
) .
.
. /
Column
/ 5
<
5 6
string
6 <
>
< =
(
= >
nullable
> F
:
F G
true
H L
)
L M
,
M N
PlannedDate
 
=
  !
table
" '
.
' (
Column
( .
<
. /
string
/ 5
>
5 6
(
6 7
nullable
7 ?
:
? @
true
A E
)
E F
,
F G
DeliveryDate
  
=
! "
table
# (
.
( )
Column
) /
<
/ 0
string
0 6
>
6 7
(
7 8
nullable
8 @
:
@ A
true
B F
)
F G
,
G H
DateCreation
  
=
! "
table
# (
.
( )
Column
) /
<
/ 0
string
0 6
>
6 7
(
7 8
nullable
8 @
:
@ A
true
B F
)
F G
,
G H
Createur
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
string
, 2
>
2 3
(
3 4
nullable
4 <
:
< =
true
> B
)
B C
,
C D&
DateDerniereModification
 ,
=
- .
table
/ 4
.
4 5
Column
5 ;
<
; <
string
< B
>
B C
(
C D
nullable
D L
:
L M
true
N R
)
R S
,
S T
Modificateur
  
=
! "
table
# (
.
( )
Column
) /
<
/ 0
string
0 6
>
6 7
(
7 8
nullable
8 @
:
@ A
true
B F
)
F G
,
G H
ProjetLivraisonId
 %
=
& '
table
( -
.
- .
Column
. 4
<
4 5
string
5 ;
>
; <
(
< =
nullable
= E
:
E F
true
G K
)
K L
,
L M
TTMId
   
=
   
table
   !
.
  ! "
Column
  " (
<
  ( )
string
  ) /
>
  / 0
(
  0 1
nullable
  1 9
:
  9 :
true
  ; ?
)
  ? @
,
  @ A
StatusId
¡¡ 
=
¡¡ 
table
¡¡ $
.
¡¡$ %
Column
¡¡% +
<
¡¡+ ,
string
¡¡, 2
>
¡¡2 3
(
¡¡3 4
nullable
¡¡4 <
:
¡¡< =
true
¡¡> B
)
¡¡B C
}
¢¢ 
,
¢¢ 
constraints
££ 
:
££ 
table
££ "
=>
££# %
{
¤¤ 
table
¥¥ 
.
¥¥ 

PrimaryKey
¥¥ $
(
¥¥$ %
$str
¥¥% :
,
¥¥: ;
x
¥¥< =
=>
¥¥> @
x
¥¥A B
.
¥¥B C
Id
¥¥C E
)
¥¥E F
;
¥¥F G
table
¦¦ 
.
¦¦ 

ForeignKey
¦¦ $
(
¦¦$ %
name
§§ 
:
§§ 
$str
§§ V
,
§§V W
column
¨¨ 
:
¨¨ 
x
¨¨  !
=>
¨¨" $
x
¨¨% &
.
¨¨& '
ProjetLivraisonId
¨¨' 8
,
¨¨8 9
principalTable
©© &
:
©©& '
$str
©©( :
,
©©: ;
principalColumn
ªª '
:
ªª' (
$str
ªª) -
,
ªª- .
onDelete
««  
:
««  !
ReferentialAction
««" 3
.
««3 4
Restrict
««4 <
)
««< =
;
««= >
table
¬¬ 
.
¬¬ 

ForeignKey
¬¬ $
(
¬¬$ %
name
­­ 
:
­­ 
$str
­­ C
,
­­C D
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
StatusId
®®' /
,
®®/ 0
principalTable
¯¯ &
:
¯¯& '
$str
¯¯( 0
,
¯¯0 1
principalColumn
°° '
:
°°' (
$str
°°) 3
,
°°3 4
onDelete
±±  
:
±±  !
ReferentialAction
±±" 3
.
±±3 4
Restrict
±±4 <
)
±±< =
;
±±= >
table
²² 
.
²² 

ForeignKey
²² $
(
²²$ %
name
³³ 
:
³³ 
$str
³³ =
,
³³= >
column
´´ 
:
´´ 
x
´´  !
=>
´´" $
x
´´% &
.
´´& '
TTMId
´´' ,
,
´´, -
principalTable
µµ &
:
µµ& '
$str
µµ( -
,
µµ- .
principalColumn
¶¶ '
:
¶¶' (
$str
¶¶) 0
,
¶¶0 1
onDelete
··  
:
··  !
ReferentialAction
··" 3
.
··3 4
Restrict
··4 <
)
··< =
;
··= >
}
¸¸ 
)
¸¸ 
;
¸¸ 
migrationBuilder
ºº 
.
ºº 
CreateTable
ºº (
(
ºº( )
name
»» 
:
»» 
$str
»» 
,
»»  
columns
¼¼ 
:
¼¼ 
table
¼¼ 
=>
¼¼ !
new
¼¼" %
{
½½ 
Id
¾¾ 
=
¾¾ 
table
¾¾ 
.
¾¾ 
Column
¾¾ %
<
¾¾% &
string
¾¾& ,
>
¾¾, -
(
¾¾- .
nullable
¾¾. 6
:
¾¾6 7
false
¾¾8 =
)
¾¾= >
,
¾¾> ?
Nom
¿¿ 
=
¿¿ 
table
¿¿ 
.
¿¿  
Column
¿¿  &
<
¿¿& '
string
¿¿' -
>
¿¿- .
(
¿¿. /
nullable
¿¿/ 7
:
¿¿7 8
true
¿¿9 =
)
¿¿= >
,
¿¿> ?
Adresse
ÀÀ 
=
ÀÀ 
table
ÀÀ #
.
ÀÀ# $
Column
ÀÀ$ *
<
ÀÀ* +
string
ÀÀ+ 1
>
ÀÀ1 2
(
ÀÀ2 3
nullable
ÀÀ3 ;
:
ÀÀ; <
true
ÀÀ= A
)
ÀÀA B
,
ÀÀB C
AdresseEmail
ÁÁ  
=
ÁÁ! "
table
ÁÁ# (
.
ÁÁ( )
Column
ÁÁ) /
<
ÁÁ/ 0
string
ÁÁ0 6
>
ÁÁ6 7
(
ÁÁ7 8
nullable
ÁÁ8 @
:
ÁÁ@ A
true
ÁÁB F
)
ÁÁF G
,
ÁÁG H
	Telephone
ÂÂ 
=
ÂÂ 
table
ÂÂ  %
.
ÂÂ% &
Column
ÂÂ& ,
<
ÂÂ, -
string
ÂÂ- 3
>
ÂÂ3 4
(
ÂÂ4 5
nullable
ÂÂ5 =
:
ÂÂ= >
true
ÂÂ? C
)
ÂÂC D
,
ÂÂD E
Fax
ÃÃ 
=
ÃÃ 
table
ÃÃ 
.
ÃÃ  
Column
ÃÃ  &
<
ÃÃ& '
string
ÃÃ' -
>
ÃÃ- .
(
ÃÃ. /
nullable
ÃÃ/ 7
:
ÃÃ7 8
true
ÃÃ9 =
)
ÃÃ= >
,
ÃÃ> ?
DateCreation
ÄÄ  
=
ÄÄ! "
table
ÄÄ# (
.
ÄÄ( )
Column
ÄÄ) /
<
ÄÄ/ 0
string
ÄÄ0 6
>
ÄÄ6 7
(
ÄÄ7 8
nullable
ÄÄ8 @
:
ÄÄ@ A
true
ÄÄB F
)
ÄÄF G
,
ÄÄG H
Createur
ÅÅ 
=
ÅÅ 
table
ÅÅ $
.
ÅÅ$ %
Column
ÅÅ% +
<
ÅÅ+ ,
string
ÅÅ, 2
>
ÅÅ2 3
(
ÅÅ3 4
nullable
ÅÅ4 <
:
ÅÅ< =
true
ÅÅ> B
)
ÅÅB C
,
ÅÅC D&
DateDerniereModification
ÆÆ ,
=
ÆÆ- .
table
ÆÆ/ 4
.
ÆÆ4 5
Column
ÆÆ5 ;
<
ÆÆ; <
string
ÆÆ< B
>
ÆÆB C
(
ÆÆC D
nullable
ÆÆD L
:
ÆÆL M
true
ÆÆN R
)
ÆÆR S
,
ÆÆS T
Modificateur
ÇÇ  
=
ÇÇ! "
table
ÇÇ# (
.
ÇÇ( )
Column
ÇÇ) /
<
ÇÇ/ 0
string
ÇÇ0 6
>
ÇÇ6 7
(
ÇÇ7 8
nullable
ÇÇ8 @
:
ÇÇ@ A
true
ÇÇB F
)
ÇÇF G
,
ÇÇG H
TypeClientId
ÈÈ  
=
ÈÈ! "
table
ÈÈ# (
.
ÈÈ( )
Column
ÈÈ) /
<
ÈÈ/ 0
string
ÈÈ0 6
>
ÈÈ6 7
(
ÈÈ7 8
nullable
ÈÈ8 @
:
ÈÈ@ A
true
ÈÈB F
)
ÈÈF G
}
ÉÉ 
,
ÉÉ 
constraints
ÊÊ 
:
ÊÊ 
table
ÊÊ "
=>
ÊÊ# %
{
ËË 
table
ÌÌ 
.
ÌÌ 

PrimaryKey
ÌÌ $
(
ÌÌ$ %
$str
ÌÌ% 1
,
ÌÌ1 2
x
ÌÌ3 4
=>
ÌÌ5 7
x
ÌÌ8 9
.
ÌÌ9 :
Id
ÌÌ: <
)
ÌÌ< =
;
ÌÌ= >
table
ÍÍ 
.
ÍÍ 

ForeignKey
ÍÍ $
(
ÍÍ$ %
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ C
,
ÎÎC D
column
ÏÏ 
:
ÏÏ 
x
ÏÏ  !
=>
ÏÏ" $
x
ÏÏ% &
.
ÏÏ& '
TypeClientId
ÏÏ' 3
,
ÏÏ3 4
principalTable
ÐÐ &
:
ÐÐ& '
$str
ÐÐ( 5
,
ÐÐ5 6
principalColumn
ÑÑ '
:
ÑÑ' (
$str
ÑÑ) -
,
ÑÑ- .
onDelete
ÒÒ  
:
ÒÒ  !
ReferentialAction
ÒÒ" 3
.
ÒÒ3 4
Restrict
ÒÒ4 <
)
ÒÒ< =
;
ÒÒ= >
}
ÓÓ 
)
ÓÓ 
;
ÓÓ 
migrationBuilder
ÕÕ 
.
ÕÕ 
CreateTable
ÕÕ (
(
ÕÕ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ #
,
ÖÖ# $
columns
×× 
:
×× 
table
×× 
=>
×× !
new
××" %
{
ØØ 
Id
ÙÙ 
=
ÙÙ 
table
ÙÙ 
.
ÙÙ 
Column
ÙÙ %
<
ÙÙ% &
string
ÙÙ& ,
>
ÙÙ, -
(
ÙÙ- .
nullable
ÙÙ. 6
:
ÙÙ6 7
false
ÙÙ8 =
)
ÙÙ= >
,
ÙÙ> ?
	DateDebut
ÚÚ 
=
ÚÚ 
table
ÚÚ  %
.
ÚÚ% &
Column
ÚÚ& ,
<
ÚÚ, -
string
ÚÚ- 3
>
ÚÚ3 4
(
ÚÚ4 5
nullable
ÚÚ5 =
:
ÚÚ= >
true
ÚÚ? C
)
ÚÚC D
,
ÚÚD E
DateFin
ÛÛ 
=
ÛÛ 
table
ÛÛ #
.
ÛÛ# $
Column
ÛÛ$ *
<
ÛÛ* +
string
ÛÛ+ 1
>
ÛÛ1 2
(
ÛÛ2 3
nullable
ÛÛ3 ;
:
ÛÛ; <
true
ÛÛ= A
)
ÛÛA B
,
ÛÛB C!
IdStatusImputations
ÜÜ '
=
ÜÜ( )
table
ÜÜ* /
.
ÜÜ/ 0
Column
ÜÜ0 6
<
ÜÜ6 7
string
ÜÜ7 =
>
ÜÜ= >
(
ÜÜ> ?
nullable
ÜÜ? G
:
ÜÜG H
true
ÜÜI M
)
ÜÜM N
,
ÜÜN O2
$StatusImputationsIdStatusImputations
ÝÝ 8
=
ÝÝ9 :
table
ÝÝ; @
.
ÝÝ@ A
Column
ÝÝA G
<
ÝÝG H
string
ÝÝH N
>
ÝÝN O
(
ÝÝO P
nullable
ÝÝP X
:
ÝÝX Y
true
ÝÝZ ^
)
ÝÝ^ _
,
ÝÝ_ `
IdUser
ÞÞ 
=
ÞÞ 
table
ÞÞ "
.
ÞÞ" #
Column
ÞÞ# )
<
ÞÞ) *
string
ÞÞ* 0
>
ÞÞ0 1
(
ÞÞ1 2
nullable
ÞÞ2 :
:
ÞÞ: ;
true
ÞÞ< @
)
ÞÞ@ A
,
ÞÞA B

UserIdUser
ßß 
=
ßß  
table
ßß! &
.
ßß& '
Column
ßß' -
<
ßß- .
string
ßß. 4
>
ßß4 5
(
ßß5 6
nullable
ßß6 >
:
ßß> ?
true
ßß@ D
)
ßßD E
}
àà 
,
àà 
constraints
áá 
:
áá 
table
áá "
=>
áá# %
{
ââ 
table
ãã 
.
ãã 

PrimaryKey
ãã $
(
ãã$ %
$str
ãã% 5
,
ãã5 6
x
ãã7 8
=>
ãã9 ;
x
ãã< =
.
ãã= >
Id
ãã> @
)
ãã@ A
;
ããA B
table
ää 
.
ää 

ForeignKey
ää $
(
ää$ %
name
åå 
:
åå 
$str
åå e
,
ååe f
column
ææ 
:
ææ 
x
ææ  !
=>
ææ" $
x
ææ% &
.
ææ& '2
$StatusImputationsIdStatusImputations
ææ' K
,
ææK L
principalTable
çç &
:
çç& '
$str
çç( ;
,
çç; <
principalColumn
èè '
:
èè' (
$str
èè) >
,
èè> ?
onDelete
éé  
:
éé  !
ReferentialAction
éé" 3
.
éé3 4
Restrict
éé4 <
)
éé< =
;
éé= >
table
êê 
.
êê 

ForeignKey
êê $
(
êê$ %
name
ëë 
:
ëë 
$str
ëë ?
,
ëë? @
column
ìì 
:
ìì 
x
ìì  !
=>
ìì" $
x
ìì% &
.
ìì& '

UserIdUser
ìì' 1
,
ìì1 2
principalTable
íí &
:
íí& '
$str
íí( /
,
íí/ 0
principalColumn
îî '
:
îî' (
$str
îî) 1
,
îî1 2
onDelete
ïï  
:
ïï  !
ReferentialAction
ïï" 3
.
ïï3 4
Restrict
ïï4 <
)
ïï< =
;
ïï= >
}
ðð 
)
ðð 
;
ðð 
migrationBuilder
òò 
.
òò 
CreateTable
òò (
(
òò( )
name
óó 
:
óó 
$str
óó $
,
óó$ %
columns
ôô 
:
ôô 
table
ôô 
=>
ôô !
new
ôô" %
{
õõ 
IdCommentaire
öö !
=
öö" #
table
öö$ )
.
öö) *
Column
öö* 0
<
öö0 1
string
öö1 7
>
öö7 8
(
öö8 9
nullable
öö9 A
:
ööA B
false
ööC H
)
ööH I
,
ööI J
Description
÷÷ 
=
÷÷  !
table
÷÷" '
.
÷÷' (
Column
÷÷( .
<
÷÷. /
string
÷÷/ 5
>
÷÷5 6
(
÷÷6 7
nullable
÷÷7 ?
:
÷÷? @
true
÷÷A E
)
÷÷E F
,
÷÷F G
Id
øø 
=
øø 
table
øø 
.
øø 
Column
øø %
<
øø% &
string
øø& ,
>
øø, -
(
øø- .
nullable
øø. 6
:
øø6 7
true
øø8 <
)
øø< =
,
øø= >
DetailLivraisonId
ùù %
=
ùù& '
table
ùù( -
.
ùù- .
Column
ùù. 4
<
ùù4 5
string
ùù5 ;
>
ùù; <
(
ùù< =
nullable
ùù= E
:
ùùE F
true
ùùG K
)
ùùK L
}
úú 
,
úú 
constraints
ûû 
:
ûû 
table
ûû "
=>
ûû# %
{
üü 
table
ýý 
.
ýý 

PrimaryKey
ýý $
(
ýý$ %
$str
ýý% 6
,
ýý6 7
x
ýý8 9
=>
ýý: <
x
ýý= >
.
ýý> ?
IdCommentaire
ýý? L
)
ýýL M
;
ýýM N
table
þþ 
.
þþ 

ForeignKey
þþ $
(
þþ$ %
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ R
,
ÿÿR S
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
DetailLivraisonId
' 8
,
8 9
principalTable
 &
:
& '
$str
( :
,
: ;
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Restrict
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 
,
  
columns
 
:
 
table
 
=>
 !
new
" %
{
 
IdProjet
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
string
, 2
>
2 3
(
3 4
nullable
4 <
:
< =
false
> C
)
C D
,
D E
Nommenclature
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
string
1 7
>
7 8
(
8 9
nullable
9 A
:
A B
true
C G
)
G H
,
H I
Description
 
=
  !
table
" '
.
' (
Column
( .
<
. /
string
/ 5
>
5 6
(
6 7
nullable
7 ?
:
? @
true
A E
)
E F
,
F G
Publique
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
string
, 2
>
2 3
(
3 4
nullable
4 <
:
< =
true
> B
)
B C
,
C D
DateCreation
  
=
! "
table
# (
.
( )
Column
) /
<
/ 0
string
0 6
>
6 7
(
7 8
nullable
8 @
:
@ A
true
B F
)
F G
,
G H
Createur
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
string
, 2
>
2 3
(
3 4
nullable
4 <
:
< =
true
> B
)
B C
,
C D&
DateDerniereModification
 ,
=
- .
table
/ 4
.
4 5
Column
5 ;
<
; <
string
< B
>
B C
(
C D
nullable
D L
:
L M
true
N R
)
R S
,
S T
Modificateur
  
=
! "
table
# (
.
( )
Column
) /
<
/ 0
string
0 6
>
6 7
(
7 8
nullable
8 @
:
@ A
true
B F
)
F G
,
G H
IdPhaseProjet
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
string
1 7
>
7 8
(
8 9
nullable
9 A
:
A B
true
C G
)
G H
,
H I
PhaseProjetId
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
string
1 7
>
7 8
(
8 9
nullable
9 A
:
A B
true
C G
)
G H
,
H I
Id
 
=
 
table
 
.
 
Column
 %
<
% &
string
& ,
>
, -
(
- .
nullable
. 6
:
6 7
true
8 <
)
< =
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 1
,
1 2
x
3 4
=>
5 7
x
8 9
.
9 :
IdProjet
: B
)
B C
;
C D
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 >
,
> ?
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
Id
' )
,
) *
principalTable
 &
:
& '
$str
( :
,
: ;
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Restrict
4 <
)
< =
;
= >
table
 
.
 

ForeignKey
 $
(
$ %
name
   
:
   
$str
   E
,
  E F
column
¡¡ 
:
¡¡ 
x
¡¡  !
=>
¡¡" $
x
¡¡% &
.
¡¡& '
PhaseProjetId
¡¡' 4
,
¡¡4 5
principalTable
¢¢ &
:
¢¢& '
$str
¢¢( 6
,
¢¢6 7
principalColumn
££ '
:
££' (
$str
££) -
,
££- .
onDelete
¤¤  
:
¤¤  !
ReferentialAction
¤¤" 3
.
¤¤3 4
Restrict
¤¤4 <
)
¤¤< =
;
¤¤= >
}
¥¥ 
)
¥¥ 
;
¥¥ 
migrationBuilder
§§ 
.
§§ 
CreateTable
§§ (
(
§§( )
name
¨¨ 
:
¨¨ 
$str
¨¨ .
,
¨¨. /
columns
©© 
:
©© 
table
©© 
=>
©© !
new
©©" %
{
ªª 
ClientId
«« 
=
«« 
table
«« $
.
««$ %
Column
««% +
<
««+ ,
string
««, 2
>
««2 3
(
««3 4
nullable
««4 <
:
««< =
false
««> C
)
««C D
,
««D E
ProjetLivraisonId
¬¬ %
=
¬¬& '
table
¬¬( -
.
¬¬- .
Column
¬¬. 4
<
¬¬4 5
string
¬¬5 ;
>
¬¬; <
(
¬¬< =
nullable
¬¬= E
:
¬¬E F
false
¬¬G L
)
¬¬L M
}
­­ 
,
­­ 
constraints
®® 
:
®® 
table
®® "
=>
®®# %
{
¯¯ 
table
°° 
.
°° 

PrimaryKey
°° $
(
°°$ %
$str
°°% @
,
°°@ A
x
°°B C
=>
°°D F
new
°°G J
{
°°K L
x
°°M N
.
°°N O
ProjetLivraisonId
°°O `
,
°°` a
x
°°b c
.
°°c d
ClientId
°°d l
}
°°m n
)
°°n o
;
°°o p
table
±± 
.
±± 

ForeignKey
±± $
(
±±$ %
name
²² 
:
²² 
$str
²² J
,
²²J K
column
³³ 
:
³³ 
x
³³  !
=>
³³" $
x
³³% &
.
³³& '
ClientId
³³' /
,
³³/ 0
principalTable
´´ &
:
´´& '
$str
´´( 1
,
´´1 2
principalColumn
µµ '
:
µµ' (
$str
µµ) -
,
µµ- .
onDelete
¶¶  
:
¶¶  !
ReferentialAction
¶¶" 3
.
¶¶3 4
Cascade
¶¶4 ;
)
¶¶; <
;
¶¶< =
table
·· 
.
·· 

ForeignKey
·· $
(
··$ %
name
¸¸ 
:
¸¸ 
$str
¸¸ \
,
¸¸\ ]
column
¹¹ 
:
¹¹ 
x
¹¹  !
=>
¹¹" $
x
¹¹% &
.
¹¹& '
ProjetLivraisonId
¹¹' 8
,
¹¹8 9
principalTable
ºº &
:
ºº& '
$str
ºº( :
,
ºº: ;
principalColumn
»» '
:
»»' (
$str
»») -
,
»»- .
onDelete
¼¼  
:
¼¼  !
ReferentialAction
¼¼" 3
.
¼¼3 4
Cascade
¼¼4 ;
)
¼¼; <
;
¼¼< =
}
½½ 
)
½½ 
;
½½ 
migrationBuilder
¿¿ 
.
¿¿ 
CreateTable
¿¿ (
(
¿¿( )
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ )
,
ÀÀ) *
columns
ÁÁ 
:
ÁÁ 
table
ÁÁ 
=>
ÁÁ !
new
ÁÁ" %
{
ÂÂ 
Id
ÃÃ 
=
ÃÃ 
table
ÃÃ 
.
ÃÃ 
Column
ÃÃ %
<
ÃÃ% &
string
ÃÃ& ,
>
ÃÃ, -
(
ÃÃ- .
nullable
ÃÃ. 6
:
ÃÃ6 7
false
ÃÃ8 =
)
ÃÃ= >
,
ÃÃ> ?
Projet
ÄÄ 
=
ÄÄ 
table
ÄÄ "
.
ÄÄ" #
Column
ÄÄ# )
<
ÄÄ) *
string
ÄÄ* 0
>
ÄÄ0 1
(
ÄÄ1 2
nullable
ÄÄ2 :
:
ÄÄ: ;
true
ÄÄ< @
)
ÄÄ@ A
,
ÄÄA B
Client
ÅÅ 
=
ÅÅ 
table
ÅÅ "
.
ÅÅ" #
Column
ÅÅ# )
<
ÅÅ) *
string
ÅÅ* 0
>
ÅÅ0 1
(
ÅÅ1 2
nullable
ÅÅ2 :
:
ÅÅ: ;
true
ÅÅ< @
)
ÅÅ@ A
,
ÅÅA B
Phase
ÆÆ 
=
ÆÆ 
table
ÆÆ !
.
ÆÆ! "
Column
ÆÆ" (
<
ÆÆ( )
string
ÆÆ) /
>
ÆÆ/ 0
(
ÆÆ0 1
nullable
ÆÆ1 9
:
ÆÆ9 :
true
ÆÆ; ?
)
ÆÆ? @
,
ÆÆ@ A
Description
ÇÇ 
=
ÇÇ  !
table
ÇÇ" '
.
ÇÇ' (
Column
ÇÇ( .
<
ÇÇ. /
string
ÇÇ/ 5
>
ÇÇ5 6
(
ÇÇ6 7
nullable
ÇÇ7 ?
:
ÇÇ? @
true
ÇÇA E
)
ÇÇE F
,
ÇÇF G
Lundi
ÈÈ 
=
ÈÈ 
table
ÈÈ !
.
ÈÈ! "
Column
ÈÈ" (
<
ÈÈ( )
string
ÈÈ) /
>
ÈÈ/ 0
(
ÈÈ0 1
nullable
ÈÈ1 9
:
ÈÈ9 :
true
ÈÈ; ?
)
ÈÈ? @
,
ÈÈ@ A
Mardi
ÉÉ 
=
ÉÉ 
table
ÉÉ !
.
ÉÉ! "
Column
ÉÉ" (
<
ÉÉ( )
string
ÉÉ) /
>
ÉÉ/ 0
(
ÉÉ0 1
nullable
ÉÉ1 9
:
ÉÉ9 :
true
ÉÉ; ?
)
ÉÉ? @
,
ÉÉ@ A
Mercredi
ÊÊ 
=
ÊÊ 
table
ÊÊ $
.
ÊÊ$ %
Column
ÊÊ% +
<
ÊÊ+ ,
string
ÊÊ, 2
>
ÊÊ2 3
(
ÊÊ3 4
nullable
ÊÊ4 <
:
ÊÊ< =
true
ÊÊ> B
)
ÊÊB C
,
ÊÊC D
Jeudi
ËË 
=
ËË 
table
ËË !
.
ËË! "
Column
ËË" (
<
ËË( )
string
ËË) /
>
ËË/ 0
(
ËË0 1
nullable
ËË1 9
:
ËË9 :
true
ËË; ?
)
ËË? @
,
ËË@ A
Vendredi
ÌÌ 
=
ÌÌ 
table
ÌÌ $
.
ÌÌ$ %
Column
ÌÌ% +
<
ÌÌ+ ,
string
ÌÌ, 2
>
ÌÌ2 3
(
ÌÌ3 4
nullable
ÌÌ4 <
:
ÌÌ< =
true
ÌÌ> B
)
ÌÌB C
,
ÌÌC D
IdImputation
ÍÍ  
=
ÍÍ! "
table
ÍÍ# (
.
ÍÍ( )
Column
ÍÍ) /
<
ÍÍ/ 0
string
ÍÍ0 6
>
ÍÍ6 7
(
ÍÍ7 8
nullable
ÍÍ8 @
:
ÍÍ@ A
true
ÍÍB F
)
ÍÍF G
,
ÍÍG H
ImputationId
ÎÎ  
=
ÎÎ! "
table
ÎÎ# (
.
ÎÎ( )
Column
ÎÎ) /
<
ÎÎ/ 0
string
ÎÎ0 6
>
ÎÎ6 7
(
ÎÎ7 8
nullable
ÎÎ8 @
:
ÎÎ@ A
true
ÎÎB F
)
ÎÎF G
}
ÏÏ 
,
ÏÏ 
constraints
ÐÐ 
:
ÐÐ 
table
ÐÐ "
=>
ÐÐ# %
{
ÑÑ 
table
ÒÒ 
.
ÒÒ 

PrimaryKey
ÒÒ $
(
ÒÒ$ %
$str
ÒÒ% ;
,
ÒÒ; <
x
ÒÒ= >
=>
ÒÒ? A
x
ÒÒB C
.
ÒÒC D
Id
ÒÒD F
)
ÒÒF G
;
ÒÒG H
table
ÓÓ 
.
ÓÓ 

ForeignKey
ÓÓ $
(
ÓÓ$ %
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ M
,
ÔÔM N
column
ÕÕ 
:
ÕÕ 
x
ÕÕ  !
=>
ÕÕ" $
x
ÕÕ% &
.
ÕÕ& '
ImputationId
ÕÕ' 3
,
ÕÕ3 4
principalTable
ÖÖ &
:
ÖÖ& '
$str
ÖÖ( 5
,
ÖÖ5 6
principalColumn
×× '
:
××' (
$str
××) -
,
××- .
onDelete
ØØ  
:
ØØ  !
ReferentialAction
ØØ" 3
.
ØØ3 4
Restrict
ØØ4 <
)
ØØ< =
;
ØØ= >
}
ÙÙ 
)
ÙÙ 
;
ÙÙ 
migrationBuilder
ÛÛ 
.
ÛÛ 
CreateTable
ÛÛ (
(
ÛÛ( )
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ 
,
ÜÜ 
columns
ÝÝ 
:
ÝÝ 
table
ÝÝ 
=>
ÝÝ !
new
ÝÝ" %
{
ÞÞ 
Id
ßß 
=
ßß 
table
ßß 
.
ßß 
Column
ßß %
<
ßß% &
string
ßß& ,
>
ßß, -
(
ßß- .
nullable
ßß. 6
:
ßß6 7
false
ßß8 =
)
ßß= >
,
ßß> ?
Description
àà 
=
àà  !
table
àà" '
.
àà' (
Column
àà( .
<
àà. /
string
àà/ 5
>
àà5 6
(
àà6 7
nullable
àà7 ?
:
àà? @
true
ààA E
)
ààE F
,
ààF G
Charge
áá 
=
áá 
table
áá "
.
áá" #
Column
áá# )
<
áá) *
string
áá* 0
>
áá0 1
(
áá1 2
nullable
áá2 :
:
áá: ;
true
áá< @
)
áá@ A
,
ááA B
Createur
ââ 
=
ââ 
table
ââ $
.
ââ$ %
Column
ââ% +
<
ââ+ ,
string
ââ, 2
>
ââ2 3
(
ââ3 4
nullable
ââ4 <
:
ââ< =
true
ââ> B
)
ââB C
,
ââC D
IdUser
ãã 
=
ãã 
table
ãã "
.
ãã" #
Column
ãã# )
<
ãã) *
string
ãã* 0
>
ãã0 1
(
ãã1 2
nullable
ãã2 :
:
ãã: ;
true
ãã< @
)
ãã@ A
,
ããA B

UserIdUser
ää 
=
ää  
table
ää! &
.
ää& '
Column
ää' -
<
ää- .
string
ää. 4
>
ää4 5
(
ää5 6
nullable
ää6 >
:
ää> ?
true
ää@ D
)
ääD E
,
ääE F
IdStatutTache
åå !
=
åå" #
table
åå$ )
.
åå) *
Column
åå* 0
<
åå0 1
string
åå1 7
>
åå7 8
(
åå8 9
nullable
åå9 A
:
ååA B
true
ååC G
)
ååG H
,
ååH I&
StatutTacheIdStatutTache
ææ ,
=
ææ- .
table
ææ/ 4
.
ææ4 5
Column
ææ5 ;
<
ææ; <
string
ææ< B
>
ææB C
(
ææC D
nullable
ææD L
:
ææL M
true
ææN R
)
ææR S
,
ææS T
IdProjet
çç 
=
çç 
table
çç $
.
çç$ %
Column
çç% +
<
çç+ ,
string
çç, 2
>
çç2 3
(
çç3 4
nullable
çç4 <
:
çç< =
true
çç> B
)
ççB C
,
ççC D
ProjetIdProjet
èè "
=
èè# $
table
èè% *
.
èè* +
Column
èè+ 1
<
èè1 2
string
èè2 8
>
èè8 9
(
èè9 :
nullable
èè: B
:
èèB C
true
èèD H
)
èèH I
}
éé 
,
éé 
constraints
êê 
:
êê 
table
êê "
=>
êê# %
{
ëë 
table
ìì 
.
ìì 

PrimaryKey
ìì $
(
ìì$ %
$str
ìì% 0
,
ìì0 1
x
ìì2 3
=>
ìì4 6
x
ìì7 8
.
ìì8 9
Id
ìì9 ;
)
ìì; <
;
ìì< =
table
íí 
.
íí 

ForeignKey
íí $
(
íí$ %
name
îî 
:
îî 
$str
îî @
,
îî@ A
column
ïï 
:
ïï 
x
ïï  !
=>
ïï" $
x
ïï% &
.
ïï& '
ProjetIdProjet
ïï' 5
,
ïï5 6
principalTable
ðð &
:
ðð& '
$str
ðð( 1
,
ðð1 2
principalColumn
ññ '
:
ññ' (
$str
ññ) 3
,
ññ3 4
onDelete
òò  
:
òò  !
ReferentialAction
òò" 3
.
òò3 4
Restrict
òò4 <
)
òò< =
;
òò= >
table
óó 
.
óó 

ForeignKey
óó $
(
óó$ %
name
ôô 
:
ôô 
$str
ôô O
,
ôôO P
column
õõ 
:
õõ 
x
õõ  !
=>
õõ" $
x
õõ% &
.
õõ& '&
StatutTacheIdStatutTache
õõ' ?
,
õõ? @
principalTable
öö &
:
öö& '
$str
öö( 6
,
öö6 7
principalColumn
÷÷ '
:
÷÷' (
$str
÷÷) 8
,
÷÷8 9
onDelete
øø  
:
øø  !
ReferentialAction
øø" 3
.
øø3 4
Restrict
øø4 <
)
øø< =
;
øø= >
table
ùù 
.
ùù 

ForeignKey
ùù $
(
ùù$ %
name
úú 
:
úú 
$str
úú :
,
úú: ;
column
ûû 
:
ûû 
x
ûû  !
=>
ûû" $
x
ûû% &
.
ûû& '

UserIdUser
ûû' 1
,
ûû1 2
principalTable
üü &
:
üü& '
$str
üü( /
,
üü/ 0
principalColumn
ýý '
:
ýý' (
$str
ýý) 1
,
ýý1 2
onDelete
þþ  
:
þþ  !
ReferentialAction
þþ" 3
.
þþ3 4
Restrict
þþ4 <
)
þþ< =
;
þþ= >
}
ÿÿ 
)
ÿÿ 
;
ÿÿ 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
  
,
  !
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! %
,
% &
$str
' 0
,
0 1
$str
2 @
,
@ A
$str
B L
,
L M
$str
N \
,
\ ]
$str
^ x
,
x y
$str
z 
, 
$str 
, 
$str 
, 
$str £
,£ ¤
$str¥ ³
}´ µ
,µ ¶
values
 
:
 
new
 
object
 "
[
" #
]
# $
{
% &
$str
' *
,
* +
$str
, I
,
I J
null
K O
,
O P
null
Q U
,
U V
null
W [
,
[ \
null
] a
,
a b
$str
c q
,
q r
null
s w
,
w x
$stry 
, 
$str 
, 
null 
} 
) 
; 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
  
,
  !
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! %
,
% &
$str
' 0
,
0 1
$str
2 @
,
@ A
$str
B L
,
L M
$str
N \
,
\ ]
$str
^ x
,
x y
$str
z 
, 
$str 
, 
$str 
, 
$str £
,£ ¤
$str¥ ³
}´ µ
,µ ¶
values
 
:
 
new
 
object
 "
[
" #
]
# $
{
% &
$str
' +
,
+ ,
$str
- E
,
E F
null
G K
,
K L
null
M Q
,
Q R
null
S W
,
W X
null
Y ]
,
] ^
$str
_ m
,
m n
null
o s
,
s t
$str
u 
, 
$str 
, 
null 
} 
) 
; 
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 /
,
/ 0
table
 
:
 
$str
  
,
  !
column
 
:
 
$str
 &
)
& '
;
' (
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 9
,
9 :
table
 
:
 
$str
 %
,
% &
column
 
:
 
$str
 +
)
+ ,
;
, -
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 9
,
9 :
table
 
:
 
$str
 *
,
* +
column
 
:
 
$str
 &
)
& '
;
' (
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 =
,
= >
table
 
:
 
$str
 )
,
) *
column
 
:
 
$str
 +
)
+ ,
;
, -
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
   
:
   
$str
   4
,
  4 5
table
¡¡ 
:
¡¡ 
$str
¡¡ )
,
¡¡) *
column
¢¢ 
:
¢¢ 
$str
¢¢ "
)
¢¢" #
;
¢¢# $
migrationBuilder
¤¤ 
.
¤¤ 
CreateIndex
¤¤ (
(
¤¤( )
name
¥¥ 
:
¥¥ 
$str
¥¥ 1
,
¥¥1 2
table
¦¦ 
:
¦¦ 
$str
¦¦ )
,
¦¦) *
column
§§ 
:
§§ 
$str
§§ 
)
§§  
;
§§  !
migrationBuilder
©© 
.
©© 
CreateIndex
©© (
(
©©( )
name
ªª 
:
ªª 
$str
ªª K
,
ªªK L
table
«« 
:
«« 
$str
«« $
,
««$ %
column
¬¬ 
:
¬¬ 
$str
¬¬ >
)
¬¬> ?
;
¬¬? @
migrationBuilder
®® 
.
®® 
CreateIndex
®® (
(
®®( )
name
¯¯ 
:
¯¯ 
$str
¯¯ 1
,
¯¯1 2
table
°° 
:
°° 
$str
°° $
,
°°$ %
column
±± 
:
±± 
$str
±± $
)
±±$ %
;
±±% &
migrationBuilder
³³ 
.
³³ 
CreateIndex
³³ (
(
³³( )
name
´´ 
:
´´ 
$str
´´ :
,
´´: ;
table
µµ 
:
µµ 
$str
µµ /
,
µµ/ 0
column
¶¶ 
:
¶¶ 
$str
¶¶ "
)
¶¶" #
;
¶¶# $
migrationBuilder
¸¸ 
.
¸¸ 
CreateIndex
¸¸ (
(
¸¸( )
name
¹¹ 
:
¹¹ 
$str
¹¹ %
,
¹¹% &
table
ºº 
:
ºº 
$str
ºº  
,
ºº  !
column
»» 
:
»» 
$str
»» 
,
»» 
unique
¼¼ 
:
¼¼ 
true
¼¼ 
,
¼¼ 
filter
½½ 
:
½½ 
$str
½½ *
)
½½* +
;
½½+ ,
migrationBuilder
¿¿ 
.
¿¿ 
CreateIndex
¿¿ (
(
¿¿( )
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ 0
,
ÀÀ0 1
table
ÁÁ 
:
ÁÁ 
$str
ÁÁ  
,
ÁÁ  !
column
ÂÂ 
:
ÂÂ 
$str
ÂÂ '
)
ÂÂ' (
;
ÂÂ( )
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateIndex
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ 0
,
ÅÅ0 1
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ 
,
ÆÆ  
column
ÇÇ 
:
ÇÇ 
$str
ÇÇ (
)
ÇÇ( )
;
ÇÇ) *
migrationBuilder
ÉÉ 
.
ÉÉ 
CreateIndex
ÉÉ (
(
ÉÉ( )
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ :
,
ÊÊ: ;
table
ËË 
:
ËË 
$str
ËË 
,
ËË  
column
ÌÌ 
:
ÌÌ 
$str
ÌÌ 2
)
ÌÌ2 3
;
ÌÌ3 4
migrationBuilder
ÎÎ 
.
ÎÎ 
CreateIndex
ÎÎ (
(
ÎÎ( )
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ ,
,
ÏÏ, -
table
ÐÐ 
:
ÐÐ 
$str
ÐÐ 
,
ÐÐ  
column
ÑÑ 
:
ÑÑ 
$str
ÑÑ $
)
ÑÑ$ %
;
ÑÑ% &
migrationBuilder
ÓÓ 
.
ÓÓ 
CreateIndex
ÓÓ (
(
ÓÓ( )
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ /
,
ÔÔ/ 0
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ 
,
ÕÕ 
column
ÖÖ 
:
ÖÖ 
$str
ÖÖ (
)
ÖÖ( )
;
ÖÖ) *
}
×× 	
	protected
ÙÙ 
override
ÙÙ 
void
ÙÙ 
Down
ÙÙ  $
(
ÙÙ$ %
MigrationBuilder
ÙÙ% 5
migrationBuilder
ÙÙ6 F
)
ÙÙF G
{
ÚÚ 	
migrationBuilder
ÛÛ 
.
ÛÛ 
	DropTable
ÛÛ &
(
ÛÛ& '
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ $
)
ÜÜ$ %
;
ÜÜ% &
migrationBuilder
ÞÞ 
.
ÞÞ 
	DropTable
ÞÞ &
(
ÞÞ& '
name
ßß 
:
ßß 
$str
ßß )
)
ßß) *
;
ßß* +
migrationBuilder
áá 
.
áá 
	DropTable
áá &
(
áá& '
name
ââ 
:
ââ 
$str
ââ .
)
ââ. /
;
ââ/ 0
migrationBuilder
ää 
.
ää 
	DropTable
ää &
(
ää& '
name
åå 
:
åå 
$str
åå 
)
åå 
;
åå  
migrationBuilder
çç 
.
çç 
	DropTable
çç &
(
çç& '
name
èè 
:
èè 
$str
èè #
)
èè# $
;
èè$ %
migrationBuilder
êê 
.
êê 
	DropTable
êê &
(
êê& '
name
ëë 
:
ëë 
$str
ëë 
)
ëë  
;
ëë  !
migrationBuilder
íí 
.
íí 
	DropTable
íí &
(
íí& '
name
îî 
:
îî 
$str
îî 
)
îî  
;
îî  !
migrationBuilder
ðð 
.
ðð 
	DropTable
ðð &
(
ðð& '
name
ññ 
:
ññ 
$str
ññ $
)
ññ$ %
;
ññ% &
migrationBuilder
óó 
.
óó 
	DropTable
óó &
(
óó& '
name
ôô 
:
ôô 
$str
ôô )
)
ôô) *
;
ôô* +
migrationBuilder
öö 
.
öö 
	DropTable
öö &
(
öö& '
name
÷÷ 
:
÷÷ 
$str
÷÷ 
)
÷÷ 
;
÷÷ 
migrationBuilder
ùù 
.
ùù 
	DropTable
ùù &
(
ùù& '
name
úú 
:
úú 
$str
úú #
)
úú# $
;
úú$ %
migrationBuilder
üü 
.
üü 
	DropTable
üü &
(
üü& '
name
ýý 
:
ýý 
$str
ýý (
)
ýý( )
;
ýý) *
migrationBuilder
ÿÿ 
.
ÿÿ 
	DropTable
ÿÿ &
(
ÿÿ& '
name
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
  
;
  !
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 (
)
( )
;
) *
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
  
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
 
}
 	
}
 
} «|
^C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200523111706_FixedImputation.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
FixedImputation (
:) *
	Migration+ 4
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 ]
,

] ^
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 7
,7 8
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 7
,7 8
table 
: 
$str 
) 
;  
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str /
,/ 0
table 
: 
$str 
) 
;  
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str K
,K L
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str 1
,1 2
table 
: 
$str $
)$ %
;% &
migrationBuilder!! 
.!! 

DropColumn!! '
(!!' (
name"" 
:"" 
$str""  
,""  !
table## 
:## 
$str## 
)## 
;##  
migrationBuilder%% 
.%% 

DropColumn%% '
(%%' (
name&& 
:&& 
$str&& &
,&&& '
table'' 
:'' 
$str'' 
)'' 
;''  
migrationBuilder)) 
.)) 

DropColumn)) '
())' (
name** 
:** 
$str** +
,**+ ,
table++ 
:++ 
$str++ $
)++$ %
;++% &
migrationBuilder-- 
.-- 

DropColumn-- '
(--' (
name.. 
:.. 
$str.. 
,.. 
table// 
:// 
$str// $
)//$ %
;//% &
migrationBuilder11 
.11 

DropColumn11 '
(11' (
name22 
:22 
$str22 <
,22< =
table33 
:33 
$str33 $
)33$ %
;33% &
migrationBuilder55 
.55 

DropColumn55 '
(55' (
name66 
:66 
$str66 "
,66" #
table77 
:77 
$str77 $
)77$ %
;77% &
migrationBuilder99 
.99 

DropColumn99 '
(99' (
name:: 
::: 
$str:: $
,::$ %
table;; 
:;; 
$str;; *
);;* +
;;;+ ,
migrationBuilder== 
.== 
	AddColumn== &
<==& '
string==' -
>==- .
(==. /
name>> 
:>> 
$str>>  
,>>  !
table?? 
:?? 
$str?? 
,?? 
nullable@@ 
:@@ 
true@@ 
)@@ 
;@@  
migrationBuilderBB 
.BB 
	AddColumnBB &
<BB& '
stringBB' -
>BB- .
(BB. /
nameCC 
:CC 
$strCC +
,CC+ ,
tableDD 
:DD 
$strDD $
,DD$ %
nullableEE 
:EE 
trueEE 
)EE 
;EE  
migrationBuilderGG 
.GG 
	AddColumnGG &
<GG& '
stringGG' -
>GG- .
(GG. /
nameHH 
:HH 
$strHH 
,HH 
tableII 
:II 
$strII $
,II$ %
nullableJJ 
:JJ 
trueJJ 
)JJ 
;JJ  
migrationBuilderLL 
.LL 
CreateIndexLL (
(LL( )
nameMM 
:MM 
$strMM )
,MM) *
tableNN 
:NN 
$strNN 
,NN 
columnOO 
:OO 
$strOO "
)OO" #
;OO# $
migrationBuilderQQ 
.QQ 
CreateIndexQQ (
(QQ( )
nameRR 
:RR 
$strRR :
,RR: ;
tableSS 
:SS 
$strSS $
,SS$ %
columnTT 
:TT 
$strTT -
)TT- .
;TT. /
migrationBuilderVV 
.VV 
CreateIndexVV (
(VV( )
nameWW 
:WW 
$strWW -
,WW- .
tableXX 
:XX 
$strXX $
,XX$ %
columnYY 
:YY 
$strYY  
)YY  !
;YY! "
migrationBuilder[[ 
.[[ 
AddForeignKey[[ *
([[* +
name\\ 
:\\ 
$str\\ L
,\\L M
table]] 
:]] 
$str]] $
,]]$ %
column^^ 
:^^ 
$str^^ -
,^^- .
principalTable__ 
:__ 
$str__  3
,__3 4
principalColumn`` 
:``  
$str``! 6
,``6 7
onDeleteaa 
:aa 
ReferentialActionaa +
.aa+ ,
Restrictaa, 4
)aa4 5
;aa5 6
migrationBuildercc 
.cc 
AddForeignKeycc *
(cc* +
namedd 
:dd 
$strdd 3
,dd3 4
tableee 
:ee 
$stree $
,ee$ %
columnff 
:ff 
$strff  
,ff  !
principalTablegg 
:gg 
$strgg  '
,gg' (
principalColumnhh 
:hh  
$strhh! )
,hh) *
onDeleteii 
:ii 
ReferentialActionii +
.ii+ ,
Restrictii, 4
)ii4 5
;ii5 6
migrationBuilderkk 
.kk 
AddForeignKeykk *
(kk* +
namell 
:ll 
$strll 1
,ll1 2
tablemm 
:mm 
$strmm 
,mm 
columnnn 
:nn 
$strnn "
,nn" #
principalTableoo 
:oo 
$stroo  )
,oo) *
principalColumnpp 
:pp  
$strpp! +
,pp+ ,
onDeleteqq 
:qq 
ReferentialActionqq +
.qq+ ,
Restrictqq, 4
)qq4 5
;qq5 6
}rr 	
	protectedtt 
overridett 
voidtt 
Downtt  $
(tt$ %
MigrationBuildertt% 5
migrationBuildertt6 F
)ttF G
{uu 	
migrationBuildervv 
.vv 
DropForeignKeyvv +
(vv+ ,
nameww 
:ww 
$strww L
,wwL M
tablexx 
:xx 
$strxx $
)xx$ %
;xx% &
migrationBuilderzz 
.zz 
DropForeignKeyzz +
(zz+ ,
name{{ 
:{{ 
$str{{ 3
,{{3 4
table|| 
:|| 
$str|| $
)||$ %
;||% &
migrationBuilder~~ 
.~~ 
DropForeignKey~~ +
(~~+ ,
name 
: 
$str 1
,1 2
table
 
:
 
$str
 
)
 
;
  
migrationBuilder
 
.
 
	DropIndex
 &
(
& '
name
 
:
 
$str
 )
,
) *
table
 
:
 
$str
 
)
 
;
  
migrationBuilder
 
.
 
	DropIndex
 &
(
& '
name
 
:
 
$str
 :
,
: ;
table
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 
	DropIndex
 &
(
& '
name
 
:
 
$str
 -
,
- .
table
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 
)
 
;
  
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 +
,
+ ,
table
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 
,
 
table
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 
,
 
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
   
.
   
	AddColumn
   &
<
  & '
string
  ' -
>
  - .
(
  . /
name
¡¡ 
:
¡¡ 
$str
¡¡ &
,
¡¡& '
table
¢¢ 
:
¢¢ 
$str
¢¢ 
,
¢¢ 
type
££ 
:
££ 
$str
££ %
,
££% &
nullable
¤¤ 
:
¤¤ 
true
¤¤ 
)
¤¤ 
;
¤¤  
migrationBuilder
¦¦ 
.
¦¦ 
	AddColumn
¦¦ &
<
¦¦& '
string
¦¦' -
>
¦¦- .
(
¦¦. /
name
§§ 
:
§§ 
$str
§§ +
,
§§+ ,
table
¨¨ 
:
¨¨ 
$str
¨¨ $
,
¨¨$ %
type
©© 
:
©© 
$str
©© %
,
©©% &
nullable
ªª 
:
ªª 
true
ªª 
)
ªª 
;
ªª  
migrationBuilder
¬¬ 
.
¬¬ 
	AddColumn
¬¬ &
<
¬¬& '
string
¬¬' -
>
¬¬- .
(
¬¬. /
name
­­ 
:
­­ 
$str
­­ 
,
­­ 
table
®® 
:
®® 
$str
®® $
,
®®$ %
type
¯¯ 
:
¯¯ 
$str
¯¯ %
,
¯¯% &
nullable
°° 
:
°° 
true
°° 
)
°° 
;
°°  
migrationBuilder
²² 
.
²² 
	AddColumn
²² &
<
²²& '
string
²²' -
>
²²- .
(
²². /
name
³³ 
:
³³ 
$str
³³ <
,
³³< =
table
´´ 
:
´´ 
$str
´´ $
,
´´$ %
type
µµ 
:
µµ 
$str
µµ %
,
µµ% &
nullable
¶¶ 
:
¶¶ 
true
¶¶ 
)
¶¶ 
;
¶¶  
migrationBuilder
¸¸ 
.
¸¸ 
	AddColumn
¸¸ &
<
¸¸& '
string
¸¸' -
>
¸¸- .
(
¸¸. /
name
¹¹ 
:
¹¹ 
$str
¹¹ "
,
¹¹" #
table
ºº 
:
ºº 
$str
ºº $
,
ºº$ %
type
»» 
:
»» 
$str
»» %
,
»»% &
nullable
¼¼ 
:
¼¼ 
true
¼¼ 
)
¼¼ 
;
¼¼  
migrationBuilder
¾¾ 
.
¾¾ 
	AddColumn
¾¾ &
<
¾¾& '
string
¾¾' -
>
¾¾- .
(
¾¾. /
name
¿¿ 
:
¿¿ 
$str
¿¿ $
,
¿¿$ %
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ *
,
ÀÀ* +
type
ÁÁ 
:
ÁÁ 
$str
ÁÁ %
,
ÁÁ% &
nullable
ÂÂ 
:
ÂÂ 
true
ÂÂ 
)
ÂÂ 
;
ÂÂ  
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateIndex
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ /
,
ÅÅ/ 0
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ 
,
ÆÆ 
column
ÇÇ 
:
ÇÇ 
$str
ÇÇ (
)
ÇÇ( )
;
ÇÇ) *
migrationBuilder
ÉÉ 
.
ÉÉ 
CreateIndex
ÉÉ (
(
ÉÉ( )
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ K
,
ÊÊK L
table
ËË 
:
ËË 
$str
ËË $
,
ËË$ %
column
ÌÌ 
:
ÌÌ 
$str
ÌÌ >
)
ÌÌ> ?
;
ÌÌ? @
migrationBuilder
ÎÎ 
.
ÎÎ 
CreateIndex
ÎÎ (
(
ÎÎ( )
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ 1
,
ÏÏ1 2
table
ÐÐ 
:
ÐÐ 
$str
ÐÐ $
,
ÐÐ$ %
column
ÑÑ 
:
ÑÑ 
$str
ÑÑ $
)
ÑÑ$ %
;
ÑÑ% &
migrationBuilder
ÓÓ 
.
ÓÓ 
AddForeignKey
ÓÓ *
(
ÓÓ* +
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ ]
,
ÔÔ] ^
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ $
,
ÕÕ$ %
column
ÖÖ 
:
ÖÖ 
$str
ÖÖ >
,
ÖÖ> ?
principalTable
×× 
:
×× 
$str
××  3
,
××3 4
principalColumn
ØØ 
:
ØØ  
$str
ØØ! 6
,
ØØ6 7
onDelete
ÙÙ 
:
ÙÙ 
ReferentialAction
ÙÙ +
.
ÙÙ+ ,
Restrict
ÙÙ, 4
)
ÙÙ4 5
;
ÙÙ5 6
migrationBuilder
ÛÛ 
.
ÛÛ 
AddForeignKey
ÛÛ *
(
ÛÛ* +
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ 7
,
ÜÜ7 8
table
ÝÝ 
:
ÝÝ 
$str
ÝÝ $
,
ÝÝ$ %
column
ÞÞ 
:
ÞÞ 
$str
ÞÞ $
,
ÞÞ$ %
principalTable
ßß 
:
ßß 
$str
ßß  '
,
ßß' (
principalColumn
àà 
:
àà  
$str
àà! )
,
àà) *
onDelete
áá 
:
áá 
ReferentialAction
áá +
.
áá+ ,
Restrict
áá, 4
)
áá4 5
;
áá5 6
migrationBuilder
ãã 
.
ãã 
AddForeignKey
ãã *
(
ãã* +
name
ää 
:
ää 
$str
ää 7
,
ää7 8
table
åå 
:
åå 
$str
åå 
,
åå 
column
ææ 
:
ææ 
$str
ææ (
,
ææ( )
principalTable
çç 
:
çç 
$str
çç  )
,
çç) *
principalColumn
èè 
:
èè  
$str
èè! +
,
èè+ ,
onDelete
éé 
:
éé 
ReferentialAction
éé +
.
éé+ ,
Restrict
éé, 4
)
éé4 5
;
éé5 6
}
êê 	
}
ëë 
}ìì Ü
YC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200521221502_FixedTasks.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 

FixedTasks #
:$ %
	Migration& /
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 8
,

8 9
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str G
,G H
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 2
,2 3
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str 0
,0 1
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str :
,: ;
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str ,
,, -
table 
: 
$str 
)  
;  !
migrationBuilder!! 
.!! 

DropColumn!! '
(!!' (
name"" 
:"" 
$str""  
,""  !
table## 
:## 
$str## 
)##  
;##  !
migrationBuilder%% 
.%% 

DropColumn%% '
(%%' (
name&& 
:&& 
$str&& %
,&&% &
table'' 
:'' 
$str'' 
)''  
;''  !
migrationBuilder)) 
.)) 

DropColumn)) '
())' (
name** 
:** 
$str** 
,** 
table++ 
:++ 
$str++ 
)++  
;++  !
migrationBuilder-- 
.-- 

DropColumn-- '
(--' (
name.. 
:.. 
$str.. &
,..& '
table// 
:// 
$str// 
)//  
;//  !
migrationBuilder11 
.11 

DropColumn11 '
(11' (
name22 
:22 
$str22 0
,220 1
table33 
:33 
$str33 
)33  
;33  !
migrationBuilder55 
.55 

DropColumn55 '
(55' (
name66 
:66 
$str66 "
,66" #
table77 
:77 
$str77 
)77  
;77  !
migrationBuilder99 
.99 

DropColumn99 '
(99' (
name:: 
::: 
$str:: 
,:: 
table;; 
:;; 
$str;; *
);;* +
;;;+ ,
migrationBuilder== 
.== 

DropColumn== '
(==' (
name>> 
:>> 
$str>> #
,>># $
table?? 
:?? 
$str?? *
)??* +
;??+ ,
migrationBuilderAA 
.AA 

DropColumnAA '
(AA' (
nameBB 
:BB 
$strBB 
,BB 
tableCC 
:CC 
$strCC *
)CC* +
;CC+ ,
migrationBuilderEE 
.EE 

DropColumnEE '
(EE' (
nameFF 
:FF 
$strFF 
,FF 
tableGG 
:GG 
$strGG *
)GG* +
;GG+ ,
migrationBuilderII 
.II 

DropColumnII '
(II' (
nameJJ 
:JJ 
$strJJ 
,JJ 
tableKK 
:KK 
$strKK *
)KK* +
;KK+ ,
migrationBuilderMM 
.MM 

DropColumnMM '
(MM' (
nameNN 
:NN 
$strNN  
,NN  !
tableOO 
:OO 
$strOO *
)OO* +
;OO+ ,
migrationBuilderQQ 
.QQ 

DropColumnQQ '
(QQ' (
nameRR 
:RR 
$strRR 
,RR 
tableSS 
:SS 
$strSS *
)SS* +
;SS+ ,
migrationBuilderUU 
.UU 

DropColumnUU '
(UU' (
nameVV 
:VV 
$strVV 
,VV 
tableWW 
:WW 
$strWW *
)WW* +
;WW+ ,
migrationBuilderYY 
.YY 

DropColumnYY '
(YY' (
nameZZ 
:ZZ 
$strZZ  
,ZZ  !
table[[ 
:[[ 
$str[[ *
)[[* +
;[[+ ,
migrationBuilder]] 
.]] 
	AddColumn]] &
<]]& '
string]]' -
>]]- .
(]]. /
name^^ 
:^^ 
$str^^  
,^^  !
table__ 
:__ 
$str__ 
,__  
nullable`` 
:`` 
true`` 
)`` 
;``  
migrationBuilderbb 
.bb 
	AddColumnbb &
<bb& '
stringbb' -
>bb- .
(bb. /
namecc 
:cc 
$strcc %
,cc% &
tabledd 
:dd 
$strdd 
,dd  
nullableee 
:ee 
trueee 
)ee 
;ee  
migrationBuildergg 
.gg 
	AddColumngg &
<gg& '
stringgg' -
>gg- .
(gg. /
namehh 
:hh 
$strhh 
,hh 
tableii 
:ii 
$strii 
,ii  
nullablejj 
:jj 
truejj 
)jj 
;jj  
migrationBuilderll 
.ll 
	AddColumnll &
<ll& '
stringll' -
>ll- .
(ll. /
namemm 
:mm 
$strmm 
,mm 
tablenn 
:nn 
$strnn *
,nn* +
nullableoo 
:oo 
trueoo 
)oo 
;oo  
migrationBuilderqq 
.qq 
	AddColumnqq &
<qq& '
stringqq' -
>qq- .
(qq. /
namerr 
:rr 
$strrr 
,rr 
tabless 
:ss 
$strss *
,ss* +
nullablett 
:tt 
truett 
)tt 
;tt  
migrationBuildervv 
.vv 
	AddColumnvv &
<vv& '
stringvv' -
>vv- .
(vv. /
nameww 
:ww 
$strww  
,ww  !
tablexx 
:xx 
$strxx *
,xx* +
nullableyy 
:yy 
trueyy 
)yy 
;yy  
migrationBuilder{{ 
.{{ 
	AddColumn{{ &
<{{& '
string{{' -
>{{- .
({{. /
name|| 
:|| 
$str||  
,||  !
table}} 
:}} 
$str}} *
,}}* +
nullable~~ 
:~~ 
true~~ 
)~~ 
;~~  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
 %
,
% &
table
 
:
 
$str
 *
,
* +
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
 
,
  
table
 
:
 
$str
 *
,
* +
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
 
,
 
table
 
:
 
$str
 *
,
* +
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 *
,
* +
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
 
,
  
table
 
:
 
$str
 *
,
* +
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
 !
,
! "
table
 
:
 
$str
 *
,
* +
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 *
,
* +
table
   
:
   
$str
   
,
    
column
¡¡ 
:
¡¡ 
$str
¡¡ "
)
¡¡" #
;
¡¡# $
migrationBuilder
££ 
.
££ 
CreateIndex
££ (
(
££( )
name
¤¤ 
:
¤¤ 
$str
¤¤ /
,
¤¤/ 0
table
¥¥ 
:
¥¥ 
$str
¥¥ 
,
¥¥  
column
¦¦ 
:
¦¦ 
$str
¦¦ '
)
¦¦' (
;
¦¦( )
migrationBuilder
¨¨ 
.
¨¨ 
CreateIndex
¨¨ (
(
¨¨( )
name
©© 
:
©© 
$str
©© (
,
©©( )
table
ªª 
:
ªª 
$str
ªª 
,
ªª  
column
«« 
:
«« 
$str
««  
)
««  !
;
««! "
migrationBuilder
­­ 
.
­­ 
AddForeignKey
­­ *
(
­­* +
name
®® 
:
®® 
$str
®® 2
,
®®2 3
table
¯¯ 
:
¯¯ 
$str
¯¯ 
,
¯¯  
column
°° 
:
°° 
$str
°° "
,
°°" #
principalTable
±± 
:
±± 
$str
±±  )
,
±±) *
principalColumn
²² 
:
²²  
$str
²²! +
,
²²+ ,
onDelete
³³ 
:
³³ 
ReferentialAction
³³ +
.
³³+ ,
Restrict
³³, 4
)
³³4 5
;
³³5 6
migrationBuilder
µµ 
.
µµ 
AddForeignKey
µµ *
(
µµ* +
name
¶¶ 
:
¶¶ 
$str
¶¶ <
,
¶¶< =
table
·· 
:
·· 
$str
·· 
,
··  
column
¸¸ 
:
¸¸ 
$str
¸¸ '
,
¸¸' (
principalTable
¹¹ 
:
¹¹ 
$str
¹¹  .
,
¹¹. /
principalColumn
ºº 
:
ºº  
$str
ºº! 0
,
ºº0 1
onDelete
»» 
:
»» 
ReferentialAction
»» +
.
»»+ ,
Restrict
»», 4
)
»»4 5
;
»»5 6
migrationBuilder
½½ 
.
½½ 
AddForeignKey
½½ *
(
½½* +
name
¾¾ 
:
¾¾ 
$str
¾¾ .
,
¾¾. /
table
¿¿ 
:
¿¿ 
$str
¿¿ 
,
¿¿  
column
ÀÀ 
:
ÀÀ 
$str
ÀÀ  
,
ÀÀ  !
principalTable
ÁÁ 
:
ÁÁ 
$str
ÁÁ  '
,
ÁÁ' (
principalColumn
ÂÂ 
:
ÂÂ  
$str
ÂÂ! )
,
ÂÂ) *
onDelete
ÃÃ 
:
ÃÃ 
ReferentialAction
ÃÃ +
.
ÃÃ+ ,
Restrict
ÃÃ, 4
)
ÃÃ4 5
;
ÃÃ5 6
}
ÄÄ 	
	protected
ÆÆ 
override
ÆÆ 
void
ÆÆ 
Down
ÆÆ  $
(
ÆÆ$ %
MigrationBuilder
ÆÆ% 5
migrationBuilder
ÆÆ6 F
)
ÆÆF G
{
ÇÇ 	
migrationBuilder
ÈÈ 
.
ÈÈ 
DropForeignKey
ÈÈ +
(
ÈÈ+ ,
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ 2
,
ÉÉ2 3
table
ÊÊ 
:
ÊÊ 
$str
ÊÊ 
)
ÊÊ  
;
ÊÊ  !
migrationBuilder
ÌÌ 
.
ÌÌ 
DropForeignKey
ÌÌ +
(
ÌÌ+ ,
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ <
,
ÍÍ< =
table
ÎÎ 
:
ÎÎ 
$str
ÎÎ 
)
ÎÎ  
;
ÎÎ  !
migrationBuilder
ÐÐ 
.
ÐÐ 
DropForeignKey
ÐÐ +
(
ÐÐ+ ,
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ .
,
ÑÑ. /
table
ÒÒ 
:
ÒÒ 
$str
ÒÒ 
)
ÒÒ  
;
ÒÒ  !
migrationBuilder
ÔÔ 
.
ÔÔ 
	DropIndex
ÔÔ &
(
ÔÔ& '
name
ÕÕ 
:
ÕÕ 
$str
ÕÕ *
,
ÕÕ* +
table
ÖÖ 
:
ÖÖ 
$str
ÖÖ 
)
ÖÖ  
;
ÖÖ  !
migrationBuilder
ØØ 
.
ØØ 
	DropIndex
ØØ &
(
ØØ& '
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ /
,
ÙÙ/ 0
table
ÚÚ 
:
ÚÚ 
$str
ÚÚ 
)
ÚÚ  
;
ÚÚ  !
migrationBuilder
ÜÜ 
.
ÜÜ 
	DropIndex
ÜÜ &
(
ÜÜ& '
name
ÝÝ 
:
ÝÝ 
$str
ÝÝ (
,
ÝÝ( )
table
ÞÞ 
:
ÞÞ 
$str
ÞÞ 
)
ÞÞ  
;
ÞÞ  !
migrationBuilder
àà 
.
àà 

DropColumn
àà '
(
àà' (
name
áá 
:
áá 
$str
áá  
,
áá  !
table
ââ 
:
ââ 
$str
ââ 
)
ââ  
;
ââ  !
migrationBuilder
ää 
.
ää 

DropColumn
ää '
(
ää' (
name
åå 
:
åå 
$str
åå %
,
åå% &
table
ææ 
:
ææ 
$str
ææ 
)
ææ  
;
ææ  !
migrationBuilder
èè 
.
èè 

DropColumn
èè '
(
èè' (
name
éé 
:
éé 
$str
éé 
,
éé 
table
êê 
:
êê 
$str
êê 
)
êê  
;
êê  !
migrationBuilder
ìì 
.
ìì 

DropColumn
ìì '
(
ìì' (
name
íí 
:
íí 
$str
íí 
,
íí 
table
îî 
:
îî 
$str
îî *
)
îî* +
;
îî+ ,
migrationBuilder
ðð 
.
ðð 

DropColumn
ðð '
(
ðð' (
name
ññ 
:
ññ 
$str
ññ 
,
ññ 
table
òò 
:
òò 
$str
òò *
)
òò* +
;
òò+ ,
migrationBuilder
ôô 
.
ôô 

DropColumn
ôô '
(
ôô' (
name
õõ 
:
õõ 
$str
õõ  
,
õõ  !
table
öö 
:
öö 
$str
öö *
)
öö* +
;
öö+ ,
migrationBuilder
øø 
.
øø 

DropColumn
øø '
(
øø' (
name
ùù 
:
ùù 
$str
ùù  
,
ùù  !
table
úú 
:
úú 
$str
úú *
)
úú* +
;
úú+ ,
migrationBuilder
üü 
.
üü 

DropColumn
üü '
(
üü' (
name
ýý 
:
ýý 
$str
ýý %
,
ýý% &
table
þþ 
:
þþ 
$str
þþ *
)
þþ* +
;
þþ+ ,
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 
,
  
table
 
:
 
$str
 *
)
* +
;
+ ,
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 
,
 
table
 
:
 
$str
 *
)
* +
;
+ ,
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 *
)
* +
;
+ ,
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 
,
  
table
 
:
 
$str
 *
)
* +
;
+ ,
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 !
,
! "
table
 
:
 
$str
 *
)
* +
;
+ ,
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 
,
  
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
 %
,
% &
table
 
:
 
$str
 
,
  
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
)
 
;
  
migrationBuilder
   
.
   
	AddColumn
   &
<
  & '
string
  ' -
>
  - .
(
  . /
name
¡¡ 
:
¡¡ 
$str
¡¡ 
,
¡¡ 
table
¢¢ 
:
¢¢ 
$str
¢¢ 
,
¢¢  
type
££ 
:
££ 
$str
££ %
,
££% &
nullable
¤¤ 
:
¤¤ 
true
¤¤ 
)
¤¤ 
;
¤¤  
migrationBuilder
¦¦ 
.
¦¦ 
	AddColumn
¦¦ &
<
¦¦& '
string
¦¦' -
>
¦¦- .
(
¦¦. /
name
§§ 
:
§§ 
$str
§§ &
,
§§& '
table
¨¨ 
:
¨¨ 
$str
¨¨ 
,
¨¨  
type
©© 
:
©© 
$str
©© %
,
©©% &
nullable
ªª 
:
ªª 
true
ªª 
)
ªª 
;
ªª  
migrationBuilder
¬¬ 
.
¬¬ 
	AddColumn
¬¬ &
<
¬¬& '
string
¬¬' -
>
¬¬- .
(
¬¬. /
name
­­ 
:
­­ 
$str
­­ 0
,
­­0 1
table
®® 
:
®® 
$str
®® 
,
®®  
type
¯¯ 
:
¯¯ 
$str
¯¯ %
,
¯¯% &
nullable
°° 
:
°° 
true
°° 
)
°° 
;
°°  
migrationBuilder
²² 
.
²² 
	AddColumn
²² &
<
²²& '
string
²²' -
>
²²- .
(
²². /
name
³³ 
:
³³ 
$str
³³ "
,
³³" #
table
´´ 
:
´´ 
$str
´´ 
,
´´  
type
µµ 
:
µµ 
$str
µµ %
,
µµ% &
nullable
¶¶ 
:
¶¶ 
true
¶¶ 
)
¶¶ 
;
¶¶  
migrationBuilder
¸¸ 
.
¸¸ 
	AddColumn
¸¸ &
<
¸¸& '
string
¸¸' -
>
¸¸- .
(
¸¸. /
name
¹¹ 
:
¹¹ 
$str
¹¹ 
,
¹¹ 
table
ºº 
:
ºº 
$str
ºº *
,
ºº* +
type
»» 
:
»» 
$str
»» %
,
»»% &
nullable
¼¼ 
:
¼¼ 
true
¼¼ 
)
¼¼ 
;
¼¼  
migrationBuilder
¾¾ 
.
¾¾ 
	AddColumn
¾¾ &
<
¾¾& '
string
¾¾' -
>
¾¾- .
(
¾¾. /
name
¿¿ 
:
¿¿ 
$str
¿¿ #
,
¿¿# $
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ *
,
ÀÀ* +
type
ÁÁ 
:
ÁÁ 
$str
ÁÁ %
,
ÁÁ% &
nullable
ÂÂ 
:
ÂÂ 
true
ÂÂ 
)
ÂÂ 
;
ÂÂ  
migrationBuilder
ÄÄ 
.
ÄÄ 
	AddColumn
ÄÄ &
<
ÄÄ& '
string
ÄÄ' -
>
ÄÄ- .
(
ÄÄ. /
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ 
,
ÅÅ 
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ *
,
ÆÆ* +
type
ÇÇ 
:
ÇÇ 
$str
ÇÇ %
,
ÇÇ% &
nullable
ÈÈ 
:
ÈÈ 
true
ÈÈ 
)
ÈÈ 
;
ÈÈ  
migrationBuilder
ÊÊ 
.
ÊÊ 
	AddColumn
ÊÊ &
<
ÊÊ& '
string
ÊÊ' -
>
ÊÊ- .
(
ÊÊ. /
name
ËË 
:
ËË 
$str
ËË 
,
ËË 
table
ÌÌ 
:
ÌÌ 
$str
ÌÌ *
,
ÌÌ* +
type
ÍÍ 
:
ÍÍ 
$str
ÍÍ %
,
ÍÍ% &
nullable
ÎÎ 
:
ÎÎ 
true
ÎÎ 
)
ÎÎ 
;
ÎÎ  
migrationBuilder
ÐÐ 
.
ÐÐ 
	AddColumn
ÐÐ &
<
ÐÐ& '
string
ÐÐ' -
>
ÐÐ- .
(
ÐÐ. /
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ 
,
ÑÑ 
table
ÒÒ 
:
ÒÒ 
$str
ÒÒ *
,
ÒÒ* +
type
ÓÓ 
:
ÓÓ 
$str
ÓÓ %
,
ÓÓ% &
nullable
ÔÔ 
:
ÔÔ 
true
ÔÔ 
)
ÔÔ 
;
ÔÔ  
migrationBuilder
ÖÖ 
.
ÖÖ 
	AddColumn
ÖÖ &
<
ÖÖ& '
string
ÖÖ' -
>
ÖÖ- .
(
ÖÖ. /
name
×× 
:
×× 
$str
××  
,
××  !
table
ØØ 
:
ØØ 
$str
ØØ *
,
ØØ* +
type
ÙÙ 
:
ÙÙ 
$str
ÙÙ %
,
ÙÙ% &
nullable
ÚÚ 
:
ÚÚ 
true
ÚÚ 
)
ÚÚ 
;
ÚÚ  
migrationBuilder
ÜÜ 
.
ÜÜ 
	AddColumn
ÜÜ &
<
ÜÜ& '
string
ÜÜ' -
>
ÜÜ- .
(
ÜÜ. /
name
ÝÝ 
:
ÝÝ 
$str
ÝÝ 
,
ÝÝ 
table
ÞÞ 
:
ÞÞ 
$str
ÞÞ *
,
ÞÞ* +
type
ßß 
:
ßß 
$str
ßß %
,
ßß% &
nullable
àà 
:
àà 
true
àà 
)
àà 
;
àà  
migrationBuilder
ââ 
.
ââ 
	AddColumn
ââ &
<
ââ& '
string
ââ' -
>
ââ- .
(
ââ. /
name
ãã 
:
ãã 
$str
ãã 
,
ãã 
table
ää 
:
ää 
$str
ää *
,
ää* +
type
åå 
:
åå 
$str
åå %
,
åå% &
nullable
ææ 
:
ææ 
true
ææ 
)
ææ 
;
ææ  
migrationBuilder
èè 
.
èè 
	AddColumn
èè &
<
èè& '
string
èè' -
>
èè- .
(
èè. /
name
éé 
:
éé 
$str
éé  
,
éé  !
table
êê 
:
êê 
$str
êê *
,
êê* +
type
ëë 
:
ëë 
$str
ëë %
,
ëë% &
nullable
ìì 
:
ìì 
true
ìì 
)
ìì 
;
ìì  
migrationBuilder
îî 
.
îî 
CreateIndex
îî (
(
îî( )
name
ïï 
:
ïï 
$str
ïï 0
,
ïï0 1
table
ðð 
:
ðð 
$str
ðð 
,
ðð  
column
ññ 
:
ññ 
$str
ññ (
)
ññ( )
;
ññ) *
migrationBuilder
óó 
.
óó 
CreateIndex
óó (
(
óó( )
name
ôô 
:
ôô 
$str
ôô :
,
ôô: ;
table
õõ 
:
õõ 
$str
õõ 
,
õõ  
column
öö 
:
öö 
$str
öö 2
)
öö2 3
;
öö3 4
migrationBuilder
øø 
.
øø 
CreateIndex
øø (
(
øø( )
name
ùù 
:
ùù 
$str
ùù ,
,
ùù, -
table
úú 
:
úú 
$str
úú 
,
úú  
column
ûû 
:
ûû 
$str
ûû $
)
ûû$ %
;
ûû% &
migrationBuilder
ýý 
.
ýý 
AddForeignKey
ýý *
(
ýý* +
name
þþ 
:
þþ 
$str
þþ 8
,
þþ8 9
table
ÿÿ 
:
ÿÿ 
$str
ÿÿ 
,
ÿÿ  
column
 
:
 
$str
 (
,
( )
principalTable
 
:
 
$str
  )
,
) *
principalColumn
 
:
  
$str
! +
,
+ ,
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Restrict
, 4
)
4 5
;
5 6
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 G
,
G H
table
 
:
 
$str
 
,
  
column
 
:
 
$str
 2
,
2 3
principalTable
 
:
 
$str
  .
,
. /
principalColumn
 
:
  
$str
! 0
,
0 1
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Restrict
, 4
)
4 5
;
5 6
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 2
,
2 3
table
 
:
 
$str
 
,
  
column
 
:
 
$str
 $
,
$ %
principalTable
 
:
 
$str
  '
,
' (
principalColumn
 
:
  
$str
! )
,
) *
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Restrict
, 4
)
4 5
;
5 6
}
 	
}
 
} 8
gC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200515212308_AbstractProjectAndDetail.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class $
AbstractProjectAndDetail 1
:2 3
	Migration4 =
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
RenameColumn		 )
(		) *
name

 
:

 
$str

 
,

 
table 
: 
$str )
,) *
newName 
: 
$str 
)  
;  !
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table 
: 
$str )
,) *
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str )
,) *
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str )
,) *
table 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateIndex (
(( )
name 
: 
$str 4
,4 5
table 
: 
$str )
,) *
column   
:   
$str   "
)  " #
;  # $
migrationBuilder"" 
."" 
CreateIndex"" (
(""( )
name## 
:## 
$str## 1
,##1 2
table$$ 
:$$ 
$str$$ )
,$$) *
column%% 
:%% 
$str%% 
)%%  
;%%  !
migrationBuilder'' 
.'' 
CreateIndex'' (
(''( )
name(( 
:(( 
$str(( 9
,((9 :
table)) 
:)) 
$str)) %
,))% &
column** 
:** 
$str** +
)**+ ,
;**, -
migrationBuilder,, 
.,, 
AddForeignKey,, *
(,,* +
name-- 
:-- 
$str-- J
,--J K
table.. 
:.. 
$str.. %
,..% &
column// 
:// 
$str// +
,//+ ,
principalTable00 
:00 
$str00  2
,002 3
principalColumn11 
:11  
$str11! %
,11% &
onDelete22 
:22 
ReferentialAction22 +
.22+ ,
Restrict22, 4
)224 5
;225 6
migrationBuilder44 
.44 
AddForeignKey44 *
(44* +
name55 
:55 
$str55 ;
,55; <
table66 
:66 
$str66 )
,66) *
column77 
:77 
$str77 "
,77" #
principalTable88 
:88 
$str88  (
,88( )
principalColumn99 
:99  
$str99! +
,99+ ,
onDelete:: 
::: 
ReferentialAction:: +
.::+ ,
Restrict::, 4
)::4 5
;::5 6
migrationBuilder<< 
.<< 
AddForeignKey<< *
(<<* +
name== 
:== 
$str== 5
,==5 6
table>> 
:>> 
$str>> )
,>>) *
column?? 
:?? 
$str?? 
,??  
principalTable@@ 
:@@ 
$str@@  %
,@@% &
principalColumnAA 
:AA  
$strAA! (
,AA( )
onDeleteBB 
:BB 
ReferentialActionBB +
.BB+ ,
RestrictBB, 4
)BB4 5
;BB5 6
}CC 	
	protectedEE 
overrideEE 
voidEE 
DownEE  $
(EE$ %
MigrationBuilderEE% 5
migrationBuilderEE6 F
)EEF G
{FF 	
migrationBuilderGG 
.GG 
DropForeignKeyGG +
(GG+ ,
nameHH 
:HH 
$strHH J
,HHJ K
tableII 
:II 
$strII %
)II% &
;II& '
migrationBuilderKK 
.KK 
DropForeignKeyKK +
(KK+ ,
nameLL 
:LL 
$strLL ;
,LL; <
tableMM 
:MM 
$strMM )
)MM) *
;MM* +
migrationBuilderOO 
.OO 
DropForeignKeyOO +
(OO+ ,
namePP 
:PP 
$strPP 5
,PP5 6
tableQQ 
:QQ 
$strQQ )
)QQ) *
;QQ* +
migrationBuilderSS 
.SS 
	DropIndexSS &
(SS& '
nameTT 
:TT 
$strTT 4
,TT4 5
tableUU 
:UU 
$strUU )
)UU) *
;UU* +
migrationBuilderWW 
.WW 
	DropIndexWW &
(WW& '
nameXX 
:XX 
$strXX 1
,XX1 2
tableYY 
:YY 
$strYY )
)YY) *
;YY* +
migrationBuilder[[ 
.[[ 
	DropIndex[[ &
([[& '
name\\ 
:\\ 
$str\\ 9
,\\9 :
table]] 
:]] 
$str]] %
)]]% &
;]]& '
migrationBuilder__ 
.__ 

DropColumn__ '
(__' (
name`` 
:`` 
$str``  
,``  !
tableaa 
:aa 
$straa )
)aa) *
;aa* +
migrationBuildercc 
.cc 

DropColumncc '
(cc' (
namedd 
:dd 
$strdd 
,dd 
tableee 
:ee 
$stree )
)ee) *
;ee* +
migrationBuildergg 
.gg 

DropColumngg '
(gg' (
namehh 
:hh 
$strhh )
,hh) *
tableii 
:ii 
$strii %
)ii% &
;ii& '
migrationBuilderkk 
.kk 
RenameColumnkk )
(kk) *
namell 
:ll 
$strll 
,ll 
tablemm 
:mm 
$strmm )
,mm) *
newNamenn 
:nn 
$strnn 
)nn  
;nn  !
}oo 	
}pp 
}qq K
ZC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200526212959_FixedProjet.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
FixedProjet $
:% &
	Migration' 0
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 6
,

6 7
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 2
,2 3
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str "
," #
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str %
,% &
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str  
,  !
nullable   
:   
false   
,    

oldClrType!! 
:!! 
typeof!! "
(!!" #
string!!# )
)!!) *
,!!* +
oldType"" 
:"" 
$str"" (
,""( )
oldNullable## 
:## 
true## !
)##! "
;##" #
migrationBuilder%% 
.%% 
	AddColumn%% &
<%%& '
string%%' -
>%%- .
(%%. /
name&& 
:&& 
$str&& (
,&&( )
table'' 
:'' 
$str''  
,''  !
nullable(( 
:(( 
true(( 
)(( 
;((  
migrationBuilder** 
.** 
	AddColumn** &
<**& '
string**' -
>**- .
(**. /
name++ 
:++ 
$str++ !
,++! "
table,, 
:,, 
$str,, )
,,,) *
nullable-- 
:-- 
true-- 
)-- 
;--  
migrationBuilder// 
.// 
AddPrimaryKey// *
(//* +
name00 
:00 
$str00 "
,00" #
table11 
:11 
$str11  
,11  !
column22 
:22 
$str22 
)22 
;22 
migrationBuilder44 
.44 
CreateIndex44 (
(44( )
name55 
:55 
$str55 3
,553 4
table66 
:66 
$str66  
,66  !
column77 
:77 
$str77 *
,77* +
unique88 
:88 
true88 
,88 
filter99 
:99 
$str99 8
)998 9
;999 :
migrationBuilder;; 
.;; 
AddForeignKey;; *
(;;* +
name<< 
:<< 
$str<< D
,<<D E
table== 
:== 
$str==  
,==  !
column>> 
:>> 
$str>> *
,>>* +
principalTable?? 
:?? 
$str??  2
,??2 3
principalColumn@@ 
:@@  
$str@@! %
,@@% &
onDeleteAA 
:AA 
ReferentialActionAA +
.AA+ ,
RestrictAA, 4
)AA4 5
;AA5 6
migrationBuilderCC 
.CC 
AddForeignKeyCC *
(CC* +
nameDD 
:DD 
$strDD 2
,DD2 3
tableEE 
:EE 
$strEE 
,EE  
columnFF 
:FF 
$strFF "
,FF" #
principalTableGG 
:GG 
$strGG  )
,GG) *
principalColumnHH 
:HH  
$strHH! %
,HH% &
onDeleteII 
:II 
ReferentialActionII +
.II+ ,
RestrictII, 4
)II4 5
;II5 6
}JJ 	
	protectedLL 
overrideLL 
voidLL 
DownLL  $
(LL$ %
MigrationBuilderLL% 5
migrationBuilderLL6 F
)LLF G
{MM 	
migrationBuilderNN 
.NN 
DropForeignKeyNN +
(NN+ ,
nameOO 
:OO 
$strOO D
,OOD E
tablePP 
:PP 
$strPP  
)PP  !
;PP! "
migrationBuilderRR 
.RR 
DropForeignKeyRR +
(RR+ ,
nameSS 
:SS 
$strSS 2
,SS2 3
tableTT 
:TT 
$strTT 
)TT  
;TT  !
migrationBuilderVV 
.VV 
DropPrimaryKeyVV +
(VV+ ,
nameWW 
:WW 
$strWW "
,WW" #
tableXX 
:XX 
$strXX  
)XX  !
;XX! "
migrationBuilderZZ 
.ZZ 
	DropIndexZZ &
(ZZ& '
name[[ 
:[[ 
$str[[ 3
,[[3 4
table\\ 
:\\ 
$str\\  
)\\  !
;\\! "
migrationBuilder^^ 
.^^ 

DropColumn^^ '
(^^' (
name__ 
:__ 
$str__ (
,__( )
table`` 
:`` 
$str``  
)``  !
;``! "
migrationBuilderbb 
.bb 

DropColumnbb '
(bb' (
namecc 
:cc 
$strcc !
,cc! "
tabledd 
:dd 
$strdd )
)dd) *
;dd* +
migrationBuilderff 
.ff 
AlterColumnff (
<ff( )
stringff) /
>ff/ 0
(ff0 1
namegg 
:gg 
$strgg 
,gg 
tablehh 
:hh 
$strhh  
,hh  !
typeii 
:ii 
$strii %
,ii% &
nullablejj 
:jj 
truejj 
,jj 

oldClrTypekk 
:kk 
typeofkk "
(kk" #
stringkk# )
)kk) *
)kk* +
;kk+ ,
migrationBuildermm 
.mm 
	AddColumnmm &
<mm& '
stringmm' -
>mm- .
(mm. /
namenn 
:nn 
$strnn  
,nn  !
tableoo 
:oo 
$stroo  
,oo  !
typepp 
:pp 
$strpp %
,pp% &
nullableqq 
:qq 
falseqq 
,qq  
defaultValuerr 
:rr 
$strrr  
)rr  !
;rr! "
migrationBuildertt 
.tt 
AddPrimaryKeytt *
(tt* +
nameuu 
:uu 
$struu "
,uu" #
tablevv 
:vv 
$strvv  
,vv  !
columnww 
:ww 
$strww "
)ww" #
;ww# $
migrationBuilderyy 
.yy 
CreateIndexyy (
(yy( )
namezz 
:zz 
$strzz %
,zz% &
table{{ 
:{{ 
$str{{  
,{{  !
column|| 
:|| 
$str|| 
,|| 
unique}} 
:}} 
true}} 
,}} 
filter~~ 
:~~ 
$str~~ *
)~~* +
;~~+ ,
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 6
,
6 7
table
 
:
 
$str
  
,
  !
column
 
:
 
$str
 
,
 
principalTable
 
:
 
$str
  2
,
2 3
principalColumn
 
:
  
$str
! %
,
% &
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Restrict
, 4
)
4 5
;
5 6
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 2
,
2 3
table
 
:
 
$str
 
,
  
column
 
:
 
$str
 "
,
" #
principalTable
 
:
 
$str
  )
,
) *
principalColumn
 
:
  
$str
! +
,
+ ,
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Restrict
, 4
)
4 5
;
5 6
}
 	
}
 
} 
_C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200528233545_add_type_to_user.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
add_type_to_user )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
int		' *
>		* +
(		+ ,
name

 
:

 
$str

 
,

 
table 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$char !
)! "
;" #
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str 
) 
;  
} 	
} 
} Ã
eC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200529012914_change_tache_id_ToGuid.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class "
change_tache_id_ToGuid /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
AlterColumn		 (
<		( )
string		) /
>		/ 0
(		0 1
name

 
:

 
$str

 
,

 
table 
: 
$str 
,  
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
defaultValueSql 
:  
$str! *
,* +
oldNullable 
: 
false "
)" #
;# $
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} Ç
]C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200529025411_add_tache_guid.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
add_tache_guid '
:( )
	Migration* 3
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
DropPrimaryKey

 +
(

+ ,
$str

, 7
,

7 8
$str

9 A
)

A B
;

B C
migrationBuilder 
. 
AlterColumn (
<( )
Guid) -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str 
,  
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
)* +
;+ ,
migrationBuilder 
. 
AddPrimaryKey *
(* +
$str+ 6
,6 7
$str8 @
,@ A
$strB F
)F G
;G H
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ©
_C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200529030119_add_tache_string.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
add_tache_string )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
DropPrimaryKey

 +
(

+ ,
$str

, 7
,

7 8
$str

9 A
)

A B
;

B C
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str 
,  
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
Guid# '
)' (
,( )
	maxLength 
: 
$num 
, 
defaultValueSql 
:  
$str! *
,* +
oldNullable 
: 
false "
)" #
;# $
migrationBuilder 
. 
AddPrimaryKey *
(* +
$str+ 6
,6 7
$str8 @
,@ A
$strB F
)F G
;G H
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} õ/
eC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200607141512_add_permission_modules.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class "
add_permission_modules /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
	maxLength0 9
:9 :
$num; >
,> ?
nullable@ H
:H I
falseJ O
)O P
,P Q
DisplayName 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
	maxLength7 @
:@ A
$numB E
,E F
nullableG O
:O P
falseQ V
)V W
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str '
,' (
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
UserId 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
false< A
)A B
,B C
PermissionId  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
nullable8 @
:@ A
trueB F
)F G
,G H
CreatedDate   
=    !
table  " '
.  ' (
Column  ( .
<  . /
DateTime  / 7
>  7 8
(  8 9
nullable  9 A
:  A B
false  C H
)  H I
,  I J
	CreatedBy!! 
=!! 
table!!  %
.!!% &
Column!!& ,
<!!, -
string!!- 3
>!!3 4
(!!4 5
nullable!!5 =
:!!= >
true!!? C
)!!C D
}"" 
,"" 
constraints## 
:## 
table## "
=>### %
{$$ 
table%% 
.%% 

PrimaryKey%% $
(%%$ %
$str%%% 9
,%%9 :
x%%; <
=>%%= ?
x%%@ A
.%%A B
Id%%B D
)%%D E
;%%E F
table&& 
.&& 

ForeignKey&& $
(&&$ %
name'' 
:'' 
$str'' K
,''K L
column(( 
:(( 
x((  !
=>((" $
x((% &
.((& '
PermissionId((' 3
,((3 4
principalTable)) &
:))& '
$str))( 5
,))5 6
principalColumn** '
:**' (
$str**) -
,**- .
onDelete++  
:++  !
ReferentialAction++" 3
.++3 4
Restrict++4 <
)++< =
;++= >
table,, 
.,, 

ForeignKey,, $
(,,$ %
name-- 
:-- 
$str-- ?
,--? @
column.. 
:.. 
x..  !
=>.." $
x..% &
...& '
UserId..' -
,..- .
principalTable// &
://& '
$str//( /
,/// 0
principalColumn00 '
:00' (
$str00) 1
,001 2
onDelete11  
:11  !
ReferentialAction11" 3
.113 4
Cascade114 ;
)11; <
;11< =
}22 
)22 
;22 
migrationBuilder44 
.44 
CreateIndex44 (
(44( )
name55 
:55 
$str55 7
,557 8
table66 
:66 
$str66 (
,66( )
column77 
:77 
$str77 &
)77& '
;77' (
migrationBuilder99 
.99 
CreateIndex99 (
(99( )
name:: 
::: 
$str:: 1
,::1 2
table;; 
:;; 
$str;; (
,;;( )
column<< 
:<< 
$str<<  
)<<  !
;<<! "
}== 	
	protected?? 
override?? 
void?? 
Down??  $
(??$ %
MigrationBuilder??% 5
migrationBuilder??6 F
)??F G
{@@ 	
migrationBuilderAA 
.AA 
	DropTableAA &
(AA& '
nameBB 
:BB 
$strBB '
)BB' (
;BB( )
migrationBuilderDD 
.DD 
	DropTableDD &
(DD& '
nameEE 
:EE 
$strEE #
)EE# $
;EE$ %
}FF 	
}GG 
}HH 
cC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200615212457_ProjetFixingRelation.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class  
ProjetFixingRelation -
:. /
	Migration0 9
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} /
oC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200615235224_alter_imputationStatus_with_name.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class ,
 alter_imputationStatus_with_name 9
:: ;
	Migration< E
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 L
,

L M
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str :
,: ;
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str *
,* +
	maxLength 
: 
$num 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str +
,+ ,
table 
: 
$str $
,$ %
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable   
:   
true   !
)  ! "
;  " #
migrationBuilder"" 
."" 
	AddColumn"" &
<""& '
string""' -
>""- .
("". /
name## 
:## 
$str## ;
,##; <
table$$ 
:$$ 
$str$$ $
,$$$ %
nullable%% 
:%% 
true%% 
)%% 
;%%  
migrationBuilder'' 
.'' 
CreateIndex'' (
(''( )
name(( 
:(( 
$str(( J
,((J K
table)) 
:)) 
$str)) $
,))$ %
column** 
:** 
$str** =
)**= >
;**> ?
migrationBuilder,, 
.,, 
AddForeignKey,, *
(,,* +
name-- 
:-- 
$str-- \
,--\ ]
table.. 
:.. 
$str.. $
,..$ %
column// 
:// 
$str// =
,//= >
principalTable00 
:00 
$str00  3
,003 4
principalColumn11 
:11  
$str11! 6
,116 7
onDelete22 
:22 
ReferentialAction22 +
.22+ ,
Restrict22, 4
)224 5
;225 6
}33 	
	protected55 
override55 
void55 
Down55  $
(55$ %
MigrationBuilder55% 5
migrationBuilder556 F
)55F G
{66 	
migrationBuilder77 
.77 
DropForeignKey77 +
(77+ ,
name88 
:88 
$str88 \
,88\ ]
table99 
:99 
$str99 $
)99$ %
;99% &
migrationBuilder;; 
.;; 
	DropIndex;; &
(;;& '
name<< 
:<< 
$str<< J
,<<J K
table== 
:== 
$str== $
)==$ %
;==% &
migrationBuilder?? 
.?? 

DropColumn?? '
(??' (
name@@ 
:@@ 
$str@@ 
,@@ 
tableAA 
:AA 
$strAA *
)AA* +
;AA+ ,
migrationBuilderCC 
.CC 

DropColumnCC '
(CC' (
nameDD 
:DD 
$strDD ;
,DD; <
tableEE 
:EE 
$strEE $
)EE$ %
;EE% &
migrationBuilderII 
.II 
AlterColumnII (
<II( )
stringII) /
>II/ 0
(II0 1
nameJJ 
:JJ 
$strJJ +
,JJ+ ,
tableKK 
:KK 
$strKK $
,KK$ %
typeLL 
:LL 
$strLL %
,LL% &
nullableMM 
:MM 
trueMM 
,MM 

oldClrTypeNN 
:NN 
typeofNN "
(NN" #
stringNN# )
)NN) *
,NN* +
oldNullableOO 
:OO 
trueOO !
)OO! "
;OO" #
migrationBuilderQQ 
.QQ 
CreateIndexQQ (
(QQ( )
nameRR 
:RR 
$strRR :
,RR: ;
tableSS 
:SS 
$strSS $
,SS$ %
columnTT 
:TT 
$strTT -
)TT- .
;TT. /
migrationBuilderVV 
.VV 
AddForeignKeyVV *
(VV* +
nameWW 
:WW 
$strWW L
,WWL M
tableXX 
:XX 
$strXX $
,XX$ %
columnYY 
:YY 
$strYY -
,YY- .
principalTableZZ 
:ZZ 
$strZZ  3
,ZZ3 4
principalColumn[[ 
:[[  
$str[[! 6
,[[6 7
onDelete\\ 
:\\ 
ReferentialAction\\ +
.\\+ ,
Restrict\\, 4
)\\4 5
;\\5 6
}]] 	
}^^ 
}__ -
yC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200615235953_alter_imputation_relation_imputationStatus.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 6
*alter_imputation_relation_imputationStatus C
:D E
	MigrationF O
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
AddUniqueConstraint		 0
(		0 1
name

 
:

 
$str

 5
,

5 6
table 
: 
$str *
,* +
column 
: 
$str 
) 
;  
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str \
,\ ]
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str J
,J K
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str ;
,; <
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str +
,+ ,
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str *
,* +
table   
:   
$str   $
,  $ %
nullable!! 
:!! 
false!! 
,!!  
defaultValue"" 
:"" 
$str"" D
)""D E
;""E F
migrationBuilder$$ 
.$$ 
CreateIndex$$ (
($$( )
name%% 
:%% 
$str%% 9
,%%9 :
table&& 
:&& 
$str&& $
,&&$ %
column'' 
:'' 
$str'' ,
)'', -
;''- .
migrationBuilder)) 
.)) 
AddForeignKey)) *
())* +
name** 
:** 
$str** K
,**K L
table++ 
:++ 
$str++ $
,++$ %
column,, 
:,, 
$str,, ,
,,,, -
principalTable-- 
:-- 
$str--  3
,--3 4
principalColumn.. 
:..  
$str..! 6
,..6 7
onDelete// 
:// 
ReferentialAction// +
.//+ ,
Restrict//, 4
)//4 5
;//5 6
}00 	
	protected22 
override22 
void22 
Down22  $
(22$ %
MigrationBuilder22% 5
migrationBuilder226 F
)22F G
{33 	
migrationBuilder44 
.44 
DropForeignKey44 +
(44+ ,
name55 
:55 
$str55 K
,55K L
table66 
:66 
$str66 $
)66$ %
;66% &
migrationBuilder88 
.88 
	DropIndex88 &
(88& '
name99 
:99 
$str99 9
,999 :
table:: 
::: 
$str:: $
)::$ %
;::% &
migrationBuilder<< 
.<< 

DropColumn<< '
(<<' (
name== 
:== 
$str== *
,==* +
table>> 
:>> 
$str>> $
)>>$ %
;>>% &
migrationBuilder@@ 
.@@ 
	AddColumn@@ &
<@@& '
string@@' -
>@@- .
(@@. /
nameAA 
:AA 
$strAA ;
,AA; <
tableBB 
:BB 
$strBB $
,BB$ %
typeCC 
:CC 
$strCC %
,CC% &
nullableDD 
:DD 
trueDD 
)DD 
;DD  
migrationBuilderFF 
.FF 
	AddColumnFF &
<FF& '
stringFF' -
>FF- .
(FF. /
nameGG 
:GG 
$strGG +
,GG+ ,
tableHH 
:HH 
$strHH $
,HH$ %
typeII 
:II 
$strII %
,II% &
nullableJJ 
:JJ 
trueJJ 
)JJ 
;JJ  
migrationBuilderLL 
.LL 
CreateIndexLL (
(LL( )
nameMM 
:MM 
$strMM J
,MMJ K
tableNN 
:NN 
$strNN $
,NN$ %
columnOO 
:OO 
$strOO =
)OO= >
;OO> ?
migrationBuilderQQ 
.QQ 
AddForeignKeyQQ *
(QQ* +
nameRR 
:RR 
$strRR \
,RR\ ]
tableSS 
:SS 
$strSS $
,SS$ %
columnTT 
:TT 
$strTT =
,TT= >
principalTableUU 
:UU 
$strUU  3
,UU3 4
principalColumnVV 
:VV  
$strVV! 6
,VV6 7
onDeleteWW 
:WW 
ReferentialActionWW +
.WW+ ,
RestrictWW, 4
)WW4 5
;WW5 6
}XX 	
}YY 
}ZZ À
xC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200616001523_alter_imputationStatus_with_default_value.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 5
)alter_imputationStatus_with_default_value B
:C D
	MigrationE N
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
bool		' +
>		+ ,
(		, -
name

 
:

 
$str

 !
,

! "
table 
: 
$str *
,* +
nullable 
: 
false 
,  
defaultValue 
: 
false #
)# $
;$ %
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str !
,! "
table 
: 
$str *
)* +
;+ ,
} 	
} 
} û%
rC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200617131413_FixingRelationDetailLivraisonProjet.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class /
#FixingRelationDetailLivraisonProjet <
:= >
	Migration? H
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 D
,

D E
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str 3
,3 4
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str (
,( )
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table 
: 
$str )
,) *
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateIndex (
(( )
name 
: 
$str 4
,4 5
table 
: 
$str )
,) *
column 
: 
$str "
)" #
;# $
migrationBuilder 
. 
AddForeignKey *
(* +
name   
:   
$str   <
,  < =
table!! 
:!! 
$str!! )
,!!) *
column"" 
:"" 
$str"" "
,""" #
principalTable## 
:## 
$str##  )
,##) *
principalColumn$$ 
:$$  
$str$$! %
,$$% &
onDelete%% 
:%% 
ReferentialAction%% +
.%%+ ,
Restrict%%, 4
)%%4 5
;%%5 6
}&& 	
	protected(( 
override(( 
void(( 
Down((  $
((($ %
MigrationBuilder((% 5
migrationBuilder((6 F
)((F G
{)) 	
migrationBuilder** 
.** 
DropForeignKey** +
(**+ ,
name++ 
:++ 
$str++ <
,++< =
table,, 
:,, 
$str,, )
),,) *
;,,* +
migrationBuilder.. 
... 
	DropIndex.. &
(..& '
name// 
:// 
$str// 4
,//4 5
table00 
:00 
$str00 )
)00) *
;00* +
migrationBuilder22 
.22 

DropColumn22 '
(22' (
name33 
:33 
$str33  
,33  !
table44 
:44 
$str44 )
)44) *
;44* +
migrationBuilder66 
.66 
	AddColumn66 &
<66& '
string66' -
>66- .
(66. /
name77 
:77 
$str77 (
,77( )
table88 
:88 
$str88  
,88  !
type99 
:99 
$str99 %
,99% &
nullable:: 
::: 
true:: 
):: 
;::  
migrationBuilder<< 
.<< 
CreateIndex<< (
(<<( )
name== 
:== 
$str== 3
,==3 4
table>> 
:>> 
$str>>  
,>>  !
column?? 
:?? 
$str?? *
,??* +
unique@@ 
:@@ 
true@@ 
,@@ 
filterAA 
:AA 
$strAA 8
)AA8 9
;AA9 :
migrationBuilderCC 
.CC 
AddForeignKeyCC *
(CC* +
nameDD 
:DD 
$strDD D
,DDD E
tableEE 
:EE 
$strEE  
,EE  !
columnFF 
:FF 
$strFF *
,FF* +
principalTableGG 
:GG 
$strGG  2
,GG2 3
principalColumnHH 
:HH  
$strHH! %
,HH% &
onDeleteII 
:II 
ReferentialActionII +
.II+ ,
RestrictII, 4
)II4 5
;II5 6
}JJ 	
}KK 
}LL 
jC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200617132812_FixingDetailLivraisonProjet.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class '
FixingDetailLivraisonProjet 4
:5 6
	Migration7 @
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 

DropColumn		 '
(		' (
name

 
:

 
$str

 !
,

! "
table 
: 
$str )
)) *
;* +
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str !
,! "
table 
: 
$str )
,) *
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
} 	
} 
} ë
_C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200701124932_FixingProjetUser.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
FixingProjetUser )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
CreateTable		 (
(		( )
name

 
:

 
$str

 #
,

# $
columns 
: 
table 
=> !
new" %
{ 
UserId 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
false< A
)A B
,B C
ProjetId 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
nullable4 <
:< =
false> C
)C D
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
new< ?
{@ A
xB C
.C D
ProjetIdD L
,L M
xN O
.O P
UserIdP V
}W X
)X Y
;Y Z
table 
. 

ForeignKey $
($ %
name 
: 
$str ?
,? @
column 
: 
x  !
=>" $
x% &
.& '
ProjetId' /
,/ 0
principalTable &
:& '
$str( 1
,1 2
principalColumn '
:' (
$str) -
,- .
onDelete  
:  !
ReferentialAction" 3
.3 4
Cascade4 ;
); <
;< =
table 
. 

ForeignKey $
($ %
name 
: 
$str ;
,; <
column 
: 
x  !
=>" $
x% &
.& '
UserId' -
,- .
principalTable &
:& '
$str( /
,/ 0
principalColumn '
:' (
$str) 1
,1 2
onDelete  
:  !
ReferentialAction" 3
.3 4
Cascade4 ;
); <
;< =
} 
) 
; 
migrationBuilder!! 
.!! 
CreateIndex!! (
(!!( )
name"" 
:"" 
$str"" -
,""- .
table## 
:## 
$str## $
,##$ %
column$$ 
:$$ 
$str$$  
)$$  !
;$$! "
}%% 	
	protected'' 
override'' 
void'' 
Down''  $
(''$ %
MigrationBuilder''% 5
migrationBuilder''6 F
)''F G
{(( 	
migrationBuilder)) 
.)) 
	DropTable)) &
())& '
name** 
:** 
$str** #
)**# $
;**$ %
}++ 	
},, 
}-- Ð

eC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200703094912_FixingIdClientInProjet.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class "
FixingIdClientInProjet /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

  
,

  !
table 
: 
$str  
,  !
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str  
)  !
;! "
} 	
} 
} ©
jC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200804091116_FixingRelationProjetLClient.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class '
FixingRelationProjetLClient 4
:5 6
	Migration7 @
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

  
,

  !
table 
: 
$str )
,) *
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str 
, 
table 
: 
$str *
,* +
nullable 
: 
false 
,  
defaultValue 
: 
$num 
)  
;  !
migrationBuilder 
. 
CreateIndex (
(( )
name 
: 
$str 4
,4 5
table 
: 
$str )
,) *
column 
: 
$str "
)" #
;# $
migrationBuilder 
. 
AddForeignKey *
(* +
name 
: 
$str <
,< =
table 
: 
$str )
,) *
column 
: 
$str "
," #
principalTable 
: 
$str  )
,) *
principalColumn 
:  
$str! %
,% &
onDelete 
: 
ReferentialAction +
.+ ,
Restrict, 4
)4 5
;5 6
}   	
	protected"" 
override"" 
void"" 
Down""  $
(""$ %
MigrationBuilder""% 5
migrationBuilder""6 F
)""F G
{## 	
migrationBuilder$$ 
.$$ 
DropForeignKey$$ +
($$+ ,
name%% 
:%% 
$str%% <
,%%< =
table&& 
:&& 
$str&& )
)&&) *
;&&* +
migrationBuilder(( 
.(( 
	DropIndex(( &
(((& '
name)) 
:)) 
$str)) 4
,))4 5
table** 
:** 
$str** )
)**) *
;*** +
migrationBuilder,, 
.,, 

DropColumn,, '
(,,' (
name-- 
:-- 
$str--  
,--  !
table.. 
:.. 
$str.. )
)..) *
;..* +
migrationBuilder00 
.00 

DropColumn00 '
(00' (
name11 
:11 
$str11 
,11 
table22 
:22 
$str22 *
)22* +
;22+ ,
}33 	
}44 
}55 
kC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200804103034_FixingRealationProjetLClient.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class (
FixingRealationProjetLClient 5
:6 7
	Migration8 A
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} Ö
cC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20200831093834_DeleteUserIdFDetailL.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class  
DeleteUserIdFDetailL -
:. /
	Migration0 9
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 

DropColumn		 '
(		' (
name

 
:

 
$str

 
,

 
table 
: 
$str *
)* +
;+ ,
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str 
, 
table 
: 
$str *
,* +
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$num 
)  
;  !
} 	
} 
} #
ZC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201029074904_equipe-user.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 

equipeuser #
:$ %
	Migration& /
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
Nom 
= 
table 
.  
Column  &
<& '
string' -
>- .
(. /
nullable/ 7
:7 8
true9 =
)= >
,> ?
	ManagerId   
=   
table    %
.  % &
Column  & ,
<  , -
string  - 3
>  3 4
(  4 5
nullable  5 =
:  = >
true  ? C
)  C D
}!! 
,!! 
constraints"" 
:"" 
table"" "
=>""# %
{## 
table$$ 
.$$ 

PrimaryKey$$ $
($$$ %
$str$$% 0
,$$0 1
x$$2 3
=>$$4 6
x$$7 8
.$$8 9
Id$$9 ;
)$$; <
;$$< =
table%% 
.%% 

ForeignKey%% $
(%%$ %
name&& 
:&& 
$str&& 9
,&&9 :
column'' 
:'' 
x''  !
=>''" $
x''% &
.''& '
	ManagerId''' 0
,''0 1
principalTable(( &
:((& '
$str((( /
,((/ 0
principalColumn)) '
:))' (
$str))) 1
,))1 2
onDelete**  
:**  !
ReferentialAction**" 3
.**3 4
Restrict**4 <
)**< =
;**= >
}++ 
)++ 
;++ 
migrationBuilder00 
.00 
CreateIndex00 (
(00( )
name11 
:11 
$str11 +
,11+ ,
table22 
:22 
$str22 
,22  
column33 
:33 
$str33 #
)33# $
;33$ %
migrationBuilder88 
.88 
AddForeignKey88 *
(88* +
name99 
:99 
$str99 0
,990 1
table:: 
::: 
$str:: 
,:: 
column;; 
:;; 
$str;; "
,;;" #
principalTable<< 
:<< 
$str<<  (
,<<( )
principalColumn== 
:==  
$str==! %
,==% &
onDelete>> 
:>> 
ReferentialAction>> +
.>>+ ,
Restrict>>, 4
)>>4 5
;>>5 6
}AA 	
	protectedCC 
overrideCC 
voidCC 
DownCC  $
(CC$ %
MigrationBuilderCC% 5
migrationBuilderCC6 F
)CCF G
{DD 	
migrationBuilderGG 
.GG 
DropForeignKeyGG +
(GG+ ,
nameHH 
:HH 
$strHH 0
,HH0 1
tableII 
:II 
$strII 
)II 
;II  
migrationBuilderMM 
.MM 
	DropTableMM &
(MM& '
nameNN 
:NN 
$strNN 
)NN 
;NN  
migrationBuilderQQ 
.QQ 

DropColumnQQ '
(QQ' (
nameRR 
:RR 
$strRR  
,RR  !
tableSS 
:SS 
$strSS 
)SS 
;SS  
}ZZ 	
}[[ 
}\\ ¸
`C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201101091408_delete-typeclient.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
deletetypeclient )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 ;
,

; <
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str $
,$ %
table 
: 
$str  
,  !
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str $
,$ %
table 
: 
$str  
,  !
type   
:   
$str   %
,  % &
nullable!! 
:!! 
true!! 
,!! 

oldClrType"" 
:"" 
typeof"" "
(""" #
string""# )
)"") *
,""* +
oldNullable## 
:## 
true## !
)##! "
;##" #
migrationBuilder%% 
.%% 
CreateTable%% (
(%%( )
name&& 
:&& 
$str&& #
,&&# $
columns'' 
:'' 
table'' 
=>'' !
new''" %
{(( 
Id)) 
=)) 
table)) 
.)) 
Column)) %
<))% &
string))& ,
>)), -
())- .
type)). 2
:))2 3
$str))4 C
,))C D
nullable))E M
:))M N
false))O T
)))T U
}** 
,** 
constraints++ 
:++ 
table++ "
=>++# %
{,, 
table-- 
.-- 

PrimaryKey-- $
(--$ %
$str--% 5
,--5 6
x--7 8
=>--9 ;
x--< =
.--= >
Id--> @
)--@ A
;--A B
}.. 
).. 
;.. 
migrationBuilder22 
.22 
AddForeignKey22 *
(22* +
name33 
:33 
$str33 ;
,33; <
table44 
:44 
$str44  
,44  !
column55 
:55 
$str55 &
,55& '
principalTable66 
:66 
$str66  -
,66- .
principalColumn77 
:77  
$str77! %
,77% &
onDelete88 
:88 
ReferentialAction88 +
.88+ ,
Restrict88, 4
)884 5
;885 6
}99 	
}:: 
};; ¬
]C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201101133717_lockoutEnabled.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
lockoutEnabled '
:( )
	Migration* 3
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
bool		' +
>		+ ,
(		, -
name

 
:

 
$str

 &
,

& '
table 
: 
$str  
,  !
nullable 
: 
false 
,  
defaultValue 
: 
false #
)# $
;$ %
migrationBuilder 
. 
	AddColumn &
<& '
bool' +
>+ ,
(, -
name 
: 
$str &
,& '
table 
: 
$str )
,) *
nullable 
: 
false 
,  
defaultValue 
: 
false #
)# $
;$ %
migrationBuilder 
. 
	AddColumn &
<& '
bool' +
>+ ,
(, -
name 
: 
$str &
,& '
table 
: 
$str  
,  !
nullable 
: 
false 
,  
defaultValue 
: 
false #
)# $
;$ %
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name   
:   
$str   &
,  & '
table!! 
:!! 
$str!!  
)!!  !
;!!! "
migrationBuilder## 
.## 

DropColumn## '
(##' (
name$$ 
:$$ 
$str$$ &
,$$& '
table%% 
:%% 
$str%% )
)%%) *
;%%* +
migrationBuilder'' 
.'' 

DropColumn'' '
(''' (
name(( 
:(( 
$str(( &
,((& '
table)) 
:)) 
$str))  
)))  !
;))! "
}** 	
}++ 
},, º
aC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201101160612_delete-projetPhase.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
deleteprojetPhase *
:+ ,
	Migration- 6
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 =
,

= >
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str %
,% &
table 
: 
$str  
,  !
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str %
,% &
table 
: 
$str  
,  !
type 
: 
$str %
,% &
nullable 
: 
true 
, 

oldClrType   
:   
typeof   "
(  " #
string  # )
)  ) *
,  * +
oldNullable!! 
:!! 
true!! !
)!!! "
;!!" #
migrationBuilder## 
.## 
CreateTable## (
(##( )
name$$ 
:$$ 
$str$$ $
,$$$ %
columns%% 
:%% 
table%% 
=>%% !
new%%" %
{&& 
Id'' 
='' 
table'' 
.'' 
Column'' %
<''% &
string''& ,
>'', -
(''- .
type''. 2
:''2 3
$str''4 C
,''C D
nullable''E M
:''M N
false''O T
)''T U
}(( 
,(( 
constraints)) 
:)) 
table)) "
=>))# %
{** 
table++ 
.++ 

PrimaryKey++ $
(++$ %
$str++% 6
,++6 7
x++8 9
=>++: <
x++= >
.++> ?
Id++? A
)++A B
;++B C
},, 
),, 
;,, 
migrationBuilder00 
.00 
AddForeignKey00 *
(00* +
name11 
:11 
$str11 =
,11= >
table22 
:22 
$str22  
,22  !
column33 
:33 
$str33 '
,33' (
principalTable44 
:44 
$str44  .
,44. /
principalColumn55 
:55  
$str55! %
,55% &
onDelete66 
:66 
ReferentialAction66 +
.66+ ,
Restrict66, 4
)664 5
;665 6
}77 	
}88 
}99 ã)
ZC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201102042420_multiClient.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
multiClient $
:% &
	Migration' 0
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 

DropColumn

 '
(

' (
name 
: 
$str  
,  !
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str !
,! "
table 
: 
$str  
,  !
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str 
,  
table 
: 
$str  
,  !
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table 
: 
$str  
,  !
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateIndex (
(( )
name   
:   
$str   +
,  + ,
table!! 
:!! 
$str!!  
,!!  !
column"" 
:"" 
$str"" "
)""" #
;""# $
migrationBuilder$$ 
.$$ 
AddForeignKey$$ *
($$* +
name%% 
:%% 
$str%% 3
,%%3 4
table&& 
:&& 
$str&&  
,&&  !
column'' 
:'' 
$str'' "
,''" #
principalTable(( 
:(( 
$str((  )
,(() *
principalColumn)) 
:))  
$str))! %
,))% &
onDelete** 
:** 
ReferentialAction** +
.**+ ,
Restrict**, 4
)**4 5
;**5 6
}++ 	
	protected-- 
override-- 
void-- 
Down--  $
(--$ %
MigrationBuilder--% 5
migrationBuilder--6 F
)--F G
{.. 	
migrationBuilder// 
.// 
DropForeignKey// +
(//+ ,
name00 
:00 
$str00 3
,003 4
table11 
:11 
$str11  
)11  !
;11! "
migrationBuilder33 
.33 
	DropIndex33 &
(33& '
name44 
:44 
$str44 +
,44+ ,
table55 
:55 
$str55  
)55  !
;55! "
migrationBuilder77 
.77 

DropColumn77 '
(77' (
name88 
:88 
$str88 !
,88! "
table99 
:99 
$str99  
)99  !
;99! "
migrationBuilder;; 
.;; 

DropColumn;; '
(;;' (
name<< 
:<< 
$str<< 
,<<  
table== 
:== 
$str==  
)==  !
;==! "
migrationBuilder?? 
.?? 

DropColumn?? '
(??' (
name@@ 
:@@ 
$str@@  
,@@  !
tableAA 
:AA 
$strAA  
)AA  !
;AA! "
migrationBuilderCC 
.CC 
	AddColumnCC &
<CC& '
stringCC' -
>CC- .
(CC. /
nameDD 
:DD 
$strDD  
,DD  !
tableEE 
:EE 
$strEE  
,EE  !
typeFF 
:FF 
$strFF %
,FF% &
nullableGG 
:GG 
trueGG 
)GG 
;GG  
}HH 	
}II 
}JJ 
fC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201103073452_allowNull-lastConnexion.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class "
allowNulllastConnexion /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
DateTime

) 1
>

1 2
(

2 3
name 
: 
$str %
,% &
table 
: 
$str 
, 
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
)$ %
;% &
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str %
,% &
table 
: 
$str 
, 
type 
: 
$str !
,! "
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldNullable 
: 
true !
)! "
;" #
} 	
} 
} §
fC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201104091807_project-projetLivraison.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class "
projectprojetLivraison /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 3
,

3 4
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str J
,J K
table 
: 
$str %
)% &
;& '
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str <
,< =
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str +
,+ ,
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str +
,+ ,
table 
: 
$str  
)  !
;! "
migrationBuilder!! 
.!! 

DropColumn!! '
(!!' (
name"" 
:"" 
$str"" )
,"") *
table## 
:## 
$str## %
)##% &
;##& '
migrationBuilder%% 
.%% 

DropColumn%% '
(%%' (
name&& 
:&& 
$str&&  
,&&  !
table'' 
:'' 
$str''  
)''  !
;''! "
migrationBuilder)) 
.)) 

DropColumn)) '
())' (
name** 
:** 
$str** $
,**$ %
table++ 
:++ 
$str++  
)++  !
;++! "
migrationBuilder-- 
.-- 
AlterColumn-- (
<--( )
string--) /
>--/ 0
(--0 1
name.. 
:.. 
$str..  
,..  !
table// 
:// 
$str// )
,//) *
nullable00 
:00 
false00 
,00  

oldClrType11 
:11 
typeof11 "
(11" #
string11# )
)11) *
,11* +
oldType22 
:22 
$str22 (
,22( )
oldNullable33 
:33 
true33 !
)33! "
;33" #
migrationBuilder55 
.55 
AlterColumn55 (
<55( )
string55) /
>55/ 0
(550 1
name66 
:66 
$str66 
,66 
table77 
:77 
$str77 )
,77) *
nullable88 
:88 
true88 
,88 

oldClrType99 
:99 
typeof99 "
(99" #
string99# )
)99) *
,99* +
oldType:: 
::: 
$str:: (
)::( )
;::) *
migrationBuilder<< 
.<< 
	AddColumn<< &
<<<& '
string<<' -
><<- .
(<<. /
name== 
:== 
$str==  
,==  !
table>> 
:>> 
$str>> )
,>>) *
nullable?? 
:?? 
false?? 
,??  
defaultValue@@ 
:@@ 
$str@@  
)@@  !
;@@! "
migrationBuilderBB 
.BB 
	AddColumnBB &
<BB& '
stringBB' -
>BB- .
(BB. /
nameCC 
:CC 
$strCC /
,CC/ 0
tableDD 
:DD 
$strDD %
,DD% &
nullableEE 
:EE 
trueEE 
)EE 
;EE  
migrationBuilderGG 
.GG 
	AddColumnGG &
<GG& '
stringGG' -
>GG- .
(GG. /
nameHH 
:HH 
$strHH /
,HH/ 0
tableII 
:II 
$strII %
,II% &
nullableJJ 
:JJ 
trueJJ 
)JJ 
;JJ  
migrationBuilderLL 
.LL 
AddPrimaryKeyLL *
(LL* +
nameMM 
:MM 
$strMM +
,MM+ ,
tableNN 
:NN 
$strNN )
,NN) *
columnsOO 
:OO 
newOO 
[OO 
]OO 
{OO  
$strOO! +
,OO+ ,
$strOO- 7
}OO8 9
)OO9 :
;OO: ;
migrationBuilderQQ 
.QQ 
CreateTableQQ (
(QQ( )
nameRR 
:RR 
$strRR $
,RR$ %
columnsSS 
:SS 
tableSS 
=>SS !
newSS" %
{TT 
ProjetIdUU 
=UU 
tableUU $
.UU$ %
ColumnUU% +
<UU+ ,
stringUU, 2
>UU2 3
(UU3 4
nullableUU4 <
:UU< =
falseUU> C
)UUC D
,UUD E
EquipeIdVV 
=VV 
tableVV $
.VV$ %
ColumnVV% +
<VV+ ,
stringVV, 2
>VV2 3
(VV3 4
nullableVV4 <
:VV< =
falseVV> C
)VVC D
}WW 
,WW 
constraintsXX 
:XX 
tableXX "
=>XX# %
{YY 
tableZZ 
.ZZ 

PrimaryKeyZZ $
(ZZ$ %
$strZZ% 6
,ZZ6 7
xZZ8 9
=>ZZ: <
newZZ= @
{ZZA B
xZZC D
.ZZD E
ProjetIdZZE M
,ZZM N
xZZO P
.ZZP Q
EquipeIdZZQ Y
}ZZZ [
)ZZ[ \
;ZZ\ ]
table[[ 
.[[ 

ForeignKey[[ $
([[$ %
name\\ 
:\\ 
$str\\ ?
,\\? @
column]] 
:]] 
x]]  !
=>]]" $
x]]% &
.]]& '
EquipeId]]' /
,]]/ 0
principalTable^^ &
:^^& '
$str^^( 0
,^^0 1
principalColumn__ '
:__' (
$str__) -
,__- .
onDelete``  
:``  !
ReferentialAction``" 3
.``3 4
Cascade``4 ;
)``; <
;``< =
tableaa 
.aa 

ForeignKeyaa $
(aa$ %
namebb 
:bb 
$strbb @
,bb@ A
columncc 
:cc 
xcc  !
=>cc" $
xcc% &
.cc& '
ProjetIdcc' /
,cc/ 0
principalTabledd &
:dd& '
$strdd( 1
,dd1 2
principalColumnee '
:ee' (
$stree) -
,ee- .
onDeleteff  
:ff  !
ReferentialActionff" 3
.ff3 4
Cascadeff4 ;
)ff; <
;ff< =
}gg 
)gg 
;gg 
migrationBuilderii 
.ii 
CreateIndexii (
(ii( )
namejj 
:jj 
$strjj 4
,jj4 5
tablekk 
:kk 
$strkk )
,kk) *
columnll 
:ll 
$strll "
)ll" #
;ll# $
migrationBuildernn 
.nn 
CreateIndexnn (
(nn( )
nameoo 
:oo 
$stroo W
,ooW X
tablepp 
:pp 
$strpp %
,pp% &
columnsqq 
:qq 
newqq 
[qq 
]qq 
{qq  
$strqq! :
,qq: ;
$strqq< U
}qqV W
)qqW X
;qqX Y
migrationBuilderss 
.ss 
CreateIndexss (
(ss( )
namett 
:tt 
$strtt 0
,tt0 1
tableuu 
:uu 
$struu %
,uu% &
columnvv 
:vv 
$strvv "
)vv" #
;vv# $
migrationBuilderxx 
.xx 
AddForeignKeyxx *
(xx* +
nameyy 
:yy 
$stryy h
,yyh i
tablezz 
:zz 
$strzz %
,zz% &
columns{{ 
:{{ 
new{{ 
[{{ 
]{{ 
{{{  
$str{{! :
,{{: ;
$str{{< U
}{{V W
,{{W X
principalTable|| 
:|| 
$str||  2
,||2 3
principalColumns}}  
:}}  !
new}}" %
[}}% &
]}}& '
{}}( )
$str}}* 4
,}}4 5
$str}}6 @
}}}A B
,}}B C
onDelete~~ 
:~~ 
ReferentialAction~~ +
.~~+ ,
Restrict~~, 4
)~~4 5
;~~5 6
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 <
,
< =
table
 
:
 
$str
 )
,
) *
column
 
:
 
$str
 "
,
" #
principalTable
 
:
 
$str
  )
,
) *
principalColumn
 
:
  
$str
! %
,
% &
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Cascade
, 3
)
3 4
;
4 5
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 <
,
< =
table
 
:
 
$str
 )
,
) *
column
 
:
 
$str
 "
,
" #
principalTable
 
:
 
$str
  )
,
) *
principalColumn
 
:
  
$str
! %
,
% &
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Cascade
, 3
)
3 4
;
4 5
}
 	
	protected
 
override
 
void
 
Down
  $
(
$ %
MigrationBuilder
% 5
migrationBuilder
6 F
)
F G
{
 	
migrationBuilder
 
.
 
DropForeignKey
 +
(
+ ,
name
 
:
 
$str
 h
,
h i
table
 
:
 
$str
 %
)
% &
;
& '
migrationBuilder
 
.
 
DropForeignKey
 +
(
+ ,
name
 
:
 
$str
 <
,
< =
table
 
:
 
$str
 )
)
) *
;
* +
migrationBuilder
 
.
 
DropForeignKey
 +
(
+ ,
name
 
:
 
$str
 <
,
< =
table
 
:
 
$str
 )
)
) *
;
* +
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
   
:
   
$str
   $
)
  $ %
;
  % &
migrationBuilder
¢¢ 
.
¢¢ 
DropPrimaryKey
¢¢ +
(
¢¢+ ,
name
££ 
:
££ 
$str
££ +
,
££+ ,
table
¤¤ 
:
¤¤ 
$str
¤¤ )
)
¤¤) *
;
¤¤* +
migrationBuilder
¦¦ 
.
¦¦ 
	DropIndex
¦¦ &
(
¦¦& '
name
§§ 
:
§§ 
$str
§§ 4
,
§§4 5
table
¨¨ 
:
¨¨ 
$str
¨¨ )
)
¨¨) *
;
¨¨* +
migrationBuilder
ªª 
.
ªª 
	DropIndex
ªª &
(
ªª& '
name
«« 
:
«« 
$str
«« W
,
««W X
table
¬¬ 
:
¬¬ 
$str
¬¬ %
)
¬¬% &
;
¬¬& '
migrationBuilder
®® 
.
®® 

DropColumn
®® '
(
®®' (
name
¯¯ 
:
¯¯ 
$str
¯¯  
,
¯¯  !
table
°° 
:
°° 
$str
°° )
)
°°) *
;
°°* +
migrationBuilder
²² 
.
²² 

DropColumn
²² '
(
²²' (
name
³³ 
:
³³ 
$str
³³ /
,
³³/ 0
table
´´ 
:
´´ 
$str
´´ %
)
´´% &
;
´´& '
migrationBuilder
¶¶ 
.
¶¶ 

DropColumn
¶¶ '
(
¶¶' (
name
·· 
:
·· 
$str
·· /
,
··/ 0
table
¸¸ 
:
¸¸ 
$str
¸¸ %
)
¸¸% &
;
¸¸& '
migrationBuilder
ºº 
.
ºº 
AlterColumn
ºº (
<
ºº( )
string
ºº) /
>
ºº/ 0
(
ºº0 1
name
»» 
:
»» 
$str
»» 
,
»» 
table
¼¼ 
:
¼¼ 
$str
¼¼ )
,
¼¼) *
type
½½ 
:
½½ 
$str
½½ %
,
½½% &
nullable
¾¾ 
:
¾¾ 
false
¾¾ 
,
¾¾  

oldClrType
¿¿ 
:
¿¿ 
typeof
¿¿ "
(
¿¿" #
string
¿¿# )
)
¿¿) *
,
¿¿* +
oldNullable
ÀÀ 
:
ÀÀ 
true
ÀÀ !
)
ÀÀ! "
;
ÀÀ" #
migrationBuilder
ÂÂ 
.
ÂÂ 
AlterColumn
ÂÂ (
<
ÂÂ( )
string
ÂÂ) /
>
ÂÂ/ 0
(
ÂÂ0 1
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ  
,
ÃÃ  !
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ )
,
ÄÄ) *
type
ÅÅ 
:
ÅÅ 
$str
ÅÅ %
,
ÅÅ% &
nullable
ÆÆ 
:
ÆÆ 
true
ÆÆ 
,
ÆÆ 

oldClrType
ÇÇ 
:
ÇÇ 
typeof
ÇÇ "
(
ÇÇ" #
string
ÇÇ# )
)
ÇÇ) *
)
ÇÇ* +
;
ÇÇ+ ,
migrationBuilder
ÉÉ 
.
ÉÉ 
	AddColumn
ÉÉ &
<
ÉÉ& '
string
ÉÉ' -
>
ÉÉ- .
(
ÉÉ. /
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ )
,
ÊÊ) *
table
ËË 
:
ËË 
$str
ËË %
,
ËË% &
type
ÌÌ 
:
ÌÌ 
$str
ÌÌ %
,
ÌÌ% &
nullable
ÍÍ 
:
ÍÍ 
true
ÍÍ 
)
ÍÍ 
;
ÍÍ  
migrationBuilder
ÏÏ 
.
ÏÏ 
	AddColumn
ÏÏ &
<
ÏÏ& '
string
ÏÏ' -
>
ÏÏ- .
(
ÏÏ. /
name
ÐÐ 
:
ÐÐ 
$str
ÐÐ  
,
ÐÐ  !
table
ÑÑ 
:
ÑÑ 
$str
ÑÑ  
,
ÑÑ  !
type
ÒÒ 
:
ÒÒ 
$str
ÒÒ %
,
ÒÒ% &
nullable
ÓÓ 
:
ÓÓ 
true
ÓÓ 
)
ÓÓ 
;
ÓÓ  
migrationBuilder
ÕÕ 
.
ÕÕ 
	AddColumn
ÕÕ &
<
ÕÕ& '
string
ÕÕ' -
>
ÕÕ- .
(
ÕÕ. /
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ $
,
ÖÖ$ %
table
×× 
:
×× 
$str
××  
,
××  !
type
ØØ 
:
ØØ 
$str
ØØ %
,
ØØ% &
nullable
ÙÙ 
:
ÙÙ 
true
ÙÙ 
)
ÙÙ 
;
ÙÙ  
migrationBuilder
ÛÛ 
.
ÛÛ 
AddPrimaryKey
ÛÛ *
(
ÛÛ* +
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ +
,
ÜÜ+ ,
table
ÝÝ 
:
ÝÝ 
$str
ÝÝ )
,
ÝÝ) *
column
ÞÞ 
:
ÞÞ 
$str
ÞÞ 
)
ÞÞ 
;
ÞÞ 
migrationBuilder
ää 
.
ää 
CreateIndex
ää (
(
ää( )
name
åå 
:
åå 
$str
åå +
,
åå+ ,
table
ææ 
:
ææ 
$str
ææ  
,
ææ  !
column
çç 
:
çç 
$str
çç "
)
çç" #
;
çç# $
migrationBuilder
éé 
.
éé 
AddForeignKey
éé *
(
éé* +
name
êê 
:
êê 
$str
êê 3
,
êê3 4
table
ëë 
:
ëë 
$str
ëë  
,
ëë  !
column
ìì 
:
ìì 
$str
ìì "
,
ìì" #
principalTable
íí 
:
íí 
$str
íí  )
,
íí) *
principalColumn
îî 
:
îî  
$str
îî! %
,
îî% &
onDelete
ïï 
:
ïï 
ReferentialAction
ïï +
.
ïï+ ,
Restrict
ïï, 4
)
ïï4 5
;
ïï5 6
migrationBuilder
ññ 
.
ññ 
AddForeignKey
ññ *
(
ññ* +
name
òò 
:
òò 
$str
òò J
,
òòJ K
table
óó 
:
óó 
$str
óó %
,
óó% &
column
ôô 
:
ôô 
$str
ôô +
,
ôô+ ,
principalTable
õõ 
:
õõ 
$str
õõ  2
,
õõ2 3
principalColumn
öö 
:
öö  
$str
öö! %
,
öö% &
onDelete
÷÷ 
:
÷÷ 
ReferentialAction
÷÷ +
.
÷÷+ ,
Restrict
÷÷, 4
)
÷÷4 5
;
÷÷5 6
migrationBuilder
ùù 
.
ùù 
AddForeignKey
ùù *
(
ùù* +
name
úú 
:
úú 
$str
úú <
,
úú< =
table
ûû 
:
ûû 
$str
ûû )
,
ûû) *
column
üü 
:
üü 
$str
üü "
,
üü" #
principalTable
ýý 
:
ýý 
$str
ýý  )
,
ýý) *
principalColumn
þþ 
:
þþ  
$str
þþ! %
,
þþ% &
onDelete
ÿÿ 
:
ÿÿ 
ReferentialAction
ÿÿ +
.
ÿÿ+ ,
Restrict
ÿÿ, 4
)
ÿÿ4 5
;
ÿÿ5 6
}
 	
}
 
} ø%
^C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201104094317_deleteTTM-Satus.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
deleteTTMSatus '
:( )
	Migration* 3
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 ;
,

; <
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 5
,5 6
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str  
,  !
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType   
:   
$str   (
,  ( )
oldNullable!! 
:!! 
true!! !
)!!! "
;!!" #
}"" 	
	protected$$ 
override$$ 
void$$ 
Down$$  $
($$$ %
MigrationBuilder$$% 5
migrationBuilder$$6 F
)$$F G
{%% 	
migrationBuilder&& 
.&& 
AlterColumn&& (
<&&( )
string&&) /
>&&/ 0
(&&0 1
name'' 
:'' 
$str'' 
,'' 
table(( 
:(( 
$str(( )
,(() *
type)) 
:)) 
$str)) %
,))% &
nullable** 
:** 
true** 
,** 

oldClrType++ 
:++ 
typeof++ "
(++" #
string++# )
)++) *
,++* +
oldNullable,, 
:,, 
true,, !
),,! "
;,," #
migrationBuilder.. 
... 
AlterColumn.. (
<..( )
string..) /
>../ 0
(..0 1
name// 
:// 
$str//  
,//  !
table00 
:00 
$str00 )
,00) *
type11 
:11 
$str11 %
,11% &
nullable22 
:22 
true22 
,22 

oldClrType33 
:33 
typeof33 "
(33" #
string33# )
)33) *
,33* +
oldNullable44 
:44 
true44 !
)44! "
;44" #
migrationBuilder:: 
.:: 
AddForeignKey:: *
(::* +
name;; 
:;; 
$str;; ;
,;;; <
table<< 
:<< 
$str<< )
,<<) *
column== 
:== 
$str== "
,==" #
principalTable>> 
:>> 
$str>>  (
,>>( )
principalColumn?? 
:??  
$str??! +
,??+ ,
onDelete@@ 
:@@ 
ReferentialAction@@ +
.@@+ ,
Restrict@@, 4
)@@4 5
;@@5 6
migrationBuilderBB 
.BB 
AddForeignKeyBB *
(BB* +
nameCC 
:CC 
$strCC 5
,CC5 6
tableDD 
:DD 
$strDD )
,DD) *
columnEE 
:EE 
$strEE 
,EE  
principalTableFF 
:FF 
$strFF  %
,FF% &
principalColumnGG 
:GG  
$strGG! (
,GG( )
onDeleteHH 
:HH 
ReferentialActionHH +
.HH+ ,
RestrictHH, 4
)HH4 5
;HH5 6
}II 	
}JJ 
}KK &
eC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201104094434_deleteTTM-Satus-detail.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class  
deleteTTMSatusdetail -
:. /
	Migration0 9
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 ;
,

; <
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 5
,5 6
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str  
,  !
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType   
:   
$str   (
,  ( )
oldNullable!! 
:!! 
true!! !
)!!! "
;!!" #
}"" 	
	protected$$ 
override$$ 
void$$ 
Down$$  $
($$$ %
MigrationBuilder$$% 5
migrationBuilder$$6 F
)$$F G
{%% 	
migrationBuilder&& 
.&& 
AlterColumn&& (
<&&( )
string&&) /
>&&/ 0
(&&0 1
name'' 
:'' 
$str'' 
,'' 
table(( 
:(( 
$str(( )
,(() *
type)) 
:)) 
$str)) %
,))% &
nullable** 
:** 
true** 
,** 

oldClrType++ 
:++ 
typeof++ "
(++" #
string++# )
)++) *
,++* +
oldNullable,, 
:,, 
true,, !
),,! "
;,," #
migrationBuilder.. 
... 
AlterColumn.. (
<..( )
string..) /
>../ 0
(..0 1
name// 
:// 
$str//  
,//  !
table00 
:00 
$str00 )
,00) *
type11 
:11 
$str11 %
,11% &
nullable22 
:22 
true22 
,22 

oldClrType33 
:33 
typeof33 "
(33" #
string33# )
)33) *
,33* +
oldNullable44 
:44 
true44 !
)44! "
;44" #
migrationBuilder99 
.99 
AddForeignKey99 *
(99* +
name:: 
::: 
$str:: ;
,::; <
table;; 
:;; 
$str;; )
,;;) *
column<< 
:<< 
$str<< "
,<<" #
principalTable== 
:== 
$str==  (
,==( )
principalColumn>> 
:>>  
$str>>! +
,>>+ ,
onDelete?? 
:?? 
ReferentialAction?? +
.??+ ,
Restrict??, 4
)??4 5
;??5 6
migrationBuilderAA 
.AA 
AddForeignKeyAA *
(AA* +
nameBB 
:BB 
$strBB 5
,BB5 6
tableCC 
:CC 
$strCC )
,CC) *
columnDD 
:DD 
$strDD 
,DD  
principalTableEE 
:EE 
$strEE  %
,EE% &
principalColumnFF 
:FF  
$strFF! (
,FF( )
onDeleteGG 
:GG 
ReferentialActionGG +
.GG+ ,
RestrictGG, 4
)GG4 5
;GG5 6
}HH 	
}II 
}JJ æ1
[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201104105152_equipe-users.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
equipeusers $
:% &
	Migration' 0
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 7
,

7 8
table 
: 
$str %
)% &
;& '
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 8
,8 9
table 
: 
$str %
)% &
;& '
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str '
,' (
table 
: 
$str %
)% &
;& '
migrationBuilder 
. 
RenameTable (
(( )
name 
: 
$str $
,$ %
newName 
: 
$str (
)( )
;) *
migrationBuilder 
. 
RenameIndex (
(( )
name 
: 
$str 0
,0 1
table 
: 
$str &
,& '
newName 
: 
$str 4
)4 5
;5 6
migrationBuilder 
. 
AddPrimaryKey *
(* +
name 
: 
$str (
,( )
table   
:   
$str   &
,  & '
columns!! 
:!! 
new!! 
[!! 
]!! 
{!!  
$str!!! +
,!!+ ,
$str!!- 7
}!!8 9
)!!9 :
;!!: ;
migrationBuilder## 
.## 
AddForeignKey## *
(##* +
name$$ 
:$$ 
$str$$ 8
,$$8 9
table%% 
:%% 
$str%% &
,%%& '
column&& 
:&& 
$str&& "
,&&" #
principalTable'' 
:'' 
$str''  (
,''( )
principalColumn(( 
:((  
$str((! %
,((% &
onDelete)) 
:)) 
ReferentialAction)) +
.))+ ,
Cascade)), 3
)))3 4
;))4 5
migrationBuilder++ 
.++ 
AddForeignKey++ *
(++* +
name,, 
:,, 
$str,, 9
,,,9 :
table-- 
:-- 
$str-- &
,--& '
column.. 
:.. 
$str.. "
,.." #
principalTable// 
:// 
$str//  )
,//) *
principalColumn00 
:00  
$str00! %
,00% &
onDelete11 
:11 
ReferentialAction11 +
.11+ ,
Cascade11, 3
)113 4
;114 5
}22 	
	protected44 
override44 
void44 
Down44  $
(44$ %
MigrationBuilder44% 5
migrationBuilder446 F
)44F G
{55 	
migrationBuilder66 
.66 
DropForeignKey66 +
(66+ ,
name77 
:77 
$str77 8
,778 9
table88 
:88 
$str88 &
)88& '
;88' (
migrationBuilder:: 
.:: 
DropForeignKey:: +
(::+ ,
name;; 
:;; 
$str;; 9
,;;9 :
table<< 
:<< 
$str<< &
)<<& '
;<<' (
migrationBuilder>> 
.>> 
DropPrimaryKey>> +
(>>+ ,
name?? 
:?? 
$str?? (
,??( )
table@@ 
:@@ 
$str@@ &
)@@& '
;@@' (
migrationBuilderBB 
.BB 
RenameTableBB (
(BB( )
nameCC 
:CC 
$strCC %
,CC% &
newNameDD 
:DD 
$strDD '
)DD' (
;DD( )
migrationBuilderFF 
.FF 
RenameIndexFF (
(FF( )
nameGG 
:GG 
$strGG 1
,GG1 2
tableHH 
:HH 
$strHH %
,HH% &
newNameII 
:II 
$strII 3
)II3 4
;II4 5
migrationBuilderKK 
.KK 
AddPrimaryKeyKK *
(KK* +
nameLL 
:LL 
$strLL '
,LL' (
tableMM 
:MM 
$strMM %
,MM% &
columnsNN 
:NN 
newNN 
[NN 
]NN 
{NN  
$strNN! +
,NN+ ,
$strNN- 7
}NN8 9
)NN9 :
;NN: ;
migrationBuilderPP 
.PP 
AddForeignKeyPP *
(PP* +
nameQQ 
:QQ 
$strQQ 7
,QQ7 8
tableRR 
:RR 
$strRR %
,RR% &
columnSS 
:SS 
$strSS "
,SS" #
principalTableTT 
:TT 
$strTT  (
,TT( )
principalColumnUU 
:UU  
$strUU! %
,UU% &
onDeleteVV 
:VV 
ReferentialActionVV +
.VV+ ,
CascadeVV, 3
)VV3 4
;VV4 5
migrationBuilderXX 
.XX 
AddForeignKeyXX *
(XX* +
nameYY 
:YY 
$strYY 8
,YY8 9
tableZZ 
:ZZ 
$strZZ %
,ZZ% &
column[[ 
:[[ 
$str[[ "
,[[" #
principalTable\\ 
:\\ 
$str\\  )
,\\) *
principalColumn]] 
:]]  
$str]]! %
,]]% &
onDelete^^ 
:^^ 
ReferentialAction^^ +
.^^+ ,
Cascade^^, 3
)^^3 4
;^^4 5
}__ 	
}`` 
}aa íB
cC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201104113052_detail-livraison-key.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
detaillivraisonkey +
:, -
	Migration. 7
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 h
,

h i
table 
: 
$str %
)% &
;& '
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str +
,+ ,
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str W
,W X
table 
: 
$str %
)% &
;& '
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str /
,/ 0
table 
: 
$str %
)% &
;& '
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str /
,/ 0
table 
: 
$str %
)% &
;& '
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str )
,) *
nullable   
:   
false   
,    

oldClrType!! 
:!! 
typeof!! "
(!!" #
string!!# )
)!!) *
,!!* +
oldType"" 
:"" 
$str"" (
,""( )
oldNullable## 
:## 
true## !
)##! "
;##" #
migrationBuilder%% 
.%% 
	AddColumn%% &
<%%& '
string%%' -
>%%- .
(%%. /
name&& 
:&& 
$str&& )
,&&) *
table'' 
:'' 
$str'' %
,''% &
nullable(( 
:(( 
true(( 
)(( 
;((  
migrationBuilder** 
.** 
AddPrimaryKey** *
(*** +
name++ 
:++ 
$str++ +
,+++ ,
table,, 
:,, 
$str,, )
,,,) *
column-- 
:-- 
$str-- 
)-- 
;-- 
migrationBuilder// 
.// 
CreateIndex// (
(//( )
name00 
:00 
$str00 4
,004 5
table11 
:11 
$str11 )
,11) *
column22 
:22 
$str22 "
)22" #
;22# $
migrationBuilder44 
.44 
CreateIndex44 (
(44( )
name55 
:55 
$str55 9
,559 :
table66 
:66 
$str66 %
,66% &
column77 
:77 
$str77 +
)77+ ,
;77, -
migrationBuilder99 
.99 
AddForeignKey99 *
(99* +
name:: 
::: 
$str:: J
,::J K
table;; 
:;; 
$str;; %
,;;% &
column<< 
:<< 
$str<< +
,<<+ ,
principalTable== 
:== 
$str==  2
,==2 3
principalColumn>> 
:>>  
$str>>! %
,>>% &
onDelete?? 
:?? 
ReferentialAction?? +
.??+ ,
Restrict??, 4
)??4 5
;??5 6
}@@ 	
	protectedBB 
overrideBB 
voidBB 
DownBB  $
(BB$ %
MigrationBuilderBB% 5
migrationBuilderBB6 F
)BBF G
{CC 	
migrationBuilderDD 
.DD 
DropForeignKeyDD +
(DD+ ,
nameEE 
:EE 
$strEE J
,EEJ K
tableFF 
:FF 
$strFF %
)FF% &
;FF& '
migrationBuilderHH 
.HH 
DropPrimaryKeyHH +
(HH+ ,
nameII 
:II 
$strII +
,II+ ,
tableJJ 
:JJ 
$strJJ )
)JJ) *
;JJ* +
migrationBuilderLL 
.LL 
	DropIndexLL &
(LL& '
nameMM 
:MM 
$strMM 4
,MM4 5
tableNN 
:NN 
$strNN )
)NN) *
;NN* +
migrationBuilderPP 
.PP 
	DropIndexPP &
(PP& '
nameQQ 
:QQ 
$strQQ 9
,QQ9 :
tableRR 
:RR 
$strRR %
)RR% &
;RR& '
migrationBuilderTT 
.TT 

DropColumnTT '
(TT' (
nameUU 
:UU 
$strUU )
,UU) *
tableVV 
:VV 
$strVV %
)VV% &
;VV& '
migrationBuilderXX 
.XX 
AlterColumnXX (
<XX( )
stringXX) /
>XX/ 0
(XX0 1
nameYY 
:YY 
$strYY 
,YY 
tableZZ 
:ZZ 
$strZZ )
,ZZ) *
type[[ 
:[[ 
$str[[ %
,[[% &
nullable\\ 
:\\ 
true\\ 
,\\ 

oldClrType]] 
:]] 
typeof]] "
(]]" #
string]]# )
)]]) *
)]]* +
;]]+ ,
migrationBuilder__ 
.__ 
	AddColumn__ &
<__& '
string__' -
>__- .
(__. /
name`` 
:`` 
$str`` /
,``/ 0
tableaa 
:aa 
$straa %
,aa% &
typebb 
:bb 
$strbb %
,bb% &
nullablecc 
:cc 
truecc 
)cc 
;cc  
migrationBuilderee 
.ee 
	AddColumnee &
<ee& '
stringee' -
>ee- .
(ee. /
nameff 
:ff 
$strff /
,ff/ 0
tablegg 
:gg 
$strgg %
,gg% &
typehh 
:hh 
$strhh %
,hh% &
nullableii 
:ii 
trueii 
)ii 
;ii  
migrationBuilderkk 
.kk 
AddPrimaryKeykk *
(kk* +
namell 
:ll 
$strll +
,ll+ ,
tablemm 
:mm 
$strmm )
,mm) *
columnsnn 
:nn 
newnn 
[nn 
]nn 
{nn  
$strnn! +
,nn+ ,
$strnn- 7
}nn8 9
)nn9 :
;nn: ;
migrationBuilderpp 
.pp 
CreateIndexpp (
(pp( )
nameqq 
:qq 
$strqq W
,qqW X
tablerr 
:rr 
$strrr %
,rr% &
columnsss 
:ss 
newss 
[ss 
]ss 
{ss  
$strss! :
,ss: ;
$strss< U
}ssV W
)ssW X
;ssX Y
migrationBuilderuu 
.uu 
AddForeignKeyuu *
(uu* +
namevv 
:vv 
$strvv h
,vvh i
tableww 
:ww 
$strww %
,ww% &
columnsxx 
:xx 
newxx 
[xx 
]xx 
{xx  
$strxx! :
,xx: ;
$strxx< U
}xxV W
,xxW X
principalTableyy 
:yy 
$stryy  2
,yy2 3
principalColumnszz  
:zz  !
newzz" %
[zz% &
]zz& '
{zz( )
$strzz* 4
,zz4 5
$strzz6 @
}zzA B
,zzB C
onDelete{{ 
:{{ 
ReferentialAction{{ +
.{{+ ,
Restrict{{, 4
){{4 5
;{{5 6
}|| 	
}}} 
}~~ ¼

[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201105041730_typeclientid.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
typeclientid %
:& '
	Migration( 1
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

 $
,

$ %
table 
: 
$str  
,  !
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str $
,$ %
table 
: 
$str  
)  !
;! "
} 	
} 
} 
[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201105073621_dateCreation.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
dateCreation %
:& '
	Migration( 1
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
DateTime

) 1
>

1 2
(

2 3
name 
: 
$str $
,$ %
table 
: 
$str  
,  !
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
)$ %
;% &
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str $
,$ %
table 
: 
$str  
,  !
type 
: 
$str !
,! "
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldNullable 
: 
true !
)! "
;" #
} 	
} 
} Ú4
XC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201105102112_projetEdp.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
	projetEdp "
:# $
	Migration% .
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 <
,

< =
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str 4
,4 5
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str "
," #
table 
: 
$str )
,) *
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str #
,# $
table 
: 
$str )
,) *
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name   
:   
$str   !
,  ! "
columns!! 
:!! 
table!! 
=>!! !
new!!" %
{"" 
id## 
=## 
table## 
.## 
Column## %
<##% &
string##& ,
>##, -
(##- .
nullable##. 6
:##6 7
false##8 =
)##= >
,##> ?
Nom$$ 
=$$ 
table$$ 
.$$  
Column$$  &
<$$& '
string$$' -
>$$- .
($$. /
nullable$$/ 7
:$$7 8
true$$9 =
)$$= >
,$$> ?
budget%% 
=%% 
table%% "
.%%" #
Column%%# )
<%%) *
string%%* 0
>%%0 1
(%%1 2
nullable%%2 :
:%%: ;
true%%< @
)%%@ A
}&& 
,&& 
constraints'' 
:'' 
table'' "
=>''# %
{(( 
table)) 
.)) 

PrimaryKey)) $
())$ %
$str))% 3
,))3 4
x))5 6
=>))7 9
x)): ;
.)); <
id))< >
)))> ?
;))? @
}** 
)** 
;** 
migrationBuilder,, 
.,, 
CreateIndex,, (
(,,( )
name-- 
:-- 
$str-- 7
,--7 8
table.. 
:.. 
$str.. )
,..) *
column// 
:// 
$str// %
)//% &
;//& '
migrationBuilder11 
.11 
AddForeignKey11 *
(11* +
name22 
:22 
$str22 A
,22A B
table33 
:33 
$str33 )
,33) *
column44 
:44 
$str44 %
,44% &
principalTable55 
:55 
$str55  +
,55+ ,
principalColumn66 
:66  
$str66! %
,66% &
onDelete77 
:77 
ReferentialAction77 +
.77+ ,
Restrict77, 4
)774 5
;775 6
}88 	
	protected:: 
override:: 
void:: 
Down::  $
(::$ %
MigrationBuilder::% 5
migrationBuilder::6 F
)::F G
{;; 	
migrationBuilder<< 
.<< 
DropForeignKey<< +
(<<+ ,
name== 
:== 
$str== A
,==A B
table>> 
:>> 
$str>> )
)>>) *
;>>* +
migrationBuilder@@ 
.@@ 
	DropTable@@ &
(@@& '
nameAA 
:AA 
$strAA !
)AA! "
;AA" #
migrationBuilderCC 
.CC 
	DropIndexCC &
(CC& '
nameDD 
:DD 
$strDD 7
,DD7 8
tableEE 
:EE 
$strEE )
)EE) *
;EE* +
migrationBuilderGG 
.GG 

DropColumnGG '
(GG' (
nameHH 
:HH 
$strHH "
,HH" #
tableII 
:II 
$strII )
)II) *
;II* +
migrationBuilderKK 
.KK 

DropColumnKK '
(KK' (
nameLL 
:LL 
$strLL #
,LL# $
tableMM 
:MM 
$strMM )
)MM) *
;MM* +
migrationBuilderOO 
.OO 
	AddColumnOO &
<OO& '
stringOO' -
>OO- .
(OO. /
namePP 
:PP 
$strPP  
,PP  !
tableQQ 
:QQ 
$strQQ )
,QQ) *
typeRR 
:RR 
$strRR %
,RR% &
nullableSS 
:SS 
trueSS 
)SS 
;SS  
migrationBuilderUU 
.UU 
CreateIndexUU (
(UU( )
nameVV 
:VV 
$strVV 4
,VV4 5
tableWW 
:WW 
$strWW )
,WW) *
columnXX 
:XX 
$strXX "
)XX" #
;XX# $
migrationBuilderZZ 
.ZZ 
AddForeignKeyZZ *
(ZZ* +
name[[ 
:[[ 
$str[[ <
,[[< =
table\\ 
:\\ 
$str\\ )
,\\) *
column]] 
:]] 
$str]] "
,]]" #
principalTable^^ 
:^^ 
$str^^  )
,^^) *
principalColumn__ 
:__  
$str__! %
,__% &
onDelete`` 
:`` 
ReferentialAction`` +
.``+ ,
Restrict``, 4
)``4 5
;``5 6
}aa 	
}bb 
}cc ß
^C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201105102354_dbsetProjetEdps.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
dbsetProjetEdps (
:) *
	Migration+ 4
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 A
,

A B
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str $
,$ %
table 
: 
$str "
)" #
;# $
migrationBuilder 
. 
RenameTable (
(( )
name 
: 
$str !
,! "
newName 
: 
$str %
)% &
;& '
migrationBuilder 
. 
AddPrimaryKey *
(* +
name 
: 
$str %
,% &
table 
: 
$str #
,# $
column 
: 
$str 
) 
; 
migrationBuilder 
. 
AddForeignKey *
(* +
name 
: 
$str B
,B C
table 
: 
$str )
,) *
column 
: 
$str %
,% &
principalTable 
: 
$str  ,
,, -
principalColumn 
:  
$str! %
,% &
onDelete   
:   
ReferentialAction   +
.  + ,
Restrict  , 4
)  4 5
;  5 6
}!! 	
	protected## 
override## 
void## 
Down##  $
(##$ %
MigrationBuilder##% 5
migrationBuilder##6 F
)##F G
{$$ 	
migrationBuilder%% 
.%% 
DropForeignKey%% +
(%%+ ,
name&& 
:&& 
$str&& B
,&&B C
table'' 
:'' 
$str'' )
)'') *
;''* +
migrationBuilder)) 
.)) 
DropPrimaryKey)) +
())+ ,
name** 
:** 
$str** %
,**% &
table++ 
:++ 
$str++ #
)++# $
;++$ %
migrationBuilder-- 
.-- 
RenameTable-- (
(--( )
name.. 
:.. 
$str.. "
,.." #
newName// 
:// 
$str// $
)//$ %
;//% &
migrationBuilder11 
.11 
AddPrimaryKey11 *
(11* +
name22 
:22 
$str22 $
,22$ %
table33 
:33 
$str33 "
,33" #
column44 
:44 
$str44 
)44 
;44 
migrationBuilder66 
.66 
AddForeignKey66 *
(66* +
name77 
:77 
$str77 A
,77A B
table88 
:88 
$str88 )
,88) *
column99 
:99 
$str99 %
,99% &
principalTable:: 
::: 
$str::  +
,::+ ,
principalColumn;; 
:;;  
$str;;! %
,;;% &
onDelete<< 
:<< 
ReferentialAction<< +
.<<+ ,
Restrict<<, 4
)<<4 5
;<<5 6
}== 	
}>> 
}?? 
aC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201105110928_ProjetEdps-clients.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
ProjetEdpsclients *
:+ ,
	Migration- 6
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

  
,

  !
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateIndex (
(( )
name 
: 
$str .
,. /
table 
: 
$str #
,# $
column 
: 
$str "
)" #
;# $
migrationBuilder 
. 
AddForeignKey *
(* +
name 
: 
$str 6
,6 7
table 
: 
$str #
,# $
column 
: 
$str "
," #
principalTable 
: 
$str  )
,) *
principalColumn 
:  
$str! %
,% &
onDelete 
: 
ReferentialAction +
.+ ,
Restrict, 4
)4 5
;5 6
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 6
,6 7
table   
:   
$str   #
)  # $
;  $ %
migrationBuilder"" 
."" 
	DropIndex"" &
(""& '
name## 
:## 
$str## .
,##. /
table$$ 
:$$ 
$str$$ #
)$$# $
;$$$ %
migrationBuilder&& 
.&& 

DropColumn&& '
(&&' (
name'' 
:'' 
$str''  
,''  !
table(( 
:(( 
$str(( #
)((# $
;(($ %
})) 	
}** 
}++ îv
\C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201108094610_clientProject.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
clientProject &
:' (
	Migration) 2
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 <
,

< =
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str <
,< =
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 2
,2 3
table 
: 
$str 
) 
;  
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 2
,2 3
table 
: 
$str 
) 
;  
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 
) 
;  
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 
) 
; 
migrationBuilder 
. 
	DropIndex &
(& '
name   
:   
$str   ,
,  , -
table!! 
:!! 
$str!! 
)!! 
;!!  
migrationBuilder## 
.## 
	DropIndex## &
(##& '
name$$ 
:$$ 
$str$$ ,
,$$, -
table%% 
:%% 
$str%% 
)%% 
;%%  
migrationBuilder'' 
.'' 
	DropIndex'' &
(''& '
name(( 
:(( 
$str(( 4
,((4 5
table)) 
:)) 
$str)) )
)))) *
;))* +
migrationBuilder++ 
.++ 

DropColumn++ '
(++' (
name,, 
:,, 
$str,, #
,,,# $
table-- 
:-- 
$str-- 
)-- 
;--  
migrationBuilder// 
.// 

DropColumn// '
(//' (
name00 
:00 
$str00 #
,00# $
table11 
:11 
$str11 
)11 
;11  
migrationBuilder33 
.33 

DropColumn33 '
(33' (
name44 
:44 
$str44  
,44  !
table55 
:55 
$str55 )
)55) *
;55* +
migrationBuilder77 
.77 
AlterColumn77 (
<77( )
string77) /
>77/ 0
(770 1
name88 
:88 
$str88  
,88  !
table99 
:99 
$str99 )
,99) *
nullable:: 
::: 
true:: 
,:: 

oldClrType;; 
:;; 
typeof;; "
(;;" #
string;;# )
);;) *
,;;* +
oldType<< 
:<< 
$str<< (
)<<( )
;<<) *
migrationBuilder>> 
.>> 
CreateTable>> (
(>>( )
name?? 
:?? 
$str?? $
,??$ %
columns@@ 
:@@ 
table@@ 
=>@@ !
new@@" %
{AA 
ProjetIdBB 
=BB 
tableBB $
.BB$ %
ColumnBB% +
<BB+ ,
stringBB, 2
>BB2 3
(BB3 4
nullableBB4 <
:BB< =
falseBB> C
)BBC D
,BBD E
ClientIdCC 
=CC 
tableCC $
.CC$ %
ColumnCC% +
<CC+ ,
stringCC, 2
>CC2 3
(CC3 4
nullableCC4 <
:CC< =
falseCC> C
)CCC D
}DD 
,DD 
constraintsEE 
:EE 
tableEE "
=>EE# %
{FF 
tableGG 
.GG 

PrimaryKeyGG $
(GG$ %
$strGG% 6
,GG6 7
xGG8 9
=>GG: <
newGG= @
{GGA B
xGGC D
.GGD E
ProjetIdGGE M
,GGM N
xGGO P
.GGP Q
ClientIdGGQ Y
}GGZ [
)GG[ \
;GG\ ]
tableHH 
.HH 

ForeignKeyHH $
(HH$ %
nameII 
:II 
$strII @
,II@ A
columnJJ 
:JJ 
xJJ  !
=>JJ" $
xJJ% &
.JJ& '
ClientIdJJ' /
,JJ/ 0
principalTableKK &
:KK& '
$strKK( 1
,KK1 2
principalColumnLL '
:LL' (
$strLL) -
,LL- .
onDeleteMM  
:MM  !
ReferentialActionMM" 3
.MM3 4
CascadeMM4 ;
)MM; <
;MM< =
tableNN 
.NN 

ForeignKeyNN $
(NN$ %
nameOO 
:OO 
$strOO @
,OO@ A
columnPP 
:PP 
xPP  !
=>PP" $
xPP% &
.PP& '
ProjetIdPP' /
,PP/ 0
principalTableQQ &
:QQ& '
$strQQ( 1
,QQ1 2
principalColumnRR '
:RR' (
$strRR) -
,RR- .
onDeleteSS  
:SS  !
ReferentialActionSS" 3
.SS3 4
CascadeSS4 ;
)SS; <
;SS< =
}TT 
)TT 
;TT 
migrationBuilderVV 
.VV 
CreateIndexVV (
(VV( )
nameWW 
:WW 
$strWW 0
,WW0 1
tableXX 
:XX 
$strXX %
,XX% &
columnYY 
:YY 
$strYY "
)YY" #
;YY# $
migrationBuilder[[ 
.[[ 
AddForeignKey[[ *
([[* +
name\\ 
:\\ 
$str\\ <
,\\< =
table]] 
:]] 
$str]] )
,]]) *
column^^ 
:^^ 
$str^^ "
,^^" #
principalTable__ 
:__ 
$str__  )
,__) *
principalColumn`` 
:``  
$str``! %
,``% &
onDeleteaa 
:aa 
ReferentialActionaa +
.aa+ ,
Restrictaa, 4
)aa4 5
;aa5 6
}bb 	
	protecteddd 
overridedd 
voiddd 
Downdd  $
(dd$ %
MigrationBuilderdd% 5
migrationBuilderdd6 F
)ddF G
{ee 	
migrationBuilderff 
.ff 
DropForeignKeyff +
(ff+ ,
namegg 
:gg 
$strgg <
,gg< =
tablehh 
:hh 
$strhh )
)hh) *
;hh* +
migrationBuilderjj 
.jj 
	DropTablejj &
(jj& '
namekk 
:kk 
$strkk $
)kk$ %
;kk% &
migrationBuildermm 
.mm 
	AddColumnmm &
<mm& '
stringmm' -
>mm- .
(mm. /
namenn 
:nn 
$strnn #
,nn# $
tableoo 
:oo 
$stroo 
,oo 
typepp 
:pp 
$strpp %
,pp% &
nullableqq 
:qq 
trueqq 
)qq 
;qq  
migrationBuilderss 
.ss 
	AddColumnss &
<ss& '
stringss' -
>ss- .
(ss. /
namett 
:tt 
$strtt #
,tt# $
tableuu 
:uu 
$struu 
,uu 
typevv 
:vv 
$strvv %
,vv% &
nullableww 
:ww 
trueww 
)ww 
;ww  
migrationBuilderyy 
.yy 
AlterColumnyy (
<yy( )
stringyy) /
>yy/ 0
(yy0 1
namezz 
:zz 
$strzz  
,zz  !
table{{ 
:{{ 
$str{{ )
,{{) *
type|| 
:|| 
$str|| %
,||% &
nullable}} 
:}} 
false}} 
,}}  

oldClrType~~ 
:~~ 
typeof~~ "
(~~" #
string~~# )
)~~) *
,~~* +
oldNullable 
: 
true !
)! "
;" #
migrationBuilder
 
.
 
	AddColumn
 &
<
& '
string
' -
>
- .
(
. /
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 )
,
) *
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
false
 
,
  
defaultValue
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 
,
 
columns
 
:
 
table
 
=>
 !
new
" %
{
 
IdStatus
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
string
, 2
>
2 3
(
3 4
type
4 8
:
8 9
$str
: I
,
I J
nullable
K S
:
S T
false
U Z
)
Z [
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 0
,
0 1
x
2 3
=>
4 6
x
7 8
.
8 9
IdStatus
9 A
)
A B
;
B C
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 
,
 
columns
 
:
 
table
 
=>
 !
new
" %
{
 
IdTTM
 
=
 
table
 !
.
! "
Column
" (
<
( )
string
) /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 F
,
F G
nullable
H P
:
P Q
false
R W
)
W X
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% -
,
- .
x
/ 0
=>
1 3
x
4 5
.
5 6
IdTTM
6 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 ,
,
, -
table
   
:
   
$str
   
,
   
column
¡¡ 
:
¡¡ 
$str
¡¡ %
)
¡¡% &
;
¡¡& '
migrationBuilder
££ 
.
££ 
CreateIndex
££ (
(
££( )
name
¤¤ 
:
¤¤ 
$str
¤¤ ,
,
¤¤, -
table
¥¥ 
:
¥¥ 
$str
¥¥ 
,
¥¥ 
column
¦¦ 
:
¦¦ 
$str
¦¦ %
)
¦¦% &
;
¦¦& '
migrationBuilder
¨¨ 
.
¨¨ 
CreateIndex
¨¨ (
(
¨¨( )
name
©© 
:
©© 
$str
©© 4
,
©©4 5
table
ªª 
:
ªª 
$str
ªª )
,
ªª) *
column
«« 
:
«« 
$str
«« "
)
««" #
;
««# $
migrationBuilder
­­ 
.
­­ 
AddForeignKey
­­ *
(
­­* +
name
®® 
:
®® 
$str
®® <
,
®®< =
table
¯¯ 
:
¯¯ 
$str
¯¯ )
,
¯¯) *
column
°° 
:
°° 
$str
°° "
,
°°" #
principalTable
±± 
:
±± 
$str
±±  )
,
±±) *
principalColumn
²² 
:
²²  
$str
²²! %
,
²²% &
onDelete
³³ 
:
³³ 
ReferentialAction
³³ +
.
³³+ ,
Cascade
³³, 3
)
³³3 4
;
³³4 5
migrationBuilder
µµ 
.
µµ 
AddForeignKey
µµ *
(
µµ* +
name
¶¶ 
:
¶¶ 
$str
¶¶ <
,
¶¶< =
table
·· 
:
·· 
$str
·· )
,
··) *
column
¸¸ 
:
¸¸ 
$str
¸¸ "
,
¸¸" #
principalTable
¹¹ 
:
¹¹ 
$str
¹¹  )
,
¹¹) *
principalColumn
ºº 
:
ºº  
$str
ºº! %
,
ºº% &
onDelete
»» 
:
»» 
ReferentialAction
»» +
.
»»+ ,
Cascade
»», 3
)
»»3 4
;
»»4 5
migrationBuilder
½½ 
.
½½ 
AddForeignKey
½½ *
(
½½* +
name
¾¾ 
:
¾¾ 
$str
¾¾ 2
,
¾¾2 3
table
¿¿ 
:
¿¿ 
$str
¿¿ 
,
¿¿ 
column
ÀÀ 
:
ÀÀ 
$str
ÀÀ %
,
ÀÀ% &
principalTable
ÁÁ 
:
ÁÁ 
$str
ÁÁ  '
,
ÁÁ' (
principalColumn
ÂÂ 
:
ÂÂ  
$str
ÂÂ! )
,
ÂÂ) *
onDelete
ÃÃ 
:
ÃÃ 
ReferentialAction
ÃÃ +
.
ÃÃ+ ,
Restrict
ÃÃ, 4
)
ÃÃ4 5
;
ÃÃ5 6
migrationBuilder
ÅÅ 
.
ÅÅ 
AddForeignKey
ÅÅ *
(
ÅÅ* +
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ 2
,
ÆÆ2 3
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ 
,
ÇÇ 
column
ÈÈ 
:
ÈÈ 
$str
ÈÈ %
,
ÈÈ% &
principalTable
ÉÉ 
:
ÉÉ 
$str
ÉÉ  '
,
ÉÉ' (
principalColumn
ÊÊ 
:
ÊÊ  
$str
ÊÊ! )
,
ÊÊ) *
onDelete
ËË 
:
ËË 
ReferentialAction
ËË +
.
ËË+ ,
Restrict
ËË, 4
)
ËË4 5
;
ËË5 6
}
ÌÌ 	
}
ÍÍ 
}ÎÎ 
aC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201109070327_dbset-ClientProjet.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
dbsetClientProjet *
:+ ,
	Migration- 6
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ° 
[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201110023205_detail-tache.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
detailtache $
:% &
	Migration' 0
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 2
,

2 3
table 
: 
$str 
)  
;  !
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str )
,) *
table 
: 
$str 
,  
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateIndex (
(( )
name 
: 
$str 3
,3 4
table 
: 
$str 
,  
column 
: 
$str +
)+ ,
;, -
migrationBuilder 
. 
AddForeignKey *
(* +
name 
: 
$str D
,D E
table 
: 
$str 
,  
column 
: 
$str +
,+ ,
principalTable   
:   
$str    2
,  2 3
principalColumn!! 
:!!  
$str!!! %
,!!% &
onDelete"" 
:"" 
ReferentialAction"" +
.""+ ,
Restrict"", 4
)""4 5
;""5 6
}## 	
	protected%% 
override%% 
void%% 
Down%%  $
(%%$ %
MigrationBuilder%%% 5
migrationBuilder%%6 F
)%%F G
{&& 	
migrationBuilder'' 
.'' 
DropForeignKey'' +
(''+ ,
name(( 
:(( 
$str(( D
,((D E
table)) 
:)) 
$str)) 
)))  
;))  !
migrationBuilder++ 
.++ 
	DropIndex++ &
(++& '
name,, 
:,, 
$str,, 3
,,,3 4
table-- 
:-- 
$str-- 
)--  
;--  !
migrationBuilder// 
.// 

DropColumn// '
(//' (
name00 
:00 
$str00 )
,00) *
table11 
:11 
$str11 
)11  
;11  !
migrationBuilder33 
.33 
	AddColumn33 &
<33& '
string33' -
>33- .
(33. /
name44 
:44 
$str44  
,44  !
table55 
:55 
$str55 
,55  
type66 
:66 
$str66 %
,66% &
nullable77 
:77 
true77 
)77 
;77  
migrationBuilder:: 
.:: 
AddForeignKey:: *
(::* +
name;; 
:;; 
$str;; 2
,;;2 3
table<< 
:<< 
$str<< 
,<<  
column== 
:== 
$str== "
,==" #
principalTable>> 
:>> 
$str>>  )
,>>) *
principalColumn?? 
:??  
$str??! %
,??% &
onDelete@@ 
:@@ 
ReferentialAction@@ +
.@@+ ,
Restrict@@, 4
)@@4 5
;@@5 6
}AA 	
}BB 
}CC «
[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201110103131_update-tache.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
updatetache $
:% &
	Migration' 0
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
	AddColumn

 &
<

& '
DateTime

' /
>

/ 0
(

0 1
name 
: 
$str )
,) *
table 
: 
$str 
,  
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str 
,  
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str )
,) *
table 
: 
$str 
)  
;  !
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str 
)  
;  !
} 	
}   
}!! Ä
hC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201110130352_update-tache-chargeConsom.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class #
updatetachechargeConsom 0
:1 2
	Migration3 <
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
	AddColumn

 &
<

& '
DateTime

' /
>

/ 0
(

0 1
name 
: 
$str $
,$ %
table 
: 
$str 
,  
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str &
,& '
table 
: 
$str 
,  
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str $
,$ %
table 
: 
$str 
)  
;  !
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str &
,& '
table 
: 
$str 
)  
;  !
} 	
}   
}!! ©
cC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20201111025359_tache-nullable-dates.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
tachenullabledates +
:, -
	Migration. 7
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
DateTime

) 1
>

1 2
(

2 3
name 
: 
$str )
,) *
table 
: 
$str 
,  
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str $
,$ %
table 
: 
$str 
,  
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
)$ %
;% &
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str )
,) *
table 
: 
$str 
,  
type 
: 
$str !
,! "
nullable 
: 
false 
,  

oldClrType   
:   
typeof   "
(  " #
DateTime  # +
)  + ,
,  , -
oldNullable!! 
:!! 
true!! !
)!!! "
;!!" #
migrationBuilder## 
.## 
AlterColumn## (
<##( )
DateTime##) 1
>##1 2
(##2 3
name$$ 
:$$ 
$str$$ $
,$$$ %
table%% 
:%% 
$str%% 
,%%  
type&& 
:&& 
$str&& !
,&&! "
nullable'' 
:'' 
false'' 
,''  

oldClrType(( 
:(( 
typeof(( "
(((" #
DateTime((# +
)((+ ,
,((, -
oldNullable)) 
:)) 
true)) !
)))! "
;))" #
}** 	
}++ 
},, Ì-
wC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210106072941_change-association-teamUser-many-to-many.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class /
#changeassociationteamUsermanytomany <
:= >
	Migration? H
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 1
,

1 2
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str +
,+ ,
table 
: 
$str 
)  
;  !
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str !
,! "
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str "
," #
columns 
: 
table 
=> !
new" %
{ 
UserId 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
false< A
)A B
,B C
EquipeId 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
nullable4 <
:< =
false> C
)C D
,D E
role 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
nullable0 8
:8 9
true: >
)> ?
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 4
,4 5
x6 7
=>8 :
new; >
{? @
xA B
.B C
UserIdC I
,I J
xK L
.L M
EquipeIdM U
}V W
)W X
;X Y
table   
.   

ForeignKey   $
(  $ %
name!! 
:!! 
$str!! =
,!!= >
column"" 
:"" 
x""  !
=>""" $
x""% &
.""& '
EquipeId""' /
,""/ 0
principalTable## &
:##& '
$str##( 0
,##0 1
principalColumn$$ '
:$$' (
$str$$) -
,$$- .
onDelete%%  
:%%  !
ReferentialAction%%" 3
.%%3 4
Cascade%%4 ;
)%%; <
;%%< =
table&& 
.&& 

ForeignKey&& $
(&&$ %
name'' 
:'' 
$str'' :
,'': ;
column(( 
:(( 
x((  !
=>((" $
x((% &
.((& '
UserId((' -
,((- .
principalTable)) &
:))& '
$str))( /
,))/ 0
principalColumn** '
:**' (
$str**) 1
,**1 2
onDelete++  
:++  !
ReferentialAction++" 3
.++3 4
Cascade++4 ;
)++; <
;++< =
},, 
),, 
;,, 
migrationBuilder.. 
... 
CreateIndex.. (
(..( )
name// 
:// 
$str// .
,//. /
table00 
:00 
$str00 #
,00# $
column11 
:11 
$str11 "
)11" #
;11# $
}22 	
	protected44 
override44 
void44 
Down44  $
(44$ %
MigrationBuilder44% 5
migrationBuilder446 F
)44F G
{55 	
migrationBuilder66 
.66 
	DropTable66 &
(66& '
name77 
:77 
$str77 "
)77" #
;77# $
migrationBuilder99 
.99 
	AddColumn99 &
<99& '
string99' -
>99- .
(99. /
name:: 
::: 
$str:: !
,::! "
table;; 
:;; 
$str;; 
,;;  
type<< 
:<< 
$str<< %
,<<% &
nullable== 
:== 
true== 
)== 
;==  
migrationBuilder?? 
.?? 
CreateIndex?? (
(??( )
name@@ 
:@@ 
$str@@ +
,@@+ ,
tableAA 
:AA 
$strAA 
,AA  
columnBB 
:BB 
$strBB #
)BB# $
;BB$ %
migrationBuilderDD 
.DD 
AddForeignKeyDD *
(DD* +
nameEE 
:EE 
$strEE 1
,EE1 2
tableFF 
:FF 
$strFF 
,FF  
columnGG 
:GG 
$strGG #
,GG# $
principalTableHH 
:HH 
$strHH  '
,HH' (
principalColumnII 
:II  
$strII! )
,II) *
onDeleteJJ 
:JJ 
ReferentialActionJJ +
.JJ+ ,
RestrictJJ, 4
)JJ4 5
;JJ5 6
}KK 	
}LL 
}MM ý
`C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210106090531_equipe-user-dbset.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
equipeuserdbset (
:) *
	Migration+ 4
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ÿ
aC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210106105405_equipe-user-dbset1.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
equipeuserdbset1 )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} 
dC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210107104617_add-manager-to-equipe.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
addmanagertoequipe +
:, -
	Migration. 7
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

 !
,

! "
table 
: 
$str 
,  
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateIndex (
(( )
name 
: 
$str +
,+ ,
table 
: 
$str 
,  
column 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
AddForeignKey *
(* +
name 
: 
$str 1
,1 2
table 
: 
$str 
,  
column 
: 
$str #
,# $
principalTable 
: 
$str  '
,' (
principalColumn 
:  
$str! )
,) *
onDelete 
: 
ReferentialAction +
.+ ,
Restrict, 4
)4 5
;5 6
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 1
,1 2
table   
:   
$str   
)    
;    !
migrationBuilder"" 
."" 
	DropIndex"" &
(""& '
name## 
:## 
$str## +
,##+ ,
table$$ 
:$$ 
$str$$ 
)$$  
;$$  !
migrationBuilder&& 
.&& 

DropColumn&& '
(&&' (
name'' 
:'' 
$str'' !
,''! "
table(( 
:(( 
$str(( 
)((  
;((  !
})) 	
}** 
}++ Ë

dC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210108150910_add-expertise-to-user.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
addexpertisetouser +
:, -
	Migration. 7
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

 !
,

! "
table 
: 
$str 
, 
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str !
,! "
table 
: 
$str 
) 
;  
} 	
} 
}  
rC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210108165808_add-dateCreation-createur-allowNull.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class ,
 adddateCreationcreateurallowNull 9
:: ;
	Migration< E
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ÿ
aC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210108170230_add-dateCreation-c.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
adddateCreationc )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} _
dC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210108180551_datecreation-toString.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class  
datecreationtoString -
:. /
	Migration0 9
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
string

) /
>

/ 0
(

0 1
name 
: 
$str $
,$ %
table 
: 
$str 
, 
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str $
,$ %
table 
: 
$str 
,  
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str $
,$ %
table 
: 
$str  
,  !
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable   
:   
true   !
)  ! "
;  " #
migrationBuilder"" 
."" 
AlterColumn"" (
<""( )
string"") /
>""/ 0
(""0 1
name## 
:## 
$str## $
,##$ %
table$$ 
:$$ 
$str$$ )
,$$) *
nullable%% 
:%% 
true%% 
,%% 

oldClrType&& 
:&& 
typeof&& "
(&&" #
DateTime&&# +
)&&+ ,
,&&, -
oldType'' 
:'' 
$str'' $
,''$ %
oldNullable(( 
:(( 
true(( !
)((! "
;((" #
migrationBuilder** 
.** 
AlterColumn** (
<**( )
string**) /
>**/ 0
(**0 1
name++ 
:++ 
$str++ $
,++$ %
table,, 
:,, 
$str,, #
,,,# $
nullable-- 
:-- 
true-- 
,-- 

oldClrType.. 
:.. 
typeof.. "
(.." #
DateTime..# +
)..+ ,
,.., -
oldType// 
:// 
$str// $
,//$ %
oldNullable00 
:00 
true00 !
)00! "
;00" #
migrationBuilder22 
.22 
AlterColumn22 (
<22( )
string22) /
>22/ 0
(220 1
name33 
:33 
$str33 $
,33$ %
table44 
:44 
$str44 $
,44$ %
nullable55 
:55 
true55 
,55 

oldClrType66 
:66 
typeof66 "
(66" #
DateTime66# +
)66+ ,
,66, -
oldType77 
:77 
$str77 $
,77$ %
oldNullable88 
:88 
true88 !
)88! "
;88" #
migrationBuilder:: 
.:: 
AlterColumn:: (
<::( )
string::) /
>::/ 0
(::0 1
name;; 
:;; 
$str;; $
,;;$ %
table<< 
:<< 
$str<< 
,<<  
nullable== 
:== 
true== 
,== 

oldClrType>> 
:>> 
typeof>> "
(>>" #
DateTime>># +
)>>+ ,
,>>, -
oldType?? 
:?? 
$str?? $
,??$ %
oldNullable@@ 
:@@ 
true@@ !
)@@! "
;@@" #
migrationBuilderBB 
.BB 
AlterColumnBB (
<BB( )
stringBB) /
>BB/ 0
(BB0 1
nameCC 
:CC 
$strCC $
,CC$ %
tableDD 
:DD 
$strDD )
,DD) *
nullableEE 
:EE 
trueEE 
,EE 

oldClrTypeFF 
:FF 
typeofFF "
(FF" #
DateTimeFF# +
)FF+ ,
,FF, -
oldTypeGG 
:GG 
$strGG $
,GG$ %
oldNullableHH 
:HH 
trueHH !
)HH! "
;HH" #
migrationBuilderJJ 
.JJ 
AlterColumnJJ (
<JJ( )
stringJJ) /
>JJ/ 0
(JJ0 1
nameKK 
:KK 
$strKK $
,KK$ %
tableLL 
:LL 
$strLL *
,LL* +
nullableMM 
:MM 
trueMM 
,MM 

oldClrTypeNN 
:NN 
typeofNN "
(NN" #
DateTimeNN# +
)NN+ ,
,NN, -
oldTypeOO 
:OO 
$strOO $
,OO$ %
oldNullablePP 
:PP 
truePP !
)PP! "
;PP" #
}QQ 	
	protectedSS 
overrideSS 
voidSS 
DownSS  $
(SS$ %
MigrationBuilderSS% 5
migrationBuilderSS6 F
)SSF G
{TT 	
migrationBuilderUU 
.UU 
AlterColumnUU (
<UU( )
DateTimeUU) 1
>UU1 2
(UU2 3
nameVV 
:VV 
$strVV $
,VV$ %
tableWW 
:WW 
$strWW 
,WW 
typeXX 
:XX 
$strXX !
,XX! "
nullableYY 
:YY 
trueYY 
,YY 

oldClrTypeZZ 
:ZZ 
typeofZZ "
(ZZ" #
stringZZ# )
)ZZ) *
,ZZ* +
oldNullable[[ 
:[[ 
true[[ !
)[[! "
;[[" #
migrationBuilder]] 
.]] 
AlterColumn]] (
<]]( )
DateTime]]) 1
>]]1 2
(]]2 3
name^^ 
:^^ 
$str^^ $
,^^$ %
table__ 
:__ 
$str__ 
,__  
type`` 
:`` 
$str`` !
,``! "
nullableaa 
:aa 
trueaa 
,aa 

oldClrTypebb 
:bb 
typeofbb "
(bb" #
stringbb# )
)bb) *
,bb* +
oldNullablecc 
:cc 
truecc !
)cc! "
;cc" #
migrationBuilderee 
.ee 
AlterColumnee (
<ee( )
DateTimeee) 1
>ee1 2
(ee2 3
nameff 
:ff 
$strff $
,ff$ %
tablegg 
:gg 
$strgg  
,gg  !
typehh 
:hh 
$strhh !
,hh! "
nullableii 
:ii 
trueii 
,ii 

oldClrTypejj 
:jj 
typeofjj "
(jj" #
stringjj# )
)jj) *
,jj* +
oldNullablekk 
:kk 
truekk !
)kk! "
;kk" #
migrationBuildermm 
.mm 
AlterColumnmm (
<mm( )
DateTimemm) 1
>mm1 2
(mm2 3
namenn 
:nn 
$strnn $
,nn$ %
tableoo 
:oo 
$stroo )
,oo) *
typepp 
:pp 
$strpp !
,pp! "
nullableqq 
:qq 
trueqq 
,qq 

oldClrTyperr 
:rr 
typeofrr "
(rr" #
stringrr# )
)rr) *
,rr* +
oldNullabless 
:ss 
truess !
)ss! "
;ss" #
migrationBuilderuu 
.uu 
AlterColumnuu (
<uu( )
DateTimeuu) 1
>uu1 2
(uu2 3
namevv 
:vv 
$strvv $
,vv$ %
tableww 
:ww 
$strww #
,ww# $
typexx 
:xx 
$strxx !
,xx! "
nullableyy 
:yy 
trueyy 
,yy 

oldClrTypezz 
:zz 
typeofzz "
(zz" #
stringzz# )
)zz) *
,zz* +
oldNullable{{ 
:{{ 
true{{ !
){{! "
;{{" #
migrationBuilder}} 
.}} 
AlterColumn}} (
<}}( )
DateTime}}) 1
>}}1 2
(}}2 3
name~~ 
:~~ 
$str~~ $
,~~$ %
table 
: 
$str $
,$ %
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
string
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
DateTime
) 1
>
1 2
(
2 3
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 
,
  
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
string
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
DateTime
) 1
>
1 2
(
2 3
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 )
,
) *
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
string
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
DateTime
) 1
>
1 2
(
2 3
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 *
,
* +
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
string
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
}
 	
}
 
} ô
[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210115123536_project-type.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
projecttype $
:% &
	Migration' 0
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ò
ZC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210118130925_public-task.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 

publictask #
:$ %
	Migration& /
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} 
dC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210118140835_nullable-user-in-task.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
nullableuserintask +
:, -
	Migration. 7
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} º"
]C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210125034341_add-commercant.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
addcommercant &
:' (
	Migration) 2
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str $
,$ %
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
Nom 
= 
table 
.  
Column  &
<& '
string' -
>- .
(. /
nullable/ 7
:7 8
true9 =
)= >
,> ?
Prenom 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
true< @
)@ A
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
id> @
)@ A
;A B
} 
) 
; 
migrationBuilder'' 
.'' 
CreateIndex'' (
(''( )
name(( 
:(( 
$str(( 2
,((2 3
table)) 
:)) 
$str)) #
,))# $
column** 
:** 
$str** &
)**& '
;**' (
migrationBuilder,, 
.,, 
AddForeignKey,, *
(,,* +
name-- 
:-- 
$str-- >
,--> ?
table.. 
:.. 
$str.. #
,..# $
column// 
:// 
$str// &
,//& '
principalTable00 
:00 
$str00  -
,00- .
principalColumn11 
:11  
$str11! %
,11% &
onDelete22 
:22 
ReferentialAction22 +
.22+ ,
Restrict22, 4
)224 5
;225 6
}33 	
	protected55 
override55 
void55 
Down55  $
(55$ %
MigrationBuilder55% 5
migrationBuilder556 F
)55F G
{66 	
migrationBuilder77 
.77 
DropForeignKey77 +
(77+ ,
name88 
:88 
$str88 >
,88> ?
table99 
:99 
$str99 #
)99# $
;99$ %
migrationBuilder;; 
.;; 
	DropTable;; &
(;;& '
name<< 
:<< 
$str<< #
)<<# $
;<<$ %
migrationBuilder>> 
.>> 
	DropIndex>> &
(>>& '
name?? 
:?? 
$str?? 0
,??0 1
table@@ 
:@@ 
$str@@ #
)@@# $
;@@$ %
migrationBuilderBB 
.BB 
	DropIndexBB &
(BB& '
nameCC 
:CC 
$strCC 2
,CC2 3
tableDD 
:DD 
$strDD #
)DD# $
;DD$ %
migrationBuilderJJ 
.JJ 

DropColumnJJ '
(JJ' (
nameKK 
:KK 
$strKK $
,KK$ %
tableLL 
:LL 
$strLL #
)LL# $
;LL$ %
}MM 	
}NN 
}OO 
jC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210125042748_add-commercant-dateCreation.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class %
addcommercantdateCreation 2
:3 4
	Migration5 >
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

  
,

  !
table 
: 
$str $
,$ %
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str $
,$ %
table 
: 
$str $
,$ %
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str $
,$ %
table 
: 
$str $
)$ %
;% &
} 	
} 
} 
hC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210125043123_add-commercant-primaryKey.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class #
addcommercantprimaryKey 0
:1 2
	Migration3 <
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ·

YC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210203024010_lien-azure.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
	lienazure "
:# $
	Migration% .
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str !
,! "
table 
: 
$str 
,  
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str !
,! "
table 
: 
$str 
)  
;  !
} 	
} 
} ã
mC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210207172848_column-nature-projet-livraison.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class '
columnnatureprojetlivraison 4
:5 6
	Migration7 @
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
string

) /
>

/ 0
(

0 1
name 
: 
$str !
,! "
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str #
,# $
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str *
,* +
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable   
:   
true   !
)  ! "
;  " #
migrationBuilder"" 
."" 
AlterColumn"" (
<""( )
string"") /
>""/ 0
(""0 1
name## 
:## 
$str## $
,##$ %
table$$ 
:$$ 
$str$$ )
,$$) *
nullable%% 
:%% 
true%% 
,%% 

oldClrType&& 
:&& 
typeof&& "
(&&" #
DateTime&&# +
)&&+ ,
,&&, -
oldType'' 
:'' 
$str'' $
,''$ %
oldNullable(( 
:(( 
true(( !
)((! "
;((" #
migrationBuilder** 
.** 
AlterColumn** (
<**( )
string**) /
>**/ 0
(**0 1
name++ 
:++ 
$str++ 0
,++0 1
table,, 
:,, 
$str,, )
,,,) *
nullable-- 
:-- 
true-- 
,-- 

oldClrType.. 
:.. 
typeof.. "
(.." #
DateTime..# +
)..+ ,
,.., -
oldType// 
:// 
$str// $
,//$ %
oldNullable00 
:00 
true00 !
)00! "
;00" #
migrationBuilder22 
.22 
AlterColumn22 (
<22( )
string22) /
>22/ 0
(220 1
name33 
:33 
$str33 $
,33$ %
table44 
:44 
$str44 )
,44) *
nullable55 
:55 
true55 
,55 

oldClrType66 
:66 
typeof66 "
(66" #
DateTime66# +
)66+ ,
,66, -
oldType77 
:77 
$str77 $
,77$ %
oldNullable88 
:88 
true88 !
)88! "
;88" #
migrationBuilder:: 
.:: 
	AddColumn:: &
<::& '
string::' -
>::- .
(::. /
name;; 
:;; 
$str;; 
,;; 
table<< 
:<< 
$str<< )
,<<) *
nullable== 
:== 
true== 
)== 
;==  
migrationBuilder?? 
.?? 
AlterColumn?? (
<??( )
string??) /
>??/ 0
(??0 1
name@@ 
:@@ 
$str@@ !
,@@! "
tableAA 
:AA 
$strAA )
,AA) *
nullableBB 
:BB 
trueBB 
,BB 

oldClrTypeCC 
:CC 
typeofCC "
(CC" #
DateTimeCC# +
)CC+ ,
,CC, -
oldTypeDD 
:DD 
$strDD $
,DD$ %
oldNullableEE 
:EE 
trueEE !
)EE! "
;EE" #
migrationBuilderGG 
.GG 
AlterColumnGG (
<GG( )
stringGG) /
>GG/ 0
(GG0 1
nameHH 
:HH 
$strHH #
,HH# $
tableII 
:II 
$strII )
,II) *
nullableJJ 
:JJ 
trueJJ 
,JJ 

oldClrTypeKK 
:KK 
typeofKK "
(KK" #
DateTimeKK# +
)KK+ ,
,KK, -
oldTypeLL 
:LL 
$strLL $
,LL$ %
oldNullableMM 
:MM 
trueMM !
)MM! "
;MM" #
migrationBuilderOO 
.OO 
AlterColumnOO (
<OO( )
stringOO) /
>OO/ 0
(OO0 1
namePP 
:PP 
$strPP *
,PP* +
tableQQ 
:QQ 
$strQQ )
,QQ) *
nullableRR 
:RR 
trueRR 
,RR 

oldClrTypeSS 
:SS 
typeofSS "
(SS" #
DateTimeSS# +
)SS+ ,
,SS, -
oldTypeTT 
:TT 
$strTT $
,TT$ %
oldNullableUU 
:UU 
trueUU !
)UU! "
;UU" #
migrationBuilderWW 
.WW 
AlterColumnWW (
<WW( )
stringWW) /
>WW/ 0
(WW0 1
nameXX 
:XX 
$strXX $
,XX$ %
tableYY 
:YY 
$strYY )
,YY) *
nullableZZ 
:ZZ 
trueZZ 
,ZZ 

oldClrType[[ 
:[[ 
typeof[[ "
([[" #
DateTime[[# +
)[[+ ,
,[[, -
oldType\\ 
:\\ 
$str\\ $
,\\$ %
oldNullable]] 
:]] 
true]] !
)]]! "
;]]" #
migrationBuilder__ 
.__ 
AlterColumn__ (
<__( )
string__) /
>__/ 0
(__0 1
name`` 
:`` 
$str`` 0
,``0 1
tableaa 
:aa 
$straa )
,aa) *
nullablebb 
:bb 
truebb 
,bb 

oldClrTypecc 
:cc 
typeofcc "
(cc" #
DateTimecc# +
)cc+ ,
,cc, -
oldTypedd 
:dd 
$strdd $
,dd$ %
oldNullableee 
:ee 
trueee !
)ee! "
;ee" #
migrationBuildergg 
.gg 
AlterColumngg (
<gg( )
stringgg) /
>gg/ 0
(gg0 1
namehh 
:hh 
$strhh $
,hh$ %
tableii 
:ii 
$strii )
,ii) *
nullablejj 
:jj 
truejj 
,jj 

oldClrTypekk 
:kk 
typeofkk "
(kk" #
DateTimekk# +
)kk+ ,
,kk, -
oldTypell 
:ll 
$strll $
,ll$ %
oldNullablemm 
:mm 
truemm !
)mm! "
;mm" #
}nn 	
	protectedpp 
overridepp 
voidpp 
Downpp  $
(pp$ %
MigrationBuilderpp% 5
migrationBuilderpp6 F
)ppF G
{qq 	
migrationBuilderrr 
.rr 

DropColumnrr '
(rr' (
namess 
:ss 
$strss 
,ss 
tablett 
:tt 
$strtt )
)tt) *
;tt* +
migrationBuildervv 
.vv 
AlterColumnvv (
<vv( )
DateTimevv) 1
>vv1 2
(vv2 3
nameww 
:ww 
$strww !
,ww! "
tablexx 
:xx 
$strxx )
,xx) *
typeyy 
:yy 
$stryy !
,yy! "
nullablezz 
:zz 
truezz 
,zz 

oldClrType{{ 
:{{ 
typeof{{ "
({{" #
string{{# )
){{) *
,{{* +
oldNullable|| 
:|| 
true|| !
)||! "
;||" #
migrationBuilder~~ 
.~~ 
AlterColumn~~ (
<~~( )
DateTime~~) 1
>~~1 2
(~~2 3
name 
: 
$str #
,# $
table
 
:
 
$str
 )
,
) *
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
string
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
DateTime
) 1
>
1 2
(
2 3
name
 
:
 
$str
 *
,
* +
table
 
:
 
$str
 )
,
) *
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
string
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
DateTime
) 1
>
1 2
(
2 3
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 )
,
) *
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
string
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
DateTime
) 1
>
1 2
(
2 3
name
 
:
 
$str
 0
,
0 1
table
 
:
 
$str
 )
,
) *
type
 
:
 
$str
 !
,
! "
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
string
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
DateTime
) 1
>
1 2
(
2 3
name
 
:
 
$str
 $
,
$ %
table
   
:
   
$str
   )
,
  ) *
type
¡¡ 
:
¡¡ 
$str
¡¡ !
,
¡¡! "
nullable
¢¢ 
:
¢¢ 
true
¢¢ 
,
¢¢ 

oldClrType
££ 
:
££ 
typeof
££ "
(
££" #
string
££# )
)
££) *
,
££* +
oldNullable
¤¤ 
:
¤¤ 
true
¤¤ !
)
¤¤! "
;
¤¤" #
migrationBuilder
¦¦ 
.
¦¦ 
AlterColumn
¦¦ (
<
¦¦( )
DateTime
¦¦) 1
>
¦¦1 2
(
¦¦2 3
name
§§ 
:
§§ 
$str
§§ !
,
§§! "
table
¨¨ 
:
¨¨ 
$str
¨¨ )
,
¨¨) *
type
©© 
:
©© 
$str
©© !
,
©©! "
nullable
ªª 
:
ªª 
true
ªª 
,
ªª 

oldClrType
«« 
:
«« 
typeof
«« "
(
««" #
string
««# )
)
««) *
,
««* +
oldNullable
¬¬ 
:
¬¬ 
true
¬¬ !
)
¬¬! "
;
¬¬" #
migrationBuilder
®® 
.
®® 
AlterColumn
®® (
<
®®( )
DateTime
®®) 1
>
®®1 2
(
®®2 3
name
¯¯ 
:
¯¯ 
$str
¯¯ #
,
¯¯# $
table
°° 
:
°° 
$str
°° )
,
°°) *
type
±± 
:
±± 
$str
±± !
,
±±! "
nullable
²² 
:
²² 
true
²² 
,
²² 

oldClrType
³³ 
:
³³ 
typeof
³³ "
(
³³" #
string
³³# )
)
³³) *
,
³³* +
oldNullable
´´ 
:
´´ 
true
´´ !
)
´´! "
;
´´" #
migrationBuilder
¶¶ 
.
¶¶ 
AlterColumn
¶¶ (
<
¶¶( )
DateTime
¶¶) 1
>
¶¶1 2
(
¶¶2 3
name
·· 
:
·· 
$str
·· *
,
··* +
table
¸¸ 
:
¸¸ 
$str
¸¸ )
,
¸¸) *
type
¹¹ 
:
¹¹ 
$str
¹¹ !
,
¹¹! "
nullable
ºº 
:
ºº 
true
ºº 
,
ºº 

oldClrType
»» 
:
»» 
typeof
»» "
(
»»" #
string
»»# )
)
»») *
,
»»* +
oldNullable
¼¼ 
:
¼¼ 
true
¼¼ !
)
¼¼! "
;
¼¼" #
migrationBuilder
¾¾ 
.
¾¾ 
AlterColumn
¾¾ (
<
¾¾( )
DateTime
¾¾) 1
>
¾¾1 2
(
¾¾2 3
name
¿¿ 
:
¿¿ 
$str
¿¿ $
,
¿¿$ %
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ )
,
ÀÀ) *
type
ÁÁ 
:
ÁÁ 
$str
ÁÁ !
,
ÁÁ! "
nullable
ÂÂ 
:
ÂÂ 
true
ÂÂ 
,
ÂÂ 

oldClrType
ÃÃ 
:
ÃÃ 
typeof
ÃÃ "
(
ÃÃ" #
string
ÃÃ# )
)
ÃÃ) *
,
ÃÃ* +
oldNullable
ÄÄ 
:
ÄÄ 
true
ÄÄ !
)
ÄÄ! "
;
ÄÄ" #
migrationBuilder
ÆÆ 
.
ÆÆ 
AlterColumn
ÆÆ (
<
ÆÆ( )
DateTime
ÆÆ) 1
>
ÆÆ1 2
(
ÆÆ2 3
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ 0
,
ÇÇ0 1
table
ÈÈ 
:
ÈÈ 
$str
ÈÈ )
,
ÈÈ) *
type
ÉÉ 
:
ÉÉ 
$str
ÉÉ !
,
ÉÉ! "
nullable
ÊÊ 
:
ÊÊ 
true
ÊÊ 
,
ÊÊ 

oldClrType
ËË 
:
ËË 
typeof
ËË "
(
ËË" #
string
ËË# )
)
ËË) *
,
ËË* +
oldNullable
ÌÌ 
:
ÌÌ 
true
ÌÌ !
)
ÌÌ! "
;
ÌÌ" #
migrationBuilder
ÎÎ 
.
ÎÎ 
AlterColumn
ÎÎ (
<
ÎÎ( )
DateTime
ÎÎ) 1
>
ÎÎ1 2
(
ÎÎ2 3
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ $
,
ÏÏ$ %
table
ÐÐ 
:
ÐÐ 
$str
ÐÐ )
,
ÐÐ) *
type
ÑÑ 
:
ÑÑ 
$str
ÑÑ !
,
ÑÑ! "
nullable
ÒÒ 
:
ÒÒ 
true
ÒÒ 
,
ÒÒ 

oldClrType
ÓÓ 
:
ÓÓ 
typeof
ÓÓ "
(
ÓÓ" #
string
ÓÓ# )
)
ÓÓ) *
,
ÓÓ* +
oldNullable
ÔÔ 
:
ÔÔ 
true
ÔÔ !
)
ÔÔ! "
;
ÔÔ" #
}
ÕÕ 	
}
ÖÖ 
}×× ¢T
\C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210208041821_dates-convert.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
datesconvert %
:& '
	Migration( 1
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
DateTime

) 1
>

1 2
(

2 3
name 
: 
$str !
,! "
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str #
,# $
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str *
,* +
table 
: 
$str )
,) *
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable   
:   
true   !
)  ! "
;  " #
migrationBuilder"" 
."" 
AlterColumn"" (
<""( )
DateTime"") 1
>""1 2
(""2 3
name## 
:## 
$str## $
,##$ %
table$$ 
:$$ 
$str$$ )
,$$) *
nullable%% 
:%% 
true%% 
,%% 

oldClrType&& 
:&& 
typeof&& "
(&&" #
string&&# )
)&&) *
,&&* +
oldType'' 
:'' 
$str'' (
,''( )
oldNullable(( 
:(( 
true(( !
)((! "
;((" #
migrationBuilder** 
.** 
AlterColumn** (
<**( )
DateTime**) 1
>**1 2
(**2 3
name++ 
:++ 
$str++ !
,++! "
table,, 
:,, 
$str,, )
,,,) *
nullable-- 
:-- 
true-- 
,-- 

oldClrType.. 
:.. 
typeof.. "
(.." #
string..# )
)..) *
,..* +
oldType// 
:// 
$str// (
,//( )
oldNullable00 
:00 
true00 !
)00! "
;00" #
migrationBuilder22 
.22 
AlterColumn22 (
<22( )
DateTime22) 1
>221 2
(222 3
name33 
:33 
$str33 #
,33# $
table44 
:44 
$str44 )
,44) *
nullable55 
:55 
true55 
,55 

oldClrType66 
:66 
typeof66 "
(66" #
string66# )
)66) *
,66* +
oldType77 
:77 
$str77 (
,77( )
oldNullable88 
:88 
true88 !
)88! "
;88" #
migrationBuilder:: 
.:: 
AlterColumn:: (
<::( )
DateTime::) 1
>::1 2
(::2 3
name;; 
:;; 
$str;; *
,;;* +
table<< 
:<< 
$str<< )
,<<) *
nullable== 
:== 
true== 
,== 

oldClrType>> 
:>> 
typeof>> "
(>>" #
string>># )
)>>) *
,>>* +
oldType?? 
:?? 
$str?? (
,??( )
oldNullable@@ 
:@@ 
true@@ !
)@@! "
;@@" #
migrationBuilderBB 
.BB 
AlterColumnBB (
<BB( )
DateTimeBB) 1
>BB1 2
(BB2 3
nameCC 
:CC 
$strCC $
,CC$ %
tableDD 
:DD 
$strDD )
,DD) *
nullableEE 
:EE 
trueEE 
,EE 

oldClrTypeFF 
:FF 
typeofFF "
(FF" #
stringFF# )
)FF) *
,FF* +
oldTypeGG 
:GG 
$strGG (
,GG( )
oldNullableHH 
:HH 
trueHH !
)HH! "
;HH" #
}II 	
	protectedKK 
overrideKK 
voidKK 
DownKK  $
(KK$ %
MigrationBuilderKK% 5
migrationBuilderKK6 F
)KKF G
{LL 	
migrationBuilderMM 
.MM 
AlterColumnMM (
<MM( )
stringMM) /
>MM/ 0
(MM0 1
nameNN 
:NN 
$strNN !
,NN! "
tableOO 
:OO 
$strOO )
,OO) *
typePP 
:PP 
$strPP %
,PP% &
nullableQQ 
:QQ 
trueQQ 
,QQ 

oldClrTypeRR 
:RR 
typeofRR "
(RR" #
DateTimeRR# +
)RR+ ,
,RR, -
oldNullableSS 
:SS 
trueSS !
)SS! "
;SS" #
migrationBuilderUU 
.UU 
AlterColumnUU (
<UU( )
stringUU) /
>UU/ 0
(UU0 1
nameVV 
:VV 
$strVV #
,VV# $
tableWW 
:WW 
$strWW )
,WW) *
typeXX 
:XX 
$strXX %
,XX% &
nullableYY 
:YY 
trueYY 
,YY 

oldClrTypeZZ 
:ZZ 
typeofZZ "
(ZZ" #
DateTimeZZ# +
)ZZ+ ,
,ZZ, -
oldNullable[[ 
:[[ 
true[[ !
)[[! "
;[[" #
migrationBuilder]] 
.]] 
AlterColumn]] (
<]]( )
string]]) /
>]]/ 0
(]]0 1
name^^ 
:^^ 
$str^^ *
,^^* +
table__ 
:__ 
$str__ )
,__) *
type`` 
:`` 
$str`` %
,``% &
nullableaa 
:aa 
trueaa 
,aa 

oldClrTypebb 
:bb 
typeofbb "
(bb" #
DateTimebb# +
)bb+ ,
,bb, -
oldNullablecc 
:cc 
truecc !
)cc! "
;cc" #
migrationBuilderee 
.ee 
AlterColumnee (
<ee( )
stringee) /
>ee/ 0
(ee0 1
nameff 
:ff 
$strff $
,ff$ %
tablegg 
:gg 
$strgg )
,gg) *
typehh 
:hh 
$strhh %
,hh% &
nullableii 
:ii 
trueii 
,ii 

oldClrTypejj 
:jj 
typeofjj "
(jj" #
DateTimejj# +
)jj+ ,
,jj, -
oldNullablekk 
:kk 
truekk !
)kk! "
;kk" #
migrationBuildermm 
.mm 
AlterColumnmm (
<mm( )
stringmm) /
>mm/ 0
(mm0 1
namenn 
:nn 
$strnn !
,nn! "
tableoo 
:oo 
$stroo )
,oo) *
typepp 
:pp 
$strpp %
,pp% &
nullableqq 
:qq 
trueqq 
,qq 

oldClrTyperr 
:rr 
typeofrr "
(rr" #
DateTimerr# +
)rr+ ,
,rr, -
oldNullabless 
:ss 
truess !
)ss! "
;ss" #
migrationBuilderuu 
.uu 
AlterColumnuu (
<uu( )
stringuu) /
>uu/ 0
(uu0 1
namevv 
:vv 
$strvv #
,vv# $
tableww 
:ww 
$strww )
,ww) *
typexx 
:xx 
$strxx %
,xx% &
nullableyy 
:yy 
trueyy 
,yy 

oldClrTypezz 
:zz 
typeofzz "
(zz" #
DateTimezz# +
)zz+ ,
,zz, -
oldNullable{{ 
:{{ 
true{{ !
){{! "
;{{" #
migrationBuilder}} 
.}} 
AlterColumn}} (
<}}( )
string}}) /
>}}/ 0
(}}0 1
name~~ 
:~~ 
$str~~ *
,~~* +
table 
: 
$str )
,) *
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
DateTime
# +
)
+ ,
,
, -
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
string
) /
>
/ 0
(
0 1
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 )
,
) *
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
DateTime
# +
)
+ ,
,
, -
oldNullable
 
:
 
true
 !
)
! "
;
" #
}
 	
}
 
} +
YC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210209060427_codeProjet.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 

codeProjet #
:$ %
	Migration& /
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

 %
,

% &
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str "
," #
columns 
: 
table 
=> !
new" %
{ 
Numero 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
false< A
)A B
,B C
Nature 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
true< @
)@ A
,A B
client 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
true< @
)@ A
,A B
Intitule 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
nullable4 <
:< =
true> B
)B C
,C D
ClientId 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
nullable4 <
:< =
true> B
)B C
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 4
,4 5
x6 7
=>8 :
x; <
.< =
Numero= C
)C D
;D E
table 
. 

ForeignKey $
($ %
name 
: 
$str >
,> ?
column 
: 
x  !
=>" $
x% &
.& '
ClientId' /
,/ 0
principalTable &
:& '
$str( 1
,1 2
principalColumn '
:' (
$str) -
,- .
onDelete    
:    !
ReferentialAction  " 3
.  3 4
Restrict  4 <
)  < =
;  = >
}!! 
)!! 
;!! 
migrationBuilder## 
.## 
CreateIndex## (
(##( )
name$$ 
:$$ 
$str$$ 3
,$$3 4
table%% 
:%% 
$str%% #
,%%# $
column&& 
:&& 
$str&& '
)&&' (
;&&( )
migrationBuilder(( 
.(( 
CreateIndex(( (
(((( )
name)) 
:)) 
$str)) .
,)). /
table** 
:** 
$str** #
,**# $
column++ 
:++ 
$str++ "
)++" #
;++# $
migrationBuilder-- 
.-- 
AddForeignKey-- *
(--* +
name.. 
:.. 
$str.. >
,..> ?
table// 
:// 
$str// #
,//# $
column00 
:00 
$str00 '
,00' (
principalTable11 
:11 
$str11  ,
,11, -
principalColumn22 
:22  
$str22! )
,22) *
onDelete33 
:33 
ReferentialAction33 +
.33+ ,
Restrict33, 4
)334 5
;335 6
}44 	
	protected66 
override66 
void66 
Down66  $
(66$ %
MigrationBuilder66% 5
migrationBuilder666 F
)66F G
{77 	
migrationBuilder88 
.88 
DropForeignKey88 +
(88+ ,
name99 
:99 
$str99 >
,99> ?
table:: 
::: 
$str:: #
)::# $
;::$ %
migrationBuilder<< 
.<< 
	DropTable<< &
(<<& '
name== 
:== 
$str== "
)==" #
;==# $
migrationBuilder?? 
.?? 
	DropIndex?? &
(??& '
name@@ 
:@@ 
$str@@ 3
,@@3 4
tableAA 
:AA 
$strAA #
)AA# $
;AA$ %
migrationBuilderCC 
.CC 

DropColumnCC '
(CC' (
nameDD 
:DD 
$strDD %
,DD% &
tableEE 
:EE 
$strEE #
)EE# $
;EE$ %
}FF 	
}GG 
}HH 
fC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210209065754_codeProjet-removeclient.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class "
codeProjetremoveclient /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 

DropColumn		 '
(		' (
name

 
:

 
$str

 
,

 
table 
: 
$str #
)# $
;$ %
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str #
,# $
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
} 	
} 
} ¨)
`C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210210142240_add-id-codeProjet.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
addidcodeProjet (
:) *
	Migration+ 4
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 >
,

> ?
table 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str %
,% &
table 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str #
,# $
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
)( )
;) *
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str #
,# $
nullable 
: 
false 
,  
defaultValue 
: 
$str  
)  !
;! "
migrationBuilder 
. 
AddPrimaryKey *
(* +
name 
: 
$str %
,% &
table   
:   
$str   #
,  # $
column!! 
:!! 
$str!! 
)!! 
;!! 
migrationBuilder## 
.## 
AddForeignKey## *
(##* +
name$$ 
:$$ 
$str$$ >
,$$> ?
table%% 
:%% 
$str%% #
,%%# $
column&& 
:&& 
$str&& '
,&&' (
principalTable'' 
:'' 
$str''  ,
,'', -
principalColumn(( 
:((  
$str((! %
,((% &
onDelete)) 
:)) 
ReferentialAction)) +
.))+ ,
Restrict)), 4
)))4 5
;))5 6
}** 	
	protected,, 
override,, 
void,, 
Down,,  $
(,,$ %
MigrationBuilder,,% 5
migrationBuilder,,6 F
),,F G
{-- 	
migrationBuilder.. 
... 
DropForeignKey.. +
(..+ ,
name// 
:// 
$str// >
,//> ?
table00 
:00 
$str00 #
)00# $
;00$ %
migrationBuilder22 
.22 
DropPrimaryKey22 +
(22+ ,
name33 
:33 
$str33 %
,33% &
table44 
:44 
$str44 #
)44# $
;44$ %
migrationBuilder66 
.66 

DropColumn66 '
(66' (
name77 
:77 
$str77 
,77 
table88 
:88 
$str88 #
)88# $
;88$ %
migrationBuilder:: 
.:: 
AlterColumn:: (
<::( )
string::) /
>::/ 0
(::0 1
name;; 
:;; 
$str;; 
,;; 
table<< 
:<< 
$str<< #
,<<# $
type== 
:== 
$str== %
,==% &
nullable>> 
:>> 
false>> 
,>>  

oldClrType?? 
:?? 
typeof?? "
(??" #
string??# )
)??) *
,??* +
oldNullable@@ 
:@@ 
true@@ !
)@@! "
;@@" #
migrationBuilderBB 
.BB 
AddPrimaryKeyBB *
(BB* +
nameCC 
:CC 
$strCC %
,CC% &
tableDD 
:DD 
$strDD #
,DD# $
columnEE 
:EE 
$strEE  
)EE  !
;EE! "
migrationBuilderGG 
.GG 
AddForeignKeyGG *
(GG* +
nameHH 
:HH 
$strHH >
,HH> ?
tableII 
:II 
$strII #
,II# $
columnJJ 
:JJ 
$strJJ '
,JJ' (
principalTableKK 
:KK 
$strKK  ,
,KK, -
principalColumnLL 
:LL  
$strLL! )
,LL) *
onDeleteMM 
:MM 
ReferentialActionMM +
.MM+ ,
RestrictMM, 4
)MM4 5
;MM5 6
}NN 	
}OO 
}PP 
_C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210210145404_add-datecreation.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
adddatecreation (
:) *
	Migration+ 4
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
	AddColumn

 &
<

& '
string

' -
>

- .
(

. /
name 
: 
$str  
,  !
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str $
,$ %
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str #
)# $
;$ %
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str $
,$ %
table 
: 
$str #
)# $
;$ %
} 	
} 
}   
jC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210217095535_deleteprojetLivraisonClient.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class '
deleteprojetLivraisonClient 4
:5 6
	Migration7 @
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} Û*
iC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210218124314_column-datePllaned-notnull.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class $
columndatePllanednotnull 1
:2 3
	Migration4 =
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
DateTime

) 1
>

1 2
(

2 3
name 
: 
$str #
,# $
table 
: 
$str )
,) *
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str *
,* +
table 
: 
$str )
,) *
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str #
,# $
table 
: 
$str )
,) *
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
,$ %
oldNullable   
:   
true   !
)  ! "
;  " #
migrationBuilder"" 
."" 
AlterColumn"" (
<""( )
DateTime"") 1
>""1 2
(""2 3
name## 
:## 
$str## *
,##* +
table$$ 
:$$ 
$str$$ )
,$$) *
nullable%% 
:%% 
false%% 
,%%  

oldClrType&& 
:&& 
typeof&& "
(&&" #
DateTime&&# +
)&&+ ,
,&&, -
oldType'' 
:'' 
$str'' $
,''$ %
oldNullable(( 
:(( 
true(( !
)((! "
;((" #
})) 	
	protected++ 
override++ 
void++ 
Down++  $
(++$ %
MigrationBuilder++% 5
migrationBuilder++6 F
)++F G
{,, 	
migrationBuilder-- 
.-- 
AlterColumn-- (
<--( )
DateTime--) 1
>--1 2
(--2 3
name.. 
:.. 
$str.. #
,..# $
table// 
:// 
$str// )
,//) *
type00 
:00 
$str00 !
,00! "
nullable11 
:11 
true11 
,11 

oldClrType22 
:22 
typeof22 "
(22" #
DateTime22# +
)22+ ,
)22, -
;22- .
migrationBuilder44 
.44 
AlterColumn44 (
<44( )
DateTime44) 1
>441 2
(442 3
name55 
:55 
$str55 *
,55* +
table66 
:66 
$str66 )
,66) *
type77 
:77 
$str77 !
,77! "
nullable88 
:88 
true88 
,88 

oldClrType99 
:99 
typeof99 "
(99" #
DateTime99# +
)99+ ,
)99, -
;99- .
migrationBuilder;; 
.;; 
AlterColumn;; (
<;;( )
DateTime;;) 1
>;;1 2
(;;2 3
name<< 
:<< 
$str<< #
,<<# $
table== 
:== 
$str== )
,==) *
type>> 
:>> 
$str>> !
,>>! "
nullable?? 
:?? 
true?? 
,?? 

oldClrType@@ 
:@@ 
typeof@@ "
(@@" #
DateTime@@# +
)@@+ ,
)@@, -
;@@- .
migrationBuilderBB 
.BB 
AlterColumnBB (
<BB( )
DateTimeBB) 1
>BB1 2
(BB2 3
nameCC 
:CC 
$strCC *
,CC* +
tableDD 
:DD 
$strDD )
,DD) *
typeEE 
:EE 
$strEE !
,EE! "
nullableFF 
:FF 
trueFF 
,FF 

oldClrTypeGG 
:GG 
typeofGG "
(GG" #
DateTimeGG# +
)GG+ ,
)GG, -
;GG- .
}HH 	
}II 
}JJ ºU
_C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210223135610_projet-comptable.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
projetcomptable (
:) *
	Migration+ 4
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
	AddColumn

 &
<

& '
string

' -
>

- .
(

. /
name 
: 
$str .
,. /
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str &
,& '
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str '
,' (
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str /
,/ 0
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table   
:   
$str   #
,  # $
nullable!! 
:!! 
true!! 
)!! 
;!!  
migrationBuilder## 
.## 
	AddColumn## &
<##& '
string##' -
>##- .
(##. /
name$$ 
:$$ 
$str$$ (
,$$( )
table%% 
:%% 
$str%% #
,%%# $
nullable&& 
:&& 
true&& 
)&& 
;&&  
migrationBuilder(( 
.(( 
	AddColumn(( &
<((& '
string((' -
>((- .
(((. /
name)) 
:)) 
$str)) $
,))$ %
table** 
:** 
$str** #
,**# $
nullable++ 
:++ 
true++ 
)++ 
;++  
migrationBuilder-- 
.-- 
	AddColumn-- &
<--& '
string--' -
>--- .
(--. /
name.. 
:.. 
$str.. ,
,.., -
table// 
:// 
$str// #
,//# $
nullable00 
:00 
true00 
)00 
;00  
migrationBuilder22 
.22 
	AddColumn22 &
<22& '
string22' -
>22- .
(22. /
name33 
:33 
$str33 $
,33$ %
table44 
:44 
$str44 #
,44# $
nullable55 
:55 
true55 
)55 
;55  
migrationBuilder77 
.77 
	AddColumn77 &
<77& '
string77' -
>77- .
(77. /
name88 
:88 
$str88 ,
,88, -
table99 
:99 
$str99 #
,99# $
nullable:: 
::: 
true:: 
):: 
;::  
migrationBuilder<< 
.<< 
	AddColumn<< &
<<<& '
string<<' -
><<- .
(<<. /
name== 
:== 
$str== (
,==( )
table>> 
:>> 
$str>> #
,>># $
nullable?? 
:?? 
true?? 
)?? 
;??  
migrationBuilderAA 
.AA 
	AddColumnAA &
<AA& '
stringAA' -
>AA- .
(AA. /
nameBB 
:BB 
$strBB 0
,BB0 1
tableCC 
:CC 
$strCC #
,CC# $
nullableDD 
:DD 
trueDD 
)DD 
;DD  
migrationBuilderFF 
.FF 
	AddColumnFF &
<FF& '
DateTimeFF' /
>FF/ 0
(FF0 1
nameGG 
:GG 
$strGG !
,GG! "
tableHH 
:HH 
$strHH #
,HH# $
nullableII 
:II 
falseII 
,II  
defaultValueJJ 
:JJ 
newJJ !
DateTimeJJ" *
(JJ* +
$numJJ+ ,
,JJ, -
$numJJ. /
,JJ/ 0
$numJJ1 2
,JJ2 3
$numJJ4 5
,JJ5 6
$numJJ7 8
,JJ8 9
$numJJ: ;
,JJ; <
$numJJ= >
,JJ> ?
DateTimeKindJJ@ L
.JJL M
UnspecifiedJJM X
)JJX Y
)JJY Z
;JJZ [
migrationBuilderLL 
.LL 
	AddColumnLL &
<LL& '
DateTimeLL' /
>LL/ 0
(LL0 1
nameMM 
:MM 
$strMM 
,MM  
tableNN 
:NN 
$strNN #
,NN# $
nullableOO 
:OO 
falseOO 
,OO  
defaultValuePP 
:PP 
newPP !
DateTimePP" *
(PP* +
$numPP+ ,
,PP, -
$numPP. /
,PP/ 0
$numPP1 2
,PP2 3
$numPP4 5
,PP5 6
$numPP7 8
,PP8 9
$numPP: ;
,PP; <
$numPP= >
,PP> ?
DateTimeKindPP@ L
.PPL M
UnspecifiedPPM X
)PPX Y
)PPY Z
;PPZ [
migrationBuilderRR 
.RR 
	AddColumnRR &
<RR& '
DateTimeRR' /
>RR/ 0
(RR0 1
nameSS 
:SS 
$strSS &
,SS& '
tableTT 
:TT 
$strTT #
,TT# $
nullableUU 
:UU 
falseUU 
,UU  
defaultValueVV 
:VV 
newVV !
DateTimeVV" *
(VV* +
$numVV+ ,
,VV, -
$numVV. /
,VV/ 0
$numVV1 2
,VV2 3
$numVV4 5
,VV5 6
$numVV7 8
,VV8 9
$numVV: ;
,VV; <
$numVV= >
,VV> ?
DateTimeKindVV@ L
.VVL M
UnspecifiedVVM X
)VVX Y
)VVY Z
;VVZ [
}WW 	
	protectedYY 
overrideYY 
voidYY 
DownYY  $
(YY$ %
MigrationBuilderYY% 5
migrationBuilderYY6 F
)YYF G
{ZZ 	
migrationBuilder[[ 
.[[ 

DropColumn[[ '
([[' (
name\\ 
:\\ 
$str\\ .
,\\. /
table]] 
:]] 
$str]] #
)]]# $
;]]$ %
migrationBuilder__ 
.__ 

DropColumn__ '
(__' (
name`` 
:`` 
$str`` &
,``& '
tableaa 
:aa 
$straa #
)aa# $
;aa$ %
migrationBuildercc 
.cc 

DropColumncc '
(cc' (
namedd 
:dd 
$strdd '
,dd' (
tableee 
:ee 
$stree #
)ee# $
;ee$ %
migrationBuildergg 
.gg 

DropColumngg '
(gg' (
namehh 
:hh 
$strhh /
,hh/ 0
tableii 
:ii 
$strii #
)ii# $
;ii$ %
migrationBuilderkk 
.kk 

DropColumnkk '
(kk' (
namell 
:ll 
$strll  
,ll  !
tablemm 
:mm 
$strmm #
)mm# $
;mm$ %
migrationBuilderoo 
.oo 

DropColumnoo '
(oo' (
namepp 
:pp 
$strpp (
,pp( )
tableqq 
:qq 
$strqq #
)qq# $
;qq$ %
migrationBuilderss 
.ss 

DropColumnss '
(ss' (
namett 
:tt 
$strtt $
,tt$ %
tableuu 
:uu 
$struu #
)uu# $
;uu$ %
migrationBuilderww 
.ww 

DropColumnww '
(ww' (
namexx 
:xx 
$strxx ,
,xx, -
tableyy 
:yy 
$stryy #
)yy# $
;yy$ %
migrationBuilder{{ 
.{{ 

DropColumn{{ '
({{' (
name|| 
:|| 
$str|| $
,||$ %
table}} 
:}} 
$str}} #
)}}# $
;}}$ %
migrationBuilder 
. 

DropColumn '
(' (
name
 
:
 
$str
 ,
,
, -
table
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 (
,
( )
table
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 0
,
0 1
table
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 !
,
! "
table
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 
,
  
table
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 

DropColumn
 '
(
' (
name
 
:
 
$str
 &
,
& '
table
 
:
 
$str
 #
)
# $
;
$ %
}
 	
}
 
} Ð

fC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210223141751_projet-comptable-status.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class !
projetcomptablestatus .
:/ 0
	Migration1 :
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
string		' -
>		- .
(		. /
name

 
:

 
$str

 
,

 
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str #
)# $
;$ %
} 	
} 
} Ó
bC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210224100336_confirmÃ©Toconfirme.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
confirmÃ©Toconfirme +
:, -
	Migration. 7
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 

DropColumn		 '
(		' (
name

 
:

 
$str

 &
,

& '
table 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str &
,& '
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str &
,& '
table 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str &
,& '
table 
: 
$str #
,# $
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
} 	
} 
}   ±w
]C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210224101711_stringtodouble.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
stringtodouble '
:( )
	Migration* 3
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
AlterColumn		 (
<		( )
double		) /
>		/ 0
(		0 1
name

 
:

 
$str

 0
,

0 1
table 
: 
$str #
,# $
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
double) /
>/ 0
(0 1
name 
: 
$str (
,( )
table 
: 
$str #
,# $
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
double) /
>/ 0
(0 1
name 
: 
$str ,
,, -
table 
: 
$str #
,# $
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder!! 
.!! 
AlterColumn!! (
<!!( )
double!!) /
>!!/ 0
(!!0 1
name"" 
:"" 
$str"" $
,""$ %
table## 
:## 
$str## #
,### $
nullable$$ 
:$$ 
false$$ 
,$$  

oldClrType%% 
:%% 
typeof%% "
(%%" #
string%%# )
)%%) *
,%%* +
oldType&& 
:&& 
$str&& (
,&&( )
oldNullable'' 
:'' 
true'' !
)''! "
;''" #
migrationBuilder)) 
.)) 
AlterColumn)) (
<))( )
double))) /
>))/ 0
())0 1
name** 
:** 
$str** ,
,**, -
table++ 
:++ 
$str++ #
,++# $
nullable,, 
:,, 
false,, 
,,,  

oldClrType-- 
:-- 
typeof-- "
(--" #
string--# )
)--) *
,--* +
oldType.. 
:.. 
$str.. (
,..( )
oldNullable// 
:// 
true// !
)//! "
;//" #
migrationBuilder11 
.11 
AlterColumn11 (
<11( )
double11) /
>11/ 0
(110 1
name22 
:22 
$str22 $
,22$ %
table33 
:33 
$str33 #
,33# $
nullable44 
:44 
false44 
,44  

oldClrType55 
:55 
typeof55 "
(55" #
string55# )
)55) *
,55* +
oldType66 
:66 
$str66 (
,66( )
oldNullable77 
:77 
true77 !
)77! "
;77" #
migrationBuilder99 
.99 
AlterColumn99 (
<99( )
double99) /
>99/ 0
(990 1
name:: 
::: 
$str:: (
,::( )
table;; 
:;; 
$str;; #
,;;# $
nullable<< 
:<< 
false<< 
,<<  

oldClrType== 
:== 
typeof== "
(==" #
string==# )
)==) *
,==* +
oldType>> 
:>> 
$str>> (
,>>( )
oldNullable?? 
:?? 
true?? !
)??! "
;??" #
migrationBuilderAA 
.AA 
AlterColumnAA (
<AA( )
doubleAA) /
>AA/ 0
(AA0 1
nameBB 
:BB 
$strBB  
,BB  !
tableCC 
:CC 
$strCC #
,CC# $
nullableDD 
:DD 
falseDD 
,DD  

oldClrTypeEE 
:EE 
typeofEE "
(EE" #
stringEE# )
)EE) *
,EE* +
oldTypeFF 
:FF 
$strFF (
,FF( )
oldNullableGG 
:GG 
trueGG !
)GG! "
;GG" #
migrationBuilderII 
.II 
AlterColumnII (
<II( )
doubleII) /
>II/ 0
(II0 1
nameJJ 
:JJ 
$strJJ /
,JJ/ 0
tableKK 
:KK 
$strKK #
,KK# $
nullableLL 
:LL 
falseLL 
,LL  

oldClrTypeMM 
:MM 
typeofMM "
(MM" #
stringMM# )
)MM) *
,MM* +
oldTypeNN 
:NN 
$strNN (
,NN( )
oldNullableOO 
:OO 
trueOO !
)OO! "
;OO" #
migrationBuilderQQ 
.QQ 
AlterColumnQQ (
<QQ( )
doubleQQ) /
>QQ/ 0
(QQ0 1
nameRR 
:RR 
$strRR '
,RR' (
tableSS 
:SS 
$strSS #
,SS# $
nullableTT 
:TT 
falseTT 
,TT  

oldClrTypeUU 
:UU 
typeofUU "
(UU" #
stringUU# )
)UU) *
,UU* +
oldTypeVV 
:VV 
$strVV (
,VV( )
oldNullableWW 
:WW 
trueWW !
)WW! "
;WW" #
migrationBuilderYY 
.YY 
AlterColumnYY (
<YY( )
doubleYY) /
>YY/ 0
(YY0 1
nameZZ 
:ZZ 
$strZZ .
,ZZ. /
table[[ 
:[[ 
$str[[ #
,[[# $
nullable\\ 
:\\ 
false\\ 
,\\  

oldClrType]] 
:]] 
typeof]] "
(]]" #
string]]# )
)]]) *
,]]* +
oldType^^ 
:^^ 
$str^^ (
,^^( )
oldNullable__ 
:__ 
true__ !
)__! "
;__" #
migrationBuilderaa 
.aa 
AlterColumnaa (
<aa( )
doubleaa) /
>aa/ 0
(aa0 1
namebb 
:bb 
$strbb &
,bb& '
tablecc 
:cc 
$strcc #
,cc# $
nullabledd 
:dd 
falsedd 
,dd  

oldClrTypeee 
:ee 
typeofee "
(ee" #
stringee# )
)ee) *
,ee* +
oldTypeff 
:ff 
$strff (
,ff( )
oldNullablegg 
:gg 
truegg !
)gg! "
;gg" #
}hh 	
	protectedjj 
overridejj 
voidjj 
Downjj  $
(jj$ %
MigrationBuilderjj% 5
migrationBuilderjj6 F
)jjF G
{kk 	
migrationBuilderll 
.ll 
AlterColumnll (
<ll( )
stringll) /
>ll/ 0
(ll0 1
namemm 
:mm 
$strmm 0
,mm0 1
tablenn 
:nn 
$strnn #
,nn# $
typeoo 
:oo 
$stroo %
,oo% &
nullablepp 
:pp 
truepp 
,pp 

oldClrTypeqq 
:qq 
typeofqq "
(qq" #
doubleqq# )
)qq) *
)qq* +
;qq+ ,
migrationBuilderss 
.ss 
AlterColumnss (
<ss( )
stringss) /
>ss/ 0
(ss0 1
namett 
:tt 
$strtt (
,tt( )
tableuu 
:uu 
$struu #
,uu# $
typevv 
:vv 
$strvv %
,vv% &
nullableww 
:ww 
trueww 
,ww 

oldClrTypexx 
:xx 
typeofxx "
(xx" #
doublexx# )
)xx) *
)xx* +
;xx+ ,
migrationBuilderzz 
.zz 
AlterColumnzz (
<zz( )
stringzz) /
>zz/ 0
(zz0 1
name{{ 
:{{ 
$str{{ ,
,{{, -
table|| 
:|| 
$str|| #
,||# $
type}} 
:}} 
$str}} %
,}}% &
nullable~~ 
:~~ 
true~~ 
,~~ 

oldClrType 
: 
typeof "
(" #
double# )
)) *
)* +
;+ ,
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
string
) /
>
/ 0
(
0 1
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 #
,
# $
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
)
* +
;
+ ,
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
string
) /
>
/ 0
(
0 1
name
 
:
 
$str
 ,
,
, -
table
 
:
 
$str
 #
,
# $
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
)
* +
;
+ ,
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
string
) /
>
/ 0
(
0 1
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 #
,
# $
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
)
* +
;
+ ,
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
string
) /
>
/ 0
(
0 1
name
 
:
 
$str
 (
,
( )
table
 
:
 
$str
 #
,
# $
type
 
:
 
$str
 %
,
% &
nullable
 
:
 
true
 
,
 

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
)
* +
;
+ ,
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
string
) /
>
/ 0
(
0 1
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 #
,
# $
type
   
:
   
$str
   %
,
  % &
nullable
¡¡ 
:
¡¡ 
true
¡¡ 
,
¡¡ 

oldClrType
¢¢ 
:
¢¢ 
typeof
¢¢ "
(
¢¢" #
double
¢¢# )
)
¢¢) *
)
¢¢* +
;
¢¢+ ,
migrationBuilder
¤¤ 
.
¤¤ 
AlterColumn
¤¤ (
<
¤¤( )
string
¤¤) /
>
¤¤/ 0
(
¤¤0 1
name
¥¥ 
:
¥¥ 
$str
¥¥ /
,
¥¥/ 0
table
¦¦ 
:
¦¦ 
$str
¦¦ #
,
¦¦# $
type
§§ 
:
§§ 
$str
§§ %
,
§§% &
nullable
¨¨ 
:
¨¨ 
true
¨¨ 
,
¨¨ 

oldClrType
©© 
:
©© 
typeof
©© "
(
©©" #
double
©©# )
)
©©) *
)
©©* +
;
©©+ ,
migrationBuilder
«« 
.
«« 
AlterColumn
«« (
<
««( )
string
««) /
>
««/ 0
(
««0 1
name
¬¬ 
:
¬¬ 
$str
¬¬ '
,
¬¬' (
table
­­ 
:
­­ 
$str
­­ #
,
­­# $
type
®® 
:
®® 
$str
®® %
,
®®% &
nullable
¯¯ 
:
¯¯ 
true
¯¯ 
,
¯¯ 

oldClrType
°° 
:
°° 
typeof
°° "
(
°°" #
double
°°# )
)
°°) *
)
°°* +
;
°°+ ,
migrationBuilder
²² 
.
²² 
AlterColumn
²² (
<
²²( )
string
²²) /
>
²²/ 0
(
²²0 1
name
³³ 
:
³³ 
$str
³³ .
,
³³. /
table
´´ 
:
´´ 
$str
´´ #
,
´´# $
type
µµ 
:
µµ 
$str
µµ %
,
µµ% &
nullable
¶¶ 
:
¶¶ 
true
¶¶ 
,
¶¶ 

oldClrType
·· 
:
·· 
typeof
·· "
(
··" #
double
··# )
)
··) *
)
··* +
;
··+ ,
migrationBuilder
¹¹ 
.
¹¹ 
AlterColumn
¹¹ (
<
¹¹( )
string
¹¹) /
>
¹¹/ 0
(
¹¹0 1
name
ºº 
:
ºº 
$str
ºº &
,
ºº& '
table
»» 
:
»» 
$str
»» #
,
»»# $
type
¼¼ 
:
¼¼ 
$str
¼¼ %
,
¼¼% &
nullable
½½ 
:
½½ 
true
½½ 
,
½½ 

oldClrType
¾¾ 
:
¾¾ 
typeof
¾¾ "
(
¾¾" #
double
¾¾# )
)
¾¾) *
)
¾¾* +
;
¾¾+ ,
}
¿¿ 	
}
ÀÀ 
}ÁÁ ²
fC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210225044741_stringtodouble-nullable.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class "
stringtodoublenullable /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
AlterColumn		 (
<		( )
double		) /
>		/ 0
(		0 1
name

 
:

 
$str

 0
,

0 1
table 
: 
$str #
,# $
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
double# )
)) *
,* +
oldType 
: 
$str  
)  !
;! "
migrationBuilder 
. 
AlterColumn (
<( )
double) /
>/ 0
(0 1
name 
: 
$str (
,( )
table 
: 
$str #
,# $
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
double# )
)) *
,* +
oldType 
: 
$str  
)  !
;! "
migrationBuilder 
. 
AlterColumn (
<( )
double) /
>/ 0
(0 1
name 
: 
$str ,
,, -
table 
: 
$str #
,# $
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
double# )
)) *
,* +
oldType 
: 
$str  
)  !
;! "
migrationBuilder 
. 
AlterColumn (
<( )
double) /
>/ 0
(0 1
name 
: 
$str $
,$ %
table   
:   
$str   #
,  # $
nullable!! 
:!! 
true!! 
,!! 

oldClrType"" 
:"" 
typeof"" "
(""" #
double""# )
)"") *
,""* +
oldType## 
:## 
$str##  
)##  !
;##! "
migrationBuilder%% 
.%% 
AlterColumn%% (
<%%( )
double%%) /
>%%/ 0
(%%0 1
name&& 
:&& 
$str&& ,
,&&, -
table'' 
:'' 
$str'' #
,''# $
nullable(( 
:(( 
true(( 
,(( 

oldClrType)) 
:)) 
typeof)) "
())" #
double))# )
)))) *
,))* +
oldType** 
:** 
$str**  
)**  !
;**! "
migrationBuilder,, 
.,, 
AlterColumn,, (
<,,( )
double,,) /
>,,/ 0
(,,0 1
name-- 
:-- 
$str-- $
,--$ %
table.. 
:.. 
$str.. #
,..# $
nullable// 
:// 
true// 
,// 

oldClrType00 
:00 
typeof00 "
(00" #
double00# )
)00) *
,00* +
oldType11 
:11 
$str11  
)11  !
;11! "
migrationBuilder33 
.33 
AlterColumn33 (
<33( )
double33) /
>33/ 0
(330 1
name44 
:44 
$str44 (
,44( )
table55 
:55 
$str55 #
,55# $
nullable66 
:66 
true66 
,66 

oldClrType77 
:77 
typeof77 "
(77" #
double77# )
)77) *
,77* +
oldType88 
:88 
$str88  
)88  !
;88! "
migrationBuilder:: 
.:: 
AlterColumn:: (
<::( )
double::) /
>::/ 0
(::0 1
name;; 
:;; 
$str;;  
,;;  !
table<< 
:<< 
$str<< #
,<<# $
nullable== 
:== 
true== 
,== 

oldClrType>> 
:>> 
typeof>> "
(>>" #
double>># )
)>>) *
,>>* +
oldType?? 
:?? 
$str??  
)??  !
;??! "
migrationBuilderAA 
.AA 
AlterColumnAA (
<AA( )
doubleAA) /
>AA/ 0
(AA0 1
nameBB 
:BB 
$strBB /
,BB/ 0
tableCC 
:CC 
$strCC #
,CC# $
nullableDD 
:DD 
trueDD 
,DD 

oldClrTypeEE 
:EE 
typeofEE "
(EE" #
doubleEE# )
)EE) *
,EE* +
oldTypeFF 
:FF 
$strFF  
)FF  !
;FF! "
migrationBuilderHH 
.HH 
AlterColumnHH (
<HH( )
doubleHH) /
>HH/ 0
(HH0 1
nameII 
:II 
$strII '
,II' (
tableJJ 
:JJ 
$strJJ #
,JJ# $
nullableKK 
:KK 
trueKK 
,KK 

oldClrTypeLL 
:LL 
typeofLL "
(LL" #
doubleLL# )
)LL) *
,LL* +
oldTypeMM 
:MM 
$strMM  
)MM  !
;MM! "
migrationBuilderOO 
.OO 
AlterColumnOO (
<OO( )
doubleOO) /
>OO/ 0
(OO0 1
namePP 
:PP 
$strPP .
,PP. /
tableQQ 
:QQ 
$strQQ #
,QQ# $
nullableRR 
:RR 
trueRR 
,RR 

oldClrTypeSS 
:SS 
typeofSS "
(SS" #
doubleSS# )
)SS) *
,SS* +
oldTypeTT 
:TT 
$strTT  
)TT  !
;TT! "
migrationBuilderVV 
.VV 
AlterColumnVV (
<VV( )
doubleVV) /
>VV/ 0
(VV0 1
nameWW 
:WW 
$strWW &
,WW& '
tableXX 
:XX 
$strXX #
,XX# $
nullableYY 
:YY 
trueYY 
,YY 

oldClrTypeZZ 
:ZZ 
typeofZZ "
(ZZ" #
doubleZZ# )
)ZZ) *
,ZZ* +
oldType[[ 
:[[ 
$str[[  
)[[  !
;[[! "
migrationBuilder]] 
.]] 
AlterColumn]] (
<]]( )
double]]) /
>]]/ 0
(]]0 1
name^^ 
:^^ 
$str^^ &
,^^& '
table__ 
:__ 
$str__ #
,__# $
nullable`` 
:`` 
true`` 
,`` 

oldClrTypeaa 
:aa 
typeofaa "
(aa" #
stringaa# )
)aa) *
,aa* +
oldTypebb 
:bb 
$strbb (
,bb( )
oldNullablecc 
:cc 
truecc !
)cc! "
;cc" #
migrationBuilderee 
.ee 
AlterColumnee (
<ee( )
doubleee) /
>ee/ 0
(ee0 1
nameff 
:ff 
$strff %
,ff% &
tablegg 
:gg 
$strgg #
,gg# $
nullablehh 
:hh 
falsehh 
,hh  

oldClrTypeii 
:ii 
typeofii "
(ii" #
stringii# )
)ii) *
,ii* +
oldTypejj 
:jj 
$strjj (
,jj( )
oldNullablekk 
:kk 
truekk !
)kk! "
;kk" #
}ll 	
	protectednn 
overridenn 
voidnn 
Downnn  $
(nn$ %
MigrationBuildernn% 5
migrationBuildernn6 F
)nnF G
{oo 	
migrationBuilderpp 
.pp 
AlterColumnpp (
<pp( )
doublepp) /
>pp/ 0
(pp0 1
nameqq 
:qq 
$strqq 0
,qq0 1
tablerr 
:rr 
$strrr #
,rr# $
typess 
:ss 
$strss 
,ss 
nullablett 
:tt 
falsett 
,tt  

oldClrTypeuu 
:uu 
typeofuu "
(uu" #
doubleuu# )
)uu) *
,uu* +
oldNullablevv 
:vv 
truevv !
)vv! "
;vv" #
migrationBuilderxx 
.xx 
AlterColumnxx (
<xx( )
doublexx) /
>xx/ 0
(xx0 1
nameyy 
:yy 
$stryy (
,yy( )
tablezz 
:zz 
$strzz #
,zz# $
type{{ 
:{{ 
$str{{ 
,{{ 
nullable|| 
:|| 
false|| 
,||  

oldClrType}} 
:}} 
typeof}} "
(}}" #
double}}# )
)}}) *
,}}* +
oldNullable~~ 
:~~ 
true~~ !
)~~! "
;~~" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
 ,
,
, -
table
 
:
 
$str
 #
,
# $
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 #
,
# $
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
 ,
,
, -
table
 
:
 
$str
 #
,
# $
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
 $
,
$ %
table
 
:
 
$str
 #
,
# $
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
,
* +
oldNullable
 
:
 
true
 !
)
! "
;
" #
migrationBuilder
   
.
   
AlterColumn
   (
<
  ( )
double
  ) /
>
  / 0
(
  0 1
name
¡¡ 
:
¡¡ 
$str
¡¡ (
,
¡¡( )
table
¢¢ 
:
¢¢ 
$str
¢¢ #
,
¢¢# $
type
££ 
:
££ 
$str
££ 
,
££ 
nullable
¤¤ 
:
¤¤ 
false
¤¤ 
,
¤¤  

oldClrType
¥¥ 
:
¥¥ 
typeof
¥¥ "
(
¥¥" #
double
¥¥# )
)
¥¥) *
,
¥¥* +
oldNullable
¦¦ 
:
¦¦ 
true
¦¦ !
)
¦¦! "
;
¦¦" #
migrationBuilder
¨¨ 
.
¨¨ 
AlterColumn
¨¨ (
<
¨¨( )
double
¨¨) /
>
¨¨/ 0
(
¨¨0 1
name
©© 
:
©© 
$str
©©  
,
©©  !
table
ªª 
:
ªª 
$str
ªª #
,
ªª# $
type
«« 
:
«« 
$str
«« 
,
«« 
nullable
¬¬ 
:
¬¬ 
false
¬¬ 
,
¬¬  

oldClrType
­­ 
:
­­ 
typeof
­­ "
(
­­" #
double
­­# )
)
­­) *
,
­­* +
oldNullable
®® 
:
®® 
true
®® !
)
®®! "
;
®®" #
migrationBuilder
°° 
.
°° 
AlterColumn
°° (
<
°°( )
double
°°) /
>
°°/ 0
(
°°0 1
name
±± 
:
±± 
$str
±± /
,
±±/ 0
table
²² 
:
²² 
$str
²² #
,
²²# $
type
³³ 
:
³³ 
$str
³³ 
,
³³ 
nullable
´´ 
:
´´ 
false
´´ 
,
´´  

oldClrType
µµ 
:
µµ 
typeof
µµ "
(
µµ" #
double
µµ# )
)
µµ) *
,
µµ* +
oldNullable
¶¶ 
:
¶¶ 
true
¶¶ !
)
¶¶! "
;
¶¶" #
migrationBuilder
¸¸ 
.
¸¸ 
AlterColumn
¸¸ (
<
¸¸( )
double
¸¸) /
>
¸¸/ 0
(
¸¸0 1
name
¹¹ 
:
¹¹ 
$str
¹¹ '
,
¹¹' (
table
ºº 
:
ºº 
$str
ºº #
,
ºº# $
type
»» 
:
»» 
$str
»» 
,
»» 
nullable
¼¼ 
:
¼¼ 
false
¼¼ 
,
¼¼  

oldClrType
½½ 
:
½½ 
typeof
½½ "
(
½½" #
double
½½# )
)
½½) *
,
½½* +
oldNullable
¾¾ 
:
¾¾ 
true
¾¾ !
)
¾¾! "
;
¾¾" #
migrationBuilder
ÀÀ 
.
ÀÀ 
AlterColumn
ÀÀ (
<
ÀÀ( )
double
ÀÀ) /
>
ÀÀ/ 0
(
ÀÀ0 1
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ .
,
ÁÁ. /
table
ÂÂ 
:
ÂÂ 
$str
ÂÂ #
,
ÂÂ# $
type
ÃÃ 
:
ÃÃ 
$str
ÃÃ 
,
ÃÃ 
nullable
ÄÄ 
:
ÄÄ 
false
ÄÄ 
,
ÄÄ  

oldClrType
ÅÅ 
:
ÅÅ 
typeof
ÅÅ "
(
ÅÅ" #
double
ÅÅ# )
)
ÅÅ) *
,
ÅÅ* +
oldNullable
ÆÆ 
:
ÆÆ 
true
ÆÆ !
)
ÆÆ! "
;
ÆÆ" #
migrationBuilder
ÈÈ 
.
ÈÈ 
AlterColumn
ÈÈ (
<
ÈÈ( )
double
ÈÈ) /
>
ÈÈ/ 0
(
ÈÈ0 1
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ &
,
ÉÉ& '
table
ÊÊ 
:
ÊÊ 
$str
ÊÊ #
,
ÊÊ# $
type
ËË 
:
ËË 
$str
ËË 
,
ËË 
nullable
ÌÌ 
:
ÌÌ 
false
ÌÌ 
,
ÌÌ  

oldClrType
ÍÍ 
:
ÍÍ 
typeof
ÍÍ "
(
ÍÍ" #
double
ÍÍ# )
)
ÍÍ) *
,
ÍÍ* +
oldNullable
ÎÎ 
:
ÎÎ 
true
ÎÎ !
)
ÎÎ! "
;
ÎÎ" #
migrationBuilder
ÐÐ 
.
ÐÐ 
AlterColumn
ÐÐ (
<
ÐÐ( )
string
ÐÐ) /
>
ÐÐ/ 0
(
ÐÐ0 1
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ &
,
ÑÑ& '
table
ÒÒ 
:
ÒÒ 
$str
ÒÒ #
,
ÒÒ# $
type
ÓÓ 
:
ÓÓ 
$str
ÓÓ %
,
ÓÓ% &
nullable
ÔÔ 
:
ÔÔ 
true
ÔÔ 
,
ÔÔ 

oldClrType
ÕÕ 
:
ÕÕ 
typeof
ÕÕ "
(
ÕÕ" #
double
ÕÕ# )
)
ÕÕ) *
,
ÕÕ* +
oldNullable
ÖÖ 
:
ÖÖ 
true
ÖÖ !
)
ÖÖ! "
;
ÖÖ" #
migrationBuilder
ØØ 
.
ØØ 
AlterColumn
ØØ (
<
ØØ( )
string
ØØ) /
>
ØØ/ 0
(
ØØ0 1
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ %
,
ÙÙ% &
table
ÚÚ 
:
ÚÚ 
$str
ÚÚ #
,
ÚÚ# $
type
ÛÛ 
:
ÛÛ 
$str
ÛÛ %
,
ÛÛ% &
nullable
ÜÜ 
:
ÜÜ 
true
ÜÜ 
,
ÜÜ 

oldClrType
ÝÝ 
:
ÝÝ 
typeof
ÝÝ "
(
ÝÝ" #
double
ÝÝ# )
)
ÝÝ) *
)
ÝÝ* +
;
ÝÝ+ ,
}
ÞÞ 	
}
ßß 
}àà ¤
`C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210225060334_datetime-nullable.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
datetimenullable )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
DateTime

) 1
>

1 2
(

2 3
name 
: 
$str 
,  
table 
: 
$str #
,# $
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str !
,! "
table 
: 
$str #
,# $
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
)$ %
;% &
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str 
,  
table 
: 
$str #
,# $
type 
: 
$str !
,! "
nullable 
: 
false 
,  

oldClrType   
:   
typeof   "
(  " #
DateTime  # +
)  + ,
,  , -
oldNullable!! 
:!! 
true!! !
)!!! "
;!!" #
migrationBuilder## 
.## 
AlterColumn## (
<##( )
DateTime##) 1
>##1 2
(##2 3
name$$ 
:$$ 
$str$$ !
,$$! "
table%% 
:%% 
$str%% #
,%%# $
type&& 
:&& 
$str&& !
,&&! "
nullable'' 
:'' 
false'' 
,''  

oldClrType(( 
:(( 
typeof(( "
(((" #
DateTime((# +
)((+ ,
,((, -
oldNullable)) 
:)) 
true)) !
)))! "
;))" #
}** 	
}++ 
},, Û
bC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210228204522_add-scope-migration.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
addscopemigration *
:+ ,
	Migration- 6
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
	AddColumn

 &
<

& '
string

' -
>

- .
(

. /
name 
: 
$str 
, 
table 
: 
$str )
,) *
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str &
,& '
table 
: 
$str #
,# $
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
)$ %
;% &
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str &
,& '
table 
: 
$str #
,# $
type   
:   
$str   !
,  ! "
nullable!! 
:!! 
false!! 
,!!  

oldClrType"" 
:"" 
typeof"" "
(""" #
DateTime""# +
)""+ ,
,"", -
oldNullable## 
:## 
true## !
)##! "
;##" #
}$$ 	
}%% 
}&& ë
VC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210303160619_newrole.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
newrole  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} +
YC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210304092025_commercial.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 

commercial #
:$ %
	Migration& /
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 >
,

> ?
table 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str $
,$ %
table 
: 
$str #
,# $
newName 
: 
$str '
)' (
;( )
migrationBuilder 
. 
RenameIndex (
(( )
name 
: 
$str 2
,2 3
table 
: 
$str #
,# $
newName 
: 
$str 5
)5 6
;6 7
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str $
,$ %
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateIndex (
(( )
name 
: 
$str 2
,2 3
table 
: 
$str #
,# $
column 
: 
$str &
)& '
;' (
migrationBuilder!! 
.!! 
AddForeignKey!! *
(!!* +
name"" 
:"" 
$str"" >
,""> ?
table## 
:## 
$str## #
,### $
column$$ 
:$$ 
$str$$ &
,$$& '
principalTable%% 
:%% 
$str%%  -
,%%- .
principalColumn&& 
:&&  
$str&&! %
,&&% &
onDelete'' 
:'' 
ReferentialAction'' +
.''+ ,
Restrict'', 4
)''4 5
;''5 6
migrationBuilder)) 
.)) 
AddForeignKey)) *
())* +
name** 
:** 
$str** 8
,**8 9
table++ 
:++ 
$str++ #
,++# $
column,, 
:,, 
$str,, &
,,,& '
principalTable-- 
:-- 
$str--  '
,--' (
principalColumn.. 
:..  
$str..! )
,..) *
onDelete// 
:// 
ReferentialAction// +
.//+ ,
Restrict//, 4
)//4 5
;//5 6
}00 	
	protected22 
override22 
void22 
Down22  $
(22$ %
MigrationBuilder22% 5
migrationBuilder226 F
)22F G
{33 	
migrationBuilder44 
.44 
DropForeignKey44 +
(44+ ,
name55 
:55 
$str55 >
,55> ?
table66 
:66 
$str66 #
)66# $
;66$ %
migrationBuilder88 
.88 
DropForeignKey88 +
(88+ ,
name99 
:99 
$str99 8
,998 9
table:: 
::: 
$str:: #
)::# $
;::$ %
migrationBuilder<< 
.<< 
	DropIndex<< &
(<<& '
name== 
:== 
$str== 2
,==2 3
table>> 
:>> 
$str>> #
)>># $
;>>$ %
migrationBuilder@@ 
.@@ 

DropColumn@@ '
(@@' (
nameAA 
:AA 
$strAA $
,AA$ %
tableBB 
:BB 
$strBB #
)BB# $
;BB$ %
migrationBuilderDD 
.DD 
RenameColumnDD )
(DD) *
nameEE 
:EE 
$strEE $
,EE$ %
tableFF 
:FF 
$strFF #
,FF# $
newNameGG 
:GG 
$strGG '
)GG' (
;GG( )
migrationBuilderII 
.II 
RenameIndexII (
(II( )
nameJJ 
:JJ 
$strJJ 2
,JJ2 3
tableKK 
:KK 
$strKK #
,KK# $
newNameLL 
:LL 
$strLL 5
)LL5 6
;LL6 7
migrationBuilderNN 
.NN 
AddForeignKeyNN *
(NN* +
nameOO 
:OO 
$strOO >
,OO> ?
tablePP 
:PP 
$strPP #
,PP# $
columnQQ 
:QQ 
$strQQ &
,QQ& '
principalTableRR 
:RR 
$strRR  -
,RR- .
principalColumnSS 
:SS  
$strSS! %
,SS% &
onDeleteTT 
:TT 
ReferentialActionTT +
.TT+ ,
RestrictTT, 4
)TT4 5
;TT5 6
}UU 	
}VV 
}WW ¯
iC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210305161336_stringToDateTimeImputation.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class &
stringToDateTimeImputation 3
:4 5
	Migration6 ?
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
DateTime

) 1
>

1 2
(

2 3
name 
: 
$str 
,  
table 
: 
$str $
,$ %
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str !
,! "
table 
: 
$str $
,$ %
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldNullable 
: 
true !
)! "
;" #
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
,  
table 
: 
$str $
,$ %
type   
:   
$str   %
,  % &
nullable!! 
:!! 
true!! 
,!! 

oldClrType"" 
:"" 
typeof"" "
(""" #
DateTime""# +
)""+ ,
)"", -
;""- .
migrationBuilder$$ 
.$$ 
AlterColumn$$ (
<$$( )
string$$) /
>$$/ 0
($$0 1
name%% 
:%% 
$str%% !
,%%! "
table&& 
:&& 
$str&& $
,&&$ %
type'' 
:'' 
$str'' %
,''% &
nullable(( 
:(( 
true(( 
,(( 

oldClrType)) 
:)) 
typeof)) "
())" #
DateTime))# +
)))+ ,
))), -
;))- .
}** 	
}++ 
},, ­
qC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210312115021_add-datefinprevue-ttm-to-projetedp.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class *
adddatefinprevuettmtoprojetedp 7
:8 9
	Migration: C
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
	AddColumn

 &
<

& '
DateTime

' /
>

/ 0
(

0 1
name 
: 
$str %
,% &
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str #
,# $
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str %
,% &
table 
: 
$str #
)# $
;$ %
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str #
)# $
;$ %
} 	
} 
}   ç
dC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20210909233317_first_last_imputation.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class !
first_last_imputation .
:/ 0
	Migration1 :
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
	AddColumn

 &
<

& '
DateTime

' /
>

/ 0
(

0 1
name 
: 
$str '
,' (
table 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str &
,& '
table 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str '
,' (
table 
: 
$str 
) 
;  
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str &
,& '
table 
: 
$str 
) 
;  
}   	
}!! 
}"" ¨+
VC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Migrations\20220517090624_profile.cs
	namespace 	

ProjetBack
 
. 

Migrations 
{ 
public 

partial 
class 
profile  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
	profileId 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
nullable5 =
:= >
false? D
)D E
,E F
annee 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
nullable1 9
:9 :
true; ?
)? @
,@ A
budget 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
true< @
)@ A
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 1
,1 2
x3 4
=>5 7
x8 9
.9 :
	profileId: C
)C D
;D E
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
	profileId 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
nullable5 =
:= >
false? D
)D E
,E F
userId 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
false< A
)A B
,B C
	dateDebut 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
nullable7 ?
:? @
falseA F
)F G
,G H
dateFin 
= 
table #
.# $
Column$ *
<* +
DateTime+ 3
>3 4
(4 5
nullable5 =
:= >
false? D
)D E
} 
, 
constraints   
:   
table   "
=>  # %
{!! 
table"" 
."" 

PrimaryKey"" $
(""$ %
$str""% 5
,""5 6
x""7 8
=>""9 ;
new""< ?
{""@ A
x""B C
.""C D
userId""D J
,""J K
x""L M
.""M N
	profileId""N W
}""X Y
)""Y Z
;""Z [
table## 
.## 

ForeignKey## $
(##$ %
name$$ 
:$$ 
$str$$ @
,$$@ A
column%% 
:%% 
x%%  !
=>%%" $
x%%% &
.%%& '
	profileId%%' 0
,%%0 1
principalTable&& &
:&&& '
$str&&( 1
,&&1 2
principalColumn'' '
:''' (
$str'') 4
,''4 5
onDelete((  
:((  !
ReferentialAction((" 3
.((3 4
Cascade((4 ;
)((; <
;((< =
table)) 
.)) 

ForeignKey)) $
())$ %
name** 
:** 
$str** ;
,**; <
column++ 
:++ 
x++  !
=>++" $
x++% &
.++& '
userId++' -
,++- .
principalTable,, &
:,,& '
$str,,( /
,,,/ 0
principalColumn-- '
:--' (
$str--) 1
,--1 2
onDelete..  
:..  !
ReferentialAction.." 3
...3 4
Cascade..4 ;
)..; <
;..< =
}// 
)// 
;// 
migrationBuilder11 
.11 
CreateIndex11 (
(11( )
name22 
:22 
$str22 0
,220 1
table33 
:33 
$str33 $
,33$ %
column44 
:44 
$str44 #
)44# $
;44$ %
}55 	
	protected77 
override77 
void77 
Down77  $
(77$ %
MigrationBuilder77% 5
migrationBuilder776 F
)77F G
{88 	
migrationBuilder99 
.99 
	DropTable99 &
(99& '
name:: 
::: 
$str:: #
)::# $
;::$ %
migrationBuilder<< 
.<< 
	DropTable<< &
(<<& '
name== 
:== 
$str== 
)==  
;==  !
}>> 	
}?? 
}@@ í
BC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Client.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 

class

 
Client

 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Nom 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Adresse 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
AdresseEmail "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
	Telephone 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Fax 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
DateCreation "
{# $
get$ '
;' (
set( +
;+ ,
}, -
public 
string 
Createur 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string $
DateDerniereModification .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
string 
Modificateur "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
TypeClientId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
Boolean 
lockoutEnabled %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public   
virtual   
ICollection   "
<  " #
ClientProjet  # /
>  / 0
ClientProjet  1 =
{  > ?
get  @ C
;  C D
set  E H
;  H I
}  J K
public"" 
virtual"" 
ICollection"" "
<""" #
	ProjetEdp""# ,
>"", -

ProjetEdps"". 8
{""9 :
get""; >
;""> ?
set""@ C
;""C D
}""E F
public## 
virtual## 
ICollection## "
<##" #

CodeProjet### -
>##- .
CodeProjets##/ :
{##; <
get##= @
;##@ A
set##B E
;##E F
}##G H
public** 
ICollection** 
<** 
ProjetLivraison** *
>*** +
ProjetLivraisons**, <
{**= >
get**? B
;**B C
set**D G
;**G H
}**I J
}-- 
}.. ÿ
HC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\ClientProjet.cs
	namespace 	

ProjetBack
 
. 
Models 
{ 
public		 

class		 
ClientProjet		 
{

 
public 
string 
ProjetId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Projet 
Projet 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
ClientId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Client 
Client 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} Ý
FC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\CodeProjet.cs
	namespace		 	

ProjetBack		
 
.		 
Models		 
{

 
public 

class 

CodeProjet 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Numero 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Nature 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Intitule 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
ClientId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
createur 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 
dateCreation %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
virtual 
Client 
Client %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
virtual 
ICollection "
<" #
	ProjetEdp# ,
>, -

ProjetEdps. 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
} 
} à
GC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Commentaire.cs
	namespace 	
DAL
 
. 
Models 
{ 
public		 

class		 
Commentaire		 
{

 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
IdCommentaire #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
DetailLivraison 
DetailLivraison  /
{0 1
get2 5
;5 6
set7 :
;: ;
}; <
} 
} 
FC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Commercant.cs
	namespace 	

ProjetBack
 
. 
Models 
{		 
public

 

class

 

Commercant

 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
id 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Nom 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Prenom 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
FullName 
=> !
Prenom" (
+) *
$str+ .
+/ 0
Nom1 4
;4 5
public 
virtual 
ICollection "
<" #
	ProjetEdp# ,
>, -
	ProjetEdp. 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
string 
Createur 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
DateCreation #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} 
LC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\DetailImputation.cs
	namespace		 	
DAL		
 
.		 
Models		 
{

 
public 
class
 
DetailImputation  
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
IdClient 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
IdProjet 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
TacheId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Tache 
tache 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Charge 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
IdStatutTache #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Monday 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Tuesday 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
	Wednesday 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Thursday 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Friday 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
ImputationId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

Imputation 

Imputation $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public!! 
string!! 
?!! 
DateCreation!! 
{!! 
get!! !
;!!! "
set!!# &
;!!& '
}!!( )
}## 
}$$ ¦	
KC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\DetailLivraison.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 
class


 
DetailLivraison

 
:

  !
ProjectBase

" -
{ 
public 
string 
ProjetLivraisonId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
ProjetLivraison 
ProjetLivraison .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
string 
ProjetId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Projet 
Projet 
{ 
get "
;" #
set$ '
;' (
}) *
public 
virtual 
ICollection "
<" #
Tache# (
>( )
taches* 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} þ
BC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Equipe.cs
	namespace		 	

ProjetBack		
 
.		 
Models		 
{

 
public 

class 
Equipe 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Nom 
{ 
get 
;  
set! $
;$ %
}& '
public 
virtual 
ICollection "
<" #
ProjetEquipe# /
>/ 0
projetsEquipe1 >
{? @
getA D
;D E
setF I
;I J
}K L
public 
string 
	ManagerId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
virtual 
User 
Manager #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
virtual 
ICollection "
<" #

EquipeUser# -
>- .
equipeUsers/ :
{; <
get= @
;@ A
setB E
;E F
}G H
public 
string 
Createur 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
DateCreation 
{ 
get !
;! "
set# &
;& '
}( )
} 
} 
FC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\EquipeUser.cs
	namespace 	

ProjetBack
 
. 
Models 
{ 
public		 

class		 

EquipeUser		 
{

 
public 
string 
UserId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
EquipeId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
public 
Equipe 
Equipe 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
role 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ³
FC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Imputation.cs
	namespace 	
DAL
 
. 
Models 
{ 
public		 

class		 

Imputation		 
{

 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
DateTime 
	DateDebut !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
DateFin 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 

mondayDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DateTime 
? 
TuesdayDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
WednesdayDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DateTime 
? 

FridayDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DateTime 
? 
ThursdayDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ICollection 
< 
DetailImputation +
>+ ,
DetailImputations- >
{? @
getA D
;D E
setF I
;I J
}K L
public 
int 
StatusImputation #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
DateCreation 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
UserId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
public 
DateTime 
? 
DateAvalide $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} Í
FC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\LoginModel.cs
	namespace 	

ProjetBack
 
. 
Models 
{ 
public 

class 

LoginModel 
{		 
public

 
string

 
AdresseEmail

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
string 

MotDePasse  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} 
HC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Notification.cs
	namespace 	

ProjetBack
 
. 
Models 
{ 
public 

class 
Notification 
{ 
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Content 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 

ActionLink  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 
string		 
	startDate		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
string

 
endDate

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
} 
} Û	
FC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Permission.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 
class

	 

Permission

 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
[ 	
Required	 
] 
[ 	
	MaxLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
	MaxLength	 
( 
$num 
) 
] 
public 
string 
DisplayName !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} z
MC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\PilotageDBContext.cs
	namespace

 	
DAL


 
.

 
Models

 
{ 
public 

class 
PilotageDBContext "
:# $
	DbContext% .
{ 
public 
PilotageDBContext  
(  !
DbContextOptions! 1
options2 9
)9 :
: 
base 
( 
options 
) 
{ 	
} 	
public 
DbSet 
< 
Client 
> 
Clients $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 

ProjetUser 
>  
ProjetUsers! ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 

Permission 
>  
Permissions! ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DbSet 
< 
UserPermission #
># $
UserPermissions% 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
public 
DbSet 
< 
Projet 
> 
Projets $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public!! 
DbSet!! 
<!! 
Tache!! 
>!! 
Taches!! "
{!!# $
get!!% (
;!!( )
set!!* -
;!!- .
}!!/ 0
public"" 
DbSet"" 
<"" 
StatutTache""  
>""  !
StatutTaches""" .
{""/ 0
get""1 4
;""4 5
set""6 9
;""9 :
}""; <
public%% 
DbSet%% 
<%% 
Commentaire%%  
>%%  !
Commentaires%%" .
{%%/ 0
get%%1 4
;%%4 5
set%%6 9
;%%9 :
}%%; <
public&& 
DbSet&& 
<&& 
DetailImputation&& %
>&&% &
DetailImputations&&' 8
{&&9 :
get&&; >
;&&> ?
set&&@ C
;&&C D
}&&E F
public'' 
DbSet'' 
<'' 
DetailLivraison'' $
>''$ %
DetailLivraisons''& 6
{''7 8
get''9 <
;''< =
set''> A
;''A B
}''C D
public(( 
DbSet(( 
<(( 
ProjetEquipe(( !
>((! "
ProjetEquipes((# 0
{((1 2
get((3 6
;((6 7
set((8 ;
;((; <
}((= >
public++ 
DbSet++ 
<++ 
ClientProjet++ !
>++! "
ClientProjet++# /
{++0 1
get++2 5
;++5 6
set++7 :
;++: ;
}++< =
public-- 
DbSet-- 
<-- 

Imputation-- 
>--  
Imputations--! ,
{--- .
get--/ 2
;--2 3
set--4 7
;--7 8
}--9 :
public.. 
DbSet.. 
<.. 

Commercant.. 
>..  
Commercants..! ,
{... /
get..0 3
;..3 4
set..5 8
;..8 9
}..: ;
public// 
DbSet// 
<// 
	ProjetEdp// 
>// 

ProjetEdps//  *
{//+ ,
get//- 0
;//0 1
set//2 5
;//5 6
}//7 8
public00 
DbSet00 
<00 

EquipeUser00 
>00  

EquipeUser00! +
{00, -
get00. 1
;001 2
set003 6
;006 7
}008 9
public22 
DbSet22 
<22 
Profil22 
>22 
Profils22 $
{22% &
get22' *
;22* +
set22, /
;22/ 0
}221 2
public33 
DbSet33 
<33 
ProjetLivraison33 $
>33$ %
ProjetLivraisons33& 6
{337 8
get339 <
;33< =
set33> A
;33A B
}33C D
public44 
DbSet44 
<44 
profileUser44  
>44  !
profileUser44" -
{44. /
get440 3
;443 4
set445 8
;448 9
}44: ;
public55 
DbSet55 
<55 
Profile55 
>55 
profile55 %
{55& '
get55( +
;55+ ,
set55- 0
;550 1
}552 3
public77 
DbSet77 
<77 
Equipe77 
>77 
Equips77 #
{77$ %
get77& )
;77) *
set77+ .
;77. /
}770 1
	protected?? 
override?? 
void?? 
OnModelCreating??  /
(??/ 0
ModelBuilder??0 <
modelBuilder??= I
)??I J
{@@ 	
modelBuilderBB 
.BB 
EntityBB 
<BB  
UserBB  $
>BB$ %
(BB% &
)BB& '
.CC 
HasManyCC 
(CC 
cCC 
=>CC 
cCC 
.CC 
equipsCC 
)CC 
.DD 
WithOneDD 
(DD 
eDD 
=>DD 
eDD 
.DD 
ManagerDD 
)DD 
;DD 
modelBuilderNN 
.NN 
EntityNN 
<NN  
profileUserNN  +
>NN+ ,
(NN, -
)NN- .
.OO 
HasKeyOO 	
(OO	 

xOO
 
=>OO 
newOO 
{OO 
xOO 
.OO 
userIdOO 
,OO 
xOO  
.OO  !
	profileIdOO! *
}OO+ ,
)OO, -
;OO- .
modelBuilderQQ 
.QQ 
EntityQQ 
<QQ  
ProjetEquipeQQ  ,
>QQ, -
(QQ- .
)QQ. /
.RR 
HasKeyRR 
(RR 
xRR 
=>RR 
newRR 
{RR 
xRR 
.RR 
ProjetIdRR $
,RR$ %
xRR& '
.RR' (
EquipeIdRR( 0
}RR1 2
)RR2 3
;RR3 4
modelBuilderTT 
.TT 
EntityTT 
<TT  

EquipeUserTT  *
>TT* +
(TT+ ,
)TT, -
.UU 
HasKeyUU 
(UU 
xUU 
=>UU 
newUU 
{UU 
xUU 
.UU 
UserIdUU !
,UU! "
xUU# $
.UU$ %
EquipeIdUU% -
}UU. /
)UU/ 0
;UU0 1
modelBuilderYY 
.YY 
EntityYY 
<YY  
profileUserYY  +
>YY+ ,
(YY, -
)YY- .
.ZZ	 

HasOneZZ
 
(ZZ 
xZZ 
=>ZZ 
xZZ 
.ZZ 
ProfileZZ 
)ZZ  
.[[	 

WithMany[[
 
([[ 
y[[ 
=>[[ 
y[[ 
.[[ 
profileUser[[ %
)[[% &
.\\	 

HasForeignKey\\
 
(\\ 
y\\ 
=>\\ 
y\\ 
.\\ 
	profileId\\ (
)\\( )
;\\) *
modelBuilder`` 
.`` 
Entity`` 
<``  
profileUser``  +
>``+ ,
(``, -
)``- .
.aa 
HasOneaa 
(aa 
xaa 	
=>aa
 
xaa 
.aa 
useraa 
)aa 
.bb 
WithManybb 	
(bb	 

ybb
 
=>bb 
ybb 
.bb 
profileUserbb 
)bb 
.cc 
HasForeignKeycc 
(cc 
ycc 
=>cc 
ycc 
.cc 
userIdcc 
)cc 
;cc 
modelBuilderee 
.ee 
Entityee 
<ee  

EquipeUseree  *
>ee* +
(ee+ ,
)ee, -
.ff 
HasOneff 
(ff 
xff 
=>ff 
xff 
.ff 
Equipeff %
)ff% &
.gg 
WithManygg 
(gg 
ygg 
=>gg 
ygg  
.gg  !
equipeUsersgg! ,
)gg, -
.hh 
HasForeignKeyhh 
(hh 
yhh  
=>hh! #
yhh$ %
.hh% &
EquipeIdhh& .
)hh. /
;hh/ 0
modelBuilderii 
.ii 
Entityii 
<ii  

EquipeUserii  *
>ii* +
(ii+ ,
)ii, -
.jj	 

HasOnejj
 
(jj 
xjj 
=>jj 
xjj 
.jj 
Userjj 
)jj 
.kk	 

WithManykk
 
(kk 
ykk 
=>kk 
ykk 
.kk 
equipeUserskk %
)kk% &
.ll	 

HasForeignKeyll
 
(ll 
yll 
=>ll 
yll 
.ll 
UserIdll %
)ll% &
;ll& '
modelBuildernn 
.nn 
Entitynn 
<nn  
ProjetEquipenn  ,
>nn, -
(nn- .
)nn. /
.oo 
HasOneoo 
(oo 
xoo 
=>oo 
xoo 
.oo 
Equipeoo %
)oo% &
.pp 
WithManypp 
(pp 
ypp 
=>pp 
ypp  
.pp  !
projetsEquipepp! .
)pp. /
.qq 
HasForeignKeyqq 
(qq 
yqq  
=>qq! #
yqq$ %
.qq% &
EquipeIdqq& .
)qq. /
;qq/ 0
modelBuilderss 
.ss 
Entityss 
<ss  
ProjetEquipess  ,
>ss, -
(ss- .
)ss. /
.tt 
HasOnett 
(tt 
xtt 
=>tt 
xtt 
.tt 
projettt %
)tt% &
.uu 
WithManyuu 
(uu 
yuu 
=>uu 
yuu  
.uu  !
projetsEquipeuu! .
)uu. /
.vv 
HasForeignKeyvv 
(vv 
yvv  
=>vv! #
yvv$ %
.vv% &
ProjetIdvv& .
)vv. /
;vv/ 0
modelBuilder{{ 
.{{ 
Entity{{ 
<{{  
DetailLivraison{{  /
>{{/ 0
({{0 1
){{1 2
.|| 
HasOne|| 
(|| 
x|| 
=>|| 
x|| 
.|| 
Projet|| %
)||% &
.}} 
WithMany}} 
(}} 
y}} 
=>}} 
y}}  
.}}  !
DetailLivraisons}}! 1
)}}1 2
.~~ 
HasForeignKey~~ 
(~~ 
y~~  
=>~~! #
y~~$ %
.~~% &
ProjetId~~& .
)~~. /
;~~/ 0
modelBuilder
 
.
 
Entity
 
<
  
ClientProjet
  ,
>
, -
(
- .
)
. /
.
 
HasKey
 
(
 
x
 
=>
 
new
 
{
 
x
 
.
 
ProjetId
 $
,
$ %
x
& '
.
' (
ClientId
( 0
}
1 2
)
2 3
;
3 4
modelBuilder
 
.
 
Entity
 
<
  
ClientProjet
  ,
>
, -
(
- .
)
. /
.
 
HasOne
 
(
 
x
 
=>
 
x
 
.
 
Projet
 %
)
% &
.
 
WithMany
 
(
 
y
 
=>
 
y
  
.
  !
ClientProjets
! .
)
. /
.
 
HasForeignKey
 
(
 
y
  
=>
! #
y
$ %
.
% &
ProjetId
& .
)
. /
;
/ 0
modelBuilder
 
.
 
Entity
 
<
  
ClientProjet
  ,
>
, -
(
- .
)
. /
.
 
HasOne
 
(
 
x
 
=>
 
x
 
.
 
Client
 %
)
% &
.
 
WithMany
 
(
 
y
 
=>
 
y
  
.
  !
ClientProjet
! -
)
- .
.
 
HasForeignKey
 
(
 
y
  
=>
! #
y
$ %
.
% &
ClientId
& .
)
. /
;
/ 0
modelBuilder
 
.
 
Entity
 
<
  

ProjetUser
  *
>
* +
(
+ ,
)
, -
.
- .
HasKey
. 4
(
4 5
sc
5 7
=>
8 :
new
; >
{
? @
sc
A C
.
C D
ProjetId
D L
,
L M
sc
N P
.
P Q
UserId
Q W
}
X Y
)
Y Z
;
Z [
modelBuilder
 
.
 
Entity
 
<
  
DetailLivraison
  /
>
/ 0
(
0 1
)
1 2
.
 
HasKey
 
(
 
o
 
=>
 
new
 
{
 
o
 
.
 
Id
 
}
 
)
 
;
 
_
 
=
 
modelBuilder
 
.
 
Entity
 #
<
# $
Client
$ *
>
* +
(
+ ,
)
, -
.
- .
HasData
. 5
(
5 6
new
6 9
Client
: @
{
 
Id
 
=
 
$str
 
,
 
Nom
 
=
 
$str
  
,
  !
Adresse
 
=
 
$str
 7
,
7 8
	Telephone
 
=
 
$str
 *
,
* +
Fax
   
=
   
$str
   $
}
¢¢ 
,
¢¢ 
new
¢¢ 
Client
¢¢ 
{
££ 
Id
¤¤ 
=
¤¤ 
$str
¤¤ 
,
¥¥ 
Nom
¦¦ 
=
¦¦ 
$str
¦¦  
,
¦¦  !
Adresse
¨¨ 
=
¨¨ 
$str
¨¨ 2
,
¨¨2 3
	Telephone
©© 
=
©© 
$str
©© +
,
©©+ ,
Fax
ªª 
=
ªª 
$str
ªª $
}
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 	
public
µµ 
DbSet
µµ 
<
µµ 

ProjetBack
µµ 
.
µµ  
Models
µµ  &
.
µµ& '

CodeProjet
µµ' 1
>
µµ1 2

CodeProjet
µµ3 =
{
µµ> ?
get
µµ@ C
;
µµC D
set
µµE H
;
µµH I
}
µµJ K
}
ÅÅ 
}ÆÆ ¾
BC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Profil.cs
	namespace 	
DAL
 
. 
Models 
{ 
public		 
class		
 
Profil		 
{

 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
IdProfil 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
ICollection 
< 
User 
>  
Users! &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} É
CC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Profile.cs
	namespace 	

ProjetBack
 
. 
Models 
{ 
public 

class 
Profile 
{		 
public

 
string

 
	profileId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
string 
annee 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
budget 
{ 
get "
;" #
set$ '
;' (
}) *
public 
virtual 
ICollection "
<# $
profileUser$ /
>/ 0
profileUser1 <
{= >
get? B
;B C
setD G
;G H
}I J
} 
} à	
GC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\profileUser.cs
	namespace 	

ProjetBack
 
. 
Models 
{ 
public		 

class		 
profileUser		 
{

 
public 
string 
	profileId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
userId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	dateDebut !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
dateFin 
{  !
get" %
;% &
set' *
;* +
}, -
public 
virtual 
User 
user !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
virtual 
Profile 
Profile  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} Õ
SC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\ProjectBase\ProjectBase.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 

class

 
ProjectBase

 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Delivery 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Boolean 
Planned 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
EBRC 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Type 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
? 
	StartDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
InitialPlannedDate *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
DateTime 
PlannedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DateTime 
? 
DeliveryDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
? 
DateCreation 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Createur 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string $
DateDerniereModification .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
string 
Modificateur "
{# $
get% (
;( )
set* -
;- .
}/ 0
public   
ICollection   
<   
Commentaire   &
>  & '
Commentaires  ( 4
{  5 6
get  7 :
;  : ;
set  < ?
;  ? @
}  A B
public"" 
string"" 
TTMId"" 
{"" 
get"" !
;""! "
set""# &
;""& '
}""( )
public$$ 
string$$ 
StatusId$$ 
{$$  
get$$! $
;$$$ %
set$$& )
;$$) *
}$$+ ,
}&& 
}'' Ô
BC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\Projet.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 
class


 
Projet

 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Nommenclature #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Publique 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Type 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
DateCreation #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Createur 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string $
DateDerniereModification .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
string 
Modificateur "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
virtual 
ICollection "
<" #
ProjetEquipe# /
>/ 0
projetsEquipe1 >
{? @
getA D
;D E
setF I
;I J
}K L
public 
virtual 
ICollection "
<" #
DetailLivraison# 2
>2 3
DetailLivraisons4 D
{E F
getG J
;J K
setL O
;O P
}Q R
public 
virtual 
ICollection "
<" #
ClientProjet# /
>/ 0
ClientProjets1 >
{? @
getA D
;D E
setF I
;I J
}K L
public 
DateTime 
	DateDebut !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
DateFin 
{  !
get" %
;% &
set' *
;* +
}, -
public$$ 
string$$ 
PhaseProjetId$$ #
{$$# $
get$$% (
;$$( )
set$$* -
;$$- .
}$$/ 0
public%% 
Boolean%% 
lockoutEnabled%% %
{%%& '
get%%( +
;%%+ ,
set%%- 0
;%%0 1
}%%2 3
}55 
}88 ã1
EC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\ProjetEdp.cs
	namespace		 	

ProjetBack		
 
.		 
Models		 
{

 
public 

class 
	ProjetEdp 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 

CodeProjet  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
double 
? 
BudgetRallonge %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
Nom 
{ 
get 
;  
set! $
;$ %
}& '
public 
double 
BudgetInitial #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
clientId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Createur 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
DateCreation 
{ 
get !
;! "
set# &
;& '
}( )
public 
Client 
client 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str !
)! "
]" #
public 
string 
CodeProjetsId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DateTime 
? 
	dateDebut "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
dateFinInitial '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public   
DateTime   
?   
dateFinPrevue   &
{  ' (
get  ) ,
;  , -
set  . 1
;  1 2
}  3 4
public!! 
string!! 
?!! 
ttm!! 
{!! 
get!!  
;!!  !
set!!" %
;!!% &
}!!' (
public"" 
DateTime"" 
?"" 
dateFin""  
{""! "
get""# &
;""& '
set""( +
;""+ ,
}""- .
public## 
double## 
?## 
budgetJunior## #
{##$ %
get##& )
;##) *
set##+ .
;##. /
}##0 1
public$$ 
double$$ 
?$$ 
budgetSenior$$ #
{$$$ %
get$$& )
;$$) *
set$$+ .
;$$. /
}$$0 1
public%% 
double%% 
?%% 
budgetConfirme%% %
{%%& '
get%%( +
;%%+ ,
set%%- 0
;%%0 1
}%%2 3
public&& 
double&& 
?&& 
budgetValidation&& '
{&&( )
get&&* -
;&&- .
set&&/ 2
;&&2 3
}&&4 5
public'' 
double'' 
?'' 
budgetDirection'' &
{''' (
get'') ,
;'', -
set''. 1
;''1 2
}''3 4
public(( 
double(( 
?(( 
budgetGP(( 
{((  !
get((" %
;((% &
set((' *
;((* +
}((, -
public)) 
string)) 
status)) 
{)) 
get)) "
;))" #
set))$ '
;))' (
}))) *
public++ 
double++ 
?++  
budgetJuniorRallonge++ +
{++, -
get++. 1
;++1 2
set++3 6
;++6 7
}++8 9
public,, 
double,, 
?,,  
budgetSeniorRallonge,, +
{,,, -
get,,. 1
;,,1 2
set,,3 6
;,,6 7
},,8 9
public-- 
double-- 
?-- "
budgetConfirmeRallonge-- -
{--. /
get--0 3
;--3 4
set--5 8
;--8 9
}--: ;
public.. 
double.. 
?.. $
budgetValidationRallonge.. /
{..0 1
get..2 5
;..5 6
set..7 :
;..: ;
}..< =
public// 
double// 
?// #
budgetDirectionRallonge// .
{/// 0
get//1 4
;//4 5
set//6 9
;//9 :
}//; <
public00 
double00 
?00 
budgetGPRallonge00 '
{00( )
get00* -
;00- .
set00/ 2
;002 3
}004 5
public33 
virtual33 

CodeProjet33 !
CodeProjets33" -
{33. /
get330 3
;333 4
set335 8
;338 9
}33: ;
public55 
virtual55 
ICollection55 "
<55" #
ProjetLivraison55# 2
>552 3
ProjetLivraisons554 D
{55E F
get55G J
;55J K
set55L O
;55O P
}55Q R
[88 	

ForeignKey88	 
(88 
$str88  
)88  !
]88! "
public99 
string99 
CommercialId99 "
{99# $
get99% (
;99( )
set99* -
;99- .
}99/ 0
public;; 
User;; 

Commercial;; 
{;;  
get;;! $
;;;$ %
set;;& )
;;;) *
};;+ ,
}<< 
}== ÿ
HC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\ProjetEquipe.cs
	namespace 	

ProjetBack
 
. 
Models 
{ 
public		 

class		 
ProjetEquipe		 
{

 
public 
string 
ProjetId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
EquipeId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Projet 
projet 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Equipe 
Equipe 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} º
KC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\ProjetLivraison.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 	
class


 
ProjetLivraison

 
:

  !
ProjectBase

" -
{ 
public 
string 

ProjetName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
Boolean 
lockoutEnabled %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
Nature 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
scope 
{ 
get  #
;# $
set% (
;( )
}* +
public 
virtual 
ICollection "
<" #
DetailLivraison# 2
>2 3
DetailLivraisons4 D
{E F
getG J
;J K
setL O
;O P
}Q R
public 
string 
ClientId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Client 
Client 
{ 
get "
;" #
set$ '
;' (
}) *
public   
string   
?   
projetEdpId   "
{  # $
get  % (
;  ( )
set  * -
;  - .
}  / 0
public!! 
	ProjetEdp!! 
	projetEdp!! "
{!!# $
get!!% (
;!!( )
set!!* -
;!!- .
}!!/ 0
}$$ 
}%% Ï
QC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\ProjetLivraisonClient.cs
	namespace 	
DAL
 
. 
Models 
{ 
public 	
class
 !
ProjetLivraisonClient %
{		 
public 
string 
ClientId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
ProjetLivraisonId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
virtual 
Client 
Client $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
virtual 
ProjetLivraison &
ProjetLivraison' 6
{7 8
get9 <
;< =
set> A
;A B
}C D
} 
} 
FC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\ProjetUser.cs
	namespace 	

ProjetBack
 
. 
Models 
{ 
public		 

class		 

ProjetUser		 
{

 
public 
string 
UserId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
ProjetId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
User 
User  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
virtual 
Projet 
Projet $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} Ï
GC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\StatutTache.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 

class

 
StatutTache

 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
IdStatutTache #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
ICollection 
< 
Tache  
>  !
Taches" (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} þ
AC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\tache.cs
	namespace		 	

ProjetBack		
 
.		 
Models		 
{

 
public 

class 
Tache 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Charge 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
chargeConsomme $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
	lienAzure 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Createur 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
premierImputation *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
string 
? 
DateCreation #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
status 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
UserId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
User 
? 
User 
{ 
get 
;  
set! $
;$ %
}& '
public   
Boolean   
publique   
{    !
get  " %
;  % &
set  ' *
;  * +
}  , -
public%% 
string%% 
StatutTacheId%% #
{%%$ %
get%%& )
;%%) *
set%%+ .
;%%. /
}%%0 1
public&& 
StatutTache&& 
StatutTache&& &
{&&' (
get&&) ,
;&&, -
set&&. 1
;&&1 2
}&&3 4
public** 
string** 
detailLivraisonId** '
{**( )
get*** -
;**- .
set**/ 2
;**2 3
}**4 5
public++ 
DetailLivraison++ 
detailLivraison++ .
{++/ 0
get++1 4
;++4 5
set++6 9
;++9 :
}++; <
public,, 
virtual,, 
ICollection,, "
<,," #
DetailImputation,,# 3
>,,3 4
DetailImputations,,5 F
{,,G H
get,,I L
;,,L M
set,,N Q
;,,Q R
},,S T
}.. 
}// ÅE
@C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\User.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 

class

 
User

 
{ 
public 
User 
( 
) 
{ 	
Taches 
= 
new 
HashSet  
<  !
Tache! &
>& '
(' (
)( )
;) *
UserPermissions 
= 
new !
HashSet" )
<) *
UserPermission* 8
>8 9
(9 :
): ;
;; <
} 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
IdUser 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Boolean 
	confirmed  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
Nom 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Prenom 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
FullName 
=> !
Prenom" (
+* +
$str, /
+0 1
Nom2 5
;5 6
public 
string 
Adresse 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
LastImputation '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
DateTime 
? 
FirstImputation (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public!! 
string!! 
AdresseEmail!! "
{!!# $
get!!% (
;!!( )
set!!* -
;!!- .
}!!/ 0
public"" 
string"" 
	expertise"" 
{""  !
get""" %
;""% &
set""' *
;""* +
}"", -
public## 
string## 

MotDePasse##  
{##! "
get### &
;##& '
set##( +
;##+ ,
}##- .
public%% 
UserType%% 
Type%% 
{%% 
get%% "
;%%" #
set%%$ '
;%%' (
}%%) *
public)) 
virtual)) 
ICollection)) "
<))" #
Equipe))# )
>))) *
equips))+ 1
{))2 3
get))4 7
;))7 8
set))9 <
;))< =
}))> ?
public++ 
virtual++ 
ICollection++ "
<++" #

EquipeUser++# -
>++- .
equipeUsers++/ :
{++; <
get++= @
;++@ A
set++B E
;++E F
}++G H
public,, 
virtual,, 
ICollection,, "
<,," #
	ProjetEdp,,# ,
>,,, -
ProjetsComercieaux,,. @
{,,A B
get,,C F
;,,F G
set,,H K
;,,K L
},,M N
public-- 
virtual-- 
ICollection-- "
<--" #
profileUser--# .
>--. /
profileUser--0 ;
{--< =
get--> A
;--A B
set--C F
;--F G
}--H I
public// 
string// 
	Telephone// 
{//  !
get//" %
;//% &
set//' *
;//* +
}//, -
public11 
Boolean11 
lockoutEnabled11 %
{11& '
get11( +
;11+ ,
set11- 0
;110 1
}112 3
public22 
DateTime22 
?22 
lastConnexion22 &
{22' (
get22) ,
;22, -
set22. 1
;221 2
}223 4
public33 
string33 
Createur33 
{33  
get33! $
;33$ %
set33& )
;33) *
}33+ ,
public44 
string44 
?44 
DateCreation44 #
{44$ %
get44& )
;44) *
set44+ .
;44. /
}440 1
public55 
string55 $
DateDerniereModification55 .
{55/ 0
get551 4
;554 5
set556 9
;559 :
}55; <
public77 
string77 
Modificateur77 "
{77# $
get77% (
;77( )
set77* -
;77- .
}77/ 0
public99 
ICollection99 
<99 

Imputation99 %
>99% &
Imputations99' 2
{993 4
get995 8
;998 9
set99: =
;99= >
}99? @
public;; 
string;; 
ProfilId;; 
{;;  
get;;! $
;;;$ %
set;;& )
;;;) *
};;+ ,
public== 
ICollection== 
<== 
Tache==  
>==  !
Taches==" (
{==) *
get==+ .
;==. /
set==0 3
;==3 4
}==5 6
public>> 
ICollection>> 
<>> 
UserPermission>> )
>>>) *
UserPermissions>>+ :
{>>; <
get>>= @
;>>@ A
set>>B E
;>>E F
}>>G H
public@@ 
virtual@@ 
ICollection@@ "
<@@" #

ProjetUser@@# -
>@@- .
ProjetUsers@@/ :
{@@; <
get@@= @
;@@@ A
set@@B E
;@@E F
}@@G H
publicAA 
DateTimeAA 
?AA 
ResetPasswordAA &
{AA' (
getAA) ,
;AA, -
setAA. 1
;AA1 2
}AA3 4
}CC 
publicEE 

enumEE 
UserTypeEE 
{FF 
AdminGG 
=GG 
$charGG 
,GG 
ManagerHH 
=HH 
$charHH 
,HH 
UserII 
=II 
$charII 
,II 

CommercialJJ 
=JJ 
$charJJ 
,JJ 
SuperCommercialLL 
=LL 
$charLL 
,LL 
}NN 
publicPP 

staticPP 
classPP 
RoleTypePP  
{QQ 
publicRR 
constRR 
stringRR 
AdminRR !
=RR" #
$strRR$ +
;RR+ ,
publicSS 
constSS 
stringSS 
ManagerSS #
=SS$ %
$strSS& /
;SS/ 0
publicTT 
constTT 
stringTT 
SuperCommercialTT +
=TT, -
$strTT. ?
;TT? @
publicUU 
constUU 
stringUU 
UserUU  
=UU! "
$strUU# )
;UU) *
publicVV 
constVV 
stringVV 

CommercialVV &
=VV' (
$strVV) 5
;VV5 6
publicXX 
staticXX 
stringXX 
GetRoleXX $
(XX$ %
UserTypeXX% -
typeXX. 2
)XX2 3
{YY 	
stringZZ 
roleZZ 
=ZZ 
stringZZ  
.ZZ  !
EmptyZZ! &
;ZZ& '
switch[[ 
([[ 
type[[ 
)[[ 
{\\ 
case]] 
UserType]] 
.]] 
Admin]] #
:]]# $
role^^ 
=^^ 
Admin^^  
;^^  !
break__ 
;__ 
case`` 
UserType`` 
.`` 
SuperCommercial`` -
:``- .
roleaa 
=aa 
SuperCommercialaa *
;aa* +
breakbb 
;bb 
casecc 
UserTypecc 
.cc 
Managercc %
:cc% &
roledd 
=dd 
Managerdd "
;dd" #
breakee 
;ee 
caseff 
UserTypeff 
.ff 
Userff "
:ff" #
rolegg 
=gg 
Usergg 
;gg  
breakhh 
;hh 
caseii 
UserTypeii 
.ii 

Commercialii (
:ii( )
rolejj 
=jj 

Commercialjj %
;jj% &
breakkk 
;kk 
defaultll 
:ll 
breakll 
;ll 
}mm 
returnnn 
rolenn 
;nn 
}qq 	
}ss 
}tt Þ
JC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Models\UserPermission.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 
class

	 
UserPermission

 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
[ 	
Required	 
] 
public 
string 
UserId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
PermissionId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
public 

Permission 

Permission $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
	CreatedBy 
{  !
get" %
;% &
set' *
;* +
}, -
} 
}   

<C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Program.cs
	namespace

 	

ProjetBack


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} 
YC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\PushServices\INotificationHubService.cs
	namespace 	

ProjetBack
 
. 
PushServices !
{ 
public		 

	interface		 #
INotificationHubService		 ,
{

 
Task 
GetNotifications 
( 
params $
Notification% 1
[1 2
]2 3
notifications4 A
)A B
;B C
Task 
GetNotifications 
( 
object $
list% )
)) *
;* +
} 
} E
QC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\PushServices\NotificationHub.cs
	namespace 	

ProjetBack
 
. 
PushServices !
{ 
[ 
	Authorize 
] 
public 

class 
NotificationHub  
:  !
Hub" %
<% &#
INotificationHubService& =
>= >
{ 
private 
readonly 
PilotageDBContext *

_dbContext+ 5
;5 6
public 
NotificationHub 
( 
PilotageDBContext 0
context1 8
)8 9
{ 	
this 
. 

_dbContext 
= 
context %
;% &
} 	
public 
override 
async 
Task "
OnConnectedAsync# 3
(3 4
)4 5
{ 	
var 
userRole 
= 
this 
.  
Context  '
.' (
User( ,
., -
Claims- 3
.3 4
FirstOrDefault4 B
(B C
xC D
=>E G
xH I
.I J
TypeJ N
==O Q

ClaimTypesR \
.\ ]
Role] a
)a b
?b c
.c d
Valued i
;i j
var 
userId 
= 
this 
. 
Context %
.% &
User& *
.* +
FindFirstValue+ 9
(9 :

ClaimTypes: D
.D E
NameIdentifierE S
)S T
;T U
await   
Groups   
.   
AddToGroupAsync   )
(  ) *
Context  * 1
.  1 2
ConnectionId  2 >
,  > ?
userRole  ? G
)  G H
;  H I
if## 
(## 
userRole## 
==## 
RoleType## $
.##$ %
Admin##% *
)##* +
{$$ 
var++ 
notifications++ !
=++" #
await++$ )
(+++ ,
from++, 0
Imputations++1 <
in++= ?

_dbContext++@ J
.++J K
Imputations++K V
join,,$ (
user,,) -
in,,. 0

_dbContext,,1 ;
.,,; <
Users,,< A
on,,B D
Imputations,,E P
.,,P Q
UserId,,Q W
equals,,X ^
user,,_ c
.,,c d
IdUser,,d j
where//$ )
Imputations//* 5
.//5 6
StatusImputation//6 F
==//F H
$num//I J
select00, 2
new003 6
{11$ %
FullName33( 0
=331 2
user333 7
.337 8
Nom338 ;
+33< =
$str33> A
+33B C
user33D H
.33H I
Prenom33I O
,33O P
	DateDebut44( 1
=442 3
Imputations444 ?
.44? @
	DateDebut44@ I
.44I J
Date44J N
.44N O
ToString44O W
(44W X
)44X Y
,44Y Z
DateFin55( /
=550 1
Imputations552 =
.55= >
DateFin55> E
.55E F
Date55F J
.55J K
ToString55K S
(55S T
)55T U
}66, -
)66- .
.66. /
Select66/ 5
(665 6
x666 7
=>668 :
new66; >
Notification66? K
{77$ %
Title88( -
=88. /
x880 1
.881 2
FullName882 :
+88; <
$str88= W
,88W X
Content99( /
=990 1
x992 3
.993 4
	DateDebut994 =
+99> ?
$str99@ C
+99D E
x99F G
.99G H
DateFin99H O
,99O P

ActionLink::( 2
=::3 4
$str::5 H
,::H I
	startDate;;( 1
=;;2 3
x;;4 5
.;;5 6
	DateDebut;;6 ?
,;;? @
endDate<<( /
=<<0 1
x<<2 3
.<<3 4
DateFin<<4 ;
,<<; <
}>>$ %
)>>% &
.>>& '
ToArrayAsync>>' 3
(>>3 4
)>>4 5
;>>5 6
await?? 
Clients?? 
.?? 
Client?? $
(??$ %
Context??% ,
.??, -
ConnectionId??- 9
)??9 :
.??: ;
GetNotifications??; K
(??K L
notifications??L Y
)??Y Z
;??Z [
}@@ 
elseAA 
ifAA 
(AA 
userRoleAA 
==AA  
RoleTypeAA! )
.AA) *
ManagerAA* 1
)AA2 3
{BB 
varCC 
notificationsCC !
=CC" #
awaitCC$ )
(CC* +
fromCC+ /
ImputationsCC0 ;
inCC< >

_dbContextCC? I
.CCI J
ImputationsCCJ U
joinDD+ /
userDD0 4
inDD5 7

_dbContextDD8 B
.DDB C
UsersDDC H
onDDI K
ImputationsDDL W
.DDW X
UserIdDDX ^
equalsDD_ e
userDDf j
.DDj k
IdUserDDk q
joinFF+ /

equipeUserFF0 :
inFF; =

_dbContextFF> H
.FFH I

EquipeUserFFI S
onFFT V
userFFW [
.FF[ \
IdUserFF\ b
equalsFFc i

equipeUserFFj t
.FFt u
UserIdFFu {
whereGG+ 0
ImputationsGG1 <
.GG< =
StatusImputationGG= M
==GGN P
$numGGQ R
&&GGS U

equipeUserGGV `
.GG` a
EquipeGGa g
.GGg h
	ManagerIdGGh q
==GGr t
userIdGGu {
selectHH+ 1
newHH2 5
{II+ ,
FullNameKK/ 7
=KK8 9
userKK: >
.KK> ?
NomKK? B
+KKC D
$strKKE H
+KKI J
userKKK O
.KKO P
PrenomKKP V
,KKV W
	DateDebutLL/ 8
=LL9 :
ImputationsLL; F
.LLF G
	DateDebutLLG P
.LLP Q
DateLLQ U
.LLU V
ToStringLLV ^
(LL^ _
)LL_ `
,LL` a
DateFinMM/ 6
=MM7 8
ImputationsMM9 D
.MMD E
DateFinMME L
.MML M
DateMMM Q
.MMQ R
ToStringMMR Z
(MMZ [
)MM[ \
}NN+ ,
)NN, -
.NN- .
SelectNN. 4
(NN4 5
xNN5 6
=>NN7 9
newNN: =
NotificationNN> J
{OO+ ,
TitlePP/ 4
=PP5 6
xPP7 8
.PP8 9
FullNamePP9 A
+PPB C
$strPPD ^
,PP^ _
ContentQQ/ 6
=QQ7 8
xQQ9 :
.QQ: ;
	DateDebutQQ; D
+QQE F
$strQQG J
+QQK L
xQQM N
.QQN O
DateFinQQO V
,QQV W

ActionLinkRR/ 9
=RR: ;
$strRR< O
,RRO P
	startDateSS/ 8
=SS9 :
xSS; <
.SS< =
	DateDebutSS= F
,SSF G
endDateTT/ 6
=TT7 8
xTT9 :
.TT: ;
DateFinTT; B
,TTB C
}VV+ ,
)VV, -
.VV- .
DistinctVV. 6
(VV6 7
)VV7 8
.VV8 9
ToArrayAsyncVV9 E
(VVE F
)VVF G
;VVG H
awaitXX 
ClientsXX 
.XX 
ClientXX #
(XX# $
ContextXX$ +
.XX+ ,
ConnectionIdXX, 8
)XX8 9
.XX9 :
GetNotificationsXX: J
(XXJ K
notificationsXXK X
)XXX Y
;XXY Z
}YY 
await\\ 
base\\ 
.\\ 
OnConnectedAsync\\ (
(\\( )
)\\) *
;\\* +
}^^ 	
public`` 
override`` 
async`` 
Task`` "
OnDisconnectedAsync``# 6
(``6 7
	Exception``7 @
	exception``A J
)``J K
{aa 	
awaitbb 
Groupsbb 
.bb  
RemoveFromGroupAsyncbb -
(bb- .
Contextbb. 5
.bb5 6
ConnectionIdbb6 B
,bbB C
thisbbD H
.bbH I
ContextbbI P
.bbP Q
UserbbQ U
.bbU V
ClaimsbbV \
.bb\ ]
FirstOrDefaultbb] k
(bbk l
xbbl m
=>bbn p
xbbq r
.bbr s
Typebbs w
==bbx z

ClaimTypes	bb{ 
.
bb 
Role
bb 
)
bb 
?
bb 
.
bb 
Value
bb 
)
bb 
;
bb 
awaitcc 
basecc 
.cc 
OnDisconnectedAsynccc *
(cc* +
	exceptioncc+ 4
)cc4 5
;cc5 6
}dd 	
}ee 
}ff £N
bC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Services\Implementation\BackgroundEmailSender.cs
	namespace 	

ProjetBack
 
. 
Services 
. 
Implementation ,
{ 
public 

class !
BackgroundEmailSender &
:' ("
IBackgroundEmailSender) ?
{ 
private 
readonly 
PilotageDBContext *
_context+ 3
;3 4
private 
readonly 
IConfiguration '
config( .
;. /
public !
BackgroundEmailSender $
($ %
PilotageDBContext% 6
_context7 ?
,? @
IConfigurationA O
configP V
)V W
{ 	
this 
. 
_context 
= 
_context #
;# $
this 
. 
config 
= 
config  
;  !
} 	
public 
async 
Task 
< 
List 
< 
string %
>% &
>& '
GetManagerByUser( 8
(8 9
string9 ?
id@ B
)B C
{   	
var"" 
dbresult"" 
="" 
await""  
_context""! )
."") *

EquipeUser""* 4
.""4 5
Include## 
(## 
e## 
=>## 
e## 
.## 
User## 
)##  
.##  !
Where##! &
(##& '
e##' (
=>$$ 
e$$ 
.$$ 
UserId$$ 
==$$ 
id$$ 
)$$ 
.$$  
Select$$  &
($$& '
e$$' (
=>$$) +
e$$, -
.$$- .
EquipeId$$. 6
)$$6 7
.$$7 8
ToListAsync$$8 C
($$C D
)$$D E
;$$E F
var%% 
result2%% 
=%% 
await%% 
_context%%  (
.%%( )
Equips%%) /
.&& 
Include&& 
(&& 
e&& 
=>&& 
e&& 
.&&  
Manager&&  '
)&&' (
.'' 
Where'' 
('' 
e'' 
=>'' 
dbresult'' $
.''$ %
Contains(( 
((( 
e(( 
.(( 
Id(( 
)(( 
)(( 
.)) 
Select)) 
()) 
e)) 
=>)) 
e)) 
.)) 
Manager)) &
.))& '
AdresseEmail))' 3
)))3 4
.** 
Distinct** 
(** 
)** 
.** 
ToListAsync** '
(**' (
)**( )
;**) *
return++ 
result2++ 
;++ 
}-- 	
public11 
async11 
Task11 
DoWork11  
(11  !
)11! "
{22 	
DateTime33 
	startDate33 
=33  
DateTime33! )
.33) *
Now33* -
.33- .
StartOfWeek33. 9
(339 :
	DayOfWeek33: C
.33C D
Monday33D J
)33J K
;33K L
DateTime44 
endDate44 
=44 
	startDate44 (
.44( )
AddDays44) 0
(440 1
$num441 2
)442 3
;443 4
List55 
<55 
string55 
>55 
resultat55 !
=55" #
new55$ '
List55( ,
<55, -
string55- 3
>553 4
(554 5
)555 6
;556 7
HashSet66 
<66 
string66 
>66 
MailsManagers66 )
=66* +
new66, /
HashSet660 7
<667 8
string668 >
>66> ?
(66? @
)66@ A
;66A B
if77 
(77 
DateTime77 
.77 
Now77 
.77 
Date77 !
==77" $
endDate77% ,
)77, -
{88 
var99 
result99 
=99 
await99 "
_context99# +
.99+ ,
Imputations99, 7
.997 8
Where998 =
(99= >
x99> ?
=>99@ B
x99C D
.99D E
StatusImputation99E U
!=99V X
$num99Y Z
&&99[ ]
x99^ _
.99_ `
DateFin99` g
.99g h
Date99h l
==99m o
endDate99p w
&&99x z
x99{ |
.99| }
	DateDebut	99} 
.
99 
Date
99 
==
99 
	startDate
99 
)
99 
.
99 
Include
99 ¡
(
99¡ ¢
x
99¢ £
=>
99¤ ¦
x
99§ ¨
.
99¨ ©
User
99© ­
)
99­ ®
.
99® ¯
Select
99¯ µ
(
99µ ¶
x
99¶ ·
=>
99¸ º
x
99» ¼
.
99¼ ½
UserId
99½ Ã
)
99Ã Ä
.
99Ä Å
ToListAsync
99Å Ð
(
99Ð Ñ
)
99Ñ Ò
;
99Ò Ó
var;; 
result1;; 
=;; 
await;; #
_context;;$ ,
.;;, -
Users;;- 2
.;;2 3
Include;;3 :
(;;: ;
e;;; <
=>;;< >
e;;> ?
.;;? @
equips;;@ F
);;F G
.;;G H
Where;;H M
(;;M N
x;;N O
=>;;P R
!;;S T
result;;T Z
.;;Z [
Contains;;[ c
(;;c d
x;;d e
.;;e f
IdUser;;f l
);;l m
&&;;n p
(;;q r
x;;r s
.;;s t
Type;;t x
==;;y {
UserType	;;| 
.
;; 
User
;; 
||
;; 
x
;; 
.
;; 
Type
;; 
==
;; 
UserType
;; 
.
;;  
Manager
;;  §
)
;;§ ¨
&&== 
(== 
x== 
.== 
FirstImputation== %
====& (
null==) -
||==. 0
x==1 2
.==2 3
FirstImputation==3 B
<===C E
endDate==F M
)==M N
&&??  
(??! "
x??" #
.??# $
LastImputation??$ 2
>=??3 5
endDate??6 =
||??> @
x??A B
.??B C
LastImputation??C Q
==??R T
null??U Y
)??Y Z
)@@ 
.@@ 
ToListAsync@@ 
(@@ 
)@@ 
;@@  
ifAA 
(AA 
result1AA 
.AA 
AnyAA 
(AA  
)AA  !
)AA! "
{BB 

SmtpClientDD 
clientDD %
=DD& '
newDD( +

SmtpClientDD, 6
(DD6 7
$strDD7 G
,DDG H
$numDDI L
)DDL M
;DDM N
clientEE 
.EE 
	EnableSslEE $
=EE% &
trueEE' +
;EE+ ,
clientFF 
.FF 
DeliveryMethodFF )
=FF* +
SmtpDeliveryMethodFF, >
.FF> ?
NetworkFF? F
;FFF G
clientGG 
.GG !
UseDefaultCredentialsGG 0
=GG1 2
falseGG3 8
;GG8 9
clientHH 
.HH 
CredentialsHH &
=HH' (
newHH) ,
NetworkCredentialHH- >
(HH> ?
configHH? E
.HHE F
GetValueHHF N
<HHN O
stringHHO U
>HHU V
(HHV W
$strHHW p
)HHp q
,HHq r
configHHs y
.HHy z
GetValue	HHz 
<
HH 
string
HH 
>
HH 
(
HH 
$str
HH ¡
)
HH¡ ¢
)
HH¢ £
;
HH£ ¤
MailMessageII 
mailMessageII  +
=II, -
newII. 1
MailMessageII2 =
(II= >
)II> ?
;II? @
result1JJ 
.JJ 
ForEachJJ #
(JJ# $
eJJ$ %
=>JJ& (
{KK 
mailMessageLL "
.LL" #
ToLL# %
.LL% &
AddLL& )
(LL) *
eLL* +
.LL+ ,
AdresseEmailLL, 8
)LL8 9
;LL9 :
(MM 
GetManagerByUserMM (
(MM( )
eMM) *
.MM* +
IdUserMM+ 1
)MM1 2
.MM2 3
ResultMM3 9
)MM9 :
.MM: ;
ForEachMM; B
(MMB C
aMMC D
=>MME G
MailsManagersNN $
.NN$ %
AddNN% (
(NN( )
aNN) *
)NN* +
)NN+ ,
;NN, -
}OO 
)OO 
;OO 
foreachPP 
(PP 
varPP  
EmailPP! &
inPP' )
MailsManagersPP* 7
)PP7 8
{QQ 
mailMessageRR #
.RR# $
CCRR$ &
.RR& '
AddRR' *
(RR* +
EmailRR+ 0
)RR0 1
;RR1 2
}SS 
mailMessageTT 
.TT  
CCTT  "
.TT" #
DistinctTT# +
(TT+ ,
)TT, -
;TT- .
mailMessageUU 
.UU  
FromUU  $
=UU% &
newUU' *
MailAddressUU+ 6
(UU6 7
configUU7 =
.UU= >
GetValueUU> F
<UUF G
stringUUG M
>UUM N
(UUN O
$strUUO h
)UUh i
)UUi j
;UUj k
mailMessageVV 
.VV  
SubjectVV  '
=VV( )
$strVV* =
;VV= >
mailMessageWW 
.WW  

IsBodyHtmlWW  *
=WW+ ,
trueWW- 1
;WW1 2
mailMessageXX 
.XX  
BodyXX  $
=XX% &
$strXX' m
;XXm n
clientYY 
.YY 
SendYY 
(YY  
mailMessageYY  +
)YY+ ,
;YY, -
}ZZ 
}\\ 
}aa 	
}bb 
}cc Æ)
gC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Services\Implementation\ConsumeScopedHostedService.cs
	namespace 	

ProjetBack
 
. 
Services 
. 
Implementation ,
{ 
public 

abstract 
class &
ConsumeScopedHostedService 4
:5 6
IHostedService7 E
,E F
IDisposableG R
{ 
private 
System 
. 
Timers 
. 
Timer #
_timer$ *
;* +
private 
readonly 
CronExpression '
_expression( 3
;3 4
private 
readonly 
TimeZoneInfo %
timeZoneInfo& 2
;2 3
public &
ConsumeScopedHostedService )
() *
stringH N
cronExpressionO ]
,] ^
TimeZoneInfo_ k
timeZoneInfol x
)x y
{ 	
_expression 
= 
CronExpression (
.( )
Parse) .
(. /
cronExpression/ =
)= >
;> ?
this 
. 
timeZoneInfo 
= 
timeZoneInfo  ,
;, -
} 	
public 
virtual 
async 
Task !

StartAsync" ,
(, -
CancellationToken- >
cancellationToken? P
)P Q
{ 	
await"" 
ScheduleJob"" 
("" 
cancellationToken"" /
)""/ 0
;""0 1
}## 	
public%% 
virtual%% 
Task%% 
	StopAsync%% %
(%%% &
CancellationToken%%& 7
cancellationToken%%8 I
)%%I J
{&& 	
_timer'' 
?'' 
.'' 
Stop'' 
('' 
)'' 
;'' 
return(( 
Task(( 
.(( 
CompletedTask(( %
;((% &
})) 	
public++ 
virtual++ 
async++ 
Task++ !
DoWork++" (
(++( )
CancellationToken++) :
cancellationToken++; L
)++L M
{,, 	
await-- 
Task-- 
.-- 
Delay-- 
(-- 
$num-- !
,--! "
cancellationToken--# 4
)--4 5
;--5 6
}66 	
public:: 
virtual:: 
void:: 
Dispose:: #
(::# $
)::$ %
{;; 	
_timer<< 
?<< 
.<< 
Dispose<< 
(<< 
)<< 
;<< 
}== 	
	protected@@ 
virtual@@ 
async@@ 
Task@@  $
ScheduleJob@@% 0
(@@0 1
CancellationToken@@1 B
cancellationToken@@C T
)@@T U
{AA 	
varBB 
nextBB 
=BB 
_expressionBB "
.BB" #
GetNextOccurrenceBB# 4
(BB4 5
DateTimeOffsetBB5 C
.BBC D
NowBBD G
,BBG H
timeZoneInfoBBI U
)BBU V
;BBV W
ifCC 
(CC 
nextCC 
.CC 
HasValueCC 
)CC 
{DD 
varEE 
delayEE 
=EE 
nextEE  
.EE  !
ValueEE! &
-EE' (
DateTimeOffsetEE) 7
.EE7 8
NowEE8 ;
;EE; <
ifFF 
(FF 
delayFF 
.FF 
TotalMillisecondsFF +
<=FF, .
$numFF/ 0
)FF0 1
{GG 
awaitHH 
ScheduleJobHH %
(HH% &
cancellationTokenHH& 7
)HH7 8
;HH8 9
}II 
_timerJJ 
=JJ 
newJJ 
SystemJJ #
.JJ# $
TimersJJ$ *
.JJ* +
TimerJJ+ 0
(JJ0 1
delayJJ1 6
.JJ6 7
TotalMillisecondsJJ7 H
)JJH I
;JJI J
_timerKK 
.KK 
ElapsedKK 
+=KK !
asyncKK" '
(KK( )
senderKK) /
,KK/ 0
argsKK1 5
)KK5 6
=>KK7 9
{LL 
_timerMM 
.MM 
DisposeMM "
(MM" #
)MM# $
;MM$ %
_timerNN 
=NN 
nullNN !
;NN! "
ifPP 
(PP 
!PP 
cancellationTokenPP *
.PP* +#
IsCancellationRequestedPP+ B
)PPB C
{QQ 
awaitRR 
DoWorkRR $
(RR$ %
cancellationTokenRR% 6
)RR6 7
;RR7 8
}SS 
ifUU 
(UU 
!UU 
cancellationTokenUU *
.UU* +#
IsCancellationRequestedUU+ B
)UUB C
{VV 
awaitWW 
ScheduleJobWW )
(WW) *
cancellationTokenWW* ;
)WW; <
;WW< =
}XX 
}YY 
;YY 
_timerZZ 
.ZZ 
StartZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
await\\ 
Task\\ 
.\\ 
CompletedTask\\ $
;\\$ %
}]] 	
}ii 
}jj £
[C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Services\Implementation\ScheduleConfig.cs
	namespace 	

ProjetBack
 
. 
Services 
. 
Implementation ,
{ 
public		 

class		 
ScheduleConfig		 
<		  
T		  !
>		! "
:		# $
IScheduleConfig		% 4
<		4 5
T		5 6
>		6 7
{

 
public 
string 
CronExpression $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
TimeZoneInfo 
TimeZoneInfo (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} 
gC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Services\Implementation\ScheduledServiceExtensions.cs
	namespace 	

ProjetBack
 
. 
Services 
. 
Implementation ,
{		 
public

 

static

 
class

 &
ScheduledServiceExtensions

 2
{ 
public 
static 
IServiceCollection (

AddCronJob) 3
<3 4
T4 5
>5 6
(6 7
this7 ;
IServiceCollection< N
servicesO W
,W X
ActionY _
<_ `
IScheduleConfig` o
<o p
Tp q
>q r
>r s
optionst {
){ |
where	} 
T
 
:
 (
ConsumeScopedHostedService
 ¡
{ 	
if 
( 
options 
== 
null 
)  
{ 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7
options7 >
)> ?
,? @
$strA k
)k l
;l m
} 
var 
config 
= 
new 
ScheduleConfig +
<+ ,
T, -
>- .
(. /
)/ 0
;0 1
options 
. 
Invoke 
( 
config !
)! "
;" #
if 
( 
string 
. 
IsNullOrWhiteSpace )
() *
config* 0
.0 1
CronExpression1 ?
)? @
)@ A
{ 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7
ScheduleConfig7 E
<E F
TF G
>G H
.H I
CronExpressionI W
)W X
,X Y
$str	Z 
)
 
;
 
} 
services 
. 
AddSingleton !
<! "
IScheduleConfig" 1
<1 2
T2 3
>3 4
>4 5
(5 6
config6 <
)< =
;= >
services 
. 
AddHostedService %
<% &
T& '
>' (
(( )
)) *
;* +
return 
services 
; 
} 	
} 
} é
\C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Services\Implementation\SendMailService.cs
	namespace

 	

ProjetBack


 
.

 
Services

 
.

 
Implementation

 ,
{ 
public 

class 
SendMailService  
:! "&
ConsumeScopedHostedService# =
{ 
private 
readonly 
ILogger  
<  !
SendMailService! 0
>0 1
_logger2 9
;9 :
private 
readonly 
IServiceProvider )
service* 1
;1 2
public 
SendMailService 
( 
IScheduleConfig .
<. /
SendMailService/ >
>> ?
config@ F
,F G
ILoggerH O
<O P
SendMailServiceP _
>_ `
loggera g
,g h
IServiceProvideri y
service	z 
)
 
:
 
base
 
(
 
config
 
.
 
CronExpression
  
,
  ¡
config
¢ ¨
.
¨ ©
TimeZoneInfo
© µ
)
µ ¶
{ 	
_logger 
= 
logger 
; 
this 
. 
service 
= 
service "
;" #
} 	
public 
override 
Task 

StartAsync '
(' (
CancellationToken( 9
cancellationToken: K
)K L
{ 	
_logger 
. 
LogInformation "
(" #
$str# 8
)8 9
;9 :
return 
base 
. 

StartAsync "
(" #
cancellationToken# 4
)4 5
;5 6
} 	
public 
override 
async 
Task "
DoWork# )
() *
CancellationToken* ;
cancellationToken< M
)M N
{ 	
using 
( 
var 
scope 
= 
service &
.& '
CreateScope' 2
(2 3
)3 4
)4 5
{ 
var!! #
scopedProcessingService!! +
=!!, -
scope!!. 3
.!!3 4
ServiceProvider!!4 C
.!!C D
GetRequiredService!!D V
<!!V W"
IBackgroundEmailSender!!W m
>!!m n
(!!n o
)!!o p
;!!p q
await## #
scopedProcessingService## -
.##- .
DoWork##. 4
(##4 5
)##5 6
;##6 7
}$$ 
}&& 	
public(( 
override(( 
Task(( 
	StopAsync(( &
(((& '
CancellationToken((' 8
cancellationToken((9 J
)((J K
{)) 	
_logger** 
.** 
LogInformation** "
(**" #
$str**# =
)**= >
;**> ?
return++ 
base++ 
.++ 
	StopAsync++ !
(++! "
cancellationToken++" 3
)++3 4
;++4 5
},, 	
}-- 
}.. Æ
^C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Services\Interface\IBackgroundEmailSender.cs
	namespace 	

ProjetBack
 
. 
Services 
. 
	Interface '
{ 
public 
	interface	 "
IBackgroundEmailSender )
{		 
public

 
Task

 
DoWork

 
(

 
)

 
;

 
} 
} É
UC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Services\Interface\IEmailService.cs
	namespace 	

ProjetBack
 
. 
Services 
. 
	Interface '
{ 
public 

class 
IEmailService 
{		 
}

 
} 
WC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Services\Interface\IScheduleConfig.cs
	namespace 	

ProjetBack
 
. 
Services 
. 
	Interface '
{ 
public 

	interface 
IScheduleConfig $
<$ %
T% &
>& '
{		 
string

 
CronExpression

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
TimeZoneInfo 
TimeZoneInfo !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} û]
<C:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Startup.cs
	namespace## 	

ProjetBack##
 
{$$ 
public%% 

class%% 
Startup%% 
{&& 
public'' 
Startup'' 
('' 
IConfiguration'' %
configuration''& 3
)''3 4
{(( 	
Configuration)) 
=)) 
configuration)) )
;))) *
}** 	
public,, 
IConfiguration,, 
Configuration,, +
{,,, -
get,,. 1
;,,1 2
},,3 4
public// 
void// 
ConfigureServices// %
(//% &
IServiceCollection//& 8
services//9 A
)//A B
{00 	
services== 
.== 
AddDbContext== !
<==! "
PilotageDBContext==" 3
>==3 4
(==4 5
opts==5 9
=>==: <
opts=== A
.==A B
UseSqlServer==B N
(==N O
Configuration==O \
[==\ ]
$str==] z
]==z {
)=={ |
.==| }
ReplaceService	==} 
<
== 3
%IQueryTranslationPostprocessorFactory
== ±
,
==± ²?
1SqlServer2008QueryTranslationPostprocessorFactory
==³ ä
>
==ä å
(
==å æ
)
==æ ç
,
==ç è
ServiceLifetime
==é ø
.
==ø ù
	Transient
==ù 
)
== 
;
== 
services@@ 
.@@ 
AddControllers@@ #
(@@# $
)@@$ %
.@@% &
AddNewtonsoftJson@@& 7
(@@7 8
options@@8 ?
=>@@@ B
{AA 
optionsBB 
.BB 
SerializerSettingsBB *
.BB* +!
ReferenceLoopHandlingBB+ @
=BBA B!
ReferenceLoopHandlingBBC X
.BBX Y
IgnoreBBY _
;BB_ `
}CC 
)CC 
;CC 
servicesGG 
.GG 
AddCorsGG 
(GG 
optionsGG $
=>GG% '
optionsGG( /
.GG/ 0
	AddPolicyGG0 9
(GG9 :
$strGG: F
,GGF G
builderGGH O
=>GGP R
{HH 
builderII 
.II 
AllowAnyOriginII &
(II& '
)II' (
.II( )
AllowAnyMethodII) 7
(II7 8
)II8 9
.II9 :
AllowAnyHeaderII: H
(IIH I
)III J
;IIJ K
}JJ 
)JJ 
)JJ 
;JJ 
servicesMM 
.MM 

AddSignalRMM 
(MM  
)MM  !
;MM! "
servicesNN 
.NN 
AddTransientNN !
<NN! "

RSAEncryptNN" ,
>NN, -
(NN- .
)NN. /
;NN/ 0
varSS 
appSettingsSectionSS "
=SS# $
ConfigurationSS% 2
.SS2 3

GetSectionSS3 =
(SS= >
$strSS> K
)SSK L
;SSL M
servicesTT 
.TT 
	ConfigureTT 
<TT 
AppSettingsTT *
>TT* +
(TT+ ,
appSettingsSectionTT, >
)TT> ?
;TT? @
servicesVV 
.VV 
AddAuthenticationVV &
(VV& '
JwtBearerDefaultsVV' 8
.VV8 9 
AuthenticationSchemeVV9 M
)VVM N
.WW 
AddJwtBearerWW 
(WW 
optionsWW 
=>WW 
{XX 
optionsYY 
.YY %
TokenValidationParametersYY (
=YY) *
newYY+ .%
TokenValidationParametersYY/ H
{ZZ 
ValidateIssuer[[ 
=[[ 
true[[  
,[[  !
ValidateAudience\\ 
=\\ 
true\\ "
,\\" #
ValidateLifetime]] 
=]] 
true]] "
,]]" #$
ValidateIssuerSigningKey^^ #
=^^$ %
true^^& *
,^^* +
ValidIssuer__ 
=__ 
Configuration__ &
[__& '
$str__' 3
]__3 4
,__4 5
ValidAudience`` 
=`` 
Configuration`` (
[``( )
$str``) 5
]``5 6
,``6 7
IssuerSigningKeyaa 
=aa 
newaa ! 
SymmetricSecurityKeyaa" 6
(aa6 7
Encodingaa7 ?
.aa? @
UTF8aa@ D
.aaD E
GetBytesaaE M
(aaM N
ConfigurationaaN [
[aa[ \
$straa\ e
]aae f
)aaf g
)aag h
}bb 
;bb 	
optionscc 
.cc 
Eventscc 
=cc 
newcc 
JwtBearerEventscc +
{dd 
OnMessageReceivedee 
=ee 
contextee &
=>ee' )
{ff 
vargg 
accessTokengg 
=gg  
contextgg! (
.gg( )
Requestgg) 0
.gg0 1
Querygg1 6
[gg6 7
$strgg7 E
]ggE F
;ggF G
ifhh 
(hh 
stringhh 
.hh 
IsNullOrEmptyhh '
(hh' (
accessTokenhh( 3
)hh3 4
==hh5 7
falsehh8 =
)hh= >
{ii 
contextjj 
.jj 
Tokenjj  
=jj! "
accessTokenjj# .
;jj. /
}kk 
returnll 
Taskll 
.ll 
CompletedTaskll (
;ll( )
}mm 
}nn 
;nn 	
}oo 
)oo 
;oo 
servicespp 
.pp 
AddSwaggerGenpp "
(pp" #
cpp# $
=>pp% '
{qq 
crr 
.rr 

SwaggerDocrr 
(rr 
$strrr #
,rr# $
newrr% (
OpenApiInforr) 4
{rr5 6
Titlerr7 <
=rr= >
$strrr? N
,rrN O
VersionrrP W
=rrX Y
$strrrZ `
}rra b
)rrb c
;rrc d
cuu 
.uu !
AddSecurityDefinitionuu '
(uu' (
$struu( 0
,uu0 1
newuu2 5!
OpenApiSecuritySchemeuu6 K
{vv 
Descriptionww 
=ww  !
$str	ww" É
,
wwÉ Ê
Namexx 
=xx 
$strxx *
,xx* +
Inyy 
=yy 
ParameterLocationyy *
.yy* +
Headeryy+ 1
,yy1 2
Typezz 
=zz 
SecuritySchemeTypezz -
.zz- .
ApiKeyzz. 4
,zz4 5
Scheme{{ 
={{ 
$str{{ %
}|| 
)|| 
;|| 
c~~ 
.~~ "
AddSecurityRequirement~~ (
(~~( )
new~~) ,&
OpenApiSecurityRequirement~~- G
(~~G H
)~~H I
{ 
{
 
new
 #
OpenApiSecurityScheme
 1
{
 
	Reference
 %
=
& '
new
( +
OpenApiReference
, <
{
 
Type
  $
=
% &
ReferenceType
' 4
.
4 5
SecurityScheme
5 C
,
C D
Id
  "
=
# $
$str
% -
}
 
,
 
Scheme
 "
=
# $
$str
% -
,
- .
Name
  
=
! "
$str
# +
,
+ ,
In
 
=
  
ParameterLocation
! 2
.
2 3
Header
3 9
,
9 :
}
 
,
 
new
 
List
  
<
  !
string
! '
>
' (
(
( )
)
) *
}
 
}
 
)
 
;
 
}
 
)
 
;
 
services
££ 
.
££ $
AddHttpContextAccessor
££ +
(
££+ ,
)
££, -
;
££- .
services
¥¥ 
.
¥¥ 
	AddScoped
¥¥ 
<
¥¥ $
IBackgroundEmailSender
¥¥ 5
,
¥¥5 6#
BackgroundEmailSender
¥¥7 L
>
¥¥L M
(
¥¥M N
)
¥¥N O
;
¥¥O P
services
¦¦ 
.
¦¦ 
AddHostedService
¦¦ %
<
¦¦% &
SendMailService
¦¦& 5
>
¦¦5 6
(
¦¦6 7
)
¦¦7 8
;
¦¦8 9
services
§§ 
.
§§ 

AddCronJob
§§ 
<
§§  
SendMailService
§§  /
>
§§/ 0
(
§§0 1
c
§§1 2
=>
§§3 5
{
¨¨ 
c
©© 
.
©© 
TimeZoneInfo
©© 
=
©©  
TimeZoneInfo
©©! -
.
©©- .
Local
©©. 3
;
©©3 4
c
ªª 
.
ªª 
CronExpression
ªª  
=
ªª! "
$str
ªª# 3
;
ªª3 4
}
­­ 
)
­­ 
;
­­ 
}
°° 	
public
³³ 
void
³³ 
	Configure
³³ 
(
³³ !
IApplicationBuilder
³³ 1
app
³³2 5
,
³³5 6!
IWebHostEnvironment
³³7 J
env
³³K N
)
³³N O
{
´´ 	
app
µµ 
.
µµ 
UseCors
µµ 
(
µµ 
builder
µµ 
=>
µµ  "
builder
µµ# *
.
¶¶ 
WithOrigins
¶¶  
(
¶¶  !
$str
¶¶! 8
)
¶¶8 9
.
·· 
AllowAnyHeader
·· #
(
··# $
)
··$ %
.
¸¸ 
AllowAnyMethod
¸¸ #
(
¸¸# $
)
¸¸$ %
.
¹¹ 
AllowCredentials
¹¹ %
(
¹¹% &
)
¹¹& '
)
ºº 
;
ºº 
app
»» 
.
»» 

UseRouting
»» 
(
»» 
)
»» 
;
»» 
if
¾¾ 
(
¾¾ 
env
¾¾ 
.
¾¾ 
IsDevelopment
¾¾ !
(
¾¾! "
)
¾¾" #
)
¾¾# $
{
¿¿ 
app
ÀÀ 
.
ÀÀ '
UseDeveloperExceptionPage
ÀÀ -
(
ÀÀ- .
)
ÀÀ. /
;
ÀÀ/ 0
}
ÁÁ 
app
ÅÅ 
.
ÅÅ !
UseHttpsRedirection
ÅÅ #
(
ÅÅ# $
)
ÅÅ$ %
;
ÅÅ% &
app
ÇÇ 
.
ÇÇ 
UseCors
ÇÇ 
(
ÇÇ 
$str
ÇÇ $
)
ÇÇ$ %
;
ÇÇ% &
app
ÉÉ 
.
ÉÉ 
UseAuthentication
ÉÉ !
(
ÉÉ! "
)
ÉÉ" #
;
ÉÉ# $
app
ÊÊ 
.
ÊÊ 
UseAuthorization
ÊÊ  
(
ÊÊ  !
)
ÊÊ! "
;
ÊÊ" #
app
ÌÌ 
.
ÌÌ 
UseEndpoints
ÌÌ 
(
ÌÌ 
	endpoints
ÌÌ &
=>
ÌÌ' )
{
ÍÍ 
	endpoints
ÎÎ 
.
ÎÎ 
MapControllers
ÎÎ (
(
ÎÎ( )
)
ÎÎ) *
;
ÎÎ* +
	endpoints
ÏÏ 
.
ÏÏ 
MapHub
ÏÏ  
<
ÏÏ  !
NotificationHub
ÏÏ! 0
>
ÏÏ0 1
(
ÏÏ1 2
$str
ÏÏ2 A
)
ÏÏA B
;
ÏÏB C
}
ÐÐ 
)
ÐÐ 
;
ÐÐ 
app
ÑÑ 
.
ÑÑ 

UseSwagger
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
app
ÒÒ 
.
ÒÒ 
UseSwaggerUI
ÒÒ 
(
ÒÒ 
c
ÒÒ 
=>
ÒÒ !
{
ÓÓ 
c
ÔÔ 
.
ÔÔ 
SwaggerEndpoint
ÔÔ !
(
ÔÔ! "
$str
ÔÔ" =
,
ÔÔ= >
$str
ÔÔ? [
)
ÔÔ[ \
;
ÔÔ\ ]
c
ÕÕ 
.
ÕÕ 
DocumentTitle
ÕÕ 
=
ÕÕ  !
$str
ÕÕ" 5
;
ÕÕ5 6
c
ÖÖ 
.
ÖÖ 
DocExpansion
ÖÖ 
(
ÖÖ 
DocExpansion
ÖÖ +
.
ÖÖ+ ,
None
ÖÖ, 0
)
ÖÖ0 1
;
ÖÖ1 2
c
×× 
.
×× 
RoutePrefix
×× 
=
×× 
string
××  &
.
××& '
Empty
××' ,
;
××, -
}
ÙÙ 
)
ÙÙ 
;
ÙÙ 
}
ÞÞ 	
}
ßß 
}àà °
MC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Tools\DateTimeExtensions.cs
	namespace 	

ProjetBack
 
. 
Tools 
{ 
public 

static 
class 
DateTimeExtensions *
{		 
public

 
static

 
DateTime

 
StartOfWeek

 *
(

* +
this

+ /
DateTime

0 8
dt

9 ;
,

; <
	DayOfWeek

= F
startOfWeek

G R
)

R S
{ 	
int 
diff 
= 
( 
$num 
+ 
( 
dt 
.  
	DayOfWeek  )
-* +
startOfWeek, 7
)7 8
)8 9
%: ;
$num< =
;= >
return 
dt 
. 
AddDays 
( 
- 
$num  
*! "
diff# '
)' (
.( )
Date) -
;- .
} 	
} 
} ã@
EC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\Tools\RSAEncrypt.cs
	namespace 	
Tools
 
. 
Tools 
{ 
public		 

class		 

RSAEncrypt		 
{

 
public 
string 
Decrypt 
( 
string %
text& *
)* +
{ 	
try 
{ 
const 
int 
PROVIDER_RSA_FULL +
=, -
$num. /
;/ 0
const 
string 
CONTAINER_NAME +
=, -
$str. 7
;7 8
CspParameters 
	cspParams '
;' (
	cspParams 
= 
new 
CspParameters  -
(- .
PROVIDER_RSA_FULL. ?
)? @
;@ A
	cspParams 
. 
KeyContainerName *
=+ ,
CONTAINER_NAME- ;
;; <$
RSACryptoServiceProvider (
rsa1) -
=. /
new0 3$
RSACryptoServiceProvider4 L
(L M
	cspParamsM V
)V W
;W X
rsa1 
. 
FromXmlString "
(" #
$str	# ¸
)
¸ ¹
;
¹ º
byte 
[ 
] 
encyrptedBytes %
=& '
Convert( /
./ 0
FromBase64String0 @
(@ A
textA E
)E F
;F G
byte 
[ 
] 
plain 
= 
rsa1 #
.# $
Decrypt$ +
(+ ,
encyrptedBytes, :
,: ;
false< A
)A B
;B C
string 
decryptedString &
=' (
System) /
./ 0
Text0 4
.4 5
Encoding5 =
.= >
UTF8> B
.B C
	GetStringC L
(L M
plainM R
)R S
;S T
return 
decryptedString &
;& '
} 
catch   
{!! 
return"" 
$str"" 
;"" 
}$$ 
}&& 	
public-- 
string-- 
Encrypt-- 
(-- 
string-- %
text--& *
)--* +
{.. 	
const// 
int// 
PROVIDER_RSA_FULL// '
=//( )
$num//* +
;//+ ,
const00 
string00 
CONTAINER_NAME00 '
=00( )
$str00* 3
;003 4
CspParameters22 
	cspParams22 #
;22# $
	cspParams33 
=33 
new33 
CspParameters33 )
(33) *
PROVIDER_RSA_FULL33* ;
)33; <
;33< =
	cspParams44 
.44 
KeyContainerName44 &
=44' (
CONTAINER_NAME44) 7
;447 8$
RSACryptoServiceProvider55 $
rsa155% )
=55* +
new55, /$
RSACryptoServiceProvider550 H
(55H I
	cspParams55I R
)55R S
;55S T
rsa166 
.66 
FromXmlString66 
(66 
$str	66 
)
66 
;
66 
System88 
.88 
Text88 
.88 
UTF8Encoding88 $
encoding88% -
=88. /
new880 3
System884 :
.88: ;
Text88; ?
.88? @
UTF8Encoding88@ L
(88L M
)88M N
;88N O
byte99 
[99 
]99 
	textBytes99 
=99 
encoding99 '
.99' (
GetBytes99( 0
(990 1
text991 5
)995 6
;996 7
byte:: 
[:: 
]:: 
encryptedOutput:: "
=::# $
rsa1::% )
.::) *
Encrypt::* 1
(::1 2
	textBytes::2 ;
,::; <
false::= B
)::B C
;::C D
string;; 
	outputB64;; 
=;; 
Convert;; &
.;;& '
ToBase64String;;' 5
(;;5 6
encryptedOutput;;6 E
);;E F
;;;F G
return<< 
	outputB64<< 
;<< 
}== 	
publicFF 
stringFF 
DecryptQrCodeFF #
(FF# $
stringFF$ *
textFF+ /
)FF/ 0
{GG 	
constHH 
intHH 
PROVIDER_RSA_FULLHH '
=HH( )
$numHH* +
;HH+ ,
constII 
stringII 
CONTAINER_NAMEII '
=II( )
$strII* 3
;II3 4
CspParametersKK 
	cspParamsKK #
;KK# $
	cspParamsLL 
=LL 
newLL 
CspParametersLL )
(LL) *
PROVIDER_RSA_FULLLL* ;
)LL; <
;LL< =
	cspParamsMM 
.MM 
KeyContainerNameMM &
=MM' (
CONTAINER_NAMEMM) 7
;MM7 8$
RSACryptoServiceProviderNN $
rsa1NN% )
=NN* +
newNN, /$
RSACryptoServiceProviderNN0 H
(NNH I
	cspParamsNNI R
)NNR S
;NNS T
rsa1OO 
.OO 
FromXmlStringOO 
(OO 
$str	OO °
)
OO° ±
;
OO± ²
byteSS 
[SS 
]SS 
encyrptedBytesSS !
=SS" #
ConvertSS$ +
.SS+ ,
FromBase64StringSS, <
(SS< =
textSS= A
)SSA B
;SSB C
byteUU 
[UU 
]UU 
plainUU 
=UU 
rsa1UU 
.UU  
DecryptUU  '
(UU' (
encyrptedBytesUU( 6
,UU6 7
falseUU8 =
)UU= >
;UU> ?
stringVV 
decryptedStringVV "
=VV# $
SystemVV% +
.VV+ ,
TextVV, 0
.VV0 1
EncodingVV1 9
.VV9 :
UTF8VV: >
.VV> ?
	GetStringVV? H
(VVH I
plainVVI N
)VVN O
;VVO P
returnWW 
decryptedStringWW "
;WW" #
}XX 	
public__ 
string__ 
EncryptQRCode__ #
(__# $
string__$ *
text__+ /
)__/ 0
{`` 	
constaa 
intaa 
PROVIDER_RSA_FULLaa '
=aa( )
$numaa* +
;aa+ ,
constbb 
stringbb 
CONTAINER_NAMEbb '
=bb( )
$strbb* 3
;bb3 4
CspParametersdd 
	cspParamsdd #
;dd# $
	cspParamsee 
=ee 
newee 
CspParametersee )
(ee) *
PROVIDER_RSA_FULLee* ;
)ee; <
;ee< =
	cspParamsff 
.ff 
KeyContainerNameff &
=ff' (
CONTAINER_NAMEff) 7
;ff7 8$
RSACryptoServiceProvidergg $
rsa1gg% )
=gg* +
newgg, /$
RSACryptoServiceProvidergg0 H
(ggH I
	cspParamsggI R
)ggR S
;ggS T
rsa1hh 
.hh 
FromXmlStringhh 
(hh 
$str	hh À
)
hhÀ Á
;
hhÁ Â
Systemjj 
.jj 
Textjj 
.jj 
UTF8Encodingjj $
encodingjj% -
=jj. /
newjj0 3
Systemjj4 :
.jj: ;
Textjj; ?
.jj? @
UTF8Encodingjj@ L
(jjL M
)jjM N
;jjN O
bytekk 
[kk 
]kk 
	textByteskk 
=kk 
encodingkk '
.kk' (
GetByteskk( 0
(kk0 1
textkk1 5
)kk5 6
;kk6 7
bytell 
[ll 
]ll 
encryptedOutputll "
=ll# $
rsa1ll% )
.ll) *
Encryptll* 1
(ll1 2
	textBytesll2 ;
,ll; <
falsell= B
)llB C
;llC D
stringmm 
	outputB64mm 
=mm 
Convertmm &
.mm& '
ToBase64Stringmm' 5
(mm5 6
encryptedOutputmm6 E
)mmE F
;mmF G
returnnn 
	outputB64nn 
;nn 
}oo 	
}pp 
}qq È
DC:\Users\SP\Desktop\projet_ms_solution\ProjetBack\WeatherForecast.cs
	namespace 	

ProjetBack
 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 